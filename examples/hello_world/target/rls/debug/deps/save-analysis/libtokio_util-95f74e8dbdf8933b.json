{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0","program":"C:\\Users\\chris\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","codegen-units=4","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=95f74e8dbdf8933b","-C","extra-filename=-95f74e8dbdf8933b","--out-dir","d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps","-L","dependency=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps","--extern","bytes=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libbytes-e26a4ab70dff9121.rmeta","--extern","futures_core=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libfutures_core-fccbd4f33ab09a24.rmeta","--extern","futures_sink=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libfutures_sink-02a98e1dcdf13778.rmeta","--extern","log=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\liblog-b148ea2d9a8e5a7e.rmeta","--extern","pin_project_lite=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libpin_project_lite-9c249b4595e822bc.rmeta","--extern","tokio=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libtokio-009b1370fc0f6370.rmeta","--extern","tokio_stream=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libtokio_stream-b6ca63ac677e4896.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chris\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libtokio_util-95f74e8dbdf8933b.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[5444674148194575625,3586667791581749085]},"crate_root":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src","external_crates":[{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","num":13,"id":{"name":"tokio","disambiguator":[11001661535677149104,6797459252074549345]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","num":14,"id":{"name":"parking_lot","disambiguator":[7464336308393387758,17796220798281168815]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","num":15,"id":{"name":"instant","disambiguator":[7547240491563405882,15519885169262210000]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","num":16,"id":{"name":"cfg_if","disambiguator":[6575273302406667930,3940799058014447604]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","num":17,"id":{"name":"lock_api","disambiguator":[6472453349098338485,4826286967577243190]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","num":18,"id":{"name":"scopeguard","disambiguator":[1053023215469869761,846511992489767797]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","num":19,"id":{"name":"parking_lot_core","disambiguator":[311211846264050079,15047164303854410695]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","num":20,"id":{"name":"smallvec","disambiguator":[8786722734638104729,5302331452337924916]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","num":21,"id":{"name":"winapi","disambiguator":[4247108052807861146,12051563380877582114]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","num":22,"id":{"name":"pin_project_lite","disambiguator":[16195817785888709049,13104194840729818764]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","num":23,"id":{"name":"mio","disambiguator":[15467233828198203091,15044156780043263388]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","num":24,"id":{"name":"log","disambiguator":[3025726331045746021,4878634889828534736]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","num":25,"id":{"name":"cfg_if","disambiguator":[13041342758304267303,15943940606214615876]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","num":26,"id":{"name":"ntapi","disambiguator":[16367051111125754422,16468581102166176975]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","num":27,"id":{"name":"miow","disambiguator":[6638858901077985725,15866042359362186714]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","num":28,"id":{"name":"socket2","disambiguator":[4768596161232734064,7377385452921433176]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","num":29,"id":{"name":"bytes","disambiguator":[10587713108828201408,7429414292964262406]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","num":30,"id":{"name":"once_cell","disambiguator":[13554842292853118119,6295194893907200120]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","num":31,"id":{"name":"tokio_macros","disambiguator":[9296414730820422176,5191211969257480069]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","num":32,"id":{"name":"memchr","disambiguator":[5766648311291674695,15612451569681712896]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","num":33,"id":{"name":"num_cpus","disambiguator":[298938040438223827,570958154305529956]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","num":34,"id":{"name":"futures_core","disambiguator":[16385631598251170272,6526354572023731730]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","num":35,"id":{"name":"tokio_stream","disambiguator":[15183189198821341783,8861655512849475807]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","num":36,"id":{"name":"futures_sink","disambiguator":[4419771649625553914,5691998668686696008]}}],"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","byte_start":0,"byte_end":5436,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9874201,"byte_end":9874211,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":221}},{"kind":"Use","ref_id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9874250,"byte_end":9874257,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":221}},{"kind":"Use","ref_id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9874296,"byte_end":9874303,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":221}},{"kind":"Use","ref_id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9874465,"byte_end":9874471,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":221}},{"kind":"Use","ref_id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9874473,"byte_end":9874484,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":221}},{"kind":"Use","ref_id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9874532,"byte_end":9874542,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":221}},{"kind":"Use","ref_id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9874591,"byte_end":9874602,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":221}},{"kind":"Use","ref_id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9874664,"byte_end":9874684,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":221}},{"kind":"Use","ref_id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9874686,"byte_end":9874711,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":221}},{"kind":"Use","ref_id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9874760,"byte_end":9874770,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":221}},{"kind":"Use","ref_id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9874772,"byte_end":9874787,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":221}},{"kind":"Use","ref_id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\mod.rs","byte_start":6572,"byte_end":6589,"line_start":4,"line_end":4,"column_start":30,"column_end":47},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\mod.rs","byte_start":6591,"byte_end":6616,"line_start":4,"line_end":4,"column_start":49,"column_end":74},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":11}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","byte_start":0,"byte_end":5436,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":9},{"krate":0,"index":221},{"krate":0,"index":11},{"krate":0,"index":149},{"krate":0,"index":196}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","byte_start":60,"byte_end":100,"line_start":2,"line_end":2,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","byte_start":101,"byte_end":207,"line_start":3,"line_end":8,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","byte_start":416,"byte_end":453,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","byte_start":454,"byte_end":457,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","byte_start":458,"byte_end":515,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","byte_start":516,"byte_end":580,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","byte_start":581,"byte_end":656,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","byte_start":657,"byte_end":660,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","byte_start":661,"byte_end":697,"line_start":22,"line_end":22,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\cfg.rs","byte_start":5512,"byte_end":5537,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9863929,"byte_end":9863982,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9863983,"byte_end":9863986,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9863987,"byte_end":9864062,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9864063,"byte_end":9864128,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9864129,"byte_end":9864132,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9864133,"byte_end":9864213,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9864214,"byte_end":9864289,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9864290,"byte_end":9864338,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9864339,"byte_end":9864342,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9864343,"byte_end":9864366,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9864367,"byte_end":9864370,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9864371,"byte_end":9864450,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9864451,"byte_end":9864530,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9864531,"byte_end":9864602,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9864603,"byte_end":9864673,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9864674,"byte_end":9864752,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9864753,"byte_end":9864829,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9864830,"byte_end":9864863,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9864864,"byte_end":9864867,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9864868,"byte_end":9864948,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9864949,"byte_end":9865029,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865030,"byte_end":9865080,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865081,"byte_end":9865084,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865085,"byte_end":9865136,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865137,"byte_end":9865186,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865187,"byte_end":9865238,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865239,"byte_end":9865242,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865243,"byte_end":9865308,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865309,"byte_end":9865312,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865313,"byte_end":9865390,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865391,"byte_end":9865432,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865433,"byte_end":9865436,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865437,"byte_end":9865517,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865518,"byte_end":9865597,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865598,"byte_end":9865676,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865677,"byte_end":9865756,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865757,"byte_end":9865771,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865772,"byte_end":9865775,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865776,"byte_end":9865855,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865856,"byte_end":9865935,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865936,"byte_end":9865953,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865954,"byte_end":9865957,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9865958,"byte_end":9866035,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866036,"byte_end":9866115,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866116,"byte_end":9866193,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866194,"byte_end":9866264,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866265,"byte_end":9866314,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866315,"byte_end":9866318,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866319,"byte_end":9866332,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866333,"byte_end":9866365,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866366,"byte_end":9866433,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866434,"byte_end":9866548,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866549,"byte_end":9866586,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866587,"byte_end":9866648,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866649,"byte_end":9866698,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866699,"byte_end":9866702,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866703,"byte_end":9866744,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866745,"byte_end":9866755,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866756,"byte_end":9866840,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866841,"byte_end":9866897,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866898,"byte_end":9866901,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866902,"byte_end":9866923,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866924,"byte_end":9866991,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9866992,"byte_end":9867020,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867021,"byte_end":9867034,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867035,"byte_end":9867053,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867054,"byte_end":9867063,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867064,"byte_end":9867067,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867068,"byte_end":9867127,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867128,"byte_end":9867152,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867153,"byte_end":9867162,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867163,"byte_end":9867168,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867169,"byte_end":9867177,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867178,"byte_end":9867185,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867186,"byte_end":9867260,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867261,"byte_end":9867264,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867265,"byte_end":9867287,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867288,"byte_end":9867291,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867292,"byte_end":9867369,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867370,"byte_end":9867446,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867447,"byte_end":9867526,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867527,"byte_end":9867581,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867582,"byte_end":9867585,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867586,"byte_end":9867630,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867631,"byte_end":9867638,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867639,"byte_end":9867674,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867675,"byte_end":9867706,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867707,"byte_end":9867710,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867711,"byte_end":9867740,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867741,"byte_end":9867744,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867745,"byte_end":9867784,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867785,"byte_end":9867788,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867789,"byte_end":9867827,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867828,"byte_end":9867855,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867856,"byte_end":9867892,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867893,"byte_end":9867896,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867897,"byte_end":9867915,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867916,"byte_end":9867938,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867939,"byte_end":9867969,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9867970,"byte_end":9868024,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868025,"byte_end":9868055,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868056,"byte_end":9868113,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868114,"byte_end":9868146,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868147,"byte_end":9868160,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868161,"byte_end":9868164,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868165,"byte_end":9868199,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868200,"byte_end":9868244,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868245,"byte_end":9868297,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868298,"byte_end":9868365,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868366,"byte_end":9868369,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868370,"byte_end":9868444,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868445,"byte_end":9868511,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868512,"byte_end":9868541,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868542,"byte_end":9868589,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868590,"byte_end":9868642,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868643,"byte_end":9868714,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868715,"byte_end":9868734,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868735,"byte_end":9868748,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868749,"byte_end":9868752,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868753,"byte_end":9868792,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868793,"byte_end":9868848,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868849,"byte_end":9868867,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868868,"byte_end":9868944,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9868945,"byte_end":9869011,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869012,"byte_end":9869064,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869065,"byte_end":9869068,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869069,"byte_end":9869149,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869150,"byte_end":9869175,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869176,"byte_end":9869208,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869209,"byte_end":9869222,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869223,"byte_end":9869226,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869227,"byte_end":9869299,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869300,"byte_end":9869326,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869327,"byte_end":9869378,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869379,"byte_end":9869415,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869416,"byte_end":9869419,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869420,"byte_end":9869498,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869499,"byte_end":9869542,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869543,"byte_end":9869590,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869591,"byte_end":9869627,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869628,"byte_end":9869672,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869673,"byte_end":9869729,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869730,"byte_end":9869778,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869779,"byte_end":9869801,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869802,"byte_end":9869820,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869821,"byte_end":9869834,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869835,"byte_end":9869844,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869845,"byte_end":9869850,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869851,"byte_end":9869858,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869859,"byte_end":9869862,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869863,"byte_end":9869886,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869887,"byte_end":9869890,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869891,"byte_end":9869969,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9869970,"byte_end":9870043,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9870044,"byte_end":9870120,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9870121,"byte_end":9870201,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9870202,"byte_end":9870218,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9870219,"byte_end":9870222,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9870223,"byte_end":9870303,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9870304,"byte_end":9870383,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9870384,"byte_end":9870464,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9870465,"byte_end":9870537,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9870538,"byte_end":9870541,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9870542,"byte_end":9870619,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9870620,"byte_end":9870698,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9870699,"byte_end":9870772,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9870773,"byte_end":9870839,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9870840,"byte_end":9870843,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9870844,"byte_end":9870857,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9870858,"byte_end":9870891,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9870892,"byte_end":9870926,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9870927,"byte_end":9870964,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9870965,"byte_end":9871032,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871033,"byte_end":9871068,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871069,"byte_end":9871130,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871131,"byte_end":9871177,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871178,"byte_end":9871239,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871240,"byte_end":9871243,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871244,"byte_end":9871272,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871273,"byte_end":9871276,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871277,"byte_end":9871318,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871319,"byte_end":9871329,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871330,"byte_end":9871354,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871355,"byte_end":9871429,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871430,"byte_end":9871472,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871473,"byte_end":9871487,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871488,"byte_end":9871545,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871546,"byte_end":9871595,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871596,"byte_end":9871610,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871611,"byte_end":9871648,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871649,"byte_end":9871700,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871701,"byte_end":9871747,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871748,"byte_end":9871778,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871779,"byte_end":9871793,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871794,"byte_end":9871803,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871804,"byte_end":9871809,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871810,"byte_end":9871817,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871818,"byte_end":9871825,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871826,"byte_end":9871901,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871902,"byte_end":9871975,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9871976,"byte_end":9872018,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872019,"byte_end":9872022,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872023,"byte_end":9872045,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872046,"byte_end":9872049,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872050,"byte_end":9872127,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872128,"byte_end":9872204,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872205,"byte_end":9872281,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872282,"byte_end":9872305,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872306,"byte_end":9872309,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872310,"byte_end":9872355,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872356,"byte_end":9872363,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872364,"byte_end":9872399,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872400,"byte_end":9872424,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872425,"byte_end":9872428,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872429,"byte_end":9872458,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872459,"byte_end":9872462,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872463,"byte_end":9872502,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872503,"byte_end":9872506,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872507,"byte_end":9872553,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872554,"byte_end":9872590,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872591,"byte_end":9872594,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872595,"byte_end":9872686,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872687,"byte_end":9872761,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872762,"byte_end":9872784,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872785,"byte_end":9872818,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872819,"byte_end":9872866,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872867,"byte_end":9872919,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872920,"byte_end":9872995,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9872996,"byte_end":9873015,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873016,"byte_end":9873029,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873030,"byte_end":9873033,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873034,"byte_end":9873086,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873087,"byte_end":9873164,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873165,"byte_end":9873229,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873230,"byte_end":9873233,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873234,"byte_end":9873277,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873278,"byte_end":9873318,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873319,"byte_end":9873322,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873323,"byte_end":9873380,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873381,"byte_end":9873427,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873428,"byte_end":9873479,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873480,"byte_end":9873498,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873499,"byte_end":9873508,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873509,"byte_end":9873514,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873515,"byte_end":9873522,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873523,"byte_end":9873526,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873527,"byte_end":9873566,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873567,"byte_end":9873608,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: tokio_stream::Stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873609,"byte_end":9873645,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873646,"byte_end":9873678,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873679,"byte_end":9873775,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873776,"byte_end":9873827,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873828,"byte_end":9873881,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873882,"byte_end":9873925,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873926,"byte_end":9873970,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9873971,"byte_end":9874019,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9874020,"byte_end":9874068,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9874069,"byte_end":9874115,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9874116,"byte_end":9874155,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9876073,"byte_end":9876083,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9874916,"byte_end":9875001,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875002,"byte_end":9875005,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875006,"byte_end":9875044,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875045,"byte_end":9875083,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875084,"byte_end":9875087,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875088,"byte_end":9875101,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875102,"byte_end":9875105,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875106,"byte_end":9875187,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875188,"byte_end":9875191,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875192,"byte_end":9875231,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875232,"byte_end":9875265,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875266,"byte_end":9875295,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875296,"byte_end":9875299,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875300,"byte_end":9875307,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875308,"byte_end":9875326,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875327,"byte_end":9875357,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875358,"byte_end":9875382,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875383,"byte_end":9875390,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875391,"byte_end":9875420,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875421,"byte_end":9875473,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875474,"byte_end":9875477,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875478,"byte_end":9875496,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875497,"byte_end":9875514,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875515,"byte_end":9875595,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875596,"byte_end":9875630,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875631,"byte_end":9875684,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875685,"byte_end":9875696,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875697,"byte_end":9875704,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875705,"byte_end":9875710,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875711,"byte_end":9875758,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875759,"byte_end":9875812,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875813,"byte_end":9875871,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875872,"byte_end":9875951,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875952,"byte_end":9875964,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875965,"byte_end":9875972,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875973,"byte_end":9875980,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9875981,"byte_end":9875984,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9876185,"byte_end":9876188,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9876112,"byte_end":9876173,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877500,"byte_end":9877507,"line_start":21,"line_end":21,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9876903,"byte_end":9876938,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9876939,"byte_end":9876942,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9876943,"byte_end":9877012,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877013,"byte_end":9877092,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877093,"byte_end":9877165,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877166,"byte_end":9877190,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877191,"byte_end":9877194,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877195,"byte_end":9877263,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877264,"byte_end":9877341,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877342,"byte_end":9877403,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877404,"byte_end":9877407,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877408,"byte_end":9877444,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877445,"byte_end":9877489,"line_start":20,"line_end":20,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877555,"byte_end":9877559,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":247},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877514,"byte_end":9877545,"line_start":22,"line_end":22,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9878325,"byte_end":9878330,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":247},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877566,"byte_end":9877618,"line_start":25,"line_end":25,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877623,"byte_end":9877626,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877631,"byte_end":9877700,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877705,"byte_end":9877775,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877780,"byte_end":9877826,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877831,"byte_end":9877834,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877839,"byte_end":9877915,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9877920,"byte_end":9877995,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9878000,"byte_end":9878075,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9878080,"byte_end":9878120,"line_start":34,"line_end":34,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9878125,"byte_end":9878128,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9878133,"byte_end":9878207,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9878212,"byte_end":9878258,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9878263,"byte_end":9878266,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9878271,"byte_end":9878315,"line_start":39,"line_end":39,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881266,"byte_end":9881272,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":247},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9878354,"byte_end":9878419,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9878424,"byte_end":9878427,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9878432,"byte_end":9878506,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9878511,"byte_end":9878583,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9878588,"byte_end":9878661,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9878666,"byte_end":9878709,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9878714,"byte_end":9878717,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9878722,"byte_end":9878795,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9878800,"byte_end":9878863,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9878868,"byte_end":9878943,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9878948,"byte_end":9879023,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879028,"byte_end":9879051,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879056,"byte_end":9879059,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879064,"byte_end":9879136,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879141,"byte_end":9879215,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879220,"byte_end":9879290,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879295,"byte_end":9879298,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879303,"byte_end":9879371,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879376,"byte_end":9879447,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879452,"byte_end":9879532,"line_start":61,"line_end":61,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879537,"byte_end":9879549,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879554,"byte_end":9879557,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879562,"byte_end":9879632,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879637,"byte_end":9879712,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879717,"byte_end":9879754,"line_start":66,"line_end":66,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879759,"byte_end":9879762,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879767,"byte_end":9879803,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879808,"byte_end":9879852,"line_start":69,"line_end":69,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879857,"byte_end":9879860,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879865,"byte_end":9879888,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879893,"byte_end":9879896,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879901,"byte_end":9879975,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9879980,"byte_end":9880054,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880059,"byte_end":9880112,"line_start":75,"line_end":75,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880117,"byte_end":9880120,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880125,"byte_end":9880196,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880201,"byte_end":9880271,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880276,"byte_end":9880292,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880297,"byte_end":9880300,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880305,"byte_end":9880318,"line_start":81,"line_end":81,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880323,"byte_end":9880341,"line_start":82,"line_end":82,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880346,"byte_end":9880351,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880356,"byte_end":9880382,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880387,"byte_end":9880424,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880429,"byte_end":9880434,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880439,"byte_end":9880460,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880465,"byte_end":9880470,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880475,"byte_end":9880505,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880510,"byte_end":9880524,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880529,"byte_end":9880560,"line_start":91,"line_end":91,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880565,"byte_end":9880598,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880603,"byte_end":9880606,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880611,"byte_end":9880704,"line_start":94,"line_end":94,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880709,"byte_end":9880727,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880732,"byte_end":9880735,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880740,"byte_end":9880812,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880817,"byte_end":9880877,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880882,"byte_end":9880934,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9880939,"byte_end":9881001,"line_start":100,"line_end":100,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881006,"byte_end":9881073,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881078,"byte_end":9881081,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881086,"byte_end":9881114,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881119,"byte_end":9881128,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881133,"byte_end":9881138,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881143,"byte_end":9881150,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881155,"byte_end":9881158,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881163,"byte_end":9881232,"line_start":108,"line_end":108,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881237,"byte_end":9881258,"line_start":109,"line_end":109,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9882131,"byte_end":9882141,"line_start":125,"line_end":125,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":247},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881353,"byte_end":9881425,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881430,"byte_end":9881479,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881484,"byte_end":9881487,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881492,"byte_end":9881560,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881565,"byte_end":9881632,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881637,"byte_end":9881705,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881710,"byte_end":9881758,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881763,"byte_end":9881766,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881771,"byte_end":9881839,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881844,"byte_end":9881919,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9881924,"byte_end":9881999,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9882004,"byte_end":9882076,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9882081,"byte_end":9882123,"line_start":124,"line_end":124,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9883749,"byte_end":9883755,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":247},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9882559,"byte_end":9882639,"line_start":138,"line_end":138,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9882644,"byte_end":9882720,"line_start":139,"line_end":139,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9882725,"byte_end":9882728,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9882733,"byte_end":9882808,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9882813,"byte_end":9882883,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9882888,"byte_end":9882959,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9882964,"byte_end":9883036,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9883041,"byte_end":9883099,"line_start":145,"line_end":145,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9883104,"byte_end":9883107,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9883112,"byte_end":9883181,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9883186,"byte_end":9883261,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9883266,"byte_end":9883342,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9883347,"byte_end":9883369,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9883374,"byte_end":9883377,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9883382,"byte_end":9883455,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9883460,"byte_end":9883533,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9883538,"byte_end":9883614,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9883619,"byte_end":9883622,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio_stream::Stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9883627,"byte_end":9883663,"line_start":156,"line_end":156,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9883668,"byte_end":9883700,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\decoder.rs","byte_start":9883705,"byte_end":9883741,"line_start":158,"line_end":158,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9884089,"byte_end":9884096,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9883934,"byte_end":9884006,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9884007,"byte_end":9884027,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9884028,"byte_end":9884031,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9884032,"byte_end":9884078,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9884361,"byte_end":9884366,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9884109,"byte_end":9884141,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9884146,"byte_end":9884149,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9884154,"byte_end":9884231,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9884236,"byte_end":9884292,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9884297,"byte_end":9884300,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9884305,"byte_end":9884351,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9884717,"byte_end":9884723,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9884390,"byte_end":9884435,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9884440,"byte_end":9884443,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9884448,"byte_end":9884522,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9884527,"byte_end":9884607,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9884612,"byte_end":9884650,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9884655,"byte_end":9884658,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\encoder.rs","byte_start":9884663,"byte_end":9884709,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9891904,"byte_end":9891910,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":887}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9893393,"byte_end":9893396,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9892052,"byte_end":9892132,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9892137,"byte_end":9892218,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9892223,"byte_end":9892226,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9892231,"byte_end":9892306,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9892311,"byte_end":9892381,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9892386,"byte_end":9892455,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9892460,"byte_end":9892532,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9892537,"byte_end":9892595,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9892600,"byte_end":9892603,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9892608,"byte_end":9892679,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9892684,"byte_end":9892761,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9892766,"byte_end":9892842,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9892847,"byte_end":9892869,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9892874,"byte_end":9892877,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9892882,"byte_end":9892955,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9892960,"byte_end":9893033,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9893038,"byte_end":9893114,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9893119,"byte_end":9893122,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio_stream::Stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9893127,"byte_end":9893163,"line_start":55,"line_end":55,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9893168,"byte_end":9893200,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9893205,"byte_end":9893242,"line_start":57,"line_end":57,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9893247,"byte_end":9893285,"line_start":58,"line_end":58,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9893290,"byte_end":9893381,"line_start":59,"line_end":59,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9895004,"byte_end":9895017,"line_start":94,"line_end":94,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9893609,"byte_end":9893689,"line_start":70,"line_end":70,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9893694,"byte_end":9893775,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9893780,"byte_end":9893829,"line_start":72,"line_end":72,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9893834,"byte_end":9893837,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9893842,"byte_end":9893917,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9893922,"byte_end":9893992,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9893997,"byte_end":9894066,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9894071,"byte_end":9894143,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9894148,"byte_end":9894206,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9894211,"byte_end":9894214,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9894219,"byte_end":9894290,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9894295,"byte_end":9894372,"line_start":81,"line_end":81,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9894377,"byte_end":9894453,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9894458,"byte_end":9894480,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9894485,"byte_end":9894488,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9894493,"byte_end":9894566,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9894571,"byte_end":9894644,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9894649,"byte_end":9894725,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9894730,"byte_end":9894733,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio_stream::Stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9894738,"byte_end":9894774,"line_start":89,"line_end":89,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9894779,"byte_end":9894811,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9894816,"byte_end":9894853,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9894858,"byte_end":9894896,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9894901,"byte_end":9894992,"line_start":93,"line_end":93,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9897120,"byte_end":9897130,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9895543,"byte_end":9895623,"line_start":113,"line_end":113,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9895628,"byte_end":9895709,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9895714,"byte_end":9895717,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9895722,"byte_end":9895797,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9895802,"byte_end":9895872,"line_start":117,"line_end":117,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9895877,"byte_end":9895948,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9895953,"byte_end":9896025,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9896030,"byte_end":9896088,"line_start":120,"line_end":120,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9896093,"byte_end":9896096,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9896101,"byte_end":9896172,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9896177,"byte_end":9896254,"line_start":123,"line_end":123,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9896259,"byte_end":9896335,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9896340,"byte_end":9896362,"line_start":125,"line_end":125,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9896367,"byte_end":9896370,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9896375,"byte_end":9896454,"line_start":127,"line_end":127,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9896459,"byte_end":9896536,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9896541,"byte_end":9896544,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9896549,"byte_end":9896622,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9896627,"byte_end":9896700,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9896705,"byte_end":9896781,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9896786,"byte_end":9896789,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio_stream::Stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9896794,"byte_end":9896830,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9896835,"byte_end":9896867,"line_start":135,"line_end":135,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9896872,"byte_end":9896910,"line_start":136,"line_end":136,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9896915,"byte_end":9896953,"line_start":137,"line_end":137,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9896958,"byte_end":9897012,"line_start":138,"line_end":138,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9897017,"byte_end":9897108,"line_start":139,"line_end":139,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9897765,"byte_end":9897772,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9897482,"byte_end":9897545,"line_start":153,"line_end":153,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9897550,"byte_end":9897563,"line_start":154,"line_end":154,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9897568,"byte_end":9897571,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9897576,"byte_end":9897651,"line_start":156,"line_end":156,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9897656,"byte_end":9897726,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9897731,"byte_end":9897753,"line_start":158,"line_end":158,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9898116,"byte_end":9898123,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9897825,"byte_end":9897896,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9897901,"byte_end":9897914,"line_start":164,"line_end":164,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9897919,"byte_end":9897922,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9897927,"byte_end":9898002,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9898007,"byte_end":9898077,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9898082,"byte_end":9898104,"line_start":168,"line_end":168,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9898439,"byte_end":9898444,"line_start":178,"line_end":178,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9898188,"byte_end":9898246,"line_start":173,"line_end":173,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9898251,"byte_end":9898264,"line_start":174,"line_end":174,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9898269,"byte_end":9898272,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9898277,"byte_end":9898351,"line_start":176,"line_end":176,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9898356,"byte_end":9898427,"line_start":177,"line_end":177,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9898756,"byte_end":9898765,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9898497,"byte_end":9898563,"line_start":182,"line_end":182,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9898568,"byte_end":9898581,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9898586,"byte_end":9898589,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9898594,"byte_end":9898668,"line_start":185,"line_end":185,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9898673,"byte_end":9898744,"line_start":186,"line_end":186,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9898885,"byte_end":9898896,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9898830,"byte_end":9898873,"line_start":191,"line_end":191,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9899031,"byte_end":9899046,"line_start":197,"line_end":197,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9898968,"byte_end":9899019,"line_start":196,"line_end":196,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9899395,"byte_end":9899405,"line_start":206,"line_end":206,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9899130,"byte_end":9899193,"line_start":201,"line_end":201,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9899198,"byte_end":9899201,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9899206,"byte_end":9899281,"line_start":203,"line_end":203,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9899286,"byte_end":9899356,"line_start":204,"line_end":204,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9899361,"byte_end":9899383,"line_start":205,"line_end":205,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9899777,"byte_end":9899787,"line_start":216,"line_end":216,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9899455,"byte_end":9899529,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9899534,"byte_end":9899575,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9899580,"byte_end":9899583,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9899588,"byte_end":9899663,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9899668,"byte_end":9899738,"line_start":214,"line_end":214,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9899743,"byte_end":9899765,"line_start":215,"line_end":215,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9901761,"byte_end":9901772,"line_start":286,"line_end":286,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9901446,"byte_end":9901517,"line_start":279,"line_end":279,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9901518,"byte_end":9901590,"line_start":280,"line_end":280,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9901591,"byte_end":9901651,"line_start":281,"line_end":281,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9901652,"byte_end":9901655,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9901656,"byte_end":9901692,"line_start":283,"line_end":283,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9901710,"byte_end":9901749,"line_start":285,"line_end":285,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9901858,"byte_end":9901860,"line_start":288,"line_end":288,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":632},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9901785,"byte_end":9901849,"line_start":287,"line_end":287,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9901892,"byte_end":9901897,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":632},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9901870,"byte_end":9901883,"line_start":290,"line_end":290,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":637},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9901962,"byte_end":9901970,"line_start":294,"line_end":294,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":632},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9901907,"byte_end":9901953,"line_start":293,"line_end":293,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9902057,"byte_end":9902066,"line_start":297,"line_end":297,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":632},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9901987,"byte_end":9902048,"line_start":296,"line_end":296,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9902299,"byte_end":9902302,"line_start":306,"line_end":306,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9902247,"byte_end":9902287,"line_start":305,"line_end":305,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9903031,"byte_end":9903041,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":846}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9903292,"byte_end":9903295,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9903224,"byte_end":9903280,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9903643,"byte_end":9903656,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9903527,"byte_end":9903609,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9903614,"byte_end":9903631,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904370,"byte_end":9904377,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904083,"byte_end":9904146,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904151,"byte_end":9904168,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904173,"byte_end":9904176,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904181,"byte_end":9904256,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904261,"byte_end":9904331,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904336,"byte_end":9904358,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904725,"byte_end":9904732,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904430,"byte_end":9904501,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904506,"byte_end":9904523,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904528,"byte_end":9904531,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904536,"byte_end":9904611,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904616,"byte_end":9904686,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904691,"byte_end":9904713,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9905066,"byte_end":9905076,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904797,"byte_end":9904864,"line_start":81,"line_end":81,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904869,"byte_end":9904872,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904877,"byte_end":9904952,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904957,"byte_end":9905027,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9905032,"byte_end":9905054,"line_start":85,"line_end":85,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9905188,"byte_end":9905195,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9905126,"byte_end":9905176,"line_start":90,"line_end":90,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9905318,"byte_end":9905329,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9905248,"byte_end":9905306,"line_start":95,"line_end":95,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9905449,"byte_end":9905460,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9905394,"byte_end":9905437,"line_start":100,"line_end":100,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9905590,"byte_end":9905605,"line_start":106,"line_end":106,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9905527,"byte_end":9905578,"line_start":105,"line_end":105,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9907685,"byte_end":9907696,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":805}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9907903,"byte_end":9907906,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9907834,"byte_end":9907891,"line_start":28,"line_end":28,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9908464,"byte_end":9908471,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9908176,"byte_end":9908239,"line_start":41,"line_end":41,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9908244,"byte_end":9908262,"line_start":42,"line_end":42,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9908267,"byte_end":9908270,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9908275,"byte_end":9908350,"line_start":44,"line_end":44,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9908355,"byte_end":9908425,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9908430,"byte_end":9908452,"line_start":46,"line_end":46,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9908820,"byte_end":9908827,"line_start":57,"line_end":57,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9908524,"byte_end":9908595,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9908600,"byte_end":9908618,"line_start":52,"line_end":52,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9908623,"byte_end":9908626,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9908631,"byte_end":9908706,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9908711,"byte_end":9908781,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9908786,"byte_end":9908808,"line_start":56,"line_end":56,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9909162,"byte_end":9909172,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9908892,"byte_end":9908960,"line_start":61,"line_end":61,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9908965,"byte_end":9908968,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9908973,"byte_end":9909048,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9909053,"byte_end":9909123,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9909128,"byte_end":9909150,"line_start":65,"line_end":65,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9909284,"byte_end":9909291,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9909222,"byte_end":9909272,"line_start":70,"line_end":70,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9909414,"byte_end":9909425,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9909344,"byte_end":9909402,"line_start":75,"line_end":75,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":644},{"krate":0,"index":654},{"krate":0,"index":652},{"krate":0,"index":651},{"krate":0,"index":511},{"krate":0,"index":656},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":670},{"krate":0,"index":668},{"krate":0,"index":667},{"krate":0,"index":513},{"krate":0,"index":520},{"krate":0,"index":524},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":555}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9910938,"byte_end":9910990,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9910991,"byte_end":9910994,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9910995,"byte_end":9911065,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911066,"byte_end":9911124,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911125,"byte_end":9911197,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911198,"byte_end":9911268,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911269,"byte_end":9911336,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911337,"byte_end":9911340,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911341,"byte_end":9911362,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911363,"byte_end":9911366,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911367,"byte_end":9911442,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911443,"byte_end":9911514,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911515,"byte_end":9911586,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911587,"byte_end":9911657,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911658,"byte_end":9911698,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911699,"byte_end":9911702,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911703,"byte_end":9911710,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911711,"byte_end":9911754,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911755,"byte_end":9911813,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911814,"byte_end":9911817,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911818,"byte_end":9911873,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911874,"byte_end":9911916,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911917,"byte_end":9911922,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911923,"byte_end":9911975,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911976,"byte_end":9911981,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9911982,"byte_end":9912004,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912005,"byte_end":9912012,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912013,"byte_end":9912016,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912017,"byte_end":9912089,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912090,"byte_end":9912161,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912162,"byte_end":9912181,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912182,"byte_end":9912185,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912186,"byte_end":9912197,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912198,"byte_end":9912247,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912248,"byte_end":9912297,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912298,"byte_end":9912347,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912348,"byte_end":9912355,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912356,"byte_end":9912359,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912360,"byte_end":9912398,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912399,"byte_end":9912402,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912403,"byte_end":9912410,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912411,"byte_end":9912454,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912455,"byte_end":9912513,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912514,"byte_end":9912517,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912518,"byte_end":9912543,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912544,"byte_end":9912565,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912566,"byte_end":9912569,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912570,"byte_end":9912646,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912647,"byte_end":9912656,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912657,"byte_end":9912699,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912700,"byte_end":9912705,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912706,"byte_end":9912779,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912780,"byte_end":9912827,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912828,"byte_end":9912831,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912832,"byte_end":9912869,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912870,"byte_end":9912884,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912885,"byte_end":9912890,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912891,"byte_end":9912898,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912899,"byte_end":9912902,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912903,"byte_end":9912945,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912946,"byte_end":9912949,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912950,"byte_end":9912961,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9912962,"byte_end":9913001,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913002,"byte_end":9913041,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913042,"byte_end":9913081,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913082,"byte_end":9913089,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913090,"byte_end":9913093,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913094,"byte_end":9913108,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913109,"byte_end":9913112,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913113,"byte_end":9913188,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913189,"byte_end":9913262,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913263,"byte_end":9913329,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913330,"byte_end":9913399,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913400,"byte_end":9913465,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913466,"byte_end":9913469,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913470,"byte_end":9913486,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913487,"byte_end":9913490,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913491,"byte_end":9913567,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913568,"byte_end":9913609,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913610,"byte_end":9913613,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913614,"byte_end":9913621,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913622,"byte_end":9913653,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913654,"byte_end":9913704,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913705,"byte_end":9913746,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913747,"byte_end":9913782,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913783,"byte_end":9913831,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913832,"byte_end":9913863,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913864,"byte_end":9913912,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913913,"byte_end":9913962,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913963,"byte_end":9913985,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913986,"byte_end":9913993,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9913994,"byte_end":9914016,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914017,"byte_end":9914024,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914025,"byte_end":9914028,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914029,"byte_end":9914077,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914078,"byte_end":9914081,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914082,"byte_end":9914093,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914094,"byte_end":9914146,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914147,"byte_end":9914212,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914213,"byte_end":9914278,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914279,"byte_end":9914344,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914345,"byte_end":9914352,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914353,"byte_end":9914356,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914357,"byte_end":9914433,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914434,"byte_end":9914508,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914509,"byte_end":9914581,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914582,"byte_end":9914658,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914659,"byte_end":9914701,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914702,"byte_end":9914705,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914706,"byte_end":9914722,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914723,"byte_end":9914726,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914727,"byte_end":9914802,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914803,"byte_end":9914844,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914845,"byte_end":9914848,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914849,"byte_end":9914856,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914857,"byte_end":9914888,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914889,"byte_end":9914939,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914940,"byte_end":9914981,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9914982,"byte_end":9915017,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915018,"byte_end":9915066,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915067,"byte_end":9915098,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915099,"byte_end":9915147,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915148,"byte_end":9915207,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915208,"byte_end":9915230,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915231,"byte_end":9915238,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915239,"byte_end":9915261,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915262,"byte_end":9915269,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915270,"byte_end":9915273,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915274,"byte_end":9915322,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915323,"byte_end":9915326,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915327,"byte_end":9915338,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915339,"byte_end":9915388,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915389,"byte_end":9915443,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915444,"byte_end":9915498,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915499,"byte_end":9915553,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915554,"byte_end":9915561,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915562,"byte_end":9915565,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915566,"byte_end":9915639,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915640,"byte_end":9915707,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915708,"byte_end":9915711,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915712,"byte_end":9915728,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915729,"byte_end":9915732,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915733,"byte_end":9915809,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915810,"byte_end":9915882,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915883,"byte_end":9915922,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915923,"byte_end":9915926,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915927,"byte_end":9915934,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915935,"byte_end":9915966,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9915967,"byte_end":9916017,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916018,"byte_end":9916059,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916060,"byte_end":9916095,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916096,"byte_end":9916144,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916145,"byte_end":9916176,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916177,"byte_end":9916224,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916225,"byte_end":9916245,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916246,"byte_end":9916268,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916269,"byte_end":9916276,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916277,"byte_end":9916299,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916300,"byte_end":9916307,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916308,"byte_end":9916311,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916312,"byte_end":9916360,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916361,"byte_end":9916364,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916365,"byte_end":9916376,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916377,"byte_end":9916429,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916430,"byte_end":9916495,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916496,"byte_end":9916561,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916562,"byte_end":9916627,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916628,"byte_end":9916635,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916636,"byte_end":9916639,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916640,"byte_end":9916712,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916713,"byte_end":9916788,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916789,"byte_end":9916861,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916862,"byte_end":9916938,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9916939,"byte_end":9917012,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917013,"byte_end":9917016,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917017,"byte_end":9917033,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917034,"byte_end":9917037,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917038,"byte_end":9917112,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917113,"byte_end":9917180,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917181,"byte_end":9917184,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917185,"byte_end":9917192,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917193,"byte_end":9917224,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917225,"byte_end":9917275,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917276,"byte_end":9917317,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917318,"byte_end":9917353,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917354,"byte_end":9917402,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917403,"byte_end":9917434,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917435,"byte_end":9917483,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917484,"byte_end":9917504,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917505,"byte_end":9917527,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917528,"byte_end":9917535,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917536,"byte_end":9917558,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917559,"byte_end":9917566,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917567,"byte_end":9917570,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917571,"byte_end":9917619,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917620,"byte_end":9917623,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917624,"byte_end":9917635,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917636,"byte_end":9917662,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917663,"byte_end":9917708,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917709,"byte_end":9917754,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917755,"byte_end":9917800,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917801,"byte_end":9917804,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917805,"byte_end":9917833,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917834,"byte_end":9917879,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917880,"byte_end":9917925,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917926,"byte_end":9917971,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917972,"byte_end":9917979,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917980,"byte_end":9917983,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9917984,"byte_end":9918056,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918057,"byte_end":9918133,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918134,"byte_end":9918204,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918205,"byte_end":9918274,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918275,"byte_end":9918312,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918313,"byte_end":9918316,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918317,"byte_end":9918391,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918392,"byte_end":9918446,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918447,"byte_end":9918450,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918451,"byte_end":9918467,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918468,"byte_end":9918471,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918472,"byte_end":9918545,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918546,"byte_end":9918622,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918623,"byte_end":9918697,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918698,"byte_end":9918711,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918712,"byte_end":9918715,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918716,"byte_end":9918723,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918724,"byte_end":9918755,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918756,"byte_end":9918806,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918807,"byte_end":9918848,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918849,"byte_end":9918884,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918885,"byte_end":9918934,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918935,"byte_end":9918966,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9918967,"byte_end":9919015,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919016,"byte_end":9919060,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919061,"byte_end":9919083,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919084,"byte_end":9919091,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919092,"byte_end":9919114,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919115,"byte_end":9919122,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919123,"byte_end":9919126,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919127,"byte_end":9919175,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919176,"byte_end":9919179,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919180,"byte_end":9919191,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919192,"byte_end":9919218,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919219,"byte_end":9919269,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919270,"byte_end":9919320,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919321,"byte_end":9919371,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919372,"byte_end":9919375,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919376,"byte_end":9919396,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919397,"byte_end":9919427,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919428,"byte_end":9919458,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919459,"byte_end":9919489,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919490,"byte_end":9919497,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919498,"byte_end":9919501,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919502,"byte_end":9919575,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919576,"byte_end":9919651,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919652,"byte_end":9919724,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919725,"byte_end":9919763,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919764,"byte_end":9919767,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919768,"byte_end":9919842,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919843,"byte_end":9919919,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919920,"byte_end":9919993,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9919994,"byte_end":9920022,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920023,"byte_end":9920026,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920027,"byte_end":9920043,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920044,"byte_end":9920047,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920048,"byte_end":9920121,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920122,"byte_end":9920198,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920199,"byte_end":9920273,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920274,"byte_end":9920346,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920347,"byte_end":9920358,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920359,"byte_end":9920362,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920363,"byte_end":9920370,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920371,"byte_end":9920402,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920403,"byte_end":9920453,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920454,"byte_end":9920495,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920496,"byte_end":9920531,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920532,"byte_end":9920581,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920582,"byte_end":9920613,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920614,"byte_end":9920679,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920680,"byte_end":9920700,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920701,"byte_end":9920723,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920724,"byte_end":9920731,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920732,"byte_end":9920739,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920740,"byte_end":9920743,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920744,"byte_end":9920792,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920793,"byte_end":9920796,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920797,"byte_end":9920808,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920809,"byte_end":9920835,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920836,"byte_end":9920886,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920887,"byte_end":9920937,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920938,"byte_end":9920988,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920989,"byte_end":9920992,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9920993,"byte_end":9921013,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921014,"byte_end":9921044,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921045,"byte_end":9921075,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921076,"byte_end":9921106,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921107,"byte_end":9921114,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921115,"byte_end":9921118,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921119,"byte_end":9921192,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921193,"byte_end":9921267,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921268,"byte_end":9921342,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921343,"byte_end":9921416,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921417,"byte_end":9921493,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921494,"byte_end":9921527,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921528,"byte_end":9921531,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921532,"byte_end":9921548,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921549,"byte_end":9921552,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921553,"byte_end":9921627,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921628,"byte_end":9921695,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921696,"byte_end":9921699,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921700,"byte_end":9921707,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921708,"byte_end":9921739,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921740,"byte_end":9921790,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921791,"byte_end":9921832,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921833,"byte_end":9921868,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921869,"byte_end":9921917,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921918,"byte_end":9921949,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921950,"byte_end":9921997,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9921998,"byte_end":9922044,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922045,"byte_end":9922067,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922068,"byte_end":9922075,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922076,"byte_end":9922098,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922099,"byte_end":9922106,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922107,"byte_end":9922110,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922111,"byte_end":9922159,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922160,"byte_end":9922163,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922164,"byte_end":9922175,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922176,"byte_end":9922232,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922233,"byte_end":9922294,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922295,"byte_end":9922356,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922357,"byte_end":9922418,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922419,"byte_end":9922426,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922427,"byte_end":9922430,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922431,"byte_end":9922505,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922506,"byte_end":9922526,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922527,"byte_end":9922530,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922531,"byte_end":9922545,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922546,"byte_end":9922549,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922550,"byte_end":9922625,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922626,"byte_end":9922698,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922699,"byte_end":9922767,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922768,"byte_end":9922844,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922845,"byte_end":9922886,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922887,"byte_end":9922890,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922891,"byte_end":9922961,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922962,"byte_end":9922980,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922981,"byte_end":9922984,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922985,"byte_end":9922992,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9922993,"byte_end":9923025,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923026,"byte_end":9923076,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923077,"byte_end":9923121,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923122,"byte_end":9923135,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923136,"byte_end":9923171,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923172,"byte_end":9923203,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923204,"byte_end":9923227,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923228,"byte_end":9923235,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923236,"byte_end":9923258,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923259,"byte_end":9923266,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923267,"byte_end":9923270,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923271,"byte_end":9923321,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923322,"byte_end":9923325,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923326,"byte_end":9923337,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923338,"byte_end":9923371,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923372,"byte_end":9923405,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923406,"byte_end":9923439,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923440,"byte_end":9923447,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923448,"byte_end":9923451,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923452,"byte_end":9923521,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923522,"byte_end":9923559,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923560,"byte_end":9923599,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923600,"byte_end":9923645,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923646,"byte_end":9923693,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923694,"byte_end":9923724,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9923725,"byte_end":9923758,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9924320,"byte_end":9924327,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9924002,"byte_end":9924057,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9924058,"byte_end":9924061,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9924062,"byte_end":9924137,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9924138,"byte_end":9924218,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9924219,"byte_end":9924278,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9924998,"byte_end":9925023,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":512}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9924913,"byte_end":9924986,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9925368,"byte_end":9925388,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":658}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9925044,"byte_end":9925118,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9925119,"byte_end":9925122,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9925123,"byte_end":9925202,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9925203,"byte_end":9925246,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9925247,"byte_end":9925250,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9925251,"byte_end":9925304,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9925305,"byte_end":9925308,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9925309,"byte_end":9925339,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9925732,"byte_end":9925735,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9925641,"byte_end":9925720,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9925962,"byte_end":9925969,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9925859,"byte_end":9925934,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9925939,"byte_end":9925950,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9926191,"byte_end":9926207,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9926019,"byte_end":9926060,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9926065,"byte_end":9926068,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9926073,"byte_end":9926146,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9926151,"byte_end":9926179,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9926628,"byte_end":9926648,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9926272,"byte_end":9926306,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9926311,"byte_end":9926314,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9926319,"byte_end":9926389,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9926394,"byte_end":9926469,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9926474,"byte_end":9926546,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9926551,"byte_end":9926616,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931924,"byte_end":9931927,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931382,"byte_end":9931457,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931462,"byte_end":9931473,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931478,"byte_end":9931481,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931486,"byte_end":9931500,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931505,"byte_end":9931508,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931513,"byte_end":9931520,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931525,"byte_end":9931556,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931561,"byte_end":9931609,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931614,"byte_end":9931617,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931622,"byte_end":9931663,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931668,"byte_end":9931703,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931708,"byte_end":9931739,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931744,"byte_end":9931775,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931780,"byte_end":9931809,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931814,"byte_end":9931834,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931839,"byte_end":9931861,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931866,"byte_end":9931873,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931878,"byte_end":9931900,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931905,"byte_end":9931912,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933112,"byte_end":9933122,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9932591,"byte_end":9932640,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9932645,"byte_end":9932648,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9932653,"byte_end":9932685,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9932690,"byte_end":9932693,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9932698,"byte_end":9932766,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9932771,"byte_end":9932774,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9932779,"byte_end":9932793,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9932798,"byte_end":9932801,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9932806,"byte_end":9932813,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9932818,"byte_end":9932849,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9932854,"byte_end":9932902,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9932907,"byte_end":9932910,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9932915,"byte_end":9932956,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9932961,"byte_end":9932996,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933001,"byte_end":9933022,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933027,"byte_end":9933049,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933054,"byte_end":9933061,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933066,"byte_end":9933088,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933093,"byte_end":9933100,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933754,"byte_end":9933767,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933221,"byte_end":9933273,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933278,"byte_end":9933281,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933286,"byte_end":9933324,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933329,"byte_end":9933332,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933337,"byte_end":9933405,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933410,"byte_end":9933413,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933418,"byte_end":9933432,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933437,"byte_end":9933440,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933445,"byte_end":9933452,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933457,"byte_end":9933488,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933493,"byte_end":9933541,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933546,"byte_end":9933549,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933554,"byte_end":9933595,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933600,"byte_end":9933635,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933640,"byte_end":9933664,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933669,"byte_end":9933691,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933696,"byte_end":9933703,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933708,"byte_end":9933730,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933735,"byte_end":9933742,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934400,"byte_end":9934413,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933867,"byte_end":9933919,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933924,"byte_end":9933927,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933932,"byte_end":9933970,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933975,"byte_end":9933978,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9933983,"byte_end":9934051,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934056,"byte_end":9934059,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934064,"byte_end":9934078,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934083,"byte_end":9934086,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934091,"byte_end":9934098,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934103,"byte_end":9934134,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934139,"byte_end":9934187,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934192,"byte_end":9934195,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934200,"byte_end":9934241,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934246,"byte_end":9934281,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934286,"byte_end":9934310,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934315,"byte_end":9934337,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934342,"byte_end":9934349,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934354,"byte_end":9934376,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934381,"byte_end":9934388,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935494,"byte_end":9935510,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934582,"byte_end":9934611,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934616,"byte_end":9934619,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934624,"byte_end":9934696,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934701,"byte_end":9934726,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934731,"byte_end":9934734,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934739,"byte_end":9934811,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934816,"byte_end":9934885,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934890,"byte_end":9934963,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934968,"byte_end":9934980,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934985,"byte_end":9934988,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9934993,"byte_end":9935068,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935073,"byte_end":9935134,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935139,"byte_end":9935142,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935147,"byte_end":9935161,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935166,"byte_end":9935169,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935174,"byte_end":9935181,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935186,"byte_end":9935217,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935222,"byte_end":9935270,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935275,"byte_end":9935278,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935283,"byte_end":9935324,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935329,"byte_end":9935364,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935369,"byte_end":9935404,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935409,"byte_end":9935431,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935436,"byte_end":9935443,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935448,"byte_end":9935470,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935475,"byte_end":9935482,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936171,"byte_end":9936190,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935607,"byte_end":9935670,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935675,"byte_end":9935678,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935683,"byte_end":9935734,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935739,"byte_end":9935742,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935747,"byte_end":9935815,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935820,"byte_end":9935823,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935828,"byte_end":9935842,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935847,"byte_end":9935850,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935855,"byte_end":9935862,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935867,"byte_end":9935898,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935903,"byte_end":9935951,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935956,"byte_end":9935959,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9935964,"byte_end":9936005,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936010,"byte_end":9936045,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936050,"byte_end":9936081,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936086,"byte_end":9936108,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936113,"byte_end":9936120,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936125,"byte_end":9936147,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936152,"byte_end":9936159,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936849,"byte_end":9936868,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936359,"byte_end":9936425,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936430,"byte_end":9936433,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936438,"byte_end":9936493,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936498,"byte_end":9936501,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936506,"byte_end":9936520,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936525,"byte_end":9936528,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936533,"byte_end":9936540,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936545,"byte_end":9936576,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936581,"byte_end":9936629,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936634,"byte_end":9936637,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936642,"byte_end":9936683,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936688,"byte_end":9936723,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936728,"byte_end":9936759,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936764,"byte_end":9936786,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936791,"byte_end":9936798,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936803,"byte_end":9936825,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936830,"byte_end":9936837,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937422,"byte_end":9937439,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9936971,"byte_end":9937044,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937049,"byte_end":9937067,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937072,"byte_end":9937075,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937080,"byte_end":9937094,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937099,"byte_end":9937102,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937107,"byte_end":9937114,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937119,"byte_end":9937150,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937155,"byte_end":9937203,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937208,"byte_end":9937211,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937216,"byte_end":9937257,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937262,"byte_end":9937297,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937302,"byte_end":9937332,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937337,"byte_end":9937359,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937364,"byte_end":9937371,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937376,"byte_end":9937398,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937403,"byte_end":9937410,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938089,"byte_end":9938097,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937540,"byte_end":9937603,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937608,"byte_end":9937611,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937616,"byte_end":9937677,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937682,"byte_end":9937685,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937690,"byte_end":9937744,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937749,"byte_end":9937752,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937757,"byte_end":9937771,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937776,"byte_end":9937779,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937784,"byte_end":9937791,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937796,"byte_end":9937827,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937832,"byte_end":9937880,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937885,"byte_end":9937888,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937893,"byte_end":9937934,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937939,"byte_end":9937974,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9937979,"byte_end":9937999,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938004,"byte_end":9938026,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938031,"byte_end":9938038,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938043,"byte_end":9938065,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938070,"byte_end":9938077,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938617,"byte_end":9938626,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938195,"byte_end":9938258,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938263,"byte_end":9938266,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938271,"byte_end":9938285,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938290,"byte_end":9938293,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938298,"byte_end":9938305,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938310,"byte_end":9938358,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938363,"byte_end":9938384,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938389,"byte_end":9938424,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938429,"byte_end":9938460,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938465,"byte_end":9938496,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938501,"byte_end":9938530,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938535,"byte_end":9938555,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938560,"byte_end":9938581,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938586,"byte_end":9938593,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938598,"byte_end":9938605,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939282,"byte_end":9939290,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938778,"byte_end":9938831,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938836,"byte_end":9938839,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938844,"byte_end":9938858,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938863,"byte_end":9938866,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938871,"byte_end":9938878,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938883,"byte_end":9938914,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938919,"byte_end":9938967,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938972,"byte_end":9938975,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9938980,"byte_end":9939021,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939026,"byte_end":9939061,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939066,"byte_end":9939097,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939102,"byte_end":9939133,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939138,"byte_end":9939167,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939172,"byte_end":9939192,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939197,"byte_end":9939219,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939224,"byte_end":9939231,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939236,"byte_end":9939258,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939263,"byte_end":9939270,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939863,"byte_end":9939872,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939454,"byte_end":9939508,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939513,"byte_end":9939516,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939521,"byte_end":9939535,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939540,"byte_end":9939543,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939548,"byte_end":9939555,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939560,"byte_end":9939592,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939597,"byte_end":9939647,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939652,"byte_end":9939696,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939701,"byte_end":9939736,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939741,"byte_end":9939772,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939777,"byte_end":9939800,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939805,"byte_end":9939812,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939817,"byte_end":9939839,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9939844,"byte_end":9939851,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9940481,"byte_end":9940491,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9940033,"byte_end":9940082,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9940087,"byte_end":9940090,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9940095,"byte_end":9940109,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9940114,"byte_end":9940117,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9940122,"byte_end":9940129,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9940134,"byte_end":9940179,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9940184,"byte_end":9940234,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9940239,"byte_end":9940295,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9940300,"byte_end":9940313,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9940318,"byte_end":9940353,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9940358,"byte_end":9940389,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9940394,"byte_end":9940418,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9940423,"byte_end":9940430,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9940435,"byte_end":9940457,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9940462,"byte_end":9940469,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9941870,"byte_end":9941880,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9941627,"byte_end":9941714,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9941715,"byte_end":9941718,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9941719,"byte_end":9941757,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9941758,"byte_end":9941796,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9942980,"byte_end":9942983,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9942561,"byte_end":9942621,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9942626,"byte_end":9942629,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9942634,"byte_end":9942644,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9942649,"byte_end":9942652,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9942657,"byte_end":9942729,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9942734,"byte_end":9942807,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9942812,"byte_end":9942879,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9942884,"byte_end":9942887,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9942892,"byte_end":9942968,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9944114,"byte_end":9944133,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9943141,"byte_end":9943201,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9943206,"byte_end":9943209,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9943214,"byte_end":9943277,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9943282,"byte_end":9943360,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9943365,"byte_end":9943432,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9943437,"byte_end":9943509,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9943514,"byte_end":9943584,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9943589,"byte_end":9943612,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9943617,"byte_end":9943620,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9943625,"byte_end":9943635,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9943640,"byte_end":9943643,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9943648,"byte_end":9943723,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9943728,"byte_end":9943801,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9943806,"byte_end":9943882,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9943887,"byte_end":9943960,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9943965,"byte_end":9944035,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9944040,"byte_end":9944043,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9944048,"byte_end":9944102,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9944699,"byte_end":9944709,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9944261,"byte_end":9944311,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9944316,"byte_end":9944319,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9944324,"byte_end":9944331,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9944336,"byte_end":9944355,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9944360,"byte_end":9944398,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9944403,"byte_end":9944406,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9944411,"byte_end":9944445,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9944450,"byte_end":9944497,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9944502,"byte_end":9944509,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9944514,"byte_end":9944521,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9944526,"byte_end":9944564,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9944569,"byte_end":9944572,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9944577,"byte_end":9944630,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9944635,"byte_end":9944675,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9944680,"byte_end":9944687,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9949069,"byte_end":9949090,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":706},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9949023,"byte_end":9949064,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9949125,"byte_end":9949127,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":706},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9949096,"byte_end":9949120,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9949001,"byte_end":9949016,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError {\n\n    /// The maximum line length was exceeded.\n    MaxLineLengthExceeded,\n\n    /// An IO error occured.\n    Io(io::Error),\n}","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":709}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9948919,"byte_end":9948974,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\mod.rs","byte_start":6487,"byte_end":6517,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8294,"byte_end":8311,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":27}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7076,"byte_end":7153,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7154,"byte_end":7164,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7165,"byte_end":7168,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7169,"byte_end":7234,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7235,"byte_end":7309,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7310,"byte_end":7313,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7314,"byte_end":7397,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7398,"byte_end":7401,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7402,"byte_end":7416,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7417,"byte_end":7420,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7421,"byte_end":7434,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7435,"byte_end":7457,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7458,"byte_end":7498,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7499,"byte_end":7502,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7503,"byte_end":7521,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7522,"byte_end":7543,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7544,"byte_end":7589,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7590,"byte_end":7631,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7632,"byte_end":7635,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7636,"byte_end":7687,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7688,"byte_end":7751,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7752,"byte_end":7773,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7774,"byte_end":7823,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7824,"byte_end":7870,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7871,"byte_end":7892,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7893,"byte_end":7910,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7911,"byte_end":7992,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":7993,"byte_end":8015,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8016,"byte_end":8033,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8034,"byte_end":8047,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8048,"byte_end":8059,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8060,"byte_end":8063,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8064,"byte_end":8097,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8098,"byte_end":8173,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8174,"byte_end":8201,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8202,"byte_end":8213,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8214,"byte_end":8217,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8218,"byte_end":8268,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8269,"byte_end":8274,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8275,"byte_end":8282,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8731,"byte_end":8756,"line_start":66,"line_end":66,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8578,"byte_end":8652,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8653,"byte_end":8670,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8671,"byte_end":8719,"line_start":65,"line_end":65,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":11264,"byte_end":11267,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":11189,"byte_end":11252,"line_start":139,"line_end":139,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":13320,"byte_end":13331,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12057,"byte_end":12128,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12133,"byte_end":12166,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12171,"byte_end":12174,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12179,"byte_end":12250,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12255,"byte_end":12287,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12292,"byte_end":12295,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12300,"byte_end":12314,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12319,"byte_end":12322,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12327,"byte_end":12340,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12345,"byte_end":12367,"line_start":173,"line_end":173,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12372,"byte_end":12412,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12417,"byte_end":12420,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12425,"byte_end":12443,"line_start":176,"line_end":176,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12448,"byte_end":12469,"line_start":177,"line_end":177,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12474,"byte_end":12519,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12524,"byte_end":12570,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12575,"byte_end":12578,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12583,"byte_end":12634,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12639,"byte_end":12702,"line_start":182,"line_end":182,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12707,"byte_end":12728,"line_start":183,"line_end":183,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12733,"byte_end":12781,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12786,"byte_end":12832,"line_start":185,"line_end":185,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12837,"byte_end":12858,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12863,"byte_end":12880,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12885,"byte_end":12966,"line_start":188,"line_end":188,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12971,"byte_end":12993,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":12998,"byte_end":13015,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":13020,"byte_end":13033,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":13038,"byte_end":13049,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":13054,"byte_end":13057,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":13062,"byte_end":13095,"line_start":194,"line_end":194,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":13100,"byte_end":13175,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":13180,"byte_end":13207,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":13212,"byte_end":13223,"line_start":197,"line_end":197,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":13228,"byte_end":13231,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":13236,"byte_end":13286,"line_start":199,"line_end":199,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":13291,"byte_end":13296,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":13301,"byte_end":13308,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":15906,"byte_end":15912,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":15717,"byte_end":15789,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":15794,"byte_end":15814,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":15819,"byte_end":15822,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":15827,"byte_end":15894,"line_start":259,"line_end":259,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":16040,"byte_end":16052,"line_start":265,"line_end":265,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":15964,"byte_end":16028,"line_start":264,"line_end":264,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":16203,"byte_end":16212,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":16117,"byte_end":16191,"line_start":269,"line_end":269,"column_start":5,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":785},{"krate":0,"index":798},{"krate":0,"index":794},{"krate":0,"index":165},{"krate":0,"index":171},{"krate":0,"index":175},{"krate":0,"index":180},{"krate":0,"index":185},{"krate":0,"index":191}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":69212,"byte_end":69247,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":71194,"byte_end":71198,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":71207,"byte_end":71212,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":785},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":71175,"byte_end":71181,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":791}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":69424,"byte_end":69530,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":69531,"byte_end":69534,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":69535,"byte_end":69625,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":69626,"byte_end":69629,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":69630,"byte_end":69665,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":69666,"byte_end":69669,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":69670,"byte_end":69683,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":69684,"byte_end":69687,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":69688,"byte_end":69725,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":69726,"byte_end":69729,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":69730,"byte_end":69749,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":69750,"byte_end":69792,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":69793,"byte_end":69843,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":69844,"byte_end":69895,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":69896,"byte_end":69914,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":69915,"byte_end":69936,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":69937,"byte_end":69979,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":69980,"byte_end":70013,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70014,"byte_end":70030,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70031,"byte_end":70125,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70126,"byte_end":70136,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70137,"byte_end":70140,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70141,"byte_end":70188,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70189,"byte_end":70194,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70195,"byte_end":70202,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70203,"byte_end":70206,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70407,"byte_end":70410,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70411,"byte_end":70497,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70498,"byte_end":70508,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70509,"byte_end":70512,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70513,"byte_end":70520,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70521,"byte_end":70556,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70557,"byte_end":70599,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70600,"byte_end":70650,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70651,"byte_end":70702,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70703,"byte_end":70706,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70707,"byte_end":70725,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70726,"byte_end":70747,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70748,"byte_end":70790,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70791,"byte_end":70838,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70839,"byte_end":70855,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70856,"byte_end":70905,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70906,"byte_end":70916,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70917,"byte_end":70920,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70921,"byte_end":70954,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70955,"byte_end":70995,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":70996,"byte_end":71028,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":71029,"byte_end":71034,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":71035,"byte_end":71042,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":71043,"byte_end":71065,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9876095,"byte_end":9876105,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9876256,"byte_end":9876266,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9876593,"byte_end":9876603,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9885786,"byte_end":9885795,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9885995,"byte_end":9886005,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9886156,"byte_end":9886165,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9886488,"byte_end":9886498,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9886744,"byte_end":9886752,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9886849,"byte_end":9886857,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9886968,"byte_end":9886976,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9887076,"byte_end":9887084,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9887194,"byte_end":9887204,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9889150,"byte_end":9889160,"line_start":164,"line_end":164,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9891996,"byte_end":9892002,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9895524,"byte_end":9895530,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9900134,"byte_end":9900140,"line_start":228,"line_end":228,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9900456,"byte_end":9900462,"line_start":241,"line_end":241,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9901177,"byte_end":9901183,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9902223,"byte_end":9902234,"line_start":304,"line_end":304,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9903161,"byte_end":9903171,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904060,"byte_end":9904070,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9905758,"byte_end":9905768,"line_start":112,"line_end":112,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9906081,"byte_end":9906091,"line_start":125,"line_end":125,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9906817,"byte_end":9906827,"line_start":148,"line_end":148,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9907785,"byte_end":9907796,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9908152,"byte_end":9908163,"line_start":40,"line_end":40,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9909568,"byte_end":9909579,"line_start":82,"line_end":82,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9910343,"byte_end":9910354,"line_start":108,"line_end":108,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9910595,"byte_end":9910606,"line_start":119,"line_end":119,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9925614,"byte_end":9925634,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9928987,"byte_end":9929007,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9929894,"byte_end":9929914,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931255,"byte_end":9931275,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931368,"byte_end":9931375,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9940974,"byte_end":9940981,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9941107,"byte_end":9941132,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9941290,"byte_end":9941315,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9941450,"byte_end":9941475,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9942544,"byte_end":9942554,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9945096,"byte_end":9945106,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9948517,"byte_end":9948527,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9948850,"byte_end":9948860,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9949165,"byte_end":9949180,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9949462,"byte_end":9949477,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9949594,"byte_end":9949609,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8514,"byte_end":8531,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8556,"byte_end":8573,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":9307,"byte_end":9332,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":9406,"byte_end":9423,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":9648,"byte_end":9665,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":10071,"byte_end":10088,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":11058,"byte_end":11075,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":11165,"byte_end":11182,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":17048,"byte_end":17073,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":17245,"byte_end":17270,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":18705,"byte_end":18730,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":19918,"byte_end":19932,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":20266,"byte_end":20283,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":20883,"byte_end":20900,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":21758,"byte_end":21771,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":22956,"byte_end":22978,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40497,"byte_end":40505,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40755,"byte_end":40763,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40868,"byte_end":40876,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41185,"byte_end":41195,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":71818,"byte_end":71824,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":72067,"byte_end":72073,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":72346,"byte_end":72352,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":72680,"byte_end":72686,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":73040,"byte_end":73046,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":73598,"byte_end":73604,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","byte_start":758,"byte_end":763,"line_start":30,"line_end":30,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":221}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\mod.rs","byte_start":9874613,"byte_end":9874629,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":489}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","byte_start":907,"byte_end":911,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":11}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\lib.rs","byte_start":922,"byte_end":928,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":149}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9876095,"byte_end":9876105,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9876256,"byte_end":9876266,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":599},"to":{"krate":0,"index":247}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\bytes_codec.rs","byte_start":9876593,"byte_end":9876603,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":599},"to":{"krate":0,"index":258}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9885786,"byte_end":9885795,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":285},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9885995,"byte_end":9886005,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":289},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9886156,"byte_end":9886165,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":285},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9886488,"byte_end":9886498,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":289},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9886744,"byte_end":9886752,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":627},"to":{"krate":2,"index":1720}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9886849,"byte_end":9886857,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":627},"to":{"krate":2,"index":1723}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9886968,"byte_end":9886976,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":627},"to":{"krate":2,"index":1720}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9887076,"byte_end":9887084,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":627},"to":{"krate":2,"index":1723}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9887194,"byte_end":9887204,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":934},"to":{"krate":34,"index":68}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_impl.rs","byte_start":9889150,"byte_end":9889160,"line_start":164,"line_end":164,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":934},"to":{"krate":36,"index":9}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9891996,"byte_end":9892002,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9895524,"byte_end":9895530,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9900134,"byte_end":9900140,"line_start":228,"line_end":228,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":884},"to":{"krate":34,"index":68}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9900456,"byte_end":9900462,"line_start":241,"line_end":241,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":884},"to":{"krate":36,"index":9}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9901177,"byte_end":9901183,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed.rs","byte_start":9902223,"byte_end":9902234,"line_start":304,"line_end":304,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9903161,"byte_end":9903171,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9904060,"byte_end":9904070,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9905758,"byte_end":9905768,"line_start":112,"line_end":112,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":843},"to":{"krate":34,"index":68}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9906081,"byte_end":9906091,"line_start":125,"line_end":125,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":843},"to":{"krate":36,"index":9}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_read.rs","byte_start":9906817,"byte_end":9906827,"line_start":148,"line_end":148,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":843},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9907785,"byte_end":9907796,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9908152,"byte_end":9908163,"line_start":40,"line_end":40,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9909568,"byte_end":9909579,"line_start":82,"line_end":82,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":802},"to":{"krate":36,"index":9}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9910343,"byte_end":9910354,"line_start":108,"line_end":108,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":802},"to":{"krate":34,"index":68}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\framed_write.rs","byte_start":9910595,"byte_end":9910606,"line_start":119,"line_end":119,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":802},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9925614,"byte_end":9925634,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9928987,"byte_end":9929007,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":656},"to":{"krate":0,"index":247}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9929894,"byte_end":9929914,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":656},"to":{"krate":0,"index":258}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931255,"byte_end":9931275,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":656},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9931368,"byte_end":9931375,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9940974,"byte_end":9940981,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":644},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9941107,"byte_end":9941132,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":511},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9941290,"byte_end":9941315,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":511},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\length_delimited.rs","byte_start":9941450,"byte_end":9941475,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":511},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9942544,"byte_end":9942554,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9945096,"byte_end":9945106,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":672},"to":{"krate":0,"index":247}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9948517,"byte_end":9948527,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":672},"to":{"krate":0,"index":258}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9948850,"byte_end":9948860,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":672},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9949165,"byte_end":9949180,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":706},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9949462,"byte_end":9949477,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":706},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\codec\\lines_codec.rs","byte_start":9949594,"byte_end":9949609,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":706},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8514,"byte_end":8531,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":8556,"byte_end":8573,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":9307,"byte_end":9332,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":9406,"byte_end":9423,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":9648,"byte_end":9665,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":10071,"byte_end":10088,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":11058,"byte_end":11075,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":11165,"byte_end":11182,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":26},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":17048,"byte_end":17073,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":17245,"byte_end":17270,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":18705,"byte_end":18730,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":19918,"byte_end":19932,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":65},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":20266,"byte_end":20283,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":70},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":20883,"byte_end":20900,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":21758,"byte_end":21771,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":753},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\cancellation_token.rs","byte_start":22956,"byte_end":22978,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":87},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40497,"byte_end":40505,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40755,"byte_end":40763,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":769},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40868,"byte_end":40876,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":769},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41185,"byte_end":41195,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":71818,"byte_end":71824,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":785},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":72067,"byte_end":72073,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":785},"to":{"krate":13,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":72346,"byte_end":72352,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":785},"to":{"krate":13,"index":132}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":72680,"byte_end":72686,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":785},"to":{"krate":13,"index":185}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":73040,"byte_end":73046,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":785},"to":{"krate":13,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.0\\src\\either.rs","byte_start":73598,"byte_end":73604,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":785},"to":{"krate":34,"index":68}}]}