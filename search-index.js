var searchIndex = JSON.parse('{\
"salvo":{"doc":"","tn":["Catcher","CatcherImpl","Depot","Error","Handler","Request","Response","Result","Router","Server","Service","TlsServer","Writer","accept","add_cookie","after","afters","afters_mut","allowed_media_types","append","async_trait","before","befores","befores_mut","bind","bind","bind_incoming","bind_incoming_with_graceful_shutdown","bind_with_graceful_shutdown","body","body","body_mut","body_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","call","catch","catch","catchers","cert","cert_path","client_auth_optional","client_auth_optional_path","client_auth_required","client_auth_required_path","commit","content_type","cookies","cookies","cookies_mut","default","default","default","delete","depot","detect","extensions","extensions_mut","filter","filters","filters_mut","fmt","fmt","fmt","fmt","fmt","fn_handler","form_data","frist_accept","from","from","from","from","from","from","from","from","from","from","from_hyper","from_hyper","fs","get","get_cookie","get_cookie","get_file","get_files","get_form","get_form_or_query","get_header","get_param","get_query","get_query_or_form","handle","handle","has","head","header_cookies","headers","headers","headers_mut","headers_mut","http","insert","into","into","into","into","into","into","into","into","into","is_commited","key","key_path","method","method_mut","new","new","new","new","new","new","new","ocsp_resp","options","params","params_mut","patch","path","payload","poll_ready","post","prelude","push","push_when","put","queries","read","read_from_form","read_from_json","read_from_text","read_text","redirect_found","redirect_other","redirect_temporary","remote_addr","remove_cookie","render_binary","render_html_text","render_json","render_json_text","render_plain_text","render_xml_text","router","routers","routers_mut","routing","server","set_body","set_headers","set_http_error","set_remote_addr","set_status_code","start","start","start_with_threads","start_with_threads","status_code","streaming","take","take_body","take_body","then","tls","to_string","to_string","transfer","try_bind","try_bind","try_bind_incoming","try_bind_incoming_with_graceful_shutdown","try_bind_with_graceful_shutdown","try_bind_with_graceful_shutdown","try_borrow","try_borrow_mut","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_take","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uri","uri_mut","version","version","version_mut","version_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_allowed_media_types","with_allowed_media_types","with_catchers","with_catchers","write","write","write_body_bytes","Chain","Context","Error","Result","anyhow","as_ref","as_ref","backtrace","bail","borrow","borrow","borrow_mut","borrow_mut","chain","clone","clone_into","context","context","default","deref","deref_mut","downcast","downcast_mut","downcast_ref","drop","ensure","fmt","fmt","format_err","from","from","from","from","into","into","into_iter","is","len","msg","new","new","next","next_back","root_cause","size_hint","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_context","write","Depot","FileChunk","NamedFile","NamedFileBuilder","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer_size","build","builder","deref","deref_mut","disable_content_disposition","file","fmt","from","from","from","into","into","into","open","path","poll_next","set_content_disposition","set_content_encoding","set_content_type","try_from","try_from","try_from","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","use_etag","use_last_modified","vzip","vzip","vzip","with_attached_filename","with_buffer_size","with_content_encoding","with_content_type","with_disposition_type","write","BodyChunk","BoundaryNotSpecified","Data","Decoding","Eof","EofBeforeFirstBoundary","EofInFile","EofInMainHeaders","EofInPart","EofInPartHeaders","Error","General","HeaderMap","HeaderValue","HttParse","HttpBody","HttpError","HttpRange","Hyper","InvalidDisposition","InvalidRange","Io","Method","Mime","MissingDisposition","NoCrLfAfterBoundary","NoName","NoRequestContentType","NotAFile","NotFormData","NotMultipart","Parsing","PartialHeaders","ReadError","Request","Response","SerdeJson","StatusCode","Utf8","as_ref","as_slice","body_chunk","borrow","borrow","borrow_mut","borrow_mut","boxed","clone","clone","clone_into","clone_into","cmp","code","data","detail","eq","eq","equivalent","errors","essence_str","fmt","fmt","fmt","form","from","from","from","from_str","get_param","guess_accept_mime","hash","header","into","into","into_vec","is_empty","is_end_stream","len","length","map_data","map_err","method","multipart","name","params","parse","partial_cmp","poll_data","poll_trailers","range","request","response","size_hint","slice","split_into","start","subtype","suffix","summary","to_owned","to_owned","to_string","trailers","try_from","try_from","try_into","try_into","type_","type_id","type_id","uri","version","vzip","vzip","BodyChunk","as_slice","into_vec","is_empty","len","slice","split_into","Cookie","CookieBuilder","CookieJar","Delta","EmptyName","EncodedCookie","Iter","Lax","MissingPair","None","ParseError","SameSite","Strict","Utf8Error","add","add_original","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","delta","description","domain","domain","domain_raw","encoded","eq","eq","eq","equivalent","equivalent","expires","expires","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_remove","from","from","from","from","from","from","from","from","from","from_str","get","hash","http_only","http_only","into","into","into","into","into","into","into","into","into_iter","into_iter","into_owned","is_lax","is_none","is_strict","iter","make_permanent","max_age","max_age","name","name_raw","name_value","named","ne","new","new","new","next","next","parse","parse_encoded","path","path","path_raw","permanent","remove","reset_delta","same_site","same_site","secure","secure","set_domain","set_expires","set_http_only","set_max_age","set_name","set_path","set_same_site","set_secure","set_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unset_domain","unset_path","value","value_raw","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BadGateway","BadRequest","BoundaryNotSpecified","Conflict","Decoding","Eof","EofBeforeFirstBoundary","EofInFile","EofInMainHeaders","EofInPart","EofInPartHeaders","ExpectationFailed","FailedDependency","Forbidden","GatewayTimeout","General","Gone","HttParse","HttpError","HttpResult","HttpVersionNotSupported","Hyper","ImATeapot","InsufficientStorage","InternalServerError","InvalidDisposition","InvalidRange","Io","LengthRequired","Locked","LoopDetected","MethodNotAllowed","MisdirectedRequest","MissingDisposition","NetworkAuthenticationRequired","NoCrLfAfterBoundary","NoName","NoRequestContentType","NotAFile","NotAcceptable","NotExtended","NotFormData","NotFound","NotImplemented","NotMultipart","Parsing","PartialHeaders","PayloadTooLarge","PaymentRequired","PreconditionFailed","PreconditionRequired","ProxyAuthenticationRequired","RangeNotSatisfiable","ReadError","RequestHeaderFieldsTooLarge","RequestTimeout","SerdeJson","ServiceUnavailable","TooManyRequests","Unauthorized","UnavailableForLegalReasons","UnprocessableEntity","UnsupportedMediaType","UpgradeRequired","UriTooLong","Utf8","VariantAlsoNegotiates","code","detail","from_code","http_error","name","read_error","summary","BadGateway","BadRequest","Conflict","ExpectationFailed","FailedDependency","Forbidden","GatewayTimeout","Gone","HttpError","HttpResult","HttpVersionNotSupported","ImATeapot","InsufficientStorage","InternalServerError","LengthRequired","Locked","LoopDetected","MethodNotAllowed","MisdirectedRequest","NetworkAuthenticationRequired","NotAcceptable","NotExtended","NotFound","NotImplemented","PayloadTooLarge","PaymentRequired","PreconditionFailed","PreconditionRequired","ProxyAuthenticationRequired","RangeNotSatisfiable","RequestHeaderFieldsTooLarge","RequestTimeout","ServiceUnavailable","TooManyRequests","Unauthorized","UnavailableForLegalReasons","UnprocessableEntity","UnsupportedMediaType","UpgradeRequired","UriTooLong","VariantAlsoNegotiates","code","detail","from_code","name","summary","BoundaryNotSpecified","Decoding","Eof","EofBeforeFirstBoundary","EofInFile","EofInMainHeaders","EofInPart","EofInPartHeaders","General","HttParse","Hyper","InvalidDisposition","InvalidRange","Io","MissingDisposition","NoCrLfAfterBoundary","NoName","NoRequestContentType","NotAFile","NotFormData","NotMultipart","Parsing","PartialHeaders","ReadError","SerdeJson","Utf8","FilePart","FormData","borrow","borrow","borrow_mut","borrow_mut","content_type","create","default","do_not_delete_on_drop","drop","fields","filename","files","fmt","from","from","headers","into","into","multipart","new","path","read_form_data","size","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ACCEPT","ACCEPT_CHARSET","ACCEPT_ENCODING","ACCEPT_LANGUAGE","ACCEPT_RANGES","ACCESS_CONTROL_ALLOW_CREDENTIALS","ACCESS_CONTROL_ALLOW_HEADERS","ACCESS_CONTROL_ALLOW_METHODS","ACCESS_CONTROL_ALLOW_ORIGIN","ACCESS_CONTROL_EXPOSE_HEADERS","ACCESS_CONTROL_MAX_AGE","ACCESS_CONTROL_REQUEST_HEADERS","ACCESS_CONTROL_REQUEST_METHOD","AGE","ALLOW","ALT_SVC","AUTHORIZATION","AsHeaderName","CACHE_CONTROL","CONNECTION","CONTENT_DISPOSITION","CONTENT_ENCODING","CONTENT_LANGUAGE","CONTENT_LENGTH","CONTENT_LOCATION","CONTENT_RANGE","CONTENT_SECURITY_POLICY","CONTENT_SECURITY_POLICY_REPORT_ONLY","CONTENT_TYPE","COOKIE","DATE","DNT","Drain","ETAG","EXPECT","EXPIRES","Entry","FORWARDED","FROM","GetAll","HOST","HeaderMap","HeaderName","HeaderValue","IF_MATCH","IF_MODIFIED_SINCE","IF_NONE_MATCH","IF_RANGE","IF_UNMODIFIED_SINCE","IntoHeaderName","IntoIter","InvalidHeaderName","InvalidHeaderValue","Iter","IterMut","Keys","LAST_MODIFIED","LINK","LOCATION","MAX_FORWARDS","ORIGIN","Occupied","OccupiedEntry","PRAGMA","PROXY_AUTHENTICATE","PROXY_AUTHORIZATION","PUBLIC_KEY_PINS","PUBLIC_KEY_PINS_REPORT_ONLY","RANGE","REFERER","REFERRER_POLICY","REFRESH","RETRY_AFTER","SEC_WEBSOCKET_ACCEPT","SEC_WEBSOCKET_EXTENSIONS","SEC_WEBSOCKET_KEY","SEC_WEBSOCKET_PROTOCOL","SEC_WEBSOCKET_VERSION","SERVER","SET_COOKIE","STRICT_TRANSPORT_SECURITY","TE","TRAILER","TRANSFER_ENCODING","ToStrError","UPGRADE","UPGRADE_INSECURE_REQUESTS","USER_AGENT","VARY","VIA","Vacant","VacantEntry","ValueDrain","ValueIter","ValueIterMut","Values","ValuesMut","WARNING","WWW_AUTHENTICATE","X_CONTENT_TYPE_OPTIONS","X_DNS_PREFETCH_CONTROL","X_FRAME_OPTIONS","X_XSS_PROTECTION","append","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cjk_compat_variants","drop","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get_mut","insert","insert","insert_entry","insert_mult","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_mut","iter","iter","iter_mut","key","key","key","next","next","next","next","next","next","next","next","next","next","next_back","next_back","nfc","nfd","nfkc","nfkd","or_insert","or_insert_with","remove","remove_entry","remove_entry_mult","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","stream_safe","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","ANY","AcceptRanges","AccessControlAllowCredentials","AccessControlAllowHeaders","AccessControlAllowMethods","AccessControlAllowOrigin","AccessControlExposeHeaders","AccessControlMaxAge","AccessControlRequestHeaders","AccessControlRequestMethod","Allow","Authorization","CONTINUE","CacheControl","Connection","ContentDisposition","ContentEncoding","ContentLength","ContentLocation","ContentRange","ContentType","Cookie","Date","ETag","Error","Expect","Expires","Header","HeaderMap","HeaderMapExt","HeaderName","HeaderValue","Host","IfMatch","IfModifiedSince","IfNoneMatch","IfRange","IfUnmodifiedSince","LastModified","Location","NO_REFERRER","NO_REFERRER_WHEN_DOWNGRADE","NULL","NULL","ORIGIN","ORIGIN_WHEN_CROSS_ORIGIN","Origin","Pragma","ProxyAuthorization","Range","Referer","ReferrerPolicy","RetryAfter","SAME_ORIGIN","STRICT_ORIGIN","STRICT_ORIGIN_WHEN_CROSS_ORIGIN","SecWebsocketAccept","SecWebsocketKey","SecWebsocketVersion","Server","SetCookie","StrictTransportSecurity","Te","TransferEncoding","UNSAFE_URL","Upgrade","UserAgent","V13","Vary","any","any","any","as_ref","as_ref","as_str","as_str","as_str","authorization","basic","bearer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","bytes","bytes_len","bytes_range","chunked","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","contains","contains","date","date","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","delay","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","etag","excluding_subdomains","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","form_url_encoded","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_lowercase","from_static","from_static","from_static","from_static","from_str","from_str","from_str","from_str","from_str","get","gzip","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hostname","hostname","html","include_subdomains","including_subdomains","inline","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","invalid","is_any","is_any","is_attachment","is_chunked","is_form_data","is_inline","is_modified","is_modified","is_no_cache","is_null","iter","iter","iter","iter","iter","iter","iter","iter_strs","jpeg","json","keep_alive","len","max_age","max_age","max_stale","min_fresh","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","no_cache","no_cache","no_store","no_transform","octet_stream","only_if_cached","origin","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","png","port","port","precondition_passes","precondition_passes","precondition_passes","private","public","s_max_age","scheme","text","text_utf8","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","trailers","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_parts","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typed_get","typed_insert","typed_try_get","unsatisfied_bytes","upgrade","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","websocket","with_max_age","with_max_stale","with_min_fresh","with_no_cache","with_no_store","with_no_transform","with_only_if_cached","with_private","with_public","with_s_max_age","xml","0","Authorization","Basic","Bearer","Credentials","SCHEME","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","decode","decode","encode","encode","encode","eq","eq","fmt","fmt","from","from","into","into","ne","ne","password","to_owned","to_owned","token","try_from","try_from","try_into","try_into","type_id","type_id","username","vzip","vzip","InvalidMethod","Method","borrow","borrow_mut","fmt","fmt","from","into","to_string","try_from","try_into","type_id","vzip","Field","FieldData","FieldHeaders","Multipart","NextField","ReadToString","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","charset","clone","clone_into","content_type","data","default","ext_headers","filename","fmt","fmt","from","from","from","from","from","from","headers","into","into","into","into","into","into","into_future","into_future","is_text","name","next_field","next_field_pinned","poll","poll","poll_field_chunk","poll_field_headers","poll_has_next_field","poll_next","read_to_string","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from_body_headers","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","with_body","HttpRange","length","start","Body","BodyReader","Parts","Request","extensions","headers","method","uri","version","Body","Bytes","Empty","Parts","Response","Stream","borrow","borrow_mut","extensions","from","from","headers","into","poll_next","status","try_from","try_into","try_poll_next","type_id","version","vzip","Authority","Builder","HTTP","HTTPS","InvalidUri","InvalidUriParts","Parts","PathAndQuery","Port","Scheme","Uri","as_ref","as_ref","as_ref","as_str","as_str","as_str","as_str","as_u16","authority","authority","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_maybe_shared","from_maybe_shared","from_static","from_static","from_str","from_str","from_str","hash","hash","host","into","into","into","into","into","into","into","into","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","path_and_query","path_and_query","port","port_u16","query","scheme","scheme","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Version","ACCEPTED","ALREADY_REPORTED","BAD_GATEWAY","BAD_REQUEST","Body","CONFLICT","CONNECT","CONTINUE","CREATED","Client","DELETE","EXPECTATION_FAILED","Error","FAILED_DEPENDENCY","FORBIDDEN","FOUND","GATEWAY_TIMEOUT","GET","GONE","HEAD","HTTP_09","HTTP_10","HTTP_11","HTTP_2","HTTP_3","HTTP_VERSION_NOT_SUPPORTED","HeaderMap","IM_A_TEAPOT","IM_USED","INSUFFICIENT_STORAGE","INTERNAL_SERVER_ERROR","LENGTH_REQUIRED","LOCKED","LOOP_DETECTED","METHOD_NOT_ALLOWED","MISDIRECTED_REQUEST","MOVED_PERMANENTLY","MULTIPLE_CHOICES","MULTI_STATUS","Method","NETWORK_AUTHENTICATION_REQUIRED","NON_AUTHORITATIVE_INFORMATION","NOT_ACCEPTABLE","NOT_EXTENDED","NOT_FOUND","NOT_IMPLEMENTED","NOT_MODIFIED","NO_CONTENT","OK","OPTIONS","PARTIAL_CONTENT","PATCH","PAYLOAD_TOO_LARGE","PAYMENT_REQUIRED","PERMANENT_REDIRECT","POST","PRECONDITION_FAILED","PRECONDITION_REQUIRED","PROCESSING","PROXY_AUTHENTICATION_REQUIRED","PUT","RANGE_NOT_SATISFIABLE","REQUEST_HEADER_FIELDS_TOO_LARGE","REQUEST_TIMEOUT","RESET_CONTENT","Request","Response","Result","SEE_OTHER","SERVICE_UNAVAILABLE","SWITCHING_PROTOCOLS","Server","StatusCode","TEMPORARY_REDIRECT","TOO_MANY_REQUESTS","TRACE","UNAUTHORIZED","UNAVAILABLE_FOR_LEGAL_REASONS","UNPROCESSABLE_ENTITY","UNSUPPORTED_MEDIA_TYPE","UPGRADE_REQUIRED","URI_TOO_LONG","USE_PROXY","Uri","VARIANT_ALSO_NEGOTIATES","Version","append","as_ref","as_str","as_str","as_u16","authority","bind","body","body","body","body_mut","body_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","builder","builder","builder","builder","call","canonical_reason","capacity","channel","clear","client","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","connect","contains_key","default","default","default","default","default","default","default","default","default","delete","drain","empty","entry","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extensions","extensions","extensions_mut","extensions_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_iter","from_maybe_shared","from_parts","from_parts","from_parts","from_static","from_str","from_str","from_str","from_tcp","from_u16","get","get","get","get_all","get_mut","hash","hash","hash","hash","head","headers","headers","headers_mut","headers_mut","host","index","insert","into","into","into","into","into","into","into","into","into","into","into","into_body","into_body","into_cause","into_client_request","into_client_request","into_future","into_iter","into_parts","into_parts","into_parts","is_body_write_aborted","is_canceled","is_client_error","is_closed","is_connect","is_empty","is_end_stream","is_end_stream","is_end_stream","is_idempotent","is_incomplete_message","is_informational","is_parse","is_redirection","is_safe","is_server_error","is_success","is_timeout","is_user","iter","iter_mut","keys","keys_len","len","local_addr","map","map","method","method_mut","ne","ne","ne","new","new","new","new","options","partial_cmp","partial_cmp","patch","path","path_and_query","poll","poll_data","poll_data","poll_data","poll_next","poll_ready","poll_trailers","poll_trailers","poll_trailers","port","port_u16","post","put","query","remove","request","reserve","rt","scheme","scheme_str","server","service","size_hint","size_hint","size_hint","source","status","status_mut","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","trace","try_bind","try_entry","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typed_get","typed_insert","typed_try_get","upgrade","uri","uri_mut","values","values_mut","version","version","version_mut","version_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_graceful_shutdown","wrap_stream","Body","Buf","Bytes","Data","Error","HttpBody","Sender","SizeHint","abort","advance","advance","aggregate","as_ref","as_slice","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","boxed","chain","chunk","chunk","chunks_vectored","clear","clone","clone","clone_into","clone_into","cmp","copy_from_slice","copy_to_bytes","copy_to_bytes","copy_to_slice","data","default","default","deref","drop","eq","eq","eq","eq","eq","eq","eq","equivalent","exact","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_iter","from_static","get_f32","get_f32_le","get_f64","get_f64_le","get_i128","get_i128_le","get_i16","get_i16_le","get_i32","get_i32_le","get_i64","get_i64_le","get_i8","get_int","get_int_le","get_u128","get_u128_le","get_u16","get_u16_le","get_u32","get_u32_le","get_u64","get_u64_le","get_u8","get_uint","get_uint_le","has_remaining","hash","into","into","into","into_iter","is_empty","is_end_stream","len","lower","map_data","map_err","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","poll_data","poll_ready","poll_trailers","reader","remaining","remaining","send_data","send_trailers","set_exact","set_lower","set_upper","size_hint","slice","slice_ref","split_into","split_off","split_to","take","to_bytes","to_owned","to_owned","trailers","truncate","try_from","try_from","try_from","try_into","try_into","try_into","try_send_data","type_id","type_id","type_id","upper","vzip","vzip","vzip","with_exact","Builder","Client","HttpConnector","ResponseFuture","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build_http","call","clone","clone","clone_into","clone_into","conn","connect","default","enforce_http","executor","fmt","fmt","fmt","from","from","from","http09_responses","http1_max_buf_size","http1_read_buf_exact_size","http1_title_case_headers","http2_adaptive_window","http2_initial_connection_window_size","http2_initial_stream_window_size","http2_keep_alive_interval","http2_keep_alive_timeout","http2_keep_alive_while_idle","http2_max_frame_size","http2_only","into","into","into","into_future","new","new_with_resolver","poll","poll_ready","pool_idle_timeout","pool_max_idle_per_host","retry_canceled_requests","service","set_connect_timeout","set_happy_eyeballs_timeout","set_host","set_keepalive","set_local_address","set_local_addresses","set_nodelay","set_recv_buffer_size","set_reuse_address","set_send_buffer_size","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","vzip","vzip","vzip","Builder","Connection","Parts","ResponseFuture","SendRequest","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone_into","executor","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","handshake","handshake","http2_adaptive_window","http2_initial_connection_window_size","http2_initial_stream_window_size","http2_keep_alive_interval","http2_keep_alive_timeout","http2_keep_alive_while_idle","http2_max_frame_size","http2_only","into","into","into","into","into","into_future","into_future","into_parts","io","new","poll","poll","poll_ready","poll_ready","poll_without_shutdown","read_buf","send_request","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","without_shutdown","Connect","Connected","Connection","HttpConnector","HttpInfo","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","connected","dns","extra","fmt","fmt","from","from","get_extras","into","into","is_negotiated_h2","is_proxied","negotiated_h2","new","proxy","remote_addr","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","GaiAddrs","GaiFuture","GaiResolver","InvalidNameError","Name","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","hash","into","into","into","into","into","into_future","into_iter","ne","new","next","poll","poll_ready","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Connect","borrow","borrow_mut","call","fmt","from","into","new","poll_ready","try_from","try_into","type_id","vzip","Error","Extensions","HeaderMap","HeaderValue","Method","Request","Response","Result","StatusCode","Uri","Version","as_bytes","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","cmp","default","eq","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_maybe_shared","from_maybe_shared_unchecked","from_name","from_static","from_str","from_str","get","get_mut","get_ref","hash","insert","into","into","into","is","is_empty","is_sensitive","len","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","request","response","set_sensitive","source","status","to_owned","to_str","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Builder","Parts","Request","body","borrow","borrow","borrow_mut","borrow_mut","default","extension","extensions","extensions_mut","extensions_ref","fmt","fmt","from","from","header","headers","headers_mut","headers_ref","into","into","method","method","method_ref","new","try_from","try_from","try_into","try_into","type_id","type_id","uri","uri","uri_ref","version","version","vzip","vzip","Builder","Parts","Response","body","borrow","borrow","borrow_mut","borrow_mut","default","extension","extensions","extensions_mut","extensions_ref","fmt","fmt","from","from","header","headers","headers_mut","headers_ref","into","into","new","status","status","try_from","try_from","try_into","try_into","type_id","type_id","version","version","vzip","vzip","InvalidStatusCode","StatusCode","borrow","borrow_mut","fmt","fmt","from","into","to_string","try_from","try_into","type_id","vzip","Executor","execute","Builder","Server","accept","borrow","borrow_mut","conn","executor","fmt","from","http1_half_close","http1_keepalive","http1_max_buf_size","http1_only","http2_adaptive_window","http2_initial_connection_window_size","http2_initial_stream_window_size","http2_keep_alive_interval","http2_keep_alive_timeout","http2_max_concurrent_streams","http2_max_frame_size","http2_only","into","new","serve","tcp_keepalive","tcp_nodelay","tcp_sleep_on_accept_errors","try_from","try_into","type_id","vzip","Accept","Conn","Error","from_stream","poll_accept","poll_fn","AddrIncoming","AddrStream","Connecting","Connection","Http","Parts","as_raw_fd","bind","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_listener","graceful_shutdown","http1_half_close","http1_keep_alive","http1_only","http2_adaptive_window","http2_initial_connection_window_size","http2_initial_stream_window_size","http2_keep_alive_interval","http2_keep_alive_timeout","http2_max_concurrent_streams","http2_max_frame_size","http2_only","into","into","into","into","into","into","into_future","into_future","into_inner","into_parts","io","is_write_vectored","local_addr","max_buf_size","new","pipeline_flush","poll","poll","poll_accept","poll_flush","poll_peek","poll_read","poll_shutdown","poll_without_shutdown","poll_write","poll_write_vectored","read_buf","remote_addr","serve_connection","service","set_keepalive","set_nodelay","set_sleep_on_errors","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_parts","try_poll","try_poll","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","with_executor","with_upgrades","without_shutdown","Error","Future","Response","Service","call","make_service_fn","poll_ready","service_fn","OnUpgrade","Parts","Upgraded","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","downcast","fmt","fmt","fmt","from","from","from","into","into","into","into_future","io","is_write_vectored","on","poll","poll_flush","poll_read","poll_shutdown","poll_write","poll_write_vectored","read_buf","try_from","try_from","try_from","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","vzip","vzip","vzip","BadGateway","BadRequest","BoundaryNotSpecified","Conflict","Decoding","Depot","Eof","EofBeforeFirstBoundary","EofInFile","EofInMainHeaders","EofInPart","EofInPartHeaders","ExpectationFailed","FailedDependency","Forbidden","GatewayTimeout","General","Gone","Handler","HtmlText","HttParse","HttpError","HttpResult","HttpVersionNotSupported","Hyper","ImATeapot","InsufficientStorage","InternalServerError","InvalidDisposition","InvalidRange","Io","JsonText","LengthRequired","Locked","LoopDetected","MethodNotAllowed","MisdirectedRequest","MissingDisposition","NetworkAuthenticationRequired","NoCrLfAfterBoundary","NoName","NoRequestContentType","NotAFile","NotAcceptable","NotExtended","NotFormData","NotFound","NotImplemented","NotMultipart","Parsing","PartialHeaders","PayloadTooLarge","PaymentRequired","PlainText","PreconditionFailed","PreconditionRequired","ProxyAuthenticationRequired","RangeNotSatisfiable","ReadError","Request","RequestHeaderFieldsTooLarge","RequestTimeout","Response","Router","SerdeJson","Server","Service","ServiceUnavailable","StatusCode","TlsServer","TooManyRequests","Unauthorized","UnavailableForLegalReasons","UnprocessableEntity","UnsupportedMediaType","UpgradeRequired","UriTooLong","Utf8","VariantAlsoNegotiates","Writer","as_bytes","async_trait","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","code","detail","fmt","fmt","fmt","fmt","fn_handler","from","from","from","from","from","from","from","from","from","from","from_code","handle","into","into","into","into","into","name","source","summary","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_detail","with_summary","write","write","write","write","write","write","0","DetectMatched","Filter","FnFilter","MethodFilter","PathFilter","PathParams","PathPart","PathState","Router","afters","and","and_then","befores","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","delete","detect","detect","eq","equivalent","filter","filter","filter","filter","filter","fmt","fmt","fn_filter","from","from","from","from","from","get","handler","head","into","into","into","into","into","ne","new","new","options","or","or_else","patch","path","post","put","register_path_part_builder","register_path_part_regex","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","Filter","FnFilter","MethodFilter","PathFilter","PathPart","and","and_then","delete","detect","filter","fn_filter","get","head","method","options","or","or_else","patch","path","post","put","0","MethodFilter","Server","TlsServer","builder"],"q":["salvosalvo::anyhow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::depot","salvo::fs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::http","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::http::body_chunk","","","","","","","salvo::http::cookiesalvo::http::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::http::errors::http_error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::http::errors::read_error","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::http::form","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::http::headersalvo::http::headerssalvo::http::headers::authorization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::http::method","","","","","","","","","","","","","salvo::http::multipart","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::http::range","","","salvo::http::request","","","","","","","","","salvo::http::response","","","","","","","","","","","","","","","","","","","","","salvo::http::urisalvo::http::version","salvo::hyper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::hyper::body","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::hyper::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::hyper::client::conn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::hyper::client::connect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::hyper::client::connect::dns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::hyper::client::service","","","","","","","","","","","","","salvo::hyper::http","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::hyper::http::request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::hyper::http::response","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::hyper::http::status","","","","","","","","","","","","","salvo::hyper::rt","","salvo::hyper::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::hyper::server::accept","","","","","","salvo::hyper::server::conn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::hyper::service","","","","","","","","salvo::hyper::upgrade","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::routing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo::routing::filter","","","","","","","","","","","","","","","","","","","","","","salvo::routing::filter::method","","salvo::server","",""],"d":["","","","Errors that can happen inside salvo.","","Represents an HTTP request.","Represents an HTTP response","","","","","","","","","","","","","","","","","","Bind to a socket address, returning a <code>Future</code> that can be …","Bind to a socket address, returning a <code>Future</code> that can be …","Bind to a stream, returning a <code>Future</code> that can be executed …","","Create a server with graceful shutdown signal.","Returns a reference to the associated HTTP body.","","Returns a mutable reference to the associated HTTP body.","","","","","","","","","","","","","","","","","","","","","","","","","","","Specify the in-memory contents of the certificate.","Specify the file path to read the certificate.","Specify the in-memory contents of the trust anchor for …","Specify the file path to read the trust anchor for …","Specify the in-memory contents of the trust anchor for …","Specify the file path to read the trust anchor for …","","","","","","","","","","","","Returns a reference to the associated extensions.","Returns a mutable reference to the associated extensions.","","","","","","","","","","","","","","","","","","","","","","Create a request from an hyper::Request.","Create a request from an hyper::Request.","","","","","","","","","Get header with supplied name and try to parse to a ‘T…","","","","","","","","","Returns a reference to the associated header field map.","","Returns a mutable reference to the associated header …","","","","","","","","","","","","","","Specify the in-memory contents of the private key.","Specify the file path to read the private key.","Returns a reference to the associated HTTP method.","Returns a mutable reference to the associated HTTP method.","","","Creates a new blank <code>Request</code>","Creates a new blank <code>Response</code>.","","","","Specify the DER-encoded OCSP response.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Take body form the request, and set the body to None in …","","","Configure a server to use TLS.","","","","Bind to a socket address, returning a <code>Future</code> that can be …","Bind to a socket address, returning a <code>Future</code> that can be …","Run this <code>Server</code> forever on the current thread with a …","Setup this <code>Server</code> with a specific stream of incoming …","Create a server with graceful shutdown signal.","Create a server with graceful shutdown signal.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the associated URI.","Returns a mutable reference to the associated URI.","Returns the associated version.","","Returns a mutable reference to the associated version.","","","","","","","","","","","","","","","","","","Iterator of a chain of source errors.","Provides the <code>context</code> method for <code>Result</code>.","The <code>Error</code> type, a wrapper around a dynamic error type.","<code>Result<T, Error></code>","Construct an ad-hoc error from a string or existing non-…","","","Get the backtrace for this Error.","Return early with an error.","","","","","An iterator of the chain of source errors contained by …","","","Wrap the error value with additional context.","Wrap the error value with additional context.","","","","Attempt to downcast the error object to a concrete type.","Downcast this error object by mutable reference.","Downcast this error object by reference.","","Return early with an error if a condition is not …","","","Construct an ad-hoc error from a string or existing non-…","","","","","","","","Returns true if <code>E</code> is the type held by this error object.","","Create a new error object from a printable error message.","Create a new error object from any error type.","","","","The lowest level cause of this error — this error’s …","","","","","","","","","","","","Wrap the error value with additional context that is …","","","","A file with an associated name.","","","","","","","","","","","","","Disable <code>Content-Disposition</code> header.","Returns reference to the underlying <code>File</code> object.","","","","","","","","Attempts to open a file in read-only mode.","Retrieve the path of this file.","","Set the Content-Disposition for serving this file. This …","Set content encoding for serving this file","Set the MIME Content-Type for serving this file. By …","","","","","","","","","","","Specifies whether to use ETag or not.","Specifies whether to use Last-Modified or not.","","","","","","","","","","","","Values yielded by the <code>Body</code>.","","","","","","","","The error type this <code>Body</code> might generate.","","A set of HTTP headers","Represents an HTTP header field value.","","Trait representing a streaming body of a Request or …","","HTTP Range header representation.","","","","","The Request Method (VERB)","A parsed mime or media type.","","","","","","","","","","","Represents an HTTP request.","Represents an HTTP response","","An HTTP status code (<code>status-code</code> in RFC 7230 et al.).","","","Get the slice representing the data of this chunk.","Client- and server-side abstractions for HTTP …","","","","","Turn this body into a boxed trait object.","","","","","","","Returns future that resolves to next data chunk, if any.","","","","","","Return a <code>&str</code> of the Mime’s “essence”.","","","","","","","","","Look up a parameter by name.","","","HTTP header types","","","Equivalent to <code>self.as_slice().to_owned()</code>","Equivalent to <code>self.as_slice().is_empty()</code>","Returns <code>true</code> when the end of stream has been reached.","Equivalent to <code>self.as_slice().len()</code>","","Maps this body’s data value to a different value.","Maps this body’s error value to a different value.","The HTTP request method","","","Returns an iterator over the parameters.","Parses Range HTTP header string as per RFC 2616.","","Attempt to pull out the next data buffer of this stream.","Poll for an optional <strong>single</strong> <code>HeaderMap</code> of trailers.","","","","Returns the bounds on the remaining length of the stream.","Slice the bytes in <code>self</code> according to the given range.","Split the chunk at <code>idx</code>, returning …","","Get the subtype of this <code>Mime</code>.","Get an optional +suffix for this <code>Mime</code>.","","","","","Returns future that resolves to trailers, if any.","","","","","Get the top level media type for this <code>Mime</code>.","","","URI component of request and response lines","HTTP version","","","","Get the slice representing the data of this chunk.","Equivalent to <code>self.as_slice().to_owned()</code>","Equivalent to <code>self.as_slice().is_empty()</code>","Equivalent to <code>self.as_slice().len()</code>","Slice the bytes in <code>self</code> according to the given range.","Split the chunk at <code>idx</code>, returning …","Representation of an HTTP cookie.","Structure that follows the builder pattern for building …","A collection of cookies that tracks its modifications.","Iterator over the changes to a cookie jar.","The cookie’s name was empty.","Wrapper around <code>Cookie</code> whose <code>Display</code> implementation …","Iterator over all of the cookies in a jar.","The “Lax” <code>SameSite</code> attribute.","The cookie did not contain a name/value pair.","The “None” <code>SameSite</code> attribute.","Enum corresponding to a parsing error.","The <code>SameSite</code> cookie attribute.","The “Strict” <code>SameSite</code> attribute.","Decoding the cookie’s name or value resulted in invalid …","Adds <code>cookie</code> to this jar. If a cookie with the same name …","Adds an “original” <code>cookie</code> to this jar. If an original …","Returns a description of this error as a string","","","","","","","","","","","","","","","","","Creates a new <code>CookieBuilder</code> instance from the given key …","","","","","","","","","","","","Returns an iterator over cookies that represent the …","","Sets the <code>domain</code> field in the cookie being built.","Returns the <code>Domain</code> of the cookie if one was specified.","Returns the <code>Domain</code> of <code>self</code> as a string slice of the raw …","Wraps <code>self</code> in an <code>EncodedCookie</code>: a cost-free wrapper …","","","","","","Sets the <code>expires</code> field in the cookie being built.","Returns the <code>Expires</code> time of the cookie if one was …","Finishes building and returns the built <code>Cookie</code>.","","","","","","","","","Formats the cookie <code>self</code> as a <code>Set-Cookie</code> header value.","Removes <code>cookie</code> from this jar completely. This method …","","","","","","","","","","","Returns a reference to the <code>Cookie</code> inside this jar with …","","Sets the <code>http_only</code> field in the cookie being built.","Returns whether this cookie was marked <code>HttpOnly</code> or not. …","","","","","","","","","","","Converts <code>self</code> into a <code>Cookie</code> with a static lifetime with …","Returns <code>true</code> if <code>self</code> is <code>SameSite::Lax</code> and <code>false</code> otherwise.","Returns <code>true</code> if <code>self</code> is <code>SameSite::None</code> and <code>false</code> …","Returns <code>true</code> if <code>self</code> is <code>SameSite::Strict</code> and <code>false</code> …","Returns an iterator over all of the cookies present in …","Makes <code>self</code> a “permanent” cookie by extending its …","Sets the <code>max_age</code> field in the cookie being built.","Returns the specified max-age of the cookie if one was …","Returns the name of <code>self</code>.","Returns the name of <code>self</code> as a string slice of the raw …","Returns the name and value of <code>self</code> as a tuple of …","Creates a new <code>Cookie</code> with the given name and an empty …","","Creates a new <code>CookieBuilder</code> instance from the given name …","Creates an empty cookie jar.","Creates a new <code>Cookie</code> with the given name and value.","","","Parses a <code>Cookie</code> from the given HTTP cookie header value …","Parses a <code>Cookie</code> from the given HTTP cookie header value …","Sets the <code>path</code> field in the cookie being built.","Returns the <code>Path</code> of the cookie if one was specified.","Returns the <code>Path</code> of <code>self</code> as a string slice of the raw …","Makes the cookie being built ‘permanent’ by extending …","Removes <code>cookie</code> from this jar. If an <em>original</em> cookie with …","Removes all delta cookies, i.e. all cookies not added via …","Sets the <code>same_site</code> field in the cookie being built.","Returns the <code>SameSite</code> attribute of this cookie if one was …","Sets the <code>secure</code> field in the cookie being built.","Returns whether this cookie was marked <code>Secure</code> or not. …","Sets the <code>domain</code> of <code>self</code> to <code>domain</code>.","Sets the expires field of <code>self</code> to <code>time</code>. If <code>time</code> is <code>None</code>, …","Sets the value of <code>http_only</code> in <code>self</code> to <code>value</code>.  If <code>value</code> is…","Sets the value of <code>max_age</code> in <code>self</code> to <code>value</code>. If <code>value</code> is …","Sets the name of <code>self</code> to <code>name</code>.","Sets the <code>path</code> of <code>self</code> to <code>path</code>.","Sets the value of <code>same_site</code> in <code>self</code> to <code>value</code>. If <code>value</code> is …","Sets the value of <code>secure</code> in <code>self</code> to <code>value</code>. If <code>value</code> is …","Sets the value of <code>self</code> to <code>value</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unsets the <code>domain</code> of <code>self</code>.","Unsets the <code>path</code> of <code>self</code>.","Returns the value of <code>self</code>.","Returns the value of <code>self</code> as a string slice of the raw …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A file that is to be inserted into a <code>multipart/*</code> or …","The extracted text fields and uploaded files from a …","","","","","Mime content-type specified in the header","Create a new temporary FilePart (when created this way, …","","If you do not want the file on disk to be deleted when …","","Name-value pairs for plain text fields. Technically, …","","Name-value pairs for temporary files. Technically, these …","","","","The headers of the part","","","","","A temporary file containing the file content","Parse MIME <code>multipart/form-data</code> information from a stream …","Optionally, the size of the file.  This is filled when …","","","","","","","","","Advertises which content types the client is able to …","Advertises which character set the client is able to …","Advertises which content encoding the client is able to …","Advertises which languages the client is able to …","Marker used by the server to advertise partial request …","Preflight response indicating if the response to the …","Preflight response indicating permitted HTTP headers.","Preflight header response indicating permitted access …","Indicates whether the response can be shared with …","Indicates which headers can be exposed as part of the …","Indicates how long the results of a preflight request can …","Informs the server which HTTP headers will be used when …","Informs the server know which HTTP method will be used …","Indicates the time in seconds the object has been in a …","Lists the set of methods support by a resource.","Advertises the availability of alternate services to …","Contains the credentials to authenticate a user agent …","A marker trait used to identify values that can be used …","Specifies directives for caching mechanisms in both …","Controls whether or not the network connection stays open …","Indicates if the content is expected to be displayed …","Used to compress the media-type.","Used to describe the languages intended for the audience.","Indicates the size fo the entity-body.","Indicates an alternate location for the returned data.","Indicates where in a full body message a partial message …","Allows controlling resources the user agent is allowed to …","Allows experimenting with policies by monitoring their …","Used to indicate the media type of the resource.","Contains stored HTTP cookies previously sent by the …","Contains the date and time at which the message was …","Indicates the client’s tracking preference.","A drain iterator for <code>HeaderMap</code>.","Identifier for a specific version of a resource.","Indicates expectations that need to be fulfilled by the …","Contains the date/time after which the response is …","A view into a single location in a <code>HeaderMap</code>, which may …","Contains information from the client-facing side of proxy …","Contains an Internet email address for a human user who …","A view to all values stored in a single entry.","Specifies the domain name of the server and (optionally) …","A set of HTTP headers","Represents an HTTP header field name","Represents an HTTP header field value.","Makes a request conditional based on the E-Tag.","Makes a request conditional based on the modification …","Makes a request conditional based on the E-Tag.","Makes a request conditional based on range.","Makes the request conditional based on the last …","A marker trait used to identify values that can be used …","An owning iterator over the entries of a <code>HeaderMap</code>.","A possible error when converting a <code>HeaderName</code> from …","A possible error when converting a <code>HeaderValue</code> from a …","<code>HeaderMap</code> entry iterator.","<code>HeaderMap</code> mutable entry iterator","An iterator over <code>HeaderMap</code> keys.","Content-Types that are acceptable for the response.","Allows the server to point an interested client to …","Indicates the URL to redirect a page to.","Indicates the max number of intermediaries the request …","Indicates where a fetch originates from.","An occupied entry","A view into a single occupied location in a <code>HeaderMap</code>.","HTTP/1.0 header usually used for backwards compatibility.","Defines the authentication method that should be used to …","Contains the credentials to authenticate a user agent to …","Associates a specific cryptographic public key with a …","Sends reports of pinning violation to the report-uri …","Indicates the part of a document that the server should …","Contains the address of the previous web page from which …","Governs which referrer information should be included …","Informs the web browser that the current page or frame …","The Retry-After response HTTP header indicates how long …","The |Sec-WebSocket-Accept| header field is used in the …","The |Sec-WebSocket-Extensions| header field is used in …","The |Sec-WebSocket-Key| header field is used in the …","The |Sec-WebSocket-Protocol| header field is used in the …","The |Sec-WebSocket-Version| header field is used in the …","Contains information about the software used by the …","Used to send cookies from the server to the user agent.","Tells the client to communicate with HTTPS instead of …","Informs the server of transfer encodings willing to be …","Allows the sender to include additional fields at the end …","Specifies the form of encoding used to safely transfer …","A possible error when converting a <code>HeaderValue</code> to a …","Used as part of the exchange to upgrade the protocol.","Sends a signal to the server expressing the client’s …","Contains a string that allows identifying the requesting …","Determines how to match future requests with cached …","Added by proxies to track routing.","A vacant entry","A view into a single empty location in a <code>HeaderMap</code>.","An drain iterator of all values associated with a single …","An iterator of all values associated with a single header …","A mutable iterator of all values associated with a single …","<code>HeaderMap</code> value iterator.","<code>HeaderMap</code> mutable value iterator","General HTTP header contains information about possible …","Defines the authentication method that should be used to …","Marker used by the server to indicate that the MIME types …","Controls DNS prefetching.","Indicates whether or not a browser should be allowed to …","Stop pages from loading when an XSS attack is detected.","Insert the value into the entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference to the first value in the entry.","Get a mutable reference to the first value in the entry.","Insert the value into the entry.","Sets the value of the entry.","Insert the value into the entry.","Sets the value of the entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Take ownership of the key","Converts the <code>OccupiedEntry</code> into a mutable reference to …","Returns an iterator visiting all values associated with …","Returns an iterator visiting all values associated with …","Returns an iterator mutably visiting all values …","Returns a reference to the entry’s key","Returns a reference to the entry’s key","Returns a reference to the entry’s key.","","","","","","","","","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result …","Remove the entry from the map.","Remove the entry from the map.","Remove the entry from the map.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Access-Control-Allow-Origin: *</code>","<code>Accept-Ranges</code> header, defined in RFC7233","<code>Access-Control-Allow-Credentials</code> header, part of CORS","<code>Access-Control-Allow-Headers</code> header, part of CORS","<code>Access-Control-Allow-Methods</code> header, part of CORS","The <code>Access-Control-Allow-Origin</code> response header, part of …","<code>Access-Control-Expose-Headers</code> header, part of CORS","<code>Access-Control-Max-Age</code> header, part of CORS","<code>Access-Control-Request-Headers</code> header, part of CORS","<code>Access-Control-Request-Method</code> header, part of CORS","<code>Allow</code> header, defined in RFC7231","<code>Authorization</code> header, defined in RFC7235","“100-continue”","<code>Cache-Control</code> header, defined in RFC7234","<code>Connection</code> header, defined in RFC7230","A <code>Content-Disposition</code> header, (re)defined in RFC6266.","<code>Content-Encoding</code> header, defined in RFC7231","<code>Content-Length</code> header, defined in RFC7230","<code>Content-Location</code> header, defined in RFC7231","Content-Range, described in RFC7233","<code>Content-Type</code> header, defined in RFC7231","<code>Cookie</code> header, defined in RFC6265","<code>Date</code> header, defined in RFC7231","<code>ETag</code> header, defined in RFC7232","Errors trying to decode a header.","The <code>Expect</code> header.","<code>Expires</code> header, defined in RFC7234","A trait for any object that will represent a header field …","A set of HTTP headers","An extension trait adding “typed” methods to …","Represents an HTTP header field name","Represents an HTTP header field value.","The <code>Host</code> header.","<code>If-Match</code> header, defined in RFC7232","<code>If-Modified-Since</code> header, defined in RFC7232","<code>If-None-Match</code> header, defined in RFC7232","<code>If-Range</code> header, defined in RFC7233","<code>If-Unmodified-Since</code> header, defined in RFC7232","<code>Last-Modified</code> header, defined in RFC7232","<code>Location</code> header, defined in RFC7231","<code>no-referrer</code>","<code>no-referrer-when-downgrade</code>","<code>Access-Control-Allow-Origin: null</code>","The literal <code>null</code> Origin header.","<code>origin</code>","<code>origin-when-cross-origin</code>","The <code>Origin</code> header.","The <code>Pragma</code> header defined by HTTP/1.0.","<code>Proxy-Authorization</code> header, defined in RFC7235","<code>Range</code> header, defined in RFC7233","<code>Referer</code> header, defined in RFC7231","<code>Referrer-Policy</code> header, part of Referrer Policy","The <code>Retry-After</code> header.","<code>same-origin</code>","<code>strict-origin</code>","<code>strict-origin-when-cross-origin</code>","The <code>Sec-Websocket-Accept</code> header.","The <code>Sec-Websocket-Key</code> header.","The <code>Sec-Websocket-Version</code> header.","<code>Server</code> header, defined in RFC7231","<code>Set-Cookie</code> header, defined RFC6265","<code>StrictTransportSecurity</code> header, defined in RFC6797","<code>TE</code> header, defined in RFC7230","<code>Transfer-Encoding</code> header, defined in RFC7230","<code>unsafe-url</code>","<code>Upgrade</code> header, defined in RFC7230","<code>User-Agent</code> header, defined in RFC7231","<code>Sec-Websocket-Version: 13</code>","<code>Vary</code> header, defined in RFC7231","Create a new <code>If-Match: *</code> header.","Create a new <code>If-None-Match: *</code> header.","Create a new <code>Very: *</code> header.","","","Returns a <code>str</code> representation of the header.","View this <code>Server</code> as a <code>&str</code>.","View this <code>UserAgent</code> as a <code>&str</code>.","Authorization header and types.","Create a <code>Basic</code> authorization header.","Try to create a <code>Bearer</code> authorization header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A constructor to easily create the common …","Construct a new <code>Content-Range: bytes ..</code> header.","Creates a <code>Range</code> header from bounds.","Get the bytes complete length if available.","Get the byte range if satisified.","Constructor for the most common Transfer-Encoding, <code>chunked</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A constructor to easily create a <code>Connection: close</code> header.","","","","","","","","","Check if this header contains a given “connection option…","Check if this header contains a given “coding”.","Create an <code>IfRange</code> header with a date value.","Create an <code>RetryAfter</code> header with a date value.","Decode this type from an iterator of <code>HeaderValue</code>s.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an <code>RetryAfter</code> header with a date value.","Encode this type to a <code>HeaderMap</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Performs a case-insensitive comparison of the string …","","Performs a case-insensitive comparison of the string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an <code>IfRange</code> header with an entity tag.","Create an STS header that excludes subdomains","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A constructor  to easily create a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a slice of bytes to an HTTP header name.","","","","","","","Converts a slice of bytes to an HTTP header name.","Converts a static string to a HTTP header name.","Create a <code>Referer</code> with a static string.","Construct a <code>Server</code> from a static string.","Create a <code>UserAgent</code> from a static string.","","","","","","Lookup a value for a cookie name.","A constructor to easily create a <code>Content-Encoding: gzip</code> …","","","","","","","","","","","","","","","","","","Get the hostname, such as example.domain.","Get the “hostname” part of this origin.","A constructor  to easily create a <code>Content-Type: text/html</code> …","Get whether this should include subdomains.","Create an STS header that includes subdomains","Construct a <code>Content-Disposition: inline</code> header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an ‘invalid’ Error.","Returns whether this is <code>If-Match: *</code>, matching any entity …","Check if this includes <code>*</code>.","Check if the disposition-type is <code>attachment</code>.","Returns whether this ends with the <code>chunked</code> encoding.","Check if the disposition-type is <code>form-data</code>.","Check if the disposition-type is <code>inline</code>.","Check if the supplied time means the resource has been …","Checks if the resource has been modified, or if the range …","Return whether this pragma is <code>no-cache</code>.","Checks if <code>Origin</code> is <code>null</code>.","Returns an iterator over <code>HeaderName</code>s contained within.","Returns an iterator over <code>Method</code>s contained within.","Returns an iterator over <code>HeaderName</code>s contained within.","Returns an iterator over <code>HeaderName</code>s contained within.","Returns an iterator over <code>Method</code>s contained within.","Iterator the key-value pairs of this <code>Cookie</code> header.","Iterate the range sets as a tuple of bounds.","Iterate the header names of this <code>Vary</code>.","A constructor  to easily create a <code>Content-Type: image/jpeg</code>…","A constructor  to easily create a …","A constructor to easily create a <code>Connection: keep-alive</code> …","Get the number of key-value pairs this <code>Cookie</code> contains.","Get the value of the <code>max-age</code> directive if set.","Get the max-age.","Get the value of the <code>max-stale</code> directive if set.","Get the value of the <code>min-fresh</code> directive if set.","The name of this header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a new empty <code>CacheControl</code> header.","Check if the <code>no-cache</code> directive is set.","Construct the literal <code>no-cache</code> Pragma header.","Check if the <code>no-store</code> directive is set.","Check if the <code>no-transform</code> directive is set.","A constructor  to easily create a …","Check if the <code>only-if-cached</code> directive is set.","Returns the origin if there’s one specified.","","","","","","","","","","A constructor  to easily create a <code>Content-Type: image/png</code> …","Get the optional port number.","Get the “port” part of this origin.","Checks whether the <code>ETag</code> strongly matches.","Checks whether the ETag passes this precondition.","Check if the supplied time passes the precondtion.","Check if the <code>private</code> directive is set.","Check if the <code>public</code> directive is set.","Get the value of the <code>s-maxage</code> directive if set.","Get the “scheme” part of this origin.","A constructor  to easily create a <code>Content-Type: text/plain</code>…","A constructor  to easily create a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>TE: trailers</code> header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to build a <code>Origin</code> from three parts, the scheme, the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to find the header by name, and then decode it into …","Inserts the typed <code>Header</code> into this <code>HeaderMap</code>.","Tries to find the header by name, and then decode it into …","Create a new <code>ContentRange</code> stating the range could not be …","A constructor to easily create a <code>Connection: Upgrade</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs an <code>Upgrade: websocket</code> header.","Set the <code>max-age</code> directive.","Set the <code>max-stale</code> directive.","Set the <code>min-fresh</code> directive.","Set the <code>no-cache</code> directive.","Set the <code>no-store</code> directive.","Set the <code>no-transform</code> directive.","Set the <code>only-if-cached</code> directive.","Set the <code>private</code> directive.","Set the <code>public</code> directive.","Set the <code>s-maxage</code> directive.","A constructor  to easily create a <code>Content-Type: text/xml</code> …","","<code>Authorization</code> header, defined in RFC7235","Credential holder for Basic Authentication","Token holder for Bearer Authentication, most often seen …","Credentials to be used in the <code>Authorization</code> header.","The scheme identify the format of these credentials.","","","","","","","","","Try to decode the credentials from the <code>HeaderValue</code>.","","","Encode the credentials to a <code>HeaderValue</code>.","","","","","","","","","","","","","View the decoded password.","","","View the token part as a <code>&str</code>.","","","","","","","View the decoded username.","","","A possible error value when converting <code>Method</code> from bytes.","The Request Method (VERB)","","","","","","","","","","","","A single field in a multipart stream.","The data of a field in a multipart stream, as a stream of …","The headers of a <code>Field</code>, including the name, filename, and …","The server-side implementation of <code>multipart/form-data</code> …","A <code>Future</code> potentially yielding the next field in the …","A <code>Future</code> that yields the body of a field read to a <code>String</code>.","","","","","","","","","","","","","The character set of this field, if provided.","","","The <code>Content-Type</code> of this field, as provided by the …","The data of this field in the request, represented as a …","","Any additional headers, standard or otherwise, for this …","The name of the file as it was on the client. If not …","","","","","","","","","The headers of this field, including the name, filename, …","","","","","","","","","<code>true</code> if <code>content_type</code> is <code>None</code> or <code>text/*</code> (such as <code>text/plain</code>…","The name of the field as provided by the client.","","Same as <code>.next_field()</code> but with a receiver of …","","","Poll for the next chunk of the current field.","Poll for the headers of the next field, returning the …","Poll for the next boundary, returning <code>true</code> if a field …","","Return a <code>Future</code> which yields the result of reading this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a new <code>Multipart</code> with the given body reader and …","HTTP Range header representation.","","","A stream of <code>Bytes</code>, used when receiving bodies.","","Component parts of an HTTP <code>Request</code>","Represents an HTTP request.","The request’s extensions","The request’s headers","The request’s method","The request’s URI","The request’s version","","","","Component parts of an HTTP <code>Response</code>","Represents an HTTP response","","","","The response’s extensions","","","The response’s headers","","","The response’s status","","","","","The response’s version","","Represents the authority component of a URI.","A builder for <code>Uri</code>s.","HTTP protocol scheme","HTTP protocol over TLS.","An error resulting from a failed attempt to construct a …","An error resulting from a failed attempt to construct a …","The various parts of a URI.","Represents the path component of a URI","The port component of a URI.","Represents the scheme component of a URI","The URI component of a request.","","","","Returns the port number as a <code>str</code>.","Return a str representation of the authority","Returns the path and query as a string component.","Return a str representation of the scheme","Returns the port number as a <code>u16</code>.","Set the <code>Authority</code> for this URI.","The authority component of a URI","","","","","","","","","","","","","","","","","Consumes this builder, and tries to construct a valid <code>Uri</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to convert a <code>Bytes</code> buffer to a <code>Authority</code>.","Attempt to convert a <code>Bytes</code> buffer to a <code>PathAndQuery</code>.","Attempt to convert an <code>Authority</code> from a static string.","Convert a <code>PathAndQuery</code> from a static string.","","","","","","Get the host of this <code>Authority</code>.","","","","","","","","","Creates a new default instance of <code>Builder</code> to construct a …","","","","","","","","","Returns the path component","Set the <code>PathAndQuery</code> for this URI.","The origin-form component of a URI","Get the port part of this <code>Authority</code>.","Get the port of this <code>Authority</code> as a <code>u16</code>.","Returns the query string component","Set the <code>Scheme</code> for this URI.","The scheme component of a URI","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a version of the HTTP spec.","202 Accepted [RFC7231, Section 6.3.3]","208 Already Reported [RFC5842]","502 Bad Gateway [RFC7231, Section 6.6.3]","400 Bad Request [RFC7231, Section 6.5.1]","A stream of <code>Bytes</code>, used when receiving bodies.","409 Conflict [RFC7231, Section 6.5.8]","CONNECT","100 Continue [RFC7231, Section 6.2.1]","201 Created [RFC7231, Section 6.3.2]","A Client to make outgoing HTTP requests.","DELETE","417 Expectation Failed [RFC7231, Section 6.5.14]","Represents errors that can occur handling HTTP streams.","424 Failed Dependency [RFC4918]","403 Forbidden [RFC7231, Section 6.5.3]","302 Found [RFC7231, Section 6.4.3]","504 Gateway Timeout [RFC7231, Section 6.6.5]","GET","410 Gone [RFC7231, Section 6.5.9]","HEAD","<code>HTTP/0.9</code>","<code>HTTP/1.0</code>","<code>HTTP/1.1</code>","<code>HTTP/2.0</code>","<code>HTTP/3.0</code>","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]","A set of HTTP headers","418 I’m a teapot [curiously not registered by IANA but …","226 IM Used [RFC3229]","507 Insufficient Storage [RFC4918]","500 Internal Server Error [RFC7231, Section 6.6.1]","411 Length Required [RFC7231, Section 6.5.10]","423 Locked [RFC4918]","508 Loop Detected [RFC5842]","405 Method Not Allowed [RFC7231, Section 6.5.5]","421 Misdirected Request RFC7540, Section 9.1.2","301 Moved Permanently [RFC7231, Section 6.4.2]","300 Multiple Choices [RFC7231, Section 6.4.1]","207 Multi-Status [RFC4918]","The Request Method (VERB)","511 Network Authentication Required [RFC6585]","203 Non-Authoritative Information [RFC7231, Section 6.3.4]","406 Not Acceptable [RFC7231, Section 6.5.6]","510 Not Extended [RFC2774]","404 Not Found [RFC7231, Section 6.5.4]","501 Not Implemented [RFC7231, Section 6.6.2]","304 Not Modified [RFC7232, Section 4.1]","204 No Content [RFC7231, Section 6.3.5]","200 OK [RFC7231, Section 6.3.1]","OPTIONS","206 Partial Content [RFC7233, Section 4.1]","PATCH","413 Payload Too Large [RFC7231, Section 6.5.11]","402 Payment Required [RFC7231, Section 6.5.2]","308 Permanent Redirect [RFC7238]","POST","412 Precondition Failed [RFC7232, Section 4.2]","428 Precondition Required [RFC6585]","102 Processing [RFC2518]","407 Proxy Authentication Required [RFC7235, Section 3.2]","PUT","416 Range Not Satisfiable [RFC7233, Section 4.4]","431 Request Header Fields Too Large [RFC6585]","408 Request Timeout [RFC7231, Section 6.5.7]","205 Reset Content [RFC7231, Section 6.3.6]","Represents an HTTP request.","Represents an HTTP response","Result type often returned from methods that can have …","303 See Other [RFC7231, Section 6.4.4]","503 Service Unavailable [RFC7231, Section 6.6.4]","101 Switching Protocols [RFC7231, Section 6.2.2]","A listening HTTP server that accepts connections in both …","An HTTP status code (<code>status-code</code> in RFC 7230 et al.).","307 Temporary Redirect [RFC7231, Section 6.4.7]","429 Too Many Requests [RFC6585]","TRACE","401 Unauthorized [RFC7235, Section 3.1]","451 Unavailable For Legal Reasons [RFC7725]","422 Unprocessable Entity [RFC4918]","415 Unsupported Media Type [RFC7231, Section 6.5.13]","426 Upgrade Required [RFC7231, Section 6.5.15]","414 URI Too Long [RFC7231, Section 6.5.12]","305 Use Proxy [RFC7231, Section 6.4.5]","The URI component of a request.","506 Variant Also Negotiates [RFC2295]","Represents a version of the HTTP spec.","Inserts a key-value pair into the map.","","Return a &str representation of the HTTP method","Returns a &str representation of the <code>StatusCode</code>","Returns the <code>u16</code> corresponding to this <code>StatusCode</code>.","Get the authority of this <code>Uri</code>.","Binds to the provided address, and returns a <code>Builder</code>.","Streaming bodies for Requests and Responses","Returns a reference to the associated HTTP body.","Returns a reference to the associated HTTP body.","Returns a mutable reference to the associated HTTP body.","Returns a mutable reference to the associated HTTP body.","","","","","","","","","","","","","","","","","","","","","","","Creates a new builder-style object to manufacture a …","Creates a new builder-style object to manufacture a …","Creates a new builder-style object to manufacture a <code>Uri</code>.","Create a builder to configure a new <code>Client</code>.","Starts a <code>Builder</code> with the provided incoming stream.","","Get the standardised <code>reason-phrase</code> for this status code.","Returns the number of headers the map can hold without …","Create a <code>Body</code> stream with an associated sender half.","Clears the map, removing all key-value pairs. Keeps the …","HTTP Client","","","","","","","","","","","","","","","Creates a new <code>Builder</code> initialized with a CONNECT method …","Returns true if the map contains a value for the …","","","","","","","","Returns <code>Body::empty()</code>.","","Creates a new <code>Builder</code> initialized with a DELETE method …","Clears the map, returning all entries as an iterator.","Create an empty <code>Body</code> stream.","Gets the given key’s corresponding entry in the map for …","","","","","","","","","","","","","","","","","","Extend a <code>HeaderMap</code> with the contents of another <code>HeaderMap</code>.","Returns a reference to the associated extensions.","Returns a reference to the associated extensions.","Returns a mutable reference to the associated extensions.","Returns a mutable reference to the associated extensions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a slice of bytes to an HTTP method.","Converts a &[u8] to a status code","","Attempt to convert a <code>Bytes</code> buffer to a <code>Uri</code>.","Creates a new <code>Request</code> with the given components parts and …","Creates a new <code>Response</code> with the given head and body","Attempt to convert a <code>Uri</code> from <code>Parts</code>","Convert a <code>Uri</code> from a static string.","","","","Create a new instance from a <code>std::net::TcpListener</code> …","Converts a u16 to a status code.","Creates a new <code>Builder</code> initialized with a GET method and …","Returns a reference to the value associated with the key.","Send a <code>GET</code> request to the supplied <code>Uri</code>.","Returns a view of all values associated with a key.","Returns a mutable reference to the value associated with …","","","","","Creates a new <code>Builder</code> initialized with a HEAD method and …","Returns a reference to the associated header field map.","Returns a reference to the associated header field map.","Returns a mutable reference to the associated header …","Returns a mutable reference to the associated header …","Get the host of this <code>Uri</code>.","Panics","Inserts a key-value pair into the map.","","","","","","","","","","","","Consumes the request, returning just the body.","Consumes the response, returning just the body.","Consumes the error, returning its cause.","","","","Creates a consuming iterator, that is, one that moves …","Consumes the request returning the head and body parts.","Consumes the response returning the head and body parts.","Convert a <code>Uri</code> into <code>Parts</code>.","Returns true if the body write was aborted.","Returns true if this was about a <code>Request</code> that was …","Check if status is within 400-499.","Returns true if a sender’s channel is closed.","Returns true if this was an error from <code>Connect</code>.","Returns true if the map contains no elements.","","","","Whether a method is considered “idempotent”, meaning …","Returns true if the connection closed before a message …","Check if status is within 100-199.","Returns true if this was an HTTP parse error.","Check if status is within 300-399.","Whether a method is considered “safe”, meaning the …","Check if status is within 500-599.","Check if status is within 200-299.","Returns true if the error was caused by a timeout.","Returns true if this error was caused by user code.","An iterator visiting all key-value pairs.","An iterator visiting all key-value pairs, with mutable …","An iterator visiting all keys.","Returns the number of keys stored in the map.","Returns the number of headers stored in the map.","Returns the local address that this server is bound to.","Consumes the request returning a new request with body …","Consumes the response returning a new response with body …","Returns a reference to the associated HTTP method.","Returns a mutable reference to the associated HTTP method.","","","","Creates a new blank <code>Request</code> with the body","Creates a new blank <code>Response</code> with the body","Create an empty <code>HeaderMap</code>.","Create a new Client with the default config.","Creates a new <code>Builder</code> initialized with an OPTIONS method …","","","Creates a new <code>Builder</code> initialized with a PATCH method and …","Get the path of this <code>Uri</code>.","Returns the path & query components of the Uri","","","","","","","","","","Get the port part of this <code>Uri</code>.","Get the port of this <code>Uri</code> as a <code>u16</code>.","Creates a new <code>Builder</code> initialized with a POST method and …","Creates a new <code>Builder</code> initialized with a PUT method and …","Get the query string of this <code>Uri</code>, starting after the <code>?</code>.","Removes a key from the map, returning the value …","Send a constructed <code>Request</code> using this <code>Client</code>.","Reserves capacity for at least <code>additional</code> more headers to …","Runtime components","Get the scheme of this <code>Uri</code>.","Get the scheme of this <code>Uri</code> as a <code>&str</code>.","HTTP Server","Asynchronous Services","","","","","Returns the <code>StatusCode</code>.","Returns a mutable reference to the associated <code>StatusCode</code>.","","","","","","","","","","","Creates a new <code>Builder</code> initialized with a TRACE method and …","Tries to bind to the provided address, and returns a …","Gets the given key’s corresponding entry in the map for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","HTTP Upgrades","Returns a reference to the associated URI.","Returns a mutable reference to the associated URI.","An iterator visiting all values.","An iterator visiting all values mutably.","Returns the associated version.","Returns a reference to the associated version.","Returns a mutable reference to the associated version.","Returns a mutable reference to the associated version.","","","","","","","","","","","","Create an empty <code>HeaderMap</code> with the specified capacity.","Prepares a server to handle graceful shutdown when the …","Wrap a futures <code>Stream</code> in a box inside <code>Body</code>.","A stream of <code>Bytes</code>, used when receiving bodies.","Read bytes from a buffer.","A cheaply cloneable and sliceable chunk of contiguous …","Values yielded by the <code>Body</code>.","The error type this <code>Body</code> might generate.","Trait representing a streaming body of a Request or …","A sender half created through <code>Body::channel()</code>.","A <code>Body</code> size hint","Aborts the body in an abnormal fashion.","Advance the internal cursor of the Buf","","Aggregate the data buffers from a body asynchronously.","","","","","","","","","","Turn this body into a boxed trait object.","Creates an adaptor which will chain this buffer with …","Returns a slice starting at the current position and of …","","Fills <code>dst</code> with potentially multiple slices starting at …","Clears the buffer, removing all data.","","","","","","Creates <code>Bytes</code> instance from slice, by copying it.","Consumes <code>len</code> bytes inside self and returns new instance …","","Copies bytes from <code>self</code> into <code>dst</code>.","Returns future that resolves to next data chunk, if any.","","","","","","","","","","","","","Returns the exact size of data that will be yielded <strong>if</strong> the…","","","","","","","","","","","","","","","","","Creates a new <code>Bytes</code> from a static slice.","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets a signed 128 bit integer from <code>self</code> in big-endian …","Gets a signed 128 bit integer from <code>self</code> in little-endian …","Gets a signed 16 bit integer from <code>self</code> in big-endian byte …","Gets a signed 16 bit integer from <code>self</code> in little-endian …","Gets a signed 32 bit integer from <code>self</code> in big-endian byte …","Gets a signed 32 bit integer from <code>self</code> in little-endian …","Gets a signed 64 bit integer from <code>self</code> in big-endian byte …","Gets a signed 64 bit integer from <code>self</code> in little-endian …","Gets a signed 8 bit integer from <code>self</code>.","Gets a signed n-byte integer from <code>self</code> in big-endian byte …","Gets a signed n-byte integer from <code>self</code> in little-endian …","Gets an unsigned 128 bit integer from <code>self</code> in big-endian …","Gets an unsigned 128 bit integer from <code>self</code> in …","Gets an unsigned 16 bit integer from <code>self</code> in big-endian …","Gets an unsigned 16 bit integer from <code>self</code> in …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 64 bit integer from <code>self</code> in big-endian …","Gets an unsigned 64 bit integer from <code>self</code> in …","Gets an unsigned 8 bit integer from <code>self</code>.","Gets an unsigned n-byte integer from <code>self</code> in big-endian …","Gets an unsigned n-byte integer from <code>self</code> in …","Returns true if there are any more bytes to consume","","","","","","Returns true if the <code>Bytes</code> has a length of 0.","Returns <code>true</code> when the end of stream has been reached.","Returns the number of bytes contained in this <code>Bytes</code>.","Returns the lower bound of data that the <code>Body</code> will yield …","Maps this body’s data value to a different value.","Maps this body’s error value to a different value.","Creates a new empty <code>Bytes</code>.","Returns a new <code>SizeHint</code> with default values","","","","","","","Attempt to pull out the next data buffer of this stream.","Check to see if this <code>Sender</code> can send more data.","Poll for an optional <strong>single</strong> <code>HeaderMap</code> of trailers.","Creates an adaptor which implements the <code>Read</code> trait for …","Returns the number of bytes between the current position …","","Send data on data channel when it is ready.","Send trailers on trailers channel.","Set the value of the <code>lower</code> and <code>upper</code> bounds to exactly …","Set the value of the <code>lower</code> hint.","Set the value of the <code>upper</code> hint value.","Returns the bounds on the remaining length of the stream.","Returns a slice of self for the provided range.","Returns a slice of self that is equivalent to the given …","","Splits the bytes into two at the given index.","Splits the bytes into two at the given index.","Creates an adaptor which will read at most <code>limit</code> bytes …","Concatenate the buffers from a body into a single <code>Bytes</code> …","","","Returns future that resolves to trailers, if any.","Shortens the buffer, keeping the first <code>len</code> bytes and …","","","","","","","Try to send data on this channel.","","","","Returns the upper bound of data the <code>Body</code> will yield before…","","","","Returns a new <code>SizeHint</code> with both upper and lower bounds …","A builder to configure a new <code>Client</code>.","A Client to make outgoing HTTP requests.","A connector for the <code>http</code> scheme.","A <code>Future</code> that will resolve to an HTTP Response.","","","","","","","Combine the configuration of this builder with a …","Builder a client with this configuration and the default …","","","","","","Lower-level client connection API.","Connectors used by the <code>Client</code>.","","Option to enforce all <code>Uri</code>s have the <code>http</code> scheme.","Provide an executor to execute background <code>Connection</code> …","","","","","","","Set whether HTTP/0.9 responses should be tolerated.","Set the maximum buffer size for the connection.","Sets the exact size of the read buffer to <em>always</em> use.","Set whether HTTP/1 connections will write header names as …","Sets whether to use an adaptive flow control.","Sets the max connection-level flow control for HTTP2","Sets the <code>SETTINGS_INITIAL_WINDOW_SIZE</code> option for HTTP2 …","Sets an interval for HTTP2 Ping frames should be sent to …","Sets a timeout for receiving an acknowledgement of the …","Sets whether HTTP2 keep-alive should apply while the …","Sets the maximum frame size to use for HTTP2.","Set whether the connection <strong>must</strong> use HTTP/2.","","","","","Construct a new HttpConnector.","Construct a new HttpConnector.","","","Set an optional timeout for idle sockets being kept-alive.","Sets the maximum idle connection per host allowed in the …","Set whether to retry requests that get disrupted before …","Utilities used to interact with the Tower ecosystem.","Set the connect timeout.","Set timeout for RFC 6555 (Happy Eyeballs) algorithm.","Set whether to automatically add the <code>Host</code> header to …","Set that all sockets have <code>SO_KEEPALIVE</code> set with the …","Set that all sockets are bound to the configured address …","Set that all sockets are bound to the configured IPv4 or …","Set that all sockets have <code>SO_NODELAY</code> set to the supplied …","Sets the value of the SO_RCVBUF option on the socket.","Set that all socket have <code>SO_REUSEADDR</code> set to the supplied …","Sets the value of the SO_SNDBUF option on the socket.","","","","","","","","","","","","","","","","A builder to configure an HTTP connection.","A future that processes all HTTP state for the IO object.","Deconstructed parts of a <code>Connection</code>.","A future returned by <code>SendRequest::send_request</code>.","The sender side of an established connection.","","","","","","","","","","","","","","Provide an executor to execute background HTTP2 tasks.","","","","","","","","","","","Returns a handshake future over some IO.","Constructs a connection with the configured options and …","Sets whether to use an adaptive flow control.","Sets the max connection-level flow control for HTTP2","Sets the <code>SETTINGS_INITIAL_WINDOW_SIZE</code> option for HTTP2 …","Sets an interval for HTTP2 Ping frames should be sent to …","Sets a timeout for receiving an acknowledgement of the …","Sets whether HTTP2 keep-alive should apply while the …","Sets the maximum frame size to use for HTTP2.","Sets whether HTTP2 is required.","","","","","","","","Return the inner IO object, and additional information.","The original IO object used in the handshake.","Creates a new connection builder.","","","Polls to determine whether this sender can be used yet …","","Poll the connection for completion, but without calling …","A buffer of bytes that have been read but not processed …","Sends a <code>Request</code> on the associated connection.","","","","","","","","","","","","","","","","","","","","","","","","Prevent shutdown of the underlying IO object at the end …","Connect to a destination, returning an IO transport.","Extra information about the connected transport.","Describes a type returned by a connector.","A connector for the <code>http</code> scheme.","Extra information about the transport when an …","","","","","","","Return metadata describing the connection.","DNS Resolution used by the <code>HttpConnector</code>.","Set extra connection information to be set in the …","","","","","Copies the extra connection information into an <code>Extensions</code>…","","","Determines if the connected transport negotiated HTTP/2 …","Determines if the connected transport is to an HTTP proxy.","Set that the connected transport negotiated HTTP/2 as its …","Create new <code>Connected</code> type with empty metadata.","Set whether the connected transport is to an HTTP proxy.","Get the remote address of the transport used.","","","","","","","","","","An iterator of IP addresses returned from <code>getaddrinfo</code>.","A future to resolve a name returned by <code>GaiResolver</code>.","A resolver using blocking <code>getaddrinfo</code> calls in a …","Error indicating a given string was not a valid domain …","A domain name to resolve into IP addresses.","View the hostname as a string slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a new <code>GaiResolver</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a connection via <code>SendRequest</code>.","","","","","","","Create a new <code>Connect</code> with some inner connector <code>C</code> and a …","","","","","","A generic “error” for HTTP connections","A type map of protocol extensions.","A set of HTTP headers","Represents an HTTP header field value.","The Request Method (VERB)","Represents an HTTP request.","Represents an HTTP response","A <code>Result</code> typedef to use with the <code>http::Error</code> type","An HTTP status code (<code>status-code</code> in RFC 7230 et al.).","The URI component of a request.","Represents a version of the HTTP spec.","Converts a <code>HeaderValue</code> to a byte slice.","","","","","","","","Clear the <code>Extensions</code> of all inserted extensions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to convert a byte slice to a <code>HeaderValue</code>.","Attempt to convert a <code>Bytes</code> buffer to a <code>HeaderValue</code>.","Convert a <code>Bytes</code> directly into a <code>HeaderValue</code> without …","Converts a HeaderName into a HeaderValue","Convert a static string to a <code>HeaderValue</code>.","Attempt to convert a string to a <code>HeaderValue</code>.","","Get a reference to a type previously inserted on this …","Get a mutable reference to a type previously inserted on …","Return a reference to the lower level, inner error.","","Insert a type into this <code>Extensions</code>.","","","","Return true if the underlying error has the same type as …","Returns true if the <code>HeaderValue</code> has a length of zero …","Returns <code>true</code> if the value represents sensitive data.","Returns the length of <code>self</code>.","Create an empty <code>Extensions</code>.","","","","","","Remove a type from this <code>Extensions</code>.","HTTP request types.","HTTP response types.","Mark that the header value represents sensitive …","","HTTP status codes","","Yields a <code>&str</code> slice if the <code>HeaderValue</code> only contains …","","","","","","","","","","","","","","","","","","","An HTTP request builder","Component parts of an HTTP <code>Request</code>","Represents an HTTP request.","“Consumes” this builder, using the provided <code>body</code> to …","","","","","","Adds an extension to this builder","The request’s extensions","Get a mutable reference to the extensions for this …","Get a reference to the extensions for this request …","","","","","Appends a header to this request builder.","The request’s headers","Get headers on this request builder.","Get header on this request builder. when builder has …","","","Set the HTTP method for this request.","The request’s method","Get the HTTP Method for this request.","Creates a new default instance of <code>Builder</code> to construct a …","","","","","","","Set the URI for this request.","The request’s URI","Get the URI for this request","Set the HTTP version for this request.","The request’s version","","","An HTTP response builder","Component parts of an HTTP <code>Response</code>","Represents an HTTP response","“Consumes” this builder, using the provided <code>body</code> to …","","","","","","Adds an extension to this builder","The response’s extensions","Get a mutable reference to the extensions for this …","Get a reference to the extensions for this response …","","","","","Appends a header to this response builder.","The response’s headers","Get header on this response builder. when builder has …","Get header on this response builder.","","","Creates a new default instance of <code>Builder</code> to construct …","Set the HTTP status for this response.","The response’s status","","","","","","","Set the HTTP version for this response.","The response’s version","","","A possible error value when converting a <code>StatusCode</code> from …","An HTTP status code (<code>status-code</code> in RFC 7230 et al.).","","","","","","","","","","","","An executor of futures.","Place the future into the executor to be run.","A builder for a <code>Server</code>.","A listening HTTP server that accepts connections in both …","The <code>Accept</code> trait and supporting types.","","","Lower-level Server connection API.","Sets the <code>Executor</code> to deal with connection tasks.","","","Set whether HTTP/1 connections should support …","Sets whether to use keep-alive for HTTP/1 connections.","Set the maximum buffer size.","Sets whether HTTP/1 is required.","Sets whether to use an adaptive flow control.","Sets the max connection-level flow control for HTTP2","Sets the <code>SETTINGS_INITIAL_WINDOW_SIZE</code> option for HTTP2 …","Sets an interval for HTTP2 Ping frames should be sent to …","Sets a timeout for receiving an acknowledgement of the …","Sets the <code>SETTINGS_MAX_CONCURRENT_STREAMS</code> option for HTTP2 …","Sets the maximum frame size to use for HTTP2.","Sets whether HTTP/2 is required.","","Start a new builder, wrapping an incoming stream and …","Consume this <code>Builder</code>, creating a <code>Server</code>.","Set whether TCP keepalive messages are enabled on …","Set the value of <code>TCP_NODELAY</code> option for accepted …","Set whether to sleep on accept errors.","","","","","Asynchronously accept incoming connections.","The connection type that can be accepted.","The error type that can occur when accepting a connection.","Adapt a <code>Stream</code> of incoming connections into an <code>Accept</code>.","Poll to accept the next connection.","Create an <code>Accept</code> with a polling function.","A stream of connections from binding to an address.","A transport returned yieled by <code>AddrIncoming</code>.","A future building a new <code>Service</code> to a <code>Connection</code>.","A future binding a connection with a Service.","A lower-level configuration of the HTTP protocol.","Deconstructed parts of a <code>Connection</code>.","","Creates a new <code>AddrIncoming</code> binding to provided socket …","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>AddrIncoming</code> from an existing …","Start a graceful shutdown process for this connection.","Set whether HTTP/1 connections should support …","Enables or disables HTTP/1 keep-alive.","Sets whether HTTP1 is required.","Sets whether to use an adaptive flow control.","Sets the max connection-level flow control for HTTP2.","Sets the <code>SETTINGS_INITIAL_WINDOW_SIZE</code> option for HTTP2 …","Sets an interval for HTTP2 Ping frames should be sent to …","Sets a timeout for receiving an acknowledgement of the …","Sets the <code>SETTINGS_MAX_CONCURRENT_STREAMS</code> option for HTTP2 …","Sets the maximum frame size to use for HTTP2.","Sets whether HTTP2 is required.","","","","","","","","","Consumes the AddrStream and returns the underlying IO …","Return the inner IO object, and additional information.","The original IO object used in the handshake.","","Get the local address bound to this listener.","Set the maximum buffer size for the connection.","Creates a new instance of the HTTP protocol, ready to …","Aggregates flushes to better support pipelined responses.","","","","","Attempt to receive data on the socket, without removing …","","","Poll the connection for completion, but without calling …","","","A buffer of bytes that have been read but not processed …","Returns the remote (peer) address of this connection.","Bind a connection together with a <code>Service</code>.","The <code>Service</code> used to serve this connection.","Set whether TCP keepalive messages are enabled on …","Set the value of <code>TCP_NODELAY</code> option for accepted …","Set whether to sleep on accept errors.","","","","","","","","","","","","","","Return the inner IO object, and additional information, …","","","","","","","","","","","","","","","Set the executor used to spawn background tasks.","Enable this connection to support higher-level HTTP …","Prevent shutdown of the underlying IO object at the end …","Errors produced by the service.","The future response value.","Responses given by the service.","An asynchronous function from a <code>Request</code> to a <code>Response</code>.","Process the request and return the response …","Create a <code>MakeService</code> from a function.","Returns <code>Poll::Ready(Ok(()))</code> when the service is able to …","Create a <code>Service</code> from a function.","A future for a possible HTTP upgrade.","The deconstructed parts of an <code>Upgraded</code> type.","An upgraded HTTP connection.","","","","","","","Tries to downcast the internal trait object to the type …","","","","","","","","","","","The original IO object used before the upgrade.","","Gets a pending HTTP upgrade from this message.","","","","","","","A buffer of bytes that have been read but not processed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents an HTTP request.","","","Represents an HTTP response","","","","","","An HTTP status code (<code>status-code</code> in RFC 7230 et ali":[0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,3,3,4,3,0,3,3,3,5,6,5,5,5,1,2,1,2,7,8,8,9,1,2,3,5,6,4,7,8,8,9,1,2,3,5,6,4,6,4,10,7,4,6,6,6,6,6,6,2,1,1,2,1,1,2,3,3,0,3,1,1,3,3,3,9,9,1,2,2,0,1,1,7,8,9,9,1,2,3,5,6,4,1,2,0,3,1,2,1,1,1,1,1,1,1,1,11,3,8,3,2,1,2,1,2,0,8,7,8,9,1,2,3,5,6,4,2,6,6,1,1,7,9,1,2,3,5,4,6,3,1,1,3,3,1,4,3,0,3,3,3,1,1,1,1,1,1,2,2,2,1,2,2,2,2,2,2,2,4,3,3,0,0,2,2,2,1,2,0,6,0,6,2,2,8,1,2,3,5,9,2,8,5,6,5,5,5,6,8,8,7,8,9,1,2,3,5,6,4,7,8,9,1,2,3,5,6,4,8,7,8,9,1,2,3,5,6,4,1,1,1,2,1,2,7,8,9,1,2,3,5,6,4,5,4,5,4,12,9,2,0,0,0,0,0,13,13,13,0,13,14,13,14,13,14,14,15,13,14,13,13,13,13,13,13,0,13,13,0,13,13,13,14,13,14,14,13,14,13,13,14,14,14,13,14,14,13,13,14,13,14,13,14,13,14,15,13,0,0,0,0,16,17,18,16,17,18,18,16,18,18,18,18,18,18,16,17,18,16,17,18,18,18,17,18,18,18,16,17,18,16,17,18,17,16,17,18,18,18,16,17,18,16,16,16,16,16,18,0,19,20,19,19,19,19,19,19,19,20,19,0,0,19,0,0,0,19,19,19,19,0,0,19,19,19,19,19,19,19,19,19,0,0,0,19,0,19,21,22,0,23,21,23,21,20,23,21,23,21,21,24,20,24,21,21,21,0,21,23,21,21,0,23,21,21,21,21,0,21,0,23,21,22,22,20,22,23,20,20,0,0,24,21,23,21,20,20,0,0,0,20,22,22,23,21,21,24,23,21,21,20,23,21,23,21,21,23,21,0,0,23,21,0,22,22,22,22,22,22,0,0,0,0,25,0,0,26,25,26,0,0,26,25,27,27,25,28,29,30,31,25,27,26,32,28,29,30,31,25,27,26,32,32,31,25,27,26,32,31,25,27,26,32,27,27,25,31,32,32,32,25,26,32,25,26,31,32,31,30,31,25,25,27,26,26,32,32,27,28,29,30,31,25,25,27,26,32,32,27,26,31,32,28,29,30,31,25,27,26,32,28,29,32,26,26,26,27,32,31,32,32,32,32,32,25,31,27,32,28,29,32,32,31,32,32,31,27,27,31,32,31,32,32,32,32,32,32,32,32,32,32,31,25,27,26,32,30,25,26,32,28,29,30,31,25,27,26,32,28,29,30,31,25,27,26,32,28,29,30,31,25,27,26,32,32,32,32,32,28,29,30,31,25,27,26,32,0,0,19,0,19,19,19,19,19,19,19,0,0,0,0,19,0,19,0,0,0,19,0,0,0,19,19,19,0,0,0,0,0,19,0,19,19,19,19,0,0,19,0,0,19,19,19,0,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,19,0,24,24,0,0,24,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,24,24,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,19,19,0,0,33,34,33,34,34,34,33,34,34,33,34,33,34,33,34,34,33,34,33,33,34,0,34,33,34,33,34,33,34,33,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,36,37,38,39,40,41,42,43,44,45,46,35,47,36,48,49,50,51,37,38,39,40,41,42,43,44,45,46,35,47,36,48,49,50,51,50,41,45,50,46,37,37,38,38,39,40,41,42,43,44,45,46,35,47,36,48,49,50,51,51,37,38,39,40,41,42,43,44,45,46,35,47,36,48,49,50,51,36,36,47,36,47,36,37,38,39,40,41,42,43,44,45,46,35,47,36,48,49,50,51,39,40,41,42,43,44,45,46,36,48,49,50,47,36,46,36,36,35,47,36,39,40,41,42,43,44,45,48,49,50,48,49,50,50,50,50,35,35,36,36,36,39,40,41,42,43,44,45,48,50,50,37,38,51,37,38,39,40,41,42,43,44,45,46,35,47,36,48,49,50,51,37,38,39,40,41,42,43,44,45,46,35,47,36,48,49,50,51,37,38,39,40,41,42,43,44,45,46,35,47,36,48,49,50,51,37,38,39,40,41,42,43,44,45,46,35,47,36,48,49,50,51,52,53,54,55,0,0,0,0,0,0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,57,55,58,57,57,0,0,0,0,0,0,0,57,57,57,0,0,0,0,0,0,0,0,57,0,0,59,0,60,61,62,63,63,63,64,65,0,52,52,63,63,66,67,68,69,55,70,71,72,73,74,52,75,76,77,78,53,79,80,81,82,83,84,56,85,86,60,87,61,88,89,90,91,58,92,54,93,94,57,95,96,97,59,64,98,99,100,101,102,65,62,103,63,66,67,68,69,55,70,71,72,73,74,52,75,76,77,78,53,79,80,81,82,83,84,56,85,86,60,87,61,88,89,90,91,58,92,54,93,94,57,95,96,97,59,64,98,99,100,101,102,65,62,103,66,80,93,80,80,101,63,66,67,68,69,55,70,71,72,73,74,52,75,76,77,78,53,79,80,81,82,83,84,56,85,86,60,87,61,88,89,90,91,58,92,54,93,94,57,95,96,97,59,64,98,99,100,101,102,65,62,63,66,67,68,69,55,70,71,72,73,74,52,75,76,77,78,53,79,80,81,82,83,84,56,85,86,60,87,61,88,89,90,91,58,92,54,93,94,57,95,96,97,59,64,98,99,100,101,102,65,62,76,71,83,85,87,89,90,64,65,76,78,88,95,104,66,67,68,69,55,70,71,72,73,74,52,75,76,77,78,53,79,80,81,82,83,84,56,85,86,60,87,61,88,89,90,91,58,92,54,93,94,57,95,96,97,59,64,98,99,100,101,102,65,62,95,104,66,67,68,69,55,70,71,72,73,74,52,75,76,77,78,53,79,80,81,82,83,84,56,85,86,60,87,61,88,89,90,91,58,92,54,93,94,57,95,96,97,59,64,98,99,100,101,102,65,62,63,63,63,63,66,67,68,69,55,71,73,74,52,75,53,79,80,81,83,84,56,85,86,60,87,61,88,89,90,91,58,92,54,93,94,57,95,96,97,59,64,99,100,102,65,62,63,67,55,71,73,83,84,85,86,87,89,90,58,57,95,96,97,59,64,65,88,99,63,63,66,67,68,69,55,70,71,72,73,74,52,75,76,77,78,53,79,80,81,81,82,83,84,56,85,86,86,60,87,61,88,89,90,91,58,58,92,54,93,94,57,95,96,97,59,64,64,98,99,100,101,102,65,65,62,103,103,81,63,63,66,67,68,69,55,70,71,71,72,73,73,74,52,75,76,77,78,53,79,80,81,81,82,83,83,84,56,85,85,86,86,60,60,87,87,61,61,88,89,89,90,90,91,58,92,54,93,94,57,95,96,96,97,59,64,98,99,100,101,102,65,62,103,63,68,69,70,72,74,76,63,63,94,64,65,63,84,94,64,65,82,78,63,55,71,73,83,85,86,87,89,90,58,57,96,97,59,64,65,86,58,81,99,99,77,63,66,67,68,69,55,70,71,72,73,74,52,75,76,77,78,53,79,80,81,82,83,84,56,85,86,60,87,61,88,89,90,91,58,92,54,93,94,57,95,96,97,59,64,98,99,100,101,102,65,62,103,103,60,62,77,101,77,77,87,88,92,58,68,69,70,72,74,82,93,62,81,81,76,82,75,99,75,75,104,66,67,68,69,55,70,71,72,73,74,52,75,76,77,78,53,79,80,81,82,83,84,56,85,86,60,87,61,88,89,90,91,58,92,54,93,94,57,95,96,97,59,64,98,99,100,101,102,65,62,63,66,68,69,55,71,73,74,52,75,53,79,80,81,83,84,56,85,86,60,87,61,88,89,90,91,58,92,54,93,94,57,95,96,97,59,64,99,100,102,65,62,75,75,92,75,75,81,75,55,71,83,85,86,87,89,90,64,65,81,86,58,60,61,89,75,75,75,58,81,81,63,66,67,68,69,55,70,71,72,73,74,52,75,76,77,78,53,79,80,81,82,83,84,56,85,86,60,87,61,88,89,90,91,58,92,54,93,94,57,95,96,97,59,64,98,99,100,101,102,65,62,63,81,86,58,64,65,103,100,63,63,63,63,66,67,68,69,55,70,71,72,73,74,52,75,76,77,78,53,79,80,81,82,83,84,56,85,86,60,87,61,88,89,90,91,58,92,54,93,94,57,95,96,97,59,64,98,99,100,101,102,65,62,103,58,63,66,67,68,69,55,70,71,72,73,74,52,75,76,77,78,53,79,80,81,82,83,84,56,85,86,60,87,61,88,89,90,91,58,92,54,93,94,57,95,96,97,59,64,98,99,100,101,102,65,62,103,63,66,67,68,69,55,70,71,72,73,74,52,75,76,77,78,53,79,80,81,82,83,84,56,85,86,60,87,61,88,89,90,91,58,92,54,93,94,57,95,96,97,59,64,98,99,100,101,102,65,62,103,105,105,105,80,76,63,66,67,68,69,55,70,71,72,73,74,52,75,76,77,78,53,79,80,81,82,83,84,56,85,86,60,87,61,88,89,90,91,58,92,54,93,94,57,95,96,97,59,64,98,99,100,101,102,65,62,103,102,75,75,75,75,75,75,75,75,75,75,81,52,0,0,0,0,106,107,108,107,108,107,108,107,108,106,107,108,106,107,108,107,108,107,108,107,108,107,108,107,108,107,107,108,108,107,108,107,108,107,108,107,107,108,0,0,109,109,109,109,109,109,109,109,109,109,109,0,0,0,0,0,0,110,111,112,113,114,115,110,111,112,113,114,115,115,115,115,115,111,115,115,115,111,115,110,111,112,113,114,115,111,110,111,112,113,114,115,110,113,115,115,114,114,110,113,114,114,114,112,112,115,110,111,112,113,114,115,114,110,111,112,113,114,115,110,113,112,110,111,112,113,114,115,110,111,112,113,114,115,114,0,23,23,0,0,0,0,116,116,116,116,116,0,117,117,0,0,117,117,117,118,117,117,118,117,117,118,117,117,117,117,118,117,0,0,119,119,0,0,0,0,0,0,0,120,121,119,120,121,122,119,120,123,124,120,121,123,122,119,124,125,126,120,121,123,122,119,124,125,126,123,121,122,119,121,122,119,123,124,120,120,121,121,121,121,122,122,122,122,119,119,121,122,119,120,120,121,121,123,122,122,119,119,124,125,125,126,126,120,121,123,122,119,124,124,125,125,126,126,121,122,121,122,121,122,119,121,119,121,120,121,123,122,119,124,125,126,123,121,121,121,121,122,122,122,122,122,123,124,121,121,122,123,124,121,122,119,120,121,122,119,125,126,120,121,121,121,123,122,122,122,122,122,119,119,119,124,125,126,120,121,123,122,119,124,125,126,120,121,123,122,119,124,125,126,120,121,123,122,119,124,125,126,0,127,127,127,127,0,127,128,127,127,0,128,127,0,127,127,127,127,128,127,128,129,129,129,129,129,127,0,127,127,127,127,127,127,127,127,127,127,127,127,0,127,127,127,127,127,127,127,127,127,128,127,128,127,127,127,128,127,127,127,127,128,127,127,127,127,0,0,0,127,127,127,0,0,127,127,128,127,127,127,127,127,127,127,0,127,0,130,128,128,127,127,131,132,0,133,134,133,134,133,134,130,128,127,131,129,135,136,137,132,133,134,130,128,127,131,129,135,136,137,132,133,134,131,137,132,137,127,130,135,130,0,130,128,127,131,129,137,130,128,127,131,129,137,127,129,133,130,133,134,130,128,127,131,129,135,137,133,130,135,130,130,128,128,128,128,127,127,131,131,131,129,130,128,127,131,129,130,130,133,134,133,134,133,134,130,128,128,127,127,131,131,129,135,136,136,137,132,133,134,130,128,128,128,127,127,131,129,135,135,135,135,135,135,135,135,135,136,137,132,128,127,130,131,133,134,131,131,128,127,131,132,127,133,130,137,130,130,128,127,131,129,133,133,134,133,134,131,130,130,133,134,130,128,127,131,129,135,136,137,132,133,134,136,133,131,132,130,133,134,131,136,136,127,136,136,130,133,134,135,128,136,127,136,127,128,127,127,136,136,130,130,130,130,130,132,133,134,133,133,128,127,129,133,134,130,137,133,127,129,133,131,131,132,133,134,135,135,137,133,134,135,131,131,133,133,131,130,137,130,0,131,131,0,0,133,134,135,136,134,134,130,128,127,131,129,137,128,127,131,136,133,132,130,133,134,130,130,128,128,128,127,127,127,127,131,131,131,131,131,131,131,129,135,136,137,132,133,134,130,128,127,131,129,135,136,137,132,132,135,133,134,130,128,127,131,129,135,136,137,132,130,130,130,0,133,133,130,130,133,134,133,134,133,134,130,128,127,131,129,135,136,137,132,130,132,135,0,0,0,20,20,0,0,0,138,139,140,0,140,140,140,140,138,141,140,138,141,20,139,139,140,139,140,140,141,140,141,140,140,139,140,139,20,140,141,140,140,140,140,140,140,140,140,140,140,141,140,140,140,138,141,140,140,140,140,140,140,140,140,138,141,140,140,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,140,140,138,141,140,140,20,140,141,20,20,140,141,140,140,140,140,140,140,20,138,20,139,139,140,138,138,141,141,141,20,140,140,140,140,140,139,0,140,141,20,140,140,138,141,140,138,141,138,140,138,141,141,140,138,141,141,0,0,0,0,142,143,144,142,143,144,144,144,142,142,144,142,144,0,0,144,142,144,142,143,144,142,143,144,144,144,144,144,144,144,144,144,144,144,144,144,142,143,144,143,142,142,143,142,144,144,144,0,142,142,144,142,142,142,142,142,142,142,142,144,142,143,144,142,143,144,143,142,143,144,142,143,144,0,0,0,0,0,145,146,147,148,149,145,146,147,148,149,145,148,148,148,145,146,147,148,149,145,146,147,148,149,0,148,148,148,148,148,148,148,148,148,145,146,147,148,149,146,147,146,149,148,146,147,145,145,146,149,145,148,145,146,147,148,149,145,146,147,148,149,146,147,145,146,147,148,149,145,146,147,148,149,146,0,0,0,0,0,150,151,150,151,150,150,152,0,151,150,151,150,151,151,150,151,151,151,151,151,151,150,150,150,151,150,151,150,151,150,151,0,0,0,0,0,153,154,155,153,156,157,154,155,153,156,157,156,153,156,153,156,153,153,154,155,153,153,156,157,157,154,155,153,156,157,153,153,154,155,153,156,157,155,154,153,156,154,155,156,153,156,153,157,154,155,153,156,157,154,155,153,156,157,155,154,155,153,156,157,154,155,153,156,157,0,158,158,158,158,158,158,158,158,158,158,158,158,0,0,0,0,0,0,0,0,0,0,0,159,159,160,159,161,160,159,161,161,159,159,159,161,159,159,159,159,159,159,160,160,159,161,160,160,160,160,160,160,160,160,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,161,159,159,159,159,159,159,159,161,161,160,159,161,160,159,161,160,159,159,159,161,159,159,159,159,159,161,0,0,159,160,0,159,159,160,160,159,159,159,159,159,159,161,160,159,161,160,159,161,160,159,161,0,0,0,162,116,162,116,162,162,162,116,162,162,116,162,116,162,162,116,162,162,116,162,162,116,162,162,116,162,116,162,116,162,162,116,162,162,116,116,162,0,0,0,163,118,163,118,163,163,163,118,163,163,118,163,118,163,163,118,163,163,118,163,163,163,118,118,163,118,163,118,163,163,118,118,163,0,0,164,164,164,164,164,164,164,164,164,164,164,0,165,0,0,0,166,166,0,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,0,167,167,0,167,0,0,0,0,0,0,0,168,169,170,171,169,168,172,173,170,171,169,168,172,173,170,170,170,171,169,168,172,173,170,171,169,168,172,173,169,172,170,170,170,170,170,170,170,170,170,170,170,170,171,169,168,172,173,172,173,168,172,171,168,169,170,170,170,172,173,169,168,168,168,168,172,168,168,171,168,170,171,169,169,169,170,170,171,169,168,172,173,170,171,169,168,172,173,172,172,173,170,171,169,168,172,173,170,171,169,168,172,173,170,172,172,174,174,174,0,174,0,174,0,0,0,0,175,176,177,175,176,177,175,175,176,177,175,176,177,175,176,177,176,177,175,0,176,175,175,175,175,175,177,175,176,177,175,176,177,176,175,176,177,175,176,177,0,0,19,0,19,0,19,19,19,19,19,19,0,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,19,19,0,0,0,0,0,0,19,0,19,19,19,19,0,0,19,0,0,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,19,0,0,24,0,178,179,180,24,19,178,179,180,24,19,24,24,24,24,19,19,0,178,179,180,24,19,19,19,19,19,19,0,11,178,179,180,24,19,24,19,24,24,19,178,179,180,24,19,178,179,180,24,19,178,179,180,24,19,178,179,180,24,19,24,24,12,178,179,180,24,19,181,0,0,0,0,0,0,0,0,0,182,183,183,182,181,184,182,185,186,181,184,182,185,186,185,185,0,187,184,186,186,0,183,181,184,185,184,186,0,181,184,182,185,186,0,182,0,181,184,182,185,186,186,184,186,0,183,183,0,0,0,0,184,184,185,181,184,182,185,186,181,184,182,185,186,181,184,182,185,186,181,184,182,185,186,181,0,0,0,0,0,183,183,0,187,183,0,0,0,0,0,183,183,0,0,0,0,181,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["vec",3],["mime",3],["global",3]]],[[["cookie",3]]],[[],["router",3]],[[],["vec",3]],[[],["vec",3]],[[],[["vec",3],["arc",3]]],[[["vec",3],["global",3],["router",3]],["router",3]],null,[[],["router",3]],[[],["vec",3]],[[],["vec",3]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["body",3]]],[[],[["option",4],["body",4]]],[[],[["option",4],["body",3]]],[[],[["body",4],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["exec",4],["builder",3]]],[[]],[[["response",3],["request",3]],["bool",15]],[[["response",3],["request",3]],["bool",15]],[[],[["arc",3],["vec",3]]],[[],["tlsserver",3]],[[],["tlsserver",3]],[[],["tlsserver",3]],[[],["tlsserver",3]],[[],["tlsserver",3]],[[],["tlsserver",3]],[[]],[[],[["mime",3],["option",4]]],[[],["cookiejar",3]],[[],["cookiejar",3]],[[],["cookiejar",3]],[[],["request",3]],[[],["response",3]],[[],["router",3]],[[],["router",3]],null,[[["request",3],["pathstate",3]],[["option",4],["detectmatched",3]]],[[],["extensions",3]],[[],["extensions",3]],[[],["router",3]],[[],["vec",3]],[[],["vec",3]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],null,[[]],[[],[["mime",3],["option",4]]],[[]],[[]],[[]],[[["infallible",4]],["error",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["request",3],["body",3]],["request",3]],[[["response",3],["body",3]],["response",3]],null,[[],["router",3]],[[],[["option",4],["cookie",3]]],[[],[["option",4],["cookie",3]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]],["option",4]],[[["str",15]],["option",4]],[[["str",15]],["option",4]],[[["str",15]]],[[["response",3],["depot",3],["request",3]],[["box",3],["pin",3]]],[[],["router",3]],[[],["bool",15]],[[],["router",3]],[[],[["cookie",3],["global",3],["vec",3]]],[[],["headermap",3]],[[],["headermap",3]],[[],["headermap",3]],[[],["headermap",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["tlsserver",3]],[[],["tlsserver",3]],[[],["method",3]],[[],["method",3]],[[["httperror",3]],["catcherimpl",3]],[[],["error",3]],[[],["request",3]],[[],["response",3]],[[],["router",3]],[[["router",3]],["server",3]],[[["router",3]],["service",3]],[[],["tlsserver",3]],[[],["router",3]],[[],["hashmap",3]],[[],["hashmap",3]],[[],["router",3]],[[],["router",3]],[[]],[[["context",3]],[["result",4],["poll",4]]],[[],["router",3]],null,[[["router",3]],["router",3]],[[],["router",3]],[[],["router",3]],[[],["multimap",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4],["invalidheadervalue",3]]],[[]],[[],[["option",4],["socketaddr",4]]],[[]],[[["headervalue",3]]],[[["str",15]]],[[]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[],[["arc",3],["router",3]]],[[],["vec",3]],[[],["vec",3]],null,null,[[["option",4],["body",4]]],[[["headermap",3],["headervalue",3]]],[[["httperror",3]]],[[["option",4],["socketaddr",4]]],[[["statuscode",3]]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[],[["statuscode",3],["option",4]]],[[]],[[]],[[],[["option",4],["body",3]]],[[],[["option",4],["body",4]]],[[],["router",3]],[[],["tlsserver",3]],[[],["string",3]],[[],["string",3]],[[],["depot",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["option",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["uri",3]],[[],["uri",3]],[[],["version",3]],[[],["version",3]],[[],["version",3]],[[],["version",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3],["mime",3],["global",3]],["server",3]],[[["vec",3],["mime",3],["global",3]],["service",3]],[[["global",3],["vec",3],["box",3]],["server",3]],[[["global",3],["vec",3],["box",3]],["service",3]],[[["request",3],["depot",3],["response",3]],[["box",3],["pin",3]]],[[["request",3],["depot",3],["response",3]],[["box",3],["pin",3]]],[[]],null,null,null,null,null,[[],["error",8]],[[],["error",8]],[[],["backtrace",3]],null,[[]],[[]],[[]],[[]],[[],["chain",3]],[[],["chain",3]],[[]],[[],[["result",4],["error",3]]],[[],["error",3]],[[],["chain",3]],[[]],[[]],[[],[["error",3],["result",4]]],[[],["option",4]],[[],["option",4]],[[]],null,[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],null,[[]],[[],["error",3]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["usize",15]],[[],["error",3]],[[],["error",3]],[[["error",8]],["chain",3]],[[],["option",4]],[[],["option",4]],[[],["error",8]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[],[["result",4],["error",3]]],[[["request",3],["depot",3],["response",3]],[["box",3],["pin",3]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],[["error",3],["result",4],["namedfile",3]]],[[["pathbuf",3]],["namedfilebuilder",3]],[[],["file",3]],[[],["file",3]],[[],["namedfile",3]],[[],["file",3]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pathbuf",3]],[["error",3],["result",4],["namedfile",3]]],[[],["path",3]],[[["pin",3],["context",3],["filechunk",3]],[["option",4],["poll",4]]],[[["headervalue",3]],["namedfile",3]],[[["headervalue",3]],["namedfile",3]],[[["mime",3]],["namedfile",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],[["option",4],["poll",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["bool",15]],["namedfile",3]],[[["bool",15]],["namedfile",3]],[[]],[[]],[[]],[[],["namedfilebuilder",3]],[[["u64",15]],["namedfilebuilder",3]],[[],["namedfilebuilder",3]],[[],["namedfilebuilder",3]],[[],["namedfilebuilder",3]],[[["request",3],["depot",3],["response",3]],[["box",3],["pin",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[]],null,[[]],[[]],[[]],[[]],[[],["boxbody",3]],[[],["httprange",3]],[[],["mime",3]],[[]],[[]],[[["mime",3]],["ordering",4]],null,[[],["data",3]],null,[[["mime",3]],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],null,[[],["str",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],null,[[]],[[["contenttype",3]],["mime",3]],[[]],[[["str",15]],[["result",4],["mime",3]]],[[],[["option",4],["name",3]]],[[["mime",3],["option",4],["request",3]],["mime",3]],[[]],null,[[]],[[]],[[],[["vec",3],["global",3],["u8",15]]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],null,[[],["mapdata",3]],[[],["maperr",3]],null,null,null,[[],["params",3]],[[["u64",15],["str",15]],[["vec",3],["readerror",4],["result",4]]],[[["mime",3]],[["option",4],["ordering",4]]],[[["pin",3],["context",3]],[["poll",4],["option",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4]]],null,null,null,[[],["sizehint",3]],[[]],[[["usize",15]]],null,[[],["name",3]],[[],[["name",3],["option",4]]],null,[[]],[[]],[[],["string",3]],[[],["trailers",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["name",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],null,[[]],[[],[["vec",3],["global",3],["u8",15]]],[[],["bool",15]],[[],["usize",15]],[[]],[[["usize",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cookie",3]]],[[["cookie",3]]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cookiebuilder",3]],[[],["cookiebuilder",3]],[[],["parseerror",4]],[[],["cookiejar",3]],[[],["samesite",4]],[[],["cookie",3]],[[]],[[]],[[]],[[]],[[]],[[],["cookiejar",3]],[[],["delta",3]],[[],["str",15]],[[],["cookiebuilder",3]],[[],[["option",4],["str",15]]],[[],[["str",15],["option",4]]],[[],["encodedcookie",3]],[[["parseerror",4]],["bool",15]],[[["samesite",4]],["bool",15]],[[["cookie",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["offsetdatetime",3]],["cookiebuilder",3]],[[],[["option",4],["offsetdatetime",3]]],[[],["cookie",3]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["cookie",3]]],[[]],[[]],[[]],[[]],[[]],[[["utf8error",3]],["parseerror",4]],[[]],[[]],[[]],[[["str",15]],[["result",4],["parseerror",4],["cookie",3]]],[[["str",15]],[["option",4],["cookie",3]]],[[]],[[["bool",15]],["cookiebuilder",3]],[[],[["option",4],["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cookie",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[]],[[["duration",3]],["cookiebuilder",3]],[[],[["duration",3],["option",4]]],[[],["str",15]],[[],[["str",15],["option",4]]],[[]],[[],["cookie",3]],[[["parseerror",4]],["bool",15]],[[],["cookiebuilder",3]],[[],["cookiejar",3]],[[],["cookie",3]],[[],[["option",4],["cookie",3]]],[[],[["option",4],["cookie",3]]],[[],[["cookie",3],["parseerror",4],["result",4]]],[[],[["cookie",3],["parseerror",4],["result",4]]],[[],["cookiebuilder",3]],[[],[["option",4],["str",15]]],[[],[["str",15],["option",4]]],[[],["cookiebuilder",3]],[[["cookie",3]]],[[]],[[["samesite",4]],["cookiebuilder",3]],[[],[["option",4],["samesite",4]]],[[["bool",15]],["cookiebuilder",3]],[[],[["option",4],["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[],["str",15]],[[],[["str",15],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["httperror",3]],[[],["httperror",3]],null,[[],["httperror",3]],null,null,null,null,null,null,null,[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],null,[[],["httperror",3]],null,null,null,[[],["httperror",3]],null,[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],null,null,null,[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],null,[[],["httperror",3]],null,null,null,null,[[],["httperror",3]],[[],["httperror",3]],null,[[],["httperror",3]],[[],["httperror",3]],null,null,null,[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],null,[[],["httperror",3]],[[],["httperror",3]],null,[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],null,[[],["httperror",3]],null,null,[[["statuscode",3]],[["httperror",3],["option",4]]],null,null,null,null,[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],null,null,[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],null,null,[[["statuscode",3]],[["httperror",3],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],[["option",4],["mime",3]]],[[["field",3]]],[[],["formdata",3]],[[]],[[]],null,[[],[["option",4],["str",15]]],null,[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],null,[[]],[[]],null,[[],["formdata",3]],null,[[["body",3],["headermap",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["replacements",3]],[[]],[[]],[[]],[[["getall",3]],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["occupiedentry",3]],[[],["valuedrain",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["valueiter",3]],[[],["valueitermut",3]],[[]],[[]],[[]],[[],["headername",3]],[[]],[[],["valueiter",3]],[[],["valueiter",3]],[[],["valueitermut",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["recompositions",3]],[[],["decompositions",3]],[[],["recompositions",3]],[[],["decompositions",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["streamsafe",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["ifmatch",3]],[[],["ifnonematch",3]],[[],["vary",3]],[[]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],null,[[["str",15]],[["basic",3],["authorization",3]]],[[["str",15]],[["authorization",3],["result",4],["invalidbearertoken",3]]],[[],["stracceptranges",3]],[[],[["invalidcontentrange",3],["contentrange",3],["result",4]]],[[],[["range",3],["invalidrange",3],["result",4]]],[[],[["u64",15],["option",4]]],[[],["option",4]],[[],["transferencoding",3]],[[],["headername",3]],[[],["acceptranges",3]],[[],["accesscontrolallowcredentials",3]],[[],["accesscontrolallowheaders",3]],[[],["accesscontrolallowmethods",3]],[[],["accesscontrolalloworigin",3]],[[],["accesscontrolexposeheaders",3]],[[],["accesscontrolmaxage",3]],[[],["accesscontrolrequestheaders",3]],[[],["accesscontrolrequestmethod",3]],[[],["allow",3]],[[],["authorization",3]],[[],["cachecontrol",3]],[[],["connection",3]],[[],["contentdisposition",3]],[[],["contentencoding",3]],[[],["contentlength",3]],[[],["contentlocation",3]],[[],["contentrange",3]],[[],["contenttype",3]],[[],["cookie",3]],[[],["date",3]],[[],["etag",3]],[[],["expect",3]],[[],["expires",3]],[[],["host",3]],[[],["ifmatch",3]],[[],["ifmodifiedsince",3]],[[],["ifnonematch",3]],[[],["ifrange",3]],[[],["ifunmodifiedsince",3]],[[],["lastmodified",3]],[[],["location",3]],[[],["origin",3]],[[],["pragma",3]],[[],["proxyauthorization",3]],[[],["range",3]],[[],["referer",3]],[[],["referrerpolicy",3]],[[],["retryafter",3]],[[],["secwebsocketaccept",3]],[[],["secwebsocketkey",3]],[[],["secwebsocketversion",3]],[[],["server",3]],[[],["setcookie",3]],[[],["stricttransportsecurity",3]],[[],["te",3]],[[],["transferencoding",3]],[[],["upgrade",3]],[[],["useragent",3]],[[],["vary",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["connection",3]],[[["accesscontrolmaxage",3]],["ordering",4]],[[["date",3]],["ordering",4]],[[["expires",3]],["ordering",4]],[[["ifmodifiedsince",3]],["ordering",4]],[[["ifunmodifiedsince",3]],["ordering",4]],[[["lastmodified",3]],["ordering",4]],[[["server",3]],["ordering",4]],[[["useragent",3]],["ordering",4]],[[],["bool",15]],[[],["bool",15]],[[["systemtime",3]],["ifrange",3]],[[["systemtime",3]],["retryafter",3]],[[],[["error",3],["result",4]]],[[],[["acceptranges",3],["error",3],["result",4]]],[[],[["result",4],["error",3],["accesscontrolallowcredentials",3]]],[[],[["result",4],["error",3],["accesscontrolallowheaders",3]]],[[],[["error",3],["accesscontrolallowmethods",3],["result",4]]],[[],[["accesscontrolalloworigin",3],["result",4],["error",3]]],[[],[["result",4],["accesscontrolexposeheaders",3],["error",3]]],[[],[["accesscontrolmaxage",3],["result",4],["error",3]]],[[],[["accesscontrolrequestheaders",3],["result",4],["error",3]]],[[],[["result",4],["error",3],["accesscontrolrequestmethod",3]]],[[],[["allow",3],["result",4],["error",3]]],[[],[["result",4],["error",3],["authorization",3]]],[[],[["cachecontrol",3],["result",4],["error",3]]],[[],[["result",4],["error",3],["connection",3]]],[[],[["result",4],["contentdisposition",3],["error",3]]],[[],[["result",4],["contentencoding",3],["error",3]]],[[],[["contentlength",3],["result",4],["error",3]]],[[],[["contentlocation",3],["error",3],["result",4]]],[[],[["result",4],["contentrange",3],["error",3]]],[[],[["contenttype",3],["result",4],["error",3]]],[[],[["cookie",3],["error",3],["result",4]]],[[],[["date",3],["error",3],["result",4]]],[[],[["etag",3],["result",4],["error",3]]],[[],[["result",4],["expect",3],["error",3]]],[[],[["expires",3],["result",4],["error",3]]],[[],[["host",3],["result",4],["error",3]]],[[],[["ifmatch",3],["error",3],["result",4]]],[[],[["ifmodifiedsince",3],["result",4],["error",3]]],[[],[["result",4],["error",3],["ifnonematch",3]]],[[],[["result",4],["ifrange",3],["error",3]]],[[],[["result",4],["ifunmodifiedsince",3],["error",3]]],[[],[["error",3],["result",4],["lastmodified",3]]],[[],[["location",3],["error",3],["result",4]]],[[],[["origin",3],["result",4],["error",3]]],[[],[["result",4],["pragma",3],["error",3]]],[[],[["proxyauthorization",3],["result",4],["error",3]]],[[],[["range",3],["error",3],["result",4]]],[[],[["referer",3],["result",4],["error",3]]],[[],[["error",3],["referrerpolicy",3],["result",4]]],[[],[["result",4],["retryafter",3],["error",3]]],[[],[["error",3],["secwebsocketaccept",3],["result",4]]],[[],[["error",3],["secwebsocketkey",3],["result",4]]],[[],[["result",4],["error",3],["secwebsocketversion",3]]],[[],[["error",3],["result",4],["server",3]]],[[],[["result",4],["setcookie",3],["error",3]]],[[],[["stricttransportsecurity",3],["error",3],["result",4]]],[[],[["result",4],["te",3],["error",3]]],[[],[["transferencoding",3],["error",3],["result",4]]],[[],[["upgrade",3],["result",4],["error",3]]],[[],[["useragent",3],["error",3],["result",4]]],[[],[["result",4],["vary",3],["error",3]]],[[["duration",3]],["retryafter",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["bool",15]],[[["headername",3]],["bool",15]],[[["str",15]],["bool",15]],[[["headername",3]],["bool",15]],[[["acceptranges",3]],["bool",15]],[[["accesscontrolallowcredentials",3]],["bool",15]],[[["accesscontrolallowheaders",3]],["bool",15]],[[["accesscontrolallowmethods",3]],["bool",15]],[[["accesscontrolalloworigin",3]],["bool",15]],[[["accesscontrolmaxage",3]],["bool",15]],[[["accesscontrolrequestmethod",3]],["bool",15]],[[["allow",3]],["bool",15]],[[["authorization",3]],["bool",15]],[[["cachecontrol",3]],["bool",15]],[[["contentlength",3]],["bool",15]],[[["contentlocation",3]],["bool",15]],[[["contentrange",3]],["bool",15]],[[["contenttype",3]],["bool",15]],[[["date",3]],["bool",15]],[[["etag",3]],["bool",15]],[[["expect",3]],["bool",15]],[[["expires",3]],["bool",15]],[[["host",3]],["bool",15]],[[["ifmatch",3]],["bool",15]],[[["ifmodifiedsince",3]],["bool",15]],[[["ifnonematch",3]],["bool",15]],[[["ifrange",3]],["bool",15]],[[["ifunmodifiedsince",3]],["bool",15]],[[["lastmodified",3]],["bool",15]],[[["location",3]],["bool",15]],[[["origin",3]],["bool",15]],[[["pragma",3]],["bool",15]],[[["proxyauthorization",3]],["bool",15]],[[["range",3]],["bool",15]],[[["referer",3]],["bool",15]],[[["referrerpolicy",3]],["bool",15]],[[["retryafter",3]],["bool",15]],[[["secwebsocketaccept",3]],["bool",15]],[[["secwebsocketkey",3]],["bool",15]],[[["secwebsocketversion",3]],["bool",15]],[[["server",3]],["bool",15]],[[["stricttransportsecurity",3]],["bool",15]],[[["te",3]],["bool",15]],[[["upgrade",3]],["bool",15]],[[["useragent",3]],["bool",15]],[[["vary",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["etag",3]],["ifrange",3]],[[["duration",3]],["stricttransportsecurity",3]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[],["contenttype",3]],[[]],[[["headername",3]],["headername",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["duration",3]],["accesscontrolmaxage",3]],[[]],[[]],[[["method",3]],["accesscontrolrequestmethod",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mime",3]],["contenttype",3]],[[]],[[]],[[]],[[["systemtime",3]],["date",3]],[[]],[[]],[[["systemtime",3]],["expires",3]],[[]],[[]],[[["authority",3]],["host",3]],[[["etag",3]],["ifmatch",3]],[[]],[[["systemtime",3]],["ifmodifiedsince",3]],[[]],[[]],[[["etag",3]],["ifnonematch",3]],[[]],[[]],[[["systemtime",3]],["ifunmodifiedsince",3]],[[["systemtime",3]],["lastmodified",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["secwebsocketkey",3]],["secwebsocketaccept",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["invalidheadername",3],["result",4],["headername",3]]],[[],["accesscontrolallowheaders",3]],[[],["accesscontrolallowmethods",3]],[[],["accesscontrolexposeheaders",3]],[[],["accesscontrolrequestheaders",3]],[[],["allow",3]],[[],["connection",3]],[[],[["invalidheadername",3],["result",4],["headername",3]]],[[["str",15]],["headername",3]],[[["str",15]],["referer",3]],[[["str",15]],["server",3]],[[["str",15]],["useragent",3]],[[["str",15]],[["invalidheadername",3],["result",4],["headername",3]]],[[["str",15]],[["result",4],["etag",3]]],[[["str",15]],[["referer",3],["result",4]]],[[["str",15]],[["result",4],["server",3]]],[[["str",15]],[["result",4],["useragent",3]]],[[["str",15]],[["option",4],["str",15]]],[[],["contentencoding",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[],["str",15]],[[],["contenttype",3]],[[],["bool",15]],[[["duration",3]],["stricttransportsecurity",3]],[[],["contentdisposition",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["error",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["systemtime",3]],["bool",15]],[[["option",4],["lastmodified",3],["option",4],["etag",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["contenttype",3]],[[],["contenttype",3]],[[],["connection",3]],[[],["usize",15]],[[],[["duration",3],["option",4]]],[[],["duration",3]],[[],[["duration",3],["option",4]]],[[],[["duration",3],["option",4]]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[["headername",3]],["bool",15]],[[["acceptranges",3]],["bool",15]],[[["accesscontrolallowheaders",3]],["bool",15]],[[["accesscontrolallowmethods",3]],["bool",15]],[[["accesscontrolalloworigin",3]],["bool",15]],[[["accesscontrolmaxage",3]],["bool",15]],[[["accesscontrolrequestmethod",3]],["bool",15]],[[["allow",3]],["bool",15]],[[["authorization",3]],["bool",15]],[[["cachecontrol",3]],["bool",15]],[[["contentlength",3]],["bool",15]],[[["contentlocation",3]],["bool",15]],[[["contentrange",3]],["bool",15]],[[["contenttype",3]],["bool",15]],[[["date",3]],["bool",15]],[[["etag",3]],["bool",15]],[[["expect",3]],["bool",15]],[[["expires",3]],["bool",15]],[[["host",3]],["bool",15]],[[["ifmatch",3]],["bool",15]],[[["ifmodifiedsince",3]],["bool",15]],[[["ifnonematch",3]],["bool",15]],[[["ifrange",3]],["bool",15]],[[["ifunmodifiedsince",3]],["bool",15]],[[["lastmodified",3]],["bool",15]],[[["location",3]],["bool",15]],[[["origin",3]],["bool",15]],[[["pragma",3]],["bool",15]],[[["proxyauthorization",3]],["bool",15]],[[["range",3]],["bool",15]],[[["referer",3]],["bool",15]],[[["referrerpolicy",3]],["bool",15]],[[["retryafter",3]],["bool",15]],[[["secwebsocketaccept",3]],["bool",15]],[[["secwebsocketkey",3]],["bool",15]],[[["secwebsocketversion",3]],["bool",15]],[[["server",3]],["bool",15]],[[["stricttransportsecurity",3]],["bool",15]],[[["te",3]],["bool",15]],[[["upgrade",3]],["bool",15]],[[["useragent",3]],["bool",15]],[[["vary",3]],["bool",15]],[[],["cachecontrol",3]],[[],["bool",15]],[[],["pragma",3]],[[],["bool",15]],[[],["bool",15]],[[],["contenttype",3]],[[],["bool",15]],[[],[["option",4],["origin",3]]],[[["accesscontrolmaxage",3]],[["option",4],["ordering",4]]],[[["date",3]],[["option",4],["ordering",4]]],[[["expires",3]],[["option",4],["ordering",4]]],[[["host",3]],[["option",4],["ordering",4]]],[[["ifmodifiedsince",3]],[["option",4],["ordering",4]]],[[["ifunmodifiedsince",3]],[["option",4],["ordering",4]]],[[["lastmodified",3]],[["option",4],["ordering",4]]],[[["server",3]],[["option",4],["ordering",4]]],[[["useragent",3]],[["option",4],["ordering",4]]],[[],["contenttype",3]],[[],[["u16",15],["option",4]]],[[],[["u16",15],["option",4]]],[[["etag",3]],["bool",15]],[[["etag",3]],["bool",15]],[[["systemtime",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["duration",3],["option",4]]],[[],["str",15]],[[],["contenttype",3]],[[],["contenttype",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["te",3]],[[],["result",4]],[[["string",3]],[["result",4],["headername",3]]],[[],[["result",4],["headername",3]]],[[["str",15]],[["result",4],["headername",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],[["origin",3],["result",4],["invalidorigin",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[]],[[],[["option",4],["error",3],["result",4]]],[[["u64",15]],["contentrange",3]],[[],["connection",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["upgrade",3]],[[["duration",3]],["cachecontrol",3]],[[["duration",3]],["cachecontrol",3]],[[["duration",3]],["cachecontrol",3]],[[],["cachecontrol",3]],[[],["cachecontrol",3]],[[],["cachecontrol",3]],[[],["cachecontrol",3]],[[],["cachecontrol",3]],[[],["cachecontrol",3]],[[["duration",3]],["cachecontrol",3]],[[],["contenttype",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["basic",3]],[[],["bearer",3]],[[]],[[]],[[["headervalue",3]],["option",4]],[[["headervalue",3]],[["basic",3],["option",4]]],[[["headervalue",3]],[["bearer",3],["option",4]]],[[],["headervalue",3]],[[],["headervalue",3]],[[],["headervalue",3]],[[["basic",3]],["bool",15]],[[["bearer",3]],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[["basic",3]],["bool",15]],[[["bearer",3]],["bool",15]],[[],["str",15]],[[]],[[]],[[],["str",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["str",15]],[[]],[[]],null,null,[[]],[[]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["name",3],["option",4]]],[[],["fieldheaders",3]],[[]],null,null,[[],["fieldheaders",3]],null,null,[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[],["nextfield",3]],[[["pin",3],["multipart",3]],["nextfield",3]],[[["pin",3],["nextfield",3],["context",3]],["poll",4]],[[["context",3],["pin",3],["readtostring",3]],["poll",4]],[[["pin",3],["context",3],["multipart",3]],[["poll",4],["option",4]]],[[["pin",3],["context",3],["multipart",3]],[["result",4],["poll",4]]],[[["pin",3],["context",3],["multipart",3]],[["poll",4],["result",4]]],[[["pin",3],["fielddata",3],["context",3]],[["poll",4],["option",4]]],[[],[["readtostring",3],["fielddata",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["headermap",3]],[["readerror",4],["multipart",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],["poll",4]],[[["context",3],["pin",3]],["poll",4]],[[["context",3],["pin",3]],[["option",4],["poll",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["multipart",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,[[]],[[["body",3]],["body",4]],null,[[]],[[["body",4],["pin",3],["context",3]],[["poll",4],["option",4]]],null,[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],[["option",4],["poll",4]]],[[],["typeid",3]],null,[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["u16",15]],[[],["builder",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4],["uri",3],["error",3]]],[[],["authority",3]],[[],["pathandquery",3]],[[],["scheme",3]],[[]],[[]],[[]],[[],["builder",3]],[[],["parts",3]],[[["port",3]],["bool",15]],[[["u16",15]],["bool",15]],[[["str",15]],["bool",15]],[[["authority",3]],["bool",15]],[[["str",15]],["bool",15]],[[["string",3]],["bool",15]],[[["str",15]],["bool",15]],[[["pathandquery",3]],["bool",15]],[[["string",3]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["scheme",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[["uri",3]],["parts",3]],[[]],[[["errorkind",4]],["invaliduri",3]],[[]],[[["errorkind",4]],["invaliduriparts",3]],[[]],[[],[["invaliduri",3],["result",4],["authority",3]]],[[],[["result",4],["pathandquery",3],["invaliduri",3]]],[[["str",15]],["authority",3]],[[["str",15]],["pathandquery",3]],[[["str",15]],[["invaliduri",3],["result",4],["authority",3]]],[[["str",15]],[["result",4],["pathandquery",3],["invaliduri",3]]],[[["str",15]],[["result",4],["scheme",3]]],[[]],[[]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3]],[[["str",15]],[["option",4],["ordering",4]]],[[["authority",3]],[["option",4],["ordering",4]]],[[["str",15]],[["option",4],["ordering",4]]],[[["string",3]],[["option",4],["ordering",4]]],[[["str",15]],[["option",4],["ordering",4]]],[[["str",15]],[["option",4],["ordering",4]]],[[["pathandquery",3]],[["option",4],["ordering",4]]],[[["string",3]],[["option",4],["ordering",4]]],[[],["str",15]],[[],["builder",3]],null,[[],[["port",3],["option",4]]],[[],[["u16",15],["option",4]]],[[],[["option",4],["str",15]]],[[],["builder",3]],null,[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],[["result",4],["authority",3]]],[[["str",15]],[["result",4],["authority",3]]],[[],["result",4]],[[],["result",4]],[[["string",3]],[["result",4],["pathandquery",3]]],[[["string",3]],[["pathandquery",3],["result",4]]],[[["str",15]],[["result",4],["pathandquery",3]]],[[],[["pathandquery",3],["result",4]]],[[],["result",4]],[[["str",15]],[["result",4],["scheme",3]]],[[],[["scheme",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["u16",15]],[[],[["authority",3],["option",4]]],[[["socketaddr",4]],[["addrincoming",3],["exec",4],["builder",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3]],[[],["builder",3]],[[],["builder",3]],[[],["builder",3]],[[],[["exec",4],["builder",3]]],[[["request",3]]],[[],[["str",15],["option",4]]],[[],["usize",15]],[[]],[[]],null,[[],["headermap",3]],[[],["method",3]],[[],["statuscode",3]],[[],["uri",3]],[[],["version",3]],[[],["client",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["statuscode",3]],["ordering",4]],[[["version",3]],["ordering",4]],[[],["builder",3]],[[],["bool",15]],[[],["request",3]],[[],["response",3]],[[],["headermap",3]],[[],["method",3]],[[],["statuscode",3]],[[],["uri",3]],[[],["version",3]],[[],["body",3]],[[],[["body",3],["client",3],["httpconnector",3]]],[[],["builder",3]],[[],["drain",3]],[[],["body",3]],[[],["entry",4]],[[["headermap",3]],["bool",15]],[[["method",3]],["bool",15]],[[["str",15]],["bool",15]],[[["method",3]],["bool",15]],[[["str",15]],["bool",15]],[[["u16",15]],["bool",15]],[[["statuscode",3]],["bool",15]],[[["uri",3]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["version",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[],["extensions",3]],[[],["extensions",3]],[[],["extensions",3]],[[],["extensions",3]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[["accesscontrolrequestmethod",3]],["method",3]],[[["method",3]],["method",3]],[[["statuscode",3]],["statuscode",3]],[[]],[[]],[[]],[[["str",15]],["body",3]],[[["cow",4]],["body",3]],[[["bytes",3]],["body",3]],[[["string",3]],["body",3]],[[["box",3],["global",3],["stream",8]],["body",3]],[[]],[[],["body",3]],[[["cow",4],["str",15]],["body",3]],[[["vec",3],["global",3],["u8",15]],["body",3]],[[]],[[]],[[]],[[],[["invalidmethod",3],["method",3],["result",4]]],[[],[["result",4],["statuscode",3],["invalidstatuscode",3]]],[[],["headermap",3]],[[],[["result",4],["uri",3],["invaliduri",3]]],[[["parts",3]],["request",3]],[[["parts",3]],["response",3]],[[["parts",3]],[["result",4],["uri",3],["invaliduriparts",3]]],[[["str",15]],["uri",3]],[[["str",15]],[["method",3],["result",4]]],[[["str",15]],[["result",4],["statuscode",3],["invalidstatuscode",3]]],[[["str",15]],[["result",4],["uri",3],["invaliduri",3]]],[[["tcplistener",3]],[["result",4],["error",3],["builder",3]]],[[["u16",15]],[["result",4],["statuscode",3],["invalidstatuscode",3]]],[[],["builder",3]],[[],["option",4]],[[["uri",3]],["responsefuture",3]],[[],["getall",3]],[[],["option",4]],[[]],[[]],[[]],[[]],[[],["builder",3]],[[],["headermap",3]],[[],["headermap",3]],[[],["headermap",3]],[[],["headermap",3]],[[],[["option",4],["str",15]]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["box",3]]],[[],[["result",4],["error",4],["request",3]]],[[],[["result",4],["error",4],["request",3]]],[[]],[[],["intoiter",3]],[[]],[[]],[[],["parts",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[],["itermut",3]],[[],["keys",3]],[[],["usize",15]],[[],["usize",15]],[[],["socketaddr",4]],[[],["request",3]],[[],["response",3]],[[],["method",3]],[[],["method",3]],[[["method",3]],["bool",15]],[[["statuscode",3]],["bool",15]],[[["version",3]],["bool",15]],[[],["request",3]],[[],["response",3]],[[],[["headermap",3],["headervalue",3]]],[[],[["body",3],["client",3],["httpconnector",3]]],[[],["builder",3]],[[["statuscode",3]],[["option",4],["ordering",4]]],[[["version",3]],[["option",4],["ordering",4]]],[[],["builder",3]],[[],["str",15]],[[],[["option",4],["pathandquery",3]]],[[["server",3],["context",3],["pin",3]],["poll",4]],[[["context",3],["request",3],["pin",3]],[["option",4],["poll",4]]],[[["pin",3],["context",3],["response",3]],[["option",4],["poll",4]]],[[["pin",3],["body",3],["context",3]],[["poll",4],["option",4]]],[[["pin",3],["body",3],["context",3]],[["poll",4],["option",4]]],[[["context",3]],[["poll",4],["result",4]]],[[["context",3],["request",3],["pin",3]],[["poll",4],["result",4]]],[[["pin",3],["context",3],["response",3]],[["poll",4],["result",4]]],[[["pin",3],["body",3],["context",3]],[["poll",4],["result",4]]],[[],[["port",3],["option",4]]],[[],[["u16",15],["option",4]]],[[],["builder",3]],[[],["builder",3]],[[],[["option",4],["str",15]]],[[],["option",4]],[[["request",3]],["responsefuture",3]],[[["usize",15]]],null,[[],[["option",4],["scheme",3]]],[[],[["option",4],["str",15]]],null,null,[[],["sizehint",3]],[[],["sizehint",3]],[[],["sizehint",3]],[[],[["error",8],["option",4]]],[[],["statuscode",3]],[[],["statuscode",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["builder",3]],[[["socketaddr",4]],[["result",4],["error",3],["builder",3]]],[[],[["invalidheadername",3],["result",4],["entry",4]]],[[],["result",4]],[[],["result",4]],[[["hashmap",3]],[["headermap",3],["result",4]]],[[],["result",4]],[[["str",15]],[["result",4],["method",3]]],[[],[["method",3],["result",4]]],[[],["result",4]],[[],[["result",4],["statuscode",3]]],[[["str",15]],[["result",4],["statuscode",3]]],[[["u16",15]],[["result",4],["statuscode",3]]],[[],["result",4]],[[["string",3]],[["result",4],["uri",3]]],[[],[["result",4],["uri",3]]],[[["parts",3]],[["result",4],["uri",3]]],[[],["result",4]],[[["str",15]],[["result",4],["uri",3]]],[[["string",3]],[["uri",3],["result",4]]],[[["uri",3]],[["result",4],["uri",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],["poll",4]],[[["context",3],["pin",3]],[["option",4],["poll",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[]],[[],[["option",4],["error",3],["result",4]]],null,[[],["uri",3]],[[],["uri",3]],[[],["values",3]],[[],["valuesmut",3]],[[],["version",3]],[[],["version",3]],[[],["version",3]],[[],["version",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["headermap",3]],[[],["graceful",3]],[[],["body",3]],null,null,null,null,null,null,null,null,[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["boxbody",3]],[[],["chain",3]],[[]],[[]],[[],["usize",15]],[[]],[[],["bytes",3]],[[],["sizehint",3]],[[]],[[]],[[["bytes",3]],["ordering",4]],[[],["bytes",3]],[[["usize",15]],["bytes",3]],[[["usize",15]],["bytes",3]],[[]],[[],["data",3]],[[],["bytes",3]],[[],["sizehint",3]],[[]],[[]],[[],["bool",15]],[[["str",15]],["bool",15]],[[["string",3]],["bool",15]],[[["bytes",3]],["bool",15]],[[],["bool",15]],[[["bytesmut",3]],["bool",15]],[[["vec",3]],["bool",15]],[[],["bool",15]],[[],[["u64",15],["option",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["custom",3]],["bytes",3]],[[["bytestr",3]],["bytes",3]],[[]],[[["vec",3],["global",3],["u8",15]],["bytes",3]],[[],["bytes",3]],[[["string",3]],["bytes",3]],[[["bytesmut",3]],["bytes",3]],[[["str",15]],["bytes",3]],[[]],[[]],[[],["bytes",3]],[[],["bytes",3]],[[],["f32",15]],[[],["f32",15]],[[],["f64",15]],[[],["f64",15]],[[],["i128",15]],[[],["i128",15]],[[],["i16",15]],[[],["i16",15]],[[],["i32",15]],[[],["i32",15]],[[],["i64",15]],[[],["i64",15]],[[],["i8",15]],[[["usize",15]],["i64",15]],[[["usize",15]],["i64",15]],[[],["u128",15]],[[],["u128",15]],[[],["u16",15]],[[],["u16",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u64",15]],[[],["u8",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u64",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[],["u64",15]],[[],["mapdata",3]],[[],["maperr",3]],[[],["bytes",3]],[[],["sizehint",3]],[[],[["option",4],["ordering",4]]],[[["str",15]],[["option",4],["ordering",4]]],[[],[["option",4],["ordering",4]]],[[["string",3]],[["option",4],["ordering",4]]],[[["bytes",3]],[["option",4],["ordering",4]]],[[["vec",3]],[["option",4],["ordering",4]]],[[["pin",3],["context",3]],[["poll",4],["option",4]]],[[["context",3]],[["poll",4],["result",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4]]],[[],["reader",3]],[[],["usize",15]],[[],["usize",15]],[[["bytes",3]]],[[["headermap",3],["headervalue",3]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[],["sizehint",3]],[[],["bytes",3]],[[],["bytes",3]],[[["usize",15]]],[[["usize",15]],["bytes",3]],[[["usize",15]],["bytes",3]],[[["usize",15]],["take",3]],[[]],[[]],[[]],[[],["trailers",3]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["bytes",3]],[["result",4],["bytes",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["u64",15],["option",4]]],[[]],[[]],[[]],[[["u64",15]],["sizehint",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["client",3]],[[],[["client",3],["httpconnector",3]]],[[["uri",3]]],[[],["httpconnector",3]],[[],["builder",3]],[[]],[[]],null,null,[[],["builder",3]],[[["bool",15]]],[[],["builder",3]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[["bool",15]],["builder",3]],[[["usize",15]],["builder",3]],[[["usize",15]],["builder",3]],[[["bool",15]],["builder",3]],[[["bool",15]],["builder",3]],[[],["builder",3]],[[],["builder",3]],[[],["builder",3]],[[["duration",3]],["builder",3]],[[["bool",15]],["builder",3]],[[],["builder",3]],[[["bool",15]],["builder",3]],[[]],[[]],[[]],[[]],[[],[["httpconnector",3],["gairesolver",3]]],[[],["httpconnector",3]],[[["responsefuture",3],["pin",3],["context",3]],["poll",4]],[[["context",3]],[["poll",4],["result",4]]],[[],["builder",3]],[[["usize",15]],["builder",3]],[[["bool",15]],["builder",3]],null,[[["duration",3],["option",4]]],[[["duration",3],["option",4]]],[[["bool",15]],["builder",3]],[[["duration",3],["option",4]]],[[["option",4],["ipaddr",4]]],[[["ipv4addr",3],["ipv6addr",3]]],[[["bool",15]]],[[["usize",15],["option",4]]],[[["bool",15]],["httpconnector",3]],[[["usize",15],["option",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],["poll",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["request",3]]],[[],["builder",3]],[[]],[[],["builder",3]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]],["builder",3]],[[],["builder",3]],[[],["builder",3]],[[],["builder",3]],[[["duration",3]],["builder",3]],[[["bool",15]],["builder",3]],[[],["builder",3]],[[["bool",15]],["builder",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["parts",3]],null,[[],["builder",3]],[[["pin",3],["connection",3],["context",3]],["poll",4]],[[["pin",3],["context",3],["responsefuture",3]],["poll",4]],[[["context",3]],[["poll",4],["result",4]]],[[["context",3]],[["result",4],["poll",4]]],[[["context",3]],[["poll",4],["result",4]]],null,[[["request",3]],["responsefuture",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],["poll",4]],[[["context",3],["pin",3]],["poll",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["httpinfo",3]],[[]],[[],["connected",3]],null,[[],["connected",3]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[["extensions",3]]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["connected",3]],[[],["connected",3]],[[["bool",15]],["connected",3]],[[],["socketaddr",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["name",3]]],[[],["name",3]],[[],["gairesolver",3]],[[]],[[]],[[["name",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["name",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["name",3]],["bool",15]],[[],["gairesolver",3]],[[],["option",4]],[[["pin",3],["context",3],["gaifuture",3]],["poll",4]],[[["context",3]],[["result",4],["poll",4]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],["poll",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[["builder",3]],["connect",3]],[[["context",3]],[["result",4],["poll",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["headervalue",3]],[[]],[[["headervalue",3]],["ordering",4]],[[],["extensions",3]],[[["str",15]],["bool",15]],[[],["bool",15]],[[["headervalue",3]],["bool",15]],[[["string",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["invalidstatuscode",3]],["error",3]],[[]],[[["invalidheadername",3]],["error",3]],[[["invaliduri",3]],["error",3]],[[["invalidmethod",3]],["error",3]],[[["invalidheadervalue",3]],["error",3]],[[["infallible",4]],["error",3]],[[["invaliduriparts",3]],["error",3]],[[["u16",15]],["headervalue",3]],[[["u32",15]],["headervalue",3]],[[]],[[["headername",3]],["headervalue",3]],[[["compressionalgo",4]],["headervalue",3]],[[["u64",15]],["headervalue",3]],[[["headervalue",3]],["headervalue",3]],[[["usize",15]],["headervalue",3]],[[["i16",15]],["headervalue",3]],[[["isize",15]],["headervalue",3]],[[["i64",15]],["headervalue",3]],[[["i32",15]],["headervalue",3]],[[["httpdate",3]],["headervalue",3]],[[["flatcsv",3]],["headervalue",3]],[[["ifrange_",4]],["headervalue",3]],[[["entitytagrange",4]],["headervalue",3]],[[["seconds",3]],["headervalue",3]],[[["originorany",4]],["headervalue",3]],[[["policy",4]],["headervalue",3]],[[["headervaluestring",3]],["headervalue",3]],[[["originornull",4]],["headervalue",3]],[[["entitytag",3],["headervalue",3]],["headervalue",3]],[[["entitytag",3]],["headervalue",3]],[[["httpdate",3]],["headervalue",3]],[[["after",4]],["headervalue",3]],[[]],[[],[["result",4],["invalidheadervalue",3],["headervalue",3]]],[[],[["result",4],["invalidheadervalue",3],["headervalue",3]]],[[],["headervalue",3]],[[["headername",3]],["headervalue",3]],[[["str",15]],["headervalue",3]],[[["str",15]],[["result",4],["invalidheadervalue",3],["headervalue",3]]],[[["str",15]],[["result",4],["headervalue",3]]],[[],["option",4]],[[],["option",4]],[[],["error",8]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[],["extensions",3]],[[["headervalue",3]],[["option",4],["ordering",4]]],[[["string",3]],[["option",4],["ordering",4]]],[[["str",15]],[["option",4],["ordering",4]]],[[],[["option",4],["ordering",4]]],[[],[["option",4],["ordering",4]]],[[],["option",4]],null,null,[[["bool",15]]],[[],[["error",8],["option",4]]],null,[[]],[[],[["tostrerror",3],["result",4],["str",15]]],[[],["string",3]],[[],["result",4]],[[["str",15]],[["result",4],["headervalue",3]]],[[["string",3]],[["result",4],["headervalue",3]]],[[["vec",3],["global",3],["u8",15]],[["result",4],["headervalue",3]]],[[],["result",4]],[[["string",3]],[["headervalue",3],["result",4]]],[[],[["result",4],["headervalue",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,[[],[["result",4],["request",3],["error",3]]],[[]],[[]],[[]],[[]],[[],["builder",3]],[[],["builder",3]],null,[[],[["extensions",3],["option",4]]],[[],[["option",4],["extensions",3]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[],["builder",3]],null,[[],[["headermap",3],["option",4]]],[[],[["option",4],["headermap",3]]],[[]],[[]],[[],["builder",3]],null,[[],[["option",4],["method",3]]],[[],["builder",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["builder",3]],null,[[],[["option",4],["uri",3]]],[[["version",3]],["builder",3]],null,[[]],[[]],null,null,null,[[],[["error",3],["result",4],["response",3]]],[[]],[[]],[[]],[[]],[[],["builder",3]],[[],["builder",3]],null,[[],[["extensions",3],["option",4]]],[[],[["option",4],["extensions",3]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[],["builder",3]],null,[[],[["headermap",3],["option",4]]],[[],[["option",4],["headermap",3]]],[[]],[[]],[[],["builder",3]],[[],["builder",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["version",3]],["builder",3]],null,[[]],[[]],null,null,[[]],[[]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],null,null,null,[[]],[[]],null,[[],["builder",3]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[["bool",15]],["builder",3]],[[["bool",15]],["builder",3]],[[["usize",15]],["builder",3]],[[["bool",15]],["builder",3]],[[["bool",15]],["builder",3]],[[],["builder",3]],[[],["builder",3]],[[],["builder",3]],[[["duration",3]],["builder",3]],[[],["builder",3]],[[],["builder",3]],[[["bool",15]],["builder",3]],[[]],[[["http",3]],["builder",3]],[[],["server",3]],[[["duration",3],["option",4]],[["addrincoming",3],["builder",3]]],[[["bool",15]],[["addrincoming",3],["builder",3]]],[[["bool",15]],[["addrincoming",3],["builder",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[["pin",3],["context",3]],[["option",4],["poll",4]]],[[]],null,null,null,null,null,null,[[],["i32",15]],[[["socketaddr",4]],[["result",4],["addrincoming",3],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["http",3]],[[]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tcplistener",3]],[["result",4],["addrincoming",3],["error",3]]],[[["connection",3],["pin",3]]],[[["bool",15]],["http",3]],[[["bool",15]],["http",3]],[[["bool",15]],["http",3]],[[["bool",15]],["http",3]],[[],["http",3]],[[],["http",3]],[[],["http",3]],[[["duration",3]],["http",3]],[[],["http",3]],[[],["http",3]],[[["bool",15]],["http",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["tcpstream",3]],[[],["parts",3]],null,[[],["bool",15]],[[],["socketaddr",4]],[[["usize",15]],["http",3]],[[],[["exec",4],["http",3]]],[[["bool",15]],["http",3]],[[["connection",3],["pin",3],["context",3]],["poll",4]],[[["pin",3],["connecting",3],["context",3]],["poll",4]],[[["addrincoming",3],["pin",3],["context",3]],[["poll",4],["option",4]]],[[["addrstream",3],["pin",3],["context",3]],[["result",4],["poll",4]]],[[["readbuf",3],["context",3]],[["result",4],["poll",4]]],[[["pin",3],["context",3],["addrstream",3],["readbuf",3]],[["result",4],["poll",4]]],[[["addrstream",3],["pin",3],["context",3]],[["result",4],["poll",4]]],[[["context",3]],[["poll",4],["result",4]]],[[["addrstream",3],["pin",3],["context",3]],[["result",4],["poll",4]]],[[["addrstream",3],["pin",3],["context",3]],[["result",4],["poll",4]]],null,[[],["socketaddr",4]],[[],["connection",3]],null,[[["duration",3],["option",4]],["addrincoming",3]],[[["bool",15]],["addrincoming",3]],[[["bool",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["parts",3],["option",4]]],[[["context",3],["pin",3]],["poll",4]],[[["context",3],["pin",3]],["poll",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["http",3]],[[],["upgradeableconnection",3]],[[]],null,null,null,null,[[]],[[],["makeservicefn",3]],[[["context",3]],[["result",4],["poll",4]]],[[],["servicefn",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4],["parts",3],["upgraded",3]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["bool",15]],[[],["onupgrade",3]],[[["pin",3],["context",3],["onupgrade",3]],["poll",4]],[[["pin",3],["upgraded",3],["context",3]],[["result",4],["poll",4]]],[[["pin",3],["upgraded",3],["context",3],["readbuf",3]],[["result",4],["poll",4]]],[[["pin",3],["upgraded",3],["context",3]],[["result",4],["poll",4]]],[[["pin",3],["upgraded",3],["context",3]],[["result",4],["poll",4]]],[[["pin",3],["upgraded",3],["context",3]],[["result",4],["poll",4]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],["poll",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[],["httperror",3]],[[],["httperror",3]],null,[[],["httperror",3]],null,null,null,null,null,null,null,null,[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],null,[[],["httperror",3]],null,null,null,null,null,[[],["httperror",3]],null,[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],null,null,null,null,[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],null,[[],["httperror",3]],null,null,null,null,[[],["httperror",3]],[[],["httperror",3]],null,[[],["httperror",3]],[[],["httperror",3]],null,null,null,[[],["httperror",3]],[[],["httperror",3]],null,[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],null,null,[[],["httperror",3]],[[],["httperror",3]],null,null,null,null,null,[[],["httperror",3]],null,null,[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],null,[[],["httperror",3]],null,[[["mime",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],null,[[]],[[]],[[]],[[]],[[["error",3]],["readerror",4]],[[["error",3]],["readerror",4]],[[["utf8error",3]],["readerror",4]],[[["error",4]],["readerror",4]],[[["error",3]],["readerror",4]],[[]],[[["statuscode",3]],[["httperror",3],["option",4]]],[[["response",3],["depot",3],["request",3]],[["box",3],["pin",3]]],[[]],[[]],[[]],[[]],[[]],null,[[],[["error",8],["option",4]]],null,[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["httperror",3]],[[],["httperror",3]],[[["request",3],["depot",3],["response",3]],[["box",3],["pin",3]]],[[["request",3],["depot",3],["response",3]],[["box",3],["pin",3]]],[[["request",3],["depot",3],["response",3]],[["box",3],["pin",3]]],[[["request",3],["depot",3],["response",3]],[["box",3],["pin",3]]],[[["request",3],["depot",3],["response",3]],[["box",3],["pin",3]]],[[["request",3],["depot",3],["response",3]],[["box",3],["pin",3]]],null,null,null,null,null,null,null,null,null,null,null,[[],["and",3]],[[],["andthen",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["fnfilter",3]],[[]],[[],["methodfilter",3]],[[["pathstate",3]],["bool",15]],[[["pathstate",3]],["bool",15]],[[["pathstate",3]],["bool",15]],[[],["bool",15]],null,[[["request",3],["pathstate",3]],["bool",15]],[[["request",3],["pathstate",3]],["bool",15]],[[["request",3],["pathstate",3]],["bool",15]],[[["request",3],["pathstate",3]],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[],["fnfilter",3]],[[]],[[]],[[]],[[]],[[]],[[],["methodfilter",3]],null,[[],["methodfilter",3]],[[]],[[]],[[]],[[]],[[]],[[["pathstate",3]],["bool",15]],[[],["pathfilter",3]],[[["str",15]],["pathstate",3]],[[],["methodfilter",3]],[[],["or",3]],[[],["orelse",3]],[[],["methodfilter",3]],[[],["pathfilter",3]],[[],["methodfilter",3]],[[],["methodfilter",3]],[[["string",3]]],[[["string",3],["regex",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["and",3]],[[],["andthen",3]],[[],["methodfilter",3]],[[["pathstate",3]],["bool",15]],[[["request",3],["pathstate",3]],["bool",15]],[[],["fnfilter",3]],[[],["methodfilter",3]],[[],["methodfilter",3]],null,[[],["methodfilter",3]],[[],["or",3]],[[],["orelse",3]],[[],["methodfilter",3]],[[],["pathfilter",3]],[[],["methodfilter",3]],[[],["methodfilter",3]],null,null,null,null,[[],[["exec",4],["builder",3]]]],"p":[[3,"Request"],[3,"Response"],[3,"Router"],[3,"Service"],[3,"Server"],[3,"TlsServer"],[3,"CatcherImpl"],[3,"Depot"],[3,"Error"],[8,"Catcher"],[8,"Handler"],[8,"Writer"],[3,"Error"],[3,"Chain"],[8,"Context"],[3,"NamedFileBuilder"],[3,"FileChunk"],[3,"NamedFile"],[4,"ReadError"],[8,"HttpBody"],[3,"Mime"],[8,"BodyChunk"],[3,"HttpRange"],[3,"HttpError"],[4,"ParseError"],[4,"SameSite"],[3,"CookieJar"],[3,"Delta"],[3,"Iter"],[3,"EncodedCookie"],[3,"CookieBuilder"],[3,"Cookie"],[3,"FormData"],[3,"FilePart"],[4,"Entry"],[3,"OccupiedEntry"],[3,"InvalidHeaderName"],[3,"InvalidHeaderValue"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Drain"],[3,"GetAll"],[3,"VacantEntry"],[3,"ValueIter"],[3,"ValueIterMut"],[3,"ValueDrain"],[3,"ToStrError"],[3,"Authorization"],[3,"ContentLength"],[3,"ProxyAuthorization"],[3,"AccessControlAllowOrigin"],[3,"Expect"],[3,"ReferrerPolicy"],[3,"Origin"],[3,"SecWebsocketVersion"],[3,"IfMatch"],[3,"IfNoneMatch"],[3,"Vary"],[3,"HeaderName"],[3,"Server"],[3,"UserAgent"],[3,"AcceptRanges"],[3,"AccessControlAllowCredentials"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[3,"AccessControlExposeHeaders"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"Allow"],[3,"CacheControl"],[3,"Connection"],[3,"ContentDisposition"],[3,"ContentEncoding"],[3,"ContentLocation"],[3,"ContentRange"],[3,"ContentType"],[3,"Cookie"],[3,"Date"],[3,"ETag"],[3,"Expires"],[3,"Host"],[3,"IfModifiedSince"],[3,"IfRange"],[3,"IfUnmodifiedSince"],[3,"LastModified"],[3,"Location"],[3,"Pragma"],[3,"Range"],[3,"Referer"],[3,"RetryAfter"],[3,"SecWebsocketAccept"],[3,"SecWebsocketKey"],[3,"SetCookie"],[3,"StrictTransportSecurity"],[3,"Te"],[3,"TransferEncoding"],[3,"Upgrade"],[3,"Error"],[8,"Header"],[8,"HeaderMapExt"],[8,"Credentials"],[3,"Basic"],[3,"Bearer"],[3,"InvalidMethod"],[3,"NextField"],[3,"Field"],[3,"FieldData"],[3,"ReadToString"],[3,"Multipart"],[3,"FieldHeaders"],[3,"Parts"],[4,"Body"],[3,"Parts"],[3,"Scheme"],[3,"Port"],[3,"Authority"],[3,"PathAndQuery"],[3,"Builder"],[3,"Parts"],[3,"InvalidUri"],[3,"InvalidUriParts"],[3,"StatusCode"],[3,"Method"],[3,"Version"],[3,"HeaderMap"],[3,"Uri"],[3,"Server"],[3,"Request"],[3,"Response"],[3,"Body"],[3,"Error"],[3,"Client"],[3,"Sender"],[8,"Buf"],[3,"Bytes"],[3,"SizeHint"],[3,"HttpConnector"],[3,"ResponseFuture"],[3,"Builder"],[3,"SendRequest"],[3,"Connection"],[3,"ResponseFuture"],[3,"Builder"],[3,"Parts"],[3,"HttpInfo"],[3,"Connected"],[8,"Connection"],[3,"Name"],[3,"GaiAddrs"],[3,"GaiFuture"],[3,"GaiResolver"],[3,"InvalidNameError"],[3,"Connect"],[3,"HeaderValue"],[3,"Error"],[3,"Extensions"],[3,"Builder"],[3,"Builder"],[3,"InvalidStatusCode"],[8,"Executor"],[3,"Builder"],[8,"Accept"],[3,"AddrStream"],[3,"AddrIncoming"],[3,"Http"],[3,"Parts"],[3,"Connection"],[3,"Connecting"],[8,"Service"],[3,"Upgraded"],[3,"OnUpgrade"],[3,"Parts"],[3,"PlainText"],[3,"JsonText"],[3,"HtmlText"],[3,"MethodFilter"],[3,"DetectMatched"],[8,"Filter"],[3,"PathFilter"],[3,"FnFilter"],[3,"PathState"],[8,"PathPart"]]},\
"salvo_core":{"doc":"","t":[8,3,3,8,6,3,3,8,23,11,11,11,11,10,11,0,11,11,23,11,11,11,0,10,0,11,11,11,11,0,0,0,5,5,11,11,11,11,11,11,11,11,11,10,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,16,3,3,8,3,3,3,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,10,10,0,11,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,0,11,11,11,11,8,10,11,11,11,11,10,0,0,5,5,5,5,5,5,5,5,3,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,12,12,11,11,11,5,11,12,12,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,12,11,11,12,11,12,5,12,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,8,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,17,17,17,4,17,17,3,17,3,3,3,17,17,17,17,17,8,3,3,3,3,3,3,17,17,17,17,17,13,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,17,17,17,17,17,13,3,3,3,3,3,3,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,3,3,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,3,8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,4,13,13,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,3,3,18,18,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,18,18,18,18,18,18,18,18,8,3,18,18,18,18,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,18,18,18,18,3,18,18,18,3,3,18,18,18,18,18,18,18,18,18,18,8,11,11,11,23,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,23,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,3,6,3,3,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,3,8,11,11,11,11,11,11,11,11,5,10,11,10,11,11,11,5,11,11,5,5,11,11,0,11,5,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Catcher","CatcherImpl","Error","Handler","Result","Router","Service","Writer","async_trait","borrow","borrow","borrow_mut","borrow_mut","catch","catch","depot","fmt","fmt","fn_handler","from","from","from","fs","handle","http","into","into","new","new","prelude","routing","server","start","start_with_threads","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write","write","Depot","borrow","borrow","borrow_mut","borrow_mut","from","has","insert","into","take","transfer","try_borrow","try_borrow_mut","try_from","try_into","try_take","type_id","vzip","FileChunk","NamedFile","NamedFileBuilder","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer_size","build","builder","deref","deref_mut","disable_content_disposition","file","fmt","from","from","from","into","into","into","open","path","poll_next","set_content_disposition","set_content_encoding","set_content_type","try_from","try_from","try_from","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","use_etag","use_last_modified","vzip","vzip","vzip","with_attached_filename","with_buffer_size","with_content_encoding","with_content_type","with_disposition_type","write","Data","Error","HeaderMap","HeaderValue","HttpBody","Method","Mime","StatusCode","append","as_bytes","as_ref","as_ref","body_chunk","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","boxed","capacity","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","contains_key","data","default","drain","entry","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","errors","essence_str","extend","extend","fmt","fmt","fmt","fmt","form","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_iter","from_maybe_shared","from_maybe_shared_unchecked","from_name","from_static","from_str","from_str","from_str","get","get_all","get_mut","get_param","guess_accept_mime","hash","hash","header","index","insert","into","into","into","into_iter","is_empty","is_empty","is_end_stream","is_sensitive","iter","iter_mut","keys","keys_len","len","len","map_data","map_err","method","multipart","new","params","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","poll_data","poll_trailers","range","remove","request","reserve","response","set_sensitive","size_hint","subtype","suffix","to_owned","to_owned","to_owned","to_str","to_string","trailers","try_entry","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_","type_id","type_id","type_id","typed_get","typed_insert","typed_try_get","uri","values","values_mut","version","vzip","vzip","vzip","with_capacity","BodyChunk","as_slice","into_vec","is_empty","len","slice","split_into","http_error","read_error","BadGateway","BadRequest","Conflict","ExpectationFailed","FailedDependency","Forbidden","GatewayTimeout","Gone","HttpError","HttpResult","HttpVersionNotSupported","ImATeapot","InsufficientStorage","InternalServerError","LengthRequired","Locked","LoopDetected","MethodNotAllowed","MisdirectedRequest","NetworkAuthenticationRequired","NotAcceptable","NotExtended","NotFound","NotImplemented","PayloadTooLarge","PaymentRequired","PreconditionFailed","PreconditionRequired","ProxyAuthenticationRequired","RangeNotSatisfiable","RequestHeaderFieldsTooLarge","RequestTimeout","ServiceUnavailable","TooManyRequests","Unauthorized","UnavailableForLegalReasons","UnprocessableEntity","UnsupportedMediaType","UpgradeRequired","UriTooLong","VariantAlsoNegotiates","as_bytes","borrow","borrow_mut","code","detail","fmt","fmt","from","from_code","into","name","summary","to_string","try_from","try_into","type_id","vzip","with_detail","with_summary","write","BoundaryNotSpecified","Decoding","Eof","EofBeforeFirstBoundary","EofInFile","EofInMainHeaders","EofInPart","EofInPartHeaders","General","HttParse","Hyper","InvalidDisposition","InvalidRange","Io","MissingDisposition","NoCrLfAfterBoundary","NoName","NoRequestContentType","NotAFile","NotFormData","NotMultipart","Parsing","PartialHeaders","ReadError","SerdeJson","Utf8","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","into","source","to_string","try_from","try_into","type_id","vzip","write","FilePart","FormData","borrow","borrow","borrow_mut","borrow_mut","content_type","create","default","do_not_delete_on_drop","drop","fields","filename","files","fmt","from","from","headers","into","into","multipart","new","path","read_form_data","size","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ACCEPT","ACCEPT_CHARSET","ACCEPT_ENCODING","ACCEPT_LANGUAGE","ACCEPT_RANGES","ACCESS_CONTROL_ALLOW_CREDENTIALS","ACCESS_CONTROL_ALLOW_HEADERS","ACCESS_CONTROL_ALLOW_METHODS","ACCESS_CONTROL_ALLOW_ORIGIN","ACCESS_CONTROL_EXPOSE_HEADERS","ACCESS_CONTROL_MAX_AGE","ACCESS_CONTROL_REQUEST_HEADERS","ACCESS_CONTROL_REQUEST_METHOD","AGE","ALLOW","ALT_SVC","AUTHORIZATION","AsHeaderName","CACHE_CONTROL","CONNECTION","CONTENT_DISPOSITION","CONTENT_ENCODING","CONTENT_LANGUAGE","CONTENT_LENGTH","CONTENT_LOCATION","CONTENT_RANGE","CONTENT_SECURITY_POLICY","CONTENT_SECURITY_POLICY_REPORT_ONLY","CONTENT_TYPE","COOKIE","DATE","DNT","Drain","ETAG","EXPECT","EXPIRES","Entry","FORWARDED","FROM","GetAll","HOST","HeaderMap","HeaderName","HeaderValue","IF_MATCH","IF_MODIFIED_SINCE","IF_NONE_MATCH","IF_RANGE","IF_UNMODIFIED_SINCE","IntoHeaderName","IntoIter","InvalidHeaderName","InvalidHeaderValue","Iter","IterMut","Keys","LAST_MODIFIED","LINK","LOCATION","MAX_FORWARDS","ORIGIN","Occupied","OccupiedEntry","PRAGMA","PROXY_AUTHENTICATE","PROXY_AUTHORIZATION","PUBLIC_KEY_PINS","PUBLIC_KEY_PINS_REPORT_ONLY","RANGE","REFERER","REFERRER_POLICY","REFRESH","RETRY_AFTER","SEC_WEBSOCKET_ACCEPT","SEC_WEBSOCKET_EXTENSIONS","SEC_WEBSOCKET_KEY","SEC_WEBSOCKET_PROTOCOL","SEC_WEBSOCKET_VERSION","SERVER","SET_COOKIE","STRICT_TRANSPORT_SECURITY","TE","TRAILER","TRANSFER_ENCODING","ToStrError","UPGRADE","UPGRADE_INSECURE_REQUESTS","USER_AGENT","VARY","VIA","Vacant","VacantEntry","ValueDrain","ValueIter","ValueIterMut","Values","ValuesMut","WARNING","WWW_AUTHENTICATE","X_CONTENT_TYPE_OPTIONS","X_DNS_PREFETCH_CONTROL","X_FRAME_OPTIONS","X_XSS_PROTECTION","append","as_ref","as_ref","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_lowercase","from_static","from_str","get","get_mut","hash","insert","insert","insert_entry","insert_mult","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_mut","iter","iter","iter_mut","key","key","key","ne","next","next","next","next","next","next","next","next","next","next","next_back","next_back","or_insert","or_insert_with","remove","remove_entry","remove_entry_mult","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CONNECT","DELETE","GET","HEAD","InvalidMethod","Method","OPTIONS","PATCH","POST","PUT","TRACE","as_ref","as_str","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_str","hash","into","into","is_idempotent","is_safe","ne","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Field","FieldData","FieldHeaders","Multipart","NextField","ReadToString","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","charset","clone","clone_into","content_type","data","default","ext_headers","filename","fmt","fmt","from","from","from","from","from","from","headers","into","into","into","into","into","into","into_future","into_future","is_text","name","next_field","next_field_pinned","poll","poll","poll_field_chunk","poll_field_headers","poll_has_next_field","poll_next","read_to_string","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from_body_headers","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","with_body","HttpRange","borrow","borrow_mut","clone","clone_into","fmt","from","into","length","parse","start","to_owned","try_from","try_into","type_id","vzip","Body","BodyReader","Parts","Request","accept","body","body_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","channel","content_type","cookies","cookies_mut","default","default","empty","extensions","extensions","extensions_mut","fmt","fmt","fmt","form_data","frist_accept","from","from","from","from","from","from","from","from","from","from","from","from_hyper","get_cookie","get_file","get_files","get_form","get_form_or_query","get_header","get_param","get_query","get_query_or_form","headers","headers","headers_mut","into","into","into","is_end_stream","method","method","method_mut","new","params","params_mut","payload","poll_data","poll_next","poll_trailers","queries","read","read_from_form","read_from_json","read_from_text","read_text","remote_addr","set_remote_addr","size_hint","take_body","try_from","try_from","try_from","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","uri","uri","uri_mut","version","version","version_mut","vzip","vzip","vzip","wrap_stream","Body","Bytes","Empty","Parts","Response","Stream","add_cookie","body","body_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","commit","cookies","default","extensions","fmt","fmt","fmt","from","from","from","from","from_hyper","get_cookie","header_cookies","headers","headers","headers_mut","into","into","into","is_commited","new","poll_next","redirect_found","redirect_other","redirect_temporary","remove_cookie","render_binary","render_html_text","render_json","render_json_text","render_plain_text","render_xml_text","set_body","set_headers","set_http_error","set_status_code","status","status_code","streaming","take_body","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","version","version","version_mut","vzip","vzip","vzip","write_body_bytes","Authority","Builder","HTTP","HTTPS","InvalidUri","InvalidUriParts","Parts","PathAndQuery","Port","Scheme","Uri","as_ref","as_ref","as_ref","as_str","as_str","as_str","as_str","as_u16","authority","authority","authority","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_maybe_shared","from_maybe_shared","from_maybe_shared","from_parts","from_static","from_static","from_static","from_str","from_str","from_str","from_str","hash","hash","hash","host","host","into","into","into","into","into","into","into","into","into","into_parts","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","path","path_and_query","path_and_query","path_and_query","port","port","port_u16","port_u16","query","query","scheme","scheme","scheme","scheme_str","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","HTTP_09","HTTP_10","HTTP_11","HTTP_2","HTTP_3","Version","borrow","borrow_mut","clone","clone_into","cmp","default","eq","equivalent","fmt","from","hash","into","ne","partial_cmp","to_owned","try_from","try_into","type_id","vzip","ACCEPTED","ALREADY_REPORTED","BAD_GATEWAY","BAD_REQUEST","CONFLICT","CONTINUE","CREATED","EXPECTATION_FAILED","FAILED_DEPENDENCY","FORBIDDEN","FOUND","GATEWAY_TIMEOUT","GONE","HTTP_VERSION_NOT_SUPPORTED","Handler","HtmlText","IM_A_TEAPOT","IM_USED","INSUFFICIENT_STORAGE","INTERNAL_SERVER_ERROR","JsonText","LENGTH_REQUIRED","LOCKED","LOOP_DETECTED","METHOD_NOT_ALLOWED","MISDIRECTED_REQUEST","MOVED_PERMANENTLY","MULTIPLE_CHOICES","MULTI_STATUS","NETWORK_AUTHENTICATION_REQUIRED","NON_AUTHORITATIVE_INFORMATION","NOT_ACCEPTABLE","NOT_EXTENDED","NOT_FOUND","NOT_IMPLEMENTED","NOT_MODIFIED","NO_CONTENT","OK","PARTIAL_CONTENT","PAYLOAD_TOO_LARGE","PAYMENT_REQUIRED","PERMANENT_REDIRECT","PRECONDITION_FAILED","PRECONDITION_REQUIRED","PROCESSING","PROXY_AUTHENTICATION_REQUIRED","PlainText","RANGE_NOT_SATISFIABLE","REQUEST_HEADER_FIELDS_TOO_LARGE","REQUEST_TIMEOUT","RESET_CONTENT","Router","SEE_OTHER","SERVICE_UNAVAILABLE","SWITCHING_PROTOCOLS","Service","StatusCode","TEMPORARY_REDIRECT","TOO_MANY_REQUESTS","UNAUTHORIZED","UNAVAILABLE_FOR_LEGAL_REASONS","UNPROCESSABLE_ENTITY","UNSUPPORTED_MEDIA_TYPE","UPGRADE_REQUIRED","URI_TOO_LONG","USE_PROXY","VARIANT_ALSO_NEGOTIATES","Writer","allowed_media_types","as_str","as_u16","async_trait","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","canonical_reason","catchers","clone","clone_into","cmp","default","eq","eq","equivalent","fmt","fmt","fn_handler","from","from","from","from","from","from","from_bytes","from_str","from_u16","handle","hash","into","into","into","into","into","is_client_error","is_informational","is_redirection","is_server_error","is_success","ne","new","partial_cmp","poll_ready","router","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_allowed_media_types","with_catchers","write","write","write","write","DetectMatched","PathParams","PathState","Router","after","afters","afters","afters_mut","append","before","befores","befores","befores_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","delete","detect","eq","equivalent","filter","filter","filters","filters_mut","fmt","from","from","from","get","handle","handler","head","into","into","into","ne","new","new","options","patch","path","post","push","push_when","put","routers","routers_mut","then","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","Filter","FnFilter","MethodFilter","PathFilter","PathPart","and","and_then","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","delete","detect","detect","filter","filter","filter","fmt","fn_filter","from","from","get","head","into","into","method","new","options","or","or_else","patch","path","post","put","register_path_part_builder","register_path_part_regex","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","MethodFilter","borrow","borrow_mut","filter","from","into","try_from","try_into","type_id","vzip","Server","TlsServer","bind","bind","bind_incoming","bind_incoming_with_graceful_shutdown","bind_with_graceful_shutdown","borrow","borrow","borrow_mut","borrow_mut","builder","builder","cert","cert_path","client_auth_optional","client_auth_optional_path","client_auth_required","client_auth_required_path","from","from","into","into","key","key_path","new","ocsp_resp","start","start_with_threads","tls","try_bind","try_bind","try_bind_incoming","try_bind_incoming_with_graceful_shutdown","try_bind_with_graceful_shutdown","try_bind_with_graceful_shutdown","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_allowed_media_types","with_catchers"],"q":["salvo_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo_core::depot","","","","","","","","","","","","","","","","","","salvo_core::fs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo_core::httpsalvo_core::http::body_chunk","","","","","","","salvo_core::http::errors","","salvo_core::http::errors::http_error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo_core::http::errors::read_error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo_core::http::form","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo_core::http::header","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo_core::http::method","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo_core::http::multipart","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo_core::http::range","","","","","","","","","","","","","","","","salvo_core::http::request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo_core::http::response","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo_core::http::urisalvo_core::http::version","","","","","","","","","","","","","","","","","","","","","","","","","salvo_core::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo_core::routing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo_core::routing::filter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo_core::routing::filter::method","","","","","","","","","","","salvo_core::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Errors that can happen inside salvo.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A file with an associated name.","","","","","","","","","","","","","Disable <code>Content-Disposition</code> header.","Returns reference to the underlying <code>File</code> object.","","","","","","","","Attempts to open a file in read-only mode.","Retrieve the path of this file.","","Set the Content-Disposition for serving this file. This …","Set content encoding for serving this file","Set the MIME Content-Type for serving this file. By …","","","","","","","","","","","Specifies whether to use ETag or not.","Specifies whether to use Last-Modified or not.","","","","","","","","","","Values yielded by the <code>Body</code>.","The error type this <code>Body</code> might generate.","A set of HTTP headers","Represents an HTTP header field value.","Trait representing a streaming body of a Request or …","The Request Method (VERB)","A parsed mime or media type.","An HTTP status code (<code>status-code</code> in RFC 7230 et al.).","Inserts a key-value pair into the map.","Converts a <code>HeaderValue</code> to a byte slice.","","","Client- and server-side abstractions for HTTP …","","","","","","","Turn this body into a boxed trait object.","Returns the number of headers the map can hold without …","Clears the map, removing all key-value pairs. Keeps the …","","","","","","","","","Returns true if the map contains a value for the …","Returns future that resolves to next data chunk, if any.","","Clears the map, returning all entries as an iterator.","Gets the given key’s corresponding entry in the map for …","","","","","","","","","","","","","Return a <code>&str</code> of the Mime’s “essence”.","Extend a <code>HeaderMap</code> with the contents of another <code>HeaderMap</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to convert a byte slice to a <code>HeaderValue</code>.","","Attempt to convert a <code>Bytes</code> buffer to a <code>HeaderValue</code>.","Convert a <code>Bytes</code> directly into a <code>HeaderValue</code> without …","Converts a HeaderName into a HeaderValue","Convert a static string to a <code>HeaderValue</code>.","Attempt to convert a string to a <code>HeaderValue</code>.","","","Returns a reference to the value associated with the key.","Returns a view of all values associated with a key.","Returns a mutable reference to the value associated with …","Look up a parameter by name.","","","","HTTP header types","Panics","Inserts a key-value pair into the map.","","","","Creates a consuming iterator, that is, one that moves …","Returns true if the map contains no elements.","Returns true if the <code>HeaderValue</code> has a length of zero …","Returns <code>true</code> when the end of stream has been reached.","Returns <code>true</code> if the value represents sensitive data.","An iterator visiting all key-value pairs.","An iterator visiting all key-value pairs, with mutable …","An iterator visiting all keys.","Returns the number of keys stored in the map.","Returns the number of headers stored in the map.","Returns the length of <code>self</code>.","Maps this body’s data value to a different value.","Maps this body’s error value to a different value.","The HTTP request method","","Create an empty <code>HeaderMap</code>.","Returns an iterator over the parameters.","","","","","","","Attempt to pull out the next data buffer of this stream.","Poll for an optional <strong>single</strong> <code>HeaderMap</code> of trailers.","","Removes a key from the map, returning the value …","","Reserves capacity for at least <code>additional</code> more headers to …","","Mark that the header value represents sensitive …","Returns the bounds on the remaining length of the stream.","Get the subtype of this <code>Mime</code>.","Get an optional +suffix for this <code>Mime</code>.","","","","Yields a <code>&str</code> slice if the <code>HeaderValue</code> only contains …","","Returns future that resolves to trailers, if any.","Gets the given key’s corresponding entry in the map for …","","","","","","","","","","","","","Get the top level media type for this <code>Mime</code>.","","","","","","","URI component of request and response lines","An iterator visiting all values.","An iterator visiting all values mutably.","HTTP version","","","","Create an empty <code>HeaderMap</code> with the specified capacity.","","Get the slice representing the data of this chunk.","Equivalent to <code>self.as_slice().to_owned()</code>","Equivalent to <code>self.as_slice().is_empty()</code>","Equivalent to <code>self.as_slice().len()</code>","Slice the bytes in <code>self</code> according to the given range.","Split the chunk at <code>idx</code>, returning …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A file that is to be inserted into a <code>multipart/*</code> or …","The extracted text fields and uploaded files from a …","","","","","Mime content-type specified in the header","Create a new temporary FilePart (when created this way, …","","If you do not want the file on disk to be deleted when …","","Name-value pairs for plain text fields. Technically, …","","Name-value pairs for temporary files. Technically, these …","","","","The headers of the part","","","","","A temporary file containing the file content","Parse MIME <code>multipart/form-data</code> information from a stream …","Optionally, the size of the file.  This is filled when …","","","","","","","","","Advertises which content types the client is able to …","Advertises which character set the client is able to …","Advertises which content encoding the client is able to …","Advertises which languages the client is able to …","Marker used by the server to advertise partial request …","Preflight response indicating if the response to the …","Preflight response indicating permitted HTTP headers.","Preflight header response indicating permitted access …","Indicates whether the response can be shared with …","Indicates which headers can be exposed as part of the …","Indicates how long the results of a preflight request can …","Informs the server which HTTP headers will be used when …","Informs the server know which HTTP method will be used …","Indicates the time in seconds the object has been in a …","Lists the set of methods support by a resource.","Advertises the availability of alternate services to …","Contains the credentials to authenticate a user agent …","A marker trait used to identify values that can be used …","Specifies directives for caching mechanisms in both …","Controls whether or not the network connection stays open …","Indicates if the content is expected to be displayed …","Used to compress the media-type.","Used to describe the languages intended for the audience.","Indicates the size fo the entity-body.","Indicates an alternate location for the returned data.","Indicates where in a full body message a partial message …","Allows controlling resources the user agent is allowed to …","Allows experimenting with policies by monitoring their …","Used to indicate the media type of the resource.","Contains stored HTTP cookies previously sent by the …","Contains the date and time at which the message was …","Indicates the client’s tracking preference.","A drain iterator for <code>HeaderMap</code>.","Identifier for a specific version of a resource.","Indicates expectations that need to be fulfilled by the …","Contains the date/time after which the response is …","A view into a single location in a <code>HeaderMap</code>, which may …","Contains information from the client-facing side of proxy …","Contains an Internet email address for a human user who …","A view to all values stored in a single entry.","Specifies the domain name of the server and (optionally) …","A set of HTTP headers","Represents an HTTP header field name","Represents an HTTP header field value.","Makes a request conditional based on the E-Tag.","Makes a request conditional based on the modification …","Makes a request conditional based on the E-Tag.","Makes a request conditional based on range.","Makes the request conditional based on the last …","A marker trait used to identify values that can be used …","An owning iterator over the entries of a <code>HeaderMap</code>.","A possible error when converting a <code>HeaderName</code> from …","A possible error when converting a <code>HeaderValue</code> from a …","<code>HeaderMap</code> entry iterator.","<code>HeaderMap</code> mutable entry iterator","An iterator over <code>HeaderMap</code> keys.","Content-Types that are acceptable for the response.","Allows the server to point an interested client to …","Indicates the URL to redirect a page to.","Indicates the max number of intermediaries the request …","Indicates where a fetch originates from.","An occupied entry","A view into a single occupied location in a <code>HeaderMap</code>.","HTTP/1.0 header usually used for backwards compatibility.","Defines the authentication method that should be used to …","Contains the credentials to authenticate a user agent to …","Associates a specific cryptographic public key with a …","Sends reports of pinning violation to the report-uri …","Indicates the part of a document that the server should …","Contains the address of the previous web page from which …","Governs which referrer information should be included …","Informs the web browser that the current page or frame …","The Retry-After response HTTP header indicates how long …","The |Sec-WebSocket-Accept| header field is used in the …","The |Sec-WebSocket-Extensions| header field is used in …","The |Sec-WebSocket-Key| header field is used in the …","The |Sec-WebSocket-Protocol| header field is used in the …","The |Sec-WebSocket-Version| header field is used in the …","Contains information about the software used by the …","Used to send cookies from the server to the user agent.","Tells the client to communicate with HTTPS instead of …","Informs the server of transfer encodings willing to be …","Allows the sender to include additional fields at the end …","Specifies the form of encoding used to safely transfer …","A possible error when converting a <code>HeaderValue</code> to a …","Used as part of the exchange to upgrade the protocol.","Sends a signal to the server expressing the client’s …","Contains a string that allows identifying the requesting …","Determines how to match future requests with cached …","Added by proxies to track routing.","A vacant entry","A view into a single empty location in a <code>HeaderMap</code>.","An drain iterator of all values associated with a single …","An iterator of all values associated with a single header …","A mutable iterator of all values associated with a single …","<code>HeaderMap</code> value iterator.","<code>HeaderMap</code> mutable value iterator","General HTTP header contains information about possible …","Defines the authentication method that should be used to …","Marker used by the server to indicate that the MIME types …","Controls DNS prefetching.","Indicates whether or not a browser should be allowed to …","Stop pages from loading when an XSS attack is detected.","Insert the value into the entry.","","","Returns a <code>str</code> representation of the header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Performs a case-insensitive comparison of the string …","Performs a case-insensitive comparison of the string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a slice of bytes to an HTTP header name.","Converts a slice of bytes to an HTTP header name.","Converts a static string to a HTTP header name.","","Get a reference to the first value in the entry.","Get a mutable reference to the first value in the entry.","","Insert the value into the entry.","Sets the value of the entry.","Insert the value into the entry.","Sets the value of the entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Take ownership of the key","Converts the <code>OccupiedEntry</code> into a mutable reference to …","Returns an iterator visiting all values associated with …","Returns an iterator visiting all values associated with …","Returns an iterator mutably visiting all values …","Returns a reference to the entry’s key","Returns a reference to the entry’s key","Returns a reference to the entry’s key.","","","","","","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result …","Remove the entry from the map.","Remove the entry from the map.","Remove the entry from the map.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","CONNECT","DELETE","GET","HEAD","A possible error value when converting <code>Method</code> from bytes.","The Request Method (VERB)","OPTIONS","PATCH","POST","PUT","TRACE","","Return a &str representation of the HTTP method","","","","","","","","","","","","","","","","","","","","","Converts a slice of bytes to an HTTP method.","","","","","Whether a method is considered “idempotent”, meaning …","Whether a method is considered “safe”, meaning the …","","","","","","","","","","","","","","","A single field in a multipart stream.","The data of a field in a multipart stream, as a stream of …","The headers of a <code>Field</code>, including the name, filename, and …","The server-side implementation of <code>multipart/form-data</code> …","A <code>Future</code> potentially yielding the next field in the …","A <code>Future</code> that yields the body of a field read to a <code>String</code>.","","","","","","","","","","","","","The character set of this field, if provided.","","","The <code>Content-Type</code> of this field, as provided by the …","The data of this field in the request, represented as a …","","Any additional headers, standard or otherwise, for this …","The name of the file as it was on the client. If not …","","","","","","","","","The headers of this field, including the name, filename, …","","","","","","","","","<code>true</code> if <code>content_type</code> is <code>None</code> or <code>text/*</code> (such as <code>text/plain</code>…","The name of the field as provided by the client.","","Same as <code>.next_field()</code> but with a receiver of …","","","Poll for the next chunk of the current field.","Poll for the headers of the next field, returning the …","Poll for the next boundary, returning <code>true</code> if a field …","","Return a <code>Future</code> which yields the result of reading this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a new <code>Multipart</code> with the given body reader and …","HTTP Range header representation.","","","","","","","","","Parses Range HTTP header string as per RFC 2616.","","","","","","","A stream of <code>Bytes</code>, used when receiving bodies.","","Component parts of an HTTP <code>Request</code>","Represents an HTTP request.","","Returns a reference to the associated HTTP body.","Returns a mutable reference to the associated HTTP body.","","","","","","","Create a <code>Body</code> stream with an associated sender half.","","","","","Returns <code>Body::empty()</code>.","Create an empty <code>Body</code> stream.","Returns a reference to the associated extensions.","The request’s extensions","Returns a mutable reference to the associated extensions.","","","","","","","","","","","","","","","","","Create a request from an hyper::Request.","","","","","","Get header with supplied name and try to parse to a ‘T…","","","","Returns a reference to the associated header field map.","The request’s headers","Returns a mutable reference to the associated header …","","","","","Returns a reference to the associated HTTP method.","The request’s method","Returns a mutable reference to the associated HTTP method.","Creates a new blank <code>Request</code>","","","","","","","","","","","","","","","","Take body form the request, and set the body to None in …","","","","","","","","","","","Returns a reference to the associated URI.","The request’s URI","Returns a mutable reference to the associated URI.","Returns the associated version.","The request’s version","Returns a mutable reference to the associated version.","","","","Wrap a futures <code>Stream</code> in a box inside <code>Body</code>.","","","","Component parts of an HTTP <code>Response</code>","Represents an HTTP response","","","","","","","","","","","","","","The response’s extensions","","","","","","","","Create a request from an hyper::Request.","","","","The response’s headers","","","","","","Creates a new blank <code>Response</code>.","","","","","","","","","","","","","","","","The response’s status","","","","","","","","","","","","","","","","The response’s version","","","","","","Represents the authority component of a URI.","A builder for <code>Uri</code>s.","HTTP protocol scheme","HTTP protocol over TLS.","An error resulting from a failed attempt to construct a …","An error resulting from a failed attempt to construct a …","The various parts of a URI.","Represents the path component of a URI","The port component of a URI.","Represents the scheme component of a URI","The URI component of a request.","","","","Returns the port number as a <code>str</code>.","Return a str representation of the authority","Returns the path and query as a string component.","Return a str representation of the scheme","Returns the port number as a <code>u16</code>.","Set the <code>Authority</code> for this URI.","Get the authority of this <code>Uri</code>.","The authority component of a URI","","","","","","","","","","","","","","","","","","","Consumes this builder, and tries to construct a valid <code>Uri</code> …","Creates a new builder-style object to manufacture a <code>Uri</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to convert a <code>Bytes</code> buffer to a <code>Authority</code>.","Attempt to convert a <code>Bytes</code> buffer to a <code>PathAndQuery</code>.","Attempt to convert a <code>Bytes</code> buffer to a <code>Uri</code>.","Attempt to convert a <code>Uri</code> from <code>Parts</code>","Attempt to convert an <code>Authority</code> from a static string.","Convert a <code>PathAndQuery</code> from a static string.","Convert a <code>Uri</code> from a static string.","","","","","","","","Get the host of this <code>Authority</code>.","Get the host of this <code>Uri</code>.","","","","","","","","","","Convert a <code>Uri</code> into <code>Parts</code>.","Creates a new default instance of <code>Builder</code> to construct a …","","","","","","","","","Returns the path component","Get the path of this <code>Uri</code>.","Set the <code>PathAndQuery</code> for this URI.","Returns the path & query components of the Uri","The origin-form component of a URI","Get the port part of this <code>Authority</code>.","Get the port part of this <code>Uri</code>.","Get the port of this <code>Authority</code> as a <code>u16</code>.","Get the port of this <code>Uri</code> as a <code>u16</code>.","Returns the query string component","Get the query string of this <code>Uri</code>, starting after the <code>?</code>.","Set the <code>Scheme</code> for this URI.","Get the scheme of this <code>Uri</code>.","The scheme component of a URI","Get the scheme of this <code>Uri</code> as a <code>&str</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>HTTP/0.9</code>","<code>HTTP/1.0</code>","<code>HTTP/1.1</code>","<code>HTTP/2.0</code>","<code>HTTP/3.0</code>","Represents a version of the HTTP spec.","","","","","","","","","","","","","","","","","","","","202 Accepted [RFC7231, Section 6.3.3]","208 Already Reported [RFC5842]","502 Bad Gateway [RFC7231, Section 6.6.3]","400 Bad Request [RFC7231, Section 6.5.1]","409 Conflict [RFC7231, Section 6.5.8]","100 Continue [RFC7231, Section 6.2.1]","201 Created [RFC7231, Section 6.3.2]","417 Expectation Failed [RFC7231, Section 6.5.14]","424 Failed Dependency [RFC4918]","403 Forbidden [RFC7231, Section 6.5.3]","302 Found [RFC7231, Section 6.4.3]","504 Gateway Timeout [RFC7231, Section 6.6.5]","410 Gone [RFC7231, Section 6.5.9]","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]","","","418 I’m a teapot [curiously not registered by IANA but …","226 IM Used [RFC3229]","507 Insufficient Storage [RFC4918]","500 Internal Server Error [RFC7231, Section 6.6.1]","","411 Length Required [RFC7231, Section 6.5.10]","423 Locked [RFC4918]","508 Loop Detected [RFC5842]","405 Method Not Allowed [RFC7231, Section 6.5.5]","421 Misdirected Request RFC7540, Section 9.1.2","301 Moved Permanently [RFC7231, Section 6.4.2]","300 Multiple Choices [RFC7231, Section 6.4.1]","207 Multi-Status [RFC4918]","511 Network Authentication Required [RFC6585]","203 Non-Authoritative Information [RFC7231, Section 6.3.4]","406 Not Acceptable [RFC7231, Section 6.5.6]","510 Not Extended [RFC2774]","404 Not Found [RFC7231, Section 6.5.4]","501 Not Implemented [RFC7231, Section 6.6.2]","304 Not Modified [RFC7232, Section 4.1]","204 No Content [RFC7231, Section 6.3.5]","200 OK [RFC7231, Section 6.3.1]","206 Partial Content [RFC7233, Section 4.1]","413 Payload Too Large [RFC7231, Section 6.5.11]","402 Payment Required [RFC7231, Section 6.5.2]","308 Permanent Redirect [RFC7238]","412 Precondition Failed [RFC7232, Section 4.2]","428 Precondition Required [RFC6585]","102 Processing [RFC2518]","407 Proxy Authentication Required [RFC7235, Section 3.2]","","416 Range Not Satisfiable [RFC7233, Section 4.4]","431 Request Header Fields Too Large [RFC6585]","408 Request Timeout [RFC7231, Section 6.5.7]","205 Reset Content [RFC7231, Section 6.3.6]","","303 See Other [RFC7231, Section 6.4.4]","503 Service Unavailable [RFC7231, Section 6.6.4]","101 Switching Protocols [RFC7231, Section 6.2.2]","","An HTTP status code (<code>status-code</code> in RFC 7230 et al.).","307 Temporary Redirect [RFC7231, Section 6.4.7]","429 Too Many Requests [RFC6585]","401 Unauthorized [RFC7235, Section 3.1]","451 Unavailable For Legal Reasons [RFC7725]","422 Unprocessable Entity [RFC4918]","415 Unsupported Media Type [RFC7231, Section 6.5.13]","426 Upgrade Required [RFC7231, Section 6.5.15]","414 URI Too Long [RFC7231, Section 6.5.12]","305 Use Proxy [RFC7231, Section 6.4.5]","506 Variant Also Negotiates [RFC2295]","","","Returns a &str representation of the <code>StatusCode</code>","Returns the <code>u16</code> corresponding to this <code>StatusCode</code>.","","","","","","","","","","","","","Get the standardised <code>reason-phrase</code> for this status code.","","","","","","","","","","","","","","","","","","Converts a &[u8] to a status code","","Converts a u16 to a status code.","","","","","","","","Check if status is within 400-499.","Check if status is within 100-199.","Check if status is within 300-399.","Check if status is within 500-599.","Check if status is within 200-299.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bind to a socket address, returning a <code>Future</code> that can be …","Bind to a socket address, returning a <code>Future</code> that can be …","Bind to a stream, returning a <code>Future</code> that can be executed …","","Create a server with graceful shutdown signal.","","","","","","","Specify the in-memory contents of the certificate.","Specify the file path to read the certificate.","Specify the in-memory contents of the trust anchor for …","Specify the file path to read the trust anchor for …","Specify the in-memory contents of the trust anchor for …","Specify the file path to read the trust anchor for …","","","","","Specify the in-memory contents of the private key.","Specify the file path to read the private key.","","Specify the DER-encoded OCSP response.","","","Configure a server to use TLS.","Bind to a socket address, returning a <code>Future</code> that can be …","Bind to a socket address, returning a <code>Future</code> that can be …","Run this <code>Server</code> forever on the current thread with a …","Setup this <code>Server</code> with a specific stream of incoming …","Create a server with graceful shutdown signal.","Create a server with graceful shutdown signal.","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,2,1,2,3,1,0,2,2,0,1,2,2,0,4,0,1,2,1,2,0,0,0,0,0,2,1,2,1,2,1,2,1,2,5,2,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,7,8,9,7,8,9,9,7,9,9,9,9,9,9,7,8,9,7,8,9,9,9,8,9,9,9,7,8,9,7,8,9,8,7,8,9,9,9,7,8,9,7,7,7,7,7,9,10,10,0,0,0,0,0,0,11,12,12,13,0,11,12,13,11,12,13,10,11,11,11,12,13,11,12,13,12,13,11,10,11,11,11,11,12,12,12,12,12,13,13,11,12,13,0,13,11,11,11,12,13,13,0,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,11,12,12,12,12,12,12,13,11,11,11,13,0,12,13,0,11,11,11,12,13,11,11,12,10,12,11,11,11,11,11,12,10,10,0,0,11,13,12,12,12,12,12,13,10,10,0,11,0,11,0,12,10,13,13,11,12,13,12,13,10,11,11,11,12,12,12,12,12,12,13,11,12,13,13,11,12,13,11,11,11,0,11,11,0,11,12,13,11,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,0,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,17,18,17,18,18,18,17,18,18,17,18,17,18,17,18,18,17,18,17,17,18,0,18,17,18,17,18,17,18,17,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,20,21,21,21,22,23,24,25,26,27,28,29,30,31,19,32,20,33,34,35,21,21,36,22,23,24,25,26,27,28,29,30,31,19,32,20,33,34,35,21,36,21,21,26,30,35,31,21,21,21,21,21,22,22,23,23,24,25,26,27,28,29,30,31,19,32,20,33,34,35,21,21,36,36,22,23,24,25,26,27,28,29,30,31,19,32,20,33,34,35,21,21,36,21,21,21,21,20,20,21,32,20,32,20,22,23,24,25,26,27,28,29,30,31,19,32,20,33,34,35,21,36,24,25,26,27,28,29,30,31,20,33,34,35,32,20,31,20,20,19,32,20,21,24,25,26,27,28,29,30,33,34,35,33,34,19,19,20,20,20,24,25,26,27,28,29,30,33,35,21,22,23,21,36,22,23,24,25,26,27,28,29,30,31,19,32,20,33,34,35,21,21,21,21,36,22,23,24,25,26,27,28,29,30,31,19,32,20,33,34,35,21,36,22,23,24,25,26,27,28,29,30,31,19,32,20,33,34,35,21,36,22,23,24,25,26,27,28,29,30,31,19,32,20,33,34,35,21,36,37,37,37,37,0,0,37,37,37,37,37,37,37,38,37,38,37,37,37,37,37,37,37,37,37,38,38,37,37,38,37,37,37,37,37,37,38,37,37,37,37,37,38,37,38,37,37,37,38,37,38,37,38,37,0,0,0,0,0,0,39,40,41,42,43,44,39,40,41,42,43,44,44,44,44,44,40,44,44,44,40,44,39,40,41,42,43,44,40,39,40,41,42,43,44,39,42,44,44,43,43,39,42,43,43,43,41,41,44,39,40,41,42,43,44,43,39,40,41,42,43,44,39,42,41,39,40,41,42,43,44,39,40,41,42,43,44,43,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,0,0,0,46,46,46,46,47,48,46,47,48,48,46,46,46,46,48,48,46,47,46,46,47,48,46,46,46,47,48,48,48,48,48,48,48,48,48,46,46,46,46,46,46,46,46,46,46,46,47,46,46,47,48,48,46,47,46,46,46,46,46,48,48,48,46,46,46,46,46,46,46,46,48,46,46,47,48,46,47,48,48,46,47,48,46,47,46,46,47,46,46,47,48,48,0,49,49,0,0,49,50,50,50,49,50,51,49,50,51,50,50,50,51,50,50,51,49,49,50,51,50,50,50,50,51,50,49,50,51,50,50,49,50,50,50,50,50,50,50,50,50,50,50,50,50,50,51,50,50,50,50,49,50,51,49,50,51,49,49,50,51,50,51,50,49,50,51,50,0,0,52,52,0,0,0,0,0,0,0,53,54,52,53,54,55,52,53,56,57,58,53,54,56,55,52,57,58,59,60,53,54,56,55,52,57,58,59,60,56,57,54,55,52,57,54,55,52,57,56,57,58,53,53,54,54,54,54,55,55,55,55,52,52,57,57,57,54,55,52,57,53,53,54,54,56,55,55,52,52,57,57,58,59,59,60,60,53,54,56,55,52,57,58,58,59,59,60,60,54,55,57,57,54,55,57,54,55,52,57,54,52,57,54,57,53,54,56,55,52,57,58,59,60,57,56,54,54,54,54,55,55,55,55,55,57,56,57,58,54,57,54,57,55,57,56,57,58,57,54,55,52,57,53,54,55,52,57,59,60,53,54,54,54,56,55,55,55,55,55,52,52,52,57,57,57,57,57,57,57,58,59,60,53,54,56,55,52,57,58,59,60,53,54,56,55,52,57,58,59,60,53,54,56,55,52,57,58,59,60,61,61,61,61,61,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,0,62,62,62,62,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,62,62,62,62,0,62,62,62,0,0,62,62,62,62,62,62,62,62,62,62,0,63,62,62,0,63,64,65,66,62,63,64,65,66,62,63,62,63,62,62,62,62,62,62,62,62,62,0,63,64,65,66,62,62,62,62,62,4,62,63,64,65,66,62,62,62,62,62,62,62,63,62,63,63,62,62,63,64,65,66,62,62,62,62,63,64,65,66,62,63,64,65,66,62,63,64,65,66,62,63,63,5,64,65,66,0,0,0,0,67,67,68,67,67,67,67,68,67,67,68,69,67,68,69,67,67,67,69,69,0,67,67,67,69,67,68,69,67,67,68,67,67,68,69,69,67,69,67,67,67,67,67,67,67,67,67,67,67,68,69,67,68,69,67,68,69,67,68,69,70,0,0,0,0,0,71,71,72,73,72,73,73,73,0,74,72,71,72,73,72,0,72,73,0,0,72,73,0,72,0,71,71,0,0,0,0,72,72,73,72,73,72,73,72,73,72,73,70,0,70,70,70,70,70,70,70,70,70,0,0,75,76,75,75,75,75,76,75,76,0,76,76,76,76,76,76,76,75,76,75,76,76,76,75,76,76,76,75,75,76,75,75,75,76,75,76,75,76,75,76,75,76,75,75],"f":[null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["response",3],["request",3]],["bool",15]],[[["response",3],["request",3]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[["infallible",4]],["error",3]],null,[[["depot",3],["request",3],["response",3]],[["pin",3],["box",3]]],null,[[]],[[]],[[["httperror",3]],["catcherimpl",3]],[[["box",3],["into",8]],["error",3]],null,null,null,[[["future",8]]],[[["future",8],["usize",15]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["depot",3],["request",3],["response",3]],[["pin",3],["box",3]]],[[["depot",3],["request",3],["response",3]],[["pin",3],["box",3]]],null,[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[],["depot",3]],[[],["option",4]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["option",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],[["result",6],["namedfile",3]]],[[["pathbuf",3]],["namedfilebuilder",3]],[[],["file",3]],[[],["file",3]],[[]],[[],["file",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pathbuf",3]],[["result",6],["namedfile",3]]],[[],["path",3]],[[["context",3],["pin",3]],[["poll",4],["option",4]]],[[["headervalue",3]]],[[["headervalue",3]]],[[["mime",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],[["poll",4],["option",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["bool",15]]],[[["bool",15]]],[[]],[[]],[[]],[[["string",3],["into",8]],["namedfilebuilder",3]],[[["u64",15]],["namedfilebuilder",3]],[[["string",3],["into",8]],["namedfilebuilder",3]],[[["into",8],["mime",3]],["namedfilebuilder",3]],[[["string",3],["into",8]],["namedfilebuilder",3]],[[["depot",3],["request",3],["response",3]],[["pin",3],["box",3]]],null,null,null,null,null,null,null,null,[[],["bool",15]],[[]],[[]],[[],["str",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["boxbody",3]],[[],["usize",15]],[[]],[[],["headermap",3]],[[],["headervalue",3]],[[],["mime",3]],[[]],[[]],[[]],[[["headervalue",3]],["ordering",4]],[[["mime",3]],["ordering",4]],[[],["bool",15]],[[],["data",3]],[[],["headermap",3]],[[],["drain",3]],[[],["entry",4]],[[["headermap",3]],["bool",15]],[[],["bool",15]],[[["string",3]],["bool",15]],[[["headervalue",3]],["bool",15]],[[],["bool",15]],[[["str",15]],["bool",15]],[[["mime",3]],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["str",15]],[[]],[[]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],null,[[]],[[["u16",15]],["headervalue",3]],[[["u32",15]],["headervalue",3]],[[["i32",15]],["headervalue",3]],[[["headername",3]],["headervalue",3]],[[["u64",15]],["headervalue",3]],[[["i64",15]],["headervalue",3]],[[["headervalue",3]],["headervalue",3]],[[]],[[["usize",15]],["headervalue",3]],[[["originorany",4]],["headervalue",3]],[[["httpdate",3]],["headervalue",3]],[[["flatcsv",3]],["headervalue",3]],[[["ifrange_",4]],["headervalue",3]],[[["entitytagrange",4]],["headervalue",3]],[[["i16",15]],["headervalue",3]],[[["seconds",3]],["headervalue",3]],[[["after",4]],["headervalue",3]],[[["httpdate",3]],["headervalue",3]],[[["entitytag",3]],["headervalue",3]],[[["headervalue",3],["entitytag",3]],["headervalue",3]],[[["originornull",4]],["headervalue",3]],[[["headervaluestring",3]],["headervalue",3]],[[["policy",4]],["headervalue",3]],[[["isize",15]],["headervalue",3]],[[["contenttype",3]],["mime",3]],[[]],[[],[["result",4],["headervalue",3],["invalidheadervalue",3]]],[[],["headermap",3]],[[],[["result",4],["headervalue",3],["invalidheadervalue",3]]],[[],["headervalue",3]],[[["headername",3]],["headervalue",3]],[[["str",15]],["headervalue",3]],[[["str",15]],[["result",4],["headervalue",3],["invalidheadervalue",3]]],[[["str",15]],[["result",4],["headervalue",3]]],[[["str",15]],[["mime",3],["result",4]]],[[],["option",4]],[[],["getall",3]],[[],["option",4]],[[],[["option",4],["name",3]]],[[["option",4],["request",3],["mime",3]],["mime",3]],[[]],[[]],null,[[]],[[],["option",4]],[[]],[[]],[[]],[[],["intoiter",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[],["itermut",3]],[[],["keys",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["mapdata",3]],[[],["maperr",3]],null,null,[[],[["headermap",3],["headervalue",3]]],[[],["params",3]],[[["headervalue",3]],[["option",4],["ordering",4]]],[[],[["option",4],["ordering",4]]],[[],[["option",4],["ordering",4]]],[[["str",15]],[["option",4],["ordering",4]]],[[["string",3]],[["option",4],["ordering",4]]],[[["mime",3]],[["option",4],["ordering",4]]],[[["pin",3],["context",3]],[["option",4],["poll",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4]]],null,[[],["option",4]],null,[[["usize",15]]],null,[[["bool",15]]],[[],["sizehint",3]],[[],["name",3]],[[],[["name",3],["option",4]]],[[]],[[]],[[]],[[],[["result",4],["tostrerror",3],["str",15]]],[[],["string",3]],[[],["trailers",3]],[[],[["result",4],["entry",4],["invalidheadername",3]]],[[["hashmap",3]],[["result",4],["headermap",3]]],[[],["result",4]],[[["string",3]],[["headervalue",3],["result",4]]],[[],[["result",4],["headervalue",3]]],[[["str",15]],[["result",4],["headervalue",3]]],[[["string",3]],[["result",4],["headervalue",3]]],[[],["result",4]],[[["vec",3],["global",3],["u8",15]],[["result",4],["headervalue",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["name",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[]],[[],[["error",3],["result",4],["option",4]]],null,[[],["values",3]],[[],["valuesmut",3]],null,[[]],[[]],[[]],[[["usize",15]],["headermap",3]],null,[[]],[[],[["vec",3],["u8",15]]],[[],["bool",15]],[[],["usize",15]],[[]],[[["usize",15]]],null,null,[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],null,null,[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[],["httperror",3]],[[["mime",3]]],[[]],[[]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["statuscode",3]],[["httperror",3],["option",4]]],[[]],null,null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[["depot",3],["request",3],["response",3]],[["pin",3],["box",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["error",3]]],[[["utf8error",3]]],[[["error",3]]],[[["error",3]]],[[["error",4]]],[[]],[[],[["error",8],["option",4]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["depot",3],["request",3],["response",3]],[["pin",3],["box",3]]],null,null,[[]],[[]],[[]],[[]],[[],[["mime",3],["option",4]]],[[["field",3]]],[[]],[[]],[[]],null,[[],[["option",4],["str",15]]],null,[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],null,[[],["formdata",3]],null,[[["headermap",3],["body",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["str",15]],[[]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["headername",3]],[[]],[[]],[[]],[[]],[[["getall",3]],["bool",15]],[[["headername",3]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["headername",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["headername",3]],["headername",3]],[[]],[[]],[[],[["result",4],["headername",3],["invalidheadername",3]]],[[],[["result",4],["headername",3],["invalidheadername",3]]],[[["str",15]],["headername",3]],[[["str",15]],[["result",4],["headername",3],["invalidheadername",3]]],[[]],[[]],[[]],[[]],[[]],[[],["occupiedentry",3]],[[],["valuedrain",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["valueiter",3]],[[],["valueitermut",3]],[[]],[[]],[[]],[[],["headername",3]],[[]],[[],["valueiter",3]],[[],["valueiter",3]],[[],["valueitermut",3]],[[],["headername",3]],[[],["headername",3]],[[],["headername",3]],[[["headername",3]],["bool",15]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["headername",3],["result",4]]],[[["string",3]],[["headername",3],["result",4]]],[[["str",15]],[["headername",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[],["method",3]],[[]],[[],["method",3]],[[["method",3]],["bool",15]],[[["str",15]],["bool",15]],[[["method",3]],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[["accesscontrolrequestmethod",3]],["method",3]],[[["method",3]],["method",3]],[[],[["method",3],["invalidmethod",3],["result",4]]],[[["str",15]],[["method",3],["result",4]]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["method",3]],["bool",15]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],[["method",3],["result",4]]],[[["str",15]],[["method",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["name",3]]],[[],["fieldheaders",3]],[[]],null,null,[[],["fieldheaders",3]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[],["nextfield",3]],[[["pin",3]],["nextfield",3]],[[["context",3],["pin",3]],["poll",4]],[[["context",3],["pin",3]],["poll",4]],[[["context",3],["pin",3]],[["poll",4],["option",4]]],[[["context",3],["pin",3]],[["poll",4],["result",4]]],[[["context",3],["pin",3]],[["result",4],["poll",4]]],[[["context",3],["pin",3]],[["poll",4],["option",4]]],[[],["readtostring",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["headermap",3]],[["result",4],["readerror",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],[["poll",4],["option",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["string",3],["into",8]]],null,[[]],[[]],[[],["httprange",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[["u64",15],["str",15]],[["result",4],["readerror",4],["vec",3]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[],[["vec",3],["mime",3]]],[[],[["body",3],["option",4]]],[[],[["body",3],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["mime",3]]],[[],["cookiejar",3]],[[],["cookiejar",3]],[[],["request",3]],[[],["body",3]],[[],["body",3]],[[],["extensions",3]],null,[[],["extensions",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[],[["option",4],["mime",3]]],[[]],[[]],[[["vec",3],["global",3],["u8",15]],["body",3]],[[["bytes",3]],["body",3]],[[]],[[],["body",3]],[[["str",15]],["body",3]],[[["cow",4]],["body",3]],[[["string",3]],["body",3]],[[["cow",4],["str",15]],["body",3]],[[["box",3],["global",3],["stream",8]],["body",3]],[[["request",3],["body",3]],["request",3]],[[],[["option",4],["cookie",3]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]],["option",4]],[[["str",15]],["option",4]],[[["str",15]],["option",4]],[[["str",15]]],[[],["headermap",3]],null,[[],["headermap",3]],[[]],[[]],[[]],[[],["bool",15]],[[],["method",3]],null,[[],["method",3]],[[],["request",3]],[[],["hashmap",3]],[[],["hashmap",3]],[[]],[[["pin",3],["body",3],["context",3]],[["poll",4],["option",4]]],[[["pin",3],["body",3],["context",3]],[["option",4],["poll",4]]],[[["pin",3],["body",3],["context",3]],[["poll",4],["result",4]]],[[],["multimap",3]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["socketaddr",4]]],[[["option",4],["socketaddr",4]]],[[],["sizehint",3]],[[],[["body",3],["option",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],[["poll",4],["option",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["uri",3]],null,[[],["uri",3]],[[],["version",3]],null,[[],["version",3]],[[]],[[]],[[]],[[],["body",3]],null,null,null,null,null,null,[[["cookie",3]]],[[],[["option",4],["body",4]]],[[],[["option",4],["body",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cookiejar",3]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["body",3]],["body",4]],[[]],[[]],[[]],[[["body",3],["response",3]],["response",3]],[[],[["option",4],["cookie",3]]],[[],[["cookie",3],["vec",3]]],[[],["headermap",3]],null,[[],["headermap",3]],[[]],[[]],[[]],[[],["bool",15]],[[],["response",3]],[[["pin",3],["context",3]],[["poll",4],["option",4]]],[[["str",15],["asref",8]]],[[["str",15],["asref",8]],[["invalidheadervalue",3],["result",4]]],[[["str",15],["asref",8]]],[[]],[[["headervalue",3]]],[[["str",15]]],[[]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["option",4],["body",4]]],[[["headermap",3]]],[[["httperror",3]]],[[["statuscode",3]]],null,[[],[["option",4],["statuscode",3]]],[[]],[[],[["option",4],["body",4]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],[["poll",4],["option",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["version",3]],null,[[],["version",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["u16",15]],[[],["builder",3]],[[],[["authority",3],["option",4]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["uri",3],["error",3],["result",4]]],[[],["builder",3]],[[],["authority",3]],[[],["pathandquery",3]],[[],["scheme",3]],[[],["uri",3]],[[]],[[]],[[]],[[]],[[],["builder",3]],[[],["uri",3]],[[],["parts",3]],[[["u16",15]],["bool",15]],[[["port",3]],["bool",15]],[[["str",15]],["bool",15]],[[["string",3]],["bool",15]],[[["str",15]],["bool",15]],[[["authority",3]],["bool",15]],[[["str",15]],["bool",15]],[[["string",3]],["bool",15]],[[["pathandquery",3]],["bool",15]],[[["str",15]],["bool",15]],[[["scheme",3]],["bool",15]],[[["str",15]],["bool",15]],[[["uri",3]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["uri",3]],["parts",3]],[[]],[[]],[[["errorkind",4]],["invaliduri",3]],[[]],[[["errorkind",4]],["invaliduriparts",3]],[[],[["authority",3],["result",4],["invaliduri",3]]],[[],[["invaliduri",3],["result",4],["pathandquery",3]]],[[],[["result",4],["invaliduri",3],["uri",3]]],[[["parts",3]],[["invaliduriparts",3],["result",4],["uri",3]]],[[["str",15]],["authority",3]],[[["str",15]],["pathandquery",3]],[[["str",15]],["uri",3]],[[["str",15]],[["authority",3],["result",4],["invaliduri",3]]],[[["str",15]],[["invaliduri",3],["result",4],["pathandquery",3]]],[[["str",15]],[["scheme",3],["result",4]]],[[["str",15]],[["result",4],["invaliduri",3],["uri",3]]],[[]],[[]],[[]],[[],["str",15]],[[],[["option",4],["str",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["parts",3]],[[],["builder",3]],[[["authority",3]],[["option",4],["ordering",4]]],[[["str",15]],[["option",4],["ordering",4]]],[[["str",15]],[["option",4],["ordering",4]]],[[["string",3]],[["option",4],["ordering",4]]],[[["string",3]],[["option",4],["ordering",4]]],[[["pathandquery",3]],[["option",4],["ordering",4]]],[[["str",15]],[["option",4],["ordering",4]]],[[["str",15]],[["option",4],["ordering",4]]],[[],["str",15]],[[],["str",15]],[[],["builder",3]],[[],[["option",4],["pathandquery",3]]],null,[[],[["option",4],["port",3]]],[[],[["option",4],["port",3]]],[[],[["u16",15],["option",4]]],[[],[["u16",15],["option",4]]],[[],[["option",4],["str",15]]],[[],[["option",4],["str",15]]],[[],["builder",3]],[[],[["option",4],["scheme",3]]],null,[[],[["option",4],["str",15]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[["str",15]],[["result",4],["authority",3]]],[[],[["authority",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["string",3]],[["pathandquery",3],["result",4]]],[[],[["result",4],["pathandquery",3]]],[[["string",3]],[["result",4],["pathandquery",3]]],[[["str",15]],[["pathandquery",3],["result",4]]],[[],[["scheme",3],["result",4]]],[[["str",15]],[["scheme",3],["result",4]]],[[],["result",4]],[[["parts",3]],[["uri",3],["result",4]]],[[["string",3]],[["result",4],["uri",3]]],[[],["result",4]],[[["uri",3]],[["uri",3],["result",4]]],[[["string",3]],[["result",4],["uri",3]]],[[["str",15]],[["result",4],["uri",3]]],[[],[["uri",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[],["version",3]],[[]],[[["version",3]],["ordering",4]],[[],["version",3]],[[["version",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[["version",3]],["bool",15]],[[["version",3]],[["option",4],["ordering",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["vec",3],["arc",3]]],[[],["str",15]],[[],["u16",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["str",15],["option",4]]],[[],[["arc",3],["vec",3]]],[[],["statuscode",3]],[[]],[[["statuscode",3]],["ordering",4]],[[],["statuscode",3]],[[["u16",15]],["bool",15]],[[["statuscode",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],null,[[]],[[]],[[]],[[]],[[]],[[["statuscode",3]],["statuscode",3]],[[],[["statuscode",3],["invalidstatuscode",3],["result",4]]],[[["str",15]],[["statuscode",3],["invalidstatuscode",3],["result",4]]],[[["u16",15]],[["statuscode",3],["invalidstatuscode",3],["result",4]]],[[["depot",3],["request",3],["response",3]],[["pin",3],["box",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["statuscode",3]],["bool",15]],[[["router",3]],["service",3]],[[["statuscode",3]],[["option",4],["ordering",4]]],[[["context",3]],[["poll",4],["result",4]]],[[],[["arc",3],["router",3]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],[["result",4],["statuscode",3]]],[[],["result",4]],[[["u16",15]],[["statuscode",3],["result",4]]],[[],[["result",4],["statuscode",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[["vec",3],["mime",3]]],[[["vec",3],["box",3]]],[[["depot",3],["request",3],["response",3]],[["pin",3],["box",3]]],[[["depot",3],["request",3],["response",3]],[["pin",3],["box",3]]],[[["depot",3],["request",3],["response",3]],[["pin",3],["box",3]]],[[["depot",3],["request",3],["response",3]],[["pin",3],["box",3]]],null,null,null,null,[[["handler",8]]],[[],["vec",3]],null,[[],["vec",3]],[[["vec",3],["router",3]]],[[["handler",8]]],[[],["vec",3]],null,[[],["vec",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["handler",8]]],[[["request",3],["pathstate",3]],[["option",4],["detectmatched",3]]],[[["pathstate",3]],["bool",15]],[[],["bool",15]],null,[[]],[[],["vec",3]],[[],["vec",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["handler",8]]],[[["handler",8]]],null,[[["handler",8]]],[[]],[[]],[[]],[[["pathstate",3]],["bool",15]],[[],["router",3]],[[["str",15]]],[[["handler",8]]],[[["handler",8]]],[[]],[[["handler",8]]],[[["router",3]]],[[]],[[["handler",8]]],[[],["vec",3]],[[],["vec",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["and",3]],[[],["andthen",3]],[[]],[[]],[[]],[[]],[[],["fnfilter",3]],[[]],[[],["methodfilter",3]],[[["pathstate",3]],["bool",15]],[[["pathstate",3]],["bool",15]],[[["request",3],["pathstate",3]],["bool",15]],[[["request",3],["pathstate",3]],["bool",15]],[[["request",3],["pathstate",3]],["bool",15]],[[["formatter",3]],["result",6]],[[],["fnfilter",3]],[[]],[[]],[[],["methodfilter",3]],[[],["methodfilter",3]],[[]],[[]],null,[[]],[[],["methodfilter",3]],[[],["or",3]],[[],["orelse",3]],[[],["methodfilter",3]],[[],["pathfilter",3]],[[],["methodfilter",3]],[[],["methodfilter",3]],[[["string",3]]],[[["string",3],["regex",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[["request",3],["pathstate",3]],["bool",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3]],[[],["builder",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["router",3]],["server",3]],[[]],[[]],[[["usize",15]]],[[],["tlsserver",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["vec",3],["mime",3]]],[[["vec",3],["box",3]]]],"p":[[3,"CatcherImpl"],[3,"Error"],[8,"Catcher"],[8,"Handler"],[8,"Writer"],[3,"Depot"],[3,"NamedFileBuilder"],[3,"FileChunk"],[3,"NamedFile"],[8,"HttpBody"],[3,"HeaderMap"],[3,"HeaderValue"],[3,"Mime"],[8,"BodyChunk"],[3,"HttpError"],[4,"ReadError"],[3,"FormData"],[3,"FilePart"],[4,"Entry"],[3,"OccupiedEntry"],[3,"HeaderName"],[3,"InvalidHeaderName"],[3,"InvalidHeaderValue"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Drain"],[3,"GetAll"],[3,"VacantEntry"],[3,"ValueIter"],[3,"ValueIterMut"],[3,"ValueDrain"],[3,"ToStrError"],[3,"Method"],[3,"InvalidMethod"],[3,"NextField"],[3,"Field"],[3,"FieldData"],[3,"ReadToString"],[3,"Multipart"],[3,"FieldHeaders"],[3,"HttpRange"],[3,"Request"],[3,"Parts"],[3,"Body"],[4,"Body"],[3,"Response"],[3,"Parts"],[3,"Scheme"],[3,"Port"],[3,"Authority"],[3,"PathAndQuery"],[3,"Builder"],[3,"Uri"],[3,"Parts"],[3,"InvalidUri"],[3,"InvalidUriParts"],[3,"Version"],[3,"StatusCode"],[3,"Service"],[3,"PlainText"],[3,"JsonText"],[3,"HtmlText"],[3,"Router"],[3,"DetectMatched"],[3,"PathState"],[3,"MethodFilter"],[8,"Filter"],[3,"PathFilter"],[3,"FnFilter"],[8,"PathPart"],[3,"Server"],[3,"TlsServer"]]},\
"salvo_extra":{"doc":"","t":[0,0,0,0,0,0,0,0,0,13,3,3,8,4,13,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,13,4,3,13,13,12,11,11,11,11,5,11,11,11,11,11,12,11,5,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,8,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,4,3,3,13,13,3,13,13,13,3,3,3,8,3,13,13,13,3,13,13,13,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,5,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,5,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["basic_auth","compression","cors","jwt_auth","proxy","serve","size_limiter","sse","ws","Base64Decode","BasicAuthConfig","BasicAuthHandler","BasicAuthValidator","Error","ParseHttpHeader","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","context_key","fmt","fmt","from","from","from","from","handle","into","into","into","new","realm","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate","validator","vzip","vzip","vzip","BR","CompressionAlgo","CompressionHandler","DEFLATE","GZIP","algo","borrow","borrow","borrow_mut","borrow_mut","brotli","clone","clone","clone_into","clone_into","content_types","content_types","content_types_mut","deflate","fmt","fmt","from","from","gzip","handle","into","into","new","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Builder","CorsHandler","IntoOrigin","Seconds","allow_any_origin","allow_credentials","allow_header","allow_headers","allow_method","allow_methods","allow_origin","allow_origins","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone_into","cors","expose_header","expose_headers","fmt","fmt","from","from","handle","into","into","into_origin","max_age","seconds","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Algorithm","CookieExtractor","DecodingKey","ES256","ES384","FormExtractor","HS256","HS384","HS512","HeaderExtractor","JwtConfig","JwtError","JwtExtractor","JwtHandler","PS256","PS384","PS512","QueryExtractor","RS256","RS384","RS512","TokenData","Validation","algorithms","aud","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","claims","claims","clone","clone","clone","clone_into","clone_into","clone_into","context_data_key","context_state_key","context_token_key","decode","decode","default","default","default","deserialize","eq","eq","eq","extractors","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_base64_secret","from_ec_der","from_ec_pem","from_rsa_components","from_rsa_der","from_rsa_pem","from_secret","from_str","get_token","get_token","get_token","get_token","get_token","handle","hash","header","into","into","into","into","into","into","into","into","into","into","into","into_kind","into_static","iss","kind","leeway","ne","ne","new","new","new","new","new","new","response_error","secret","serialize","set_audience","sub","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_exp","validate_nbf","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ProxyHandler","borrow","borrow_mut","from","handle","into","new","try_from","try_into","type_id","upstreams","vzip","StaticDir","StaticFile","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","from","from","handle","handle","into","into","new","new","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","width_options","MaxSizeHandler","borrow","borrow_mut","from","handle","into","max_size","try_from","try_into","type_id","vzip","SseError","SseEvent","SseKeepAlive","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","comment","data","default","fmt","fmt","fmt","fmt","from","from","from","id","interval","into","into","into","json_data","name","new","poll_next","retry","streaming","streaming","text","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","Message","MissingConnectionUpgrade","WebSocket","WsHandler","as_bytes","binary","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","close","close","close_frame","close_with","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","handle","into","into","into","into","into","into_bytes","is_binary","is_close","is_ping","is_pong","is_text","max_frame_size","max_message_size","max_send_queue","ne","new","ping","poll_close","poll_flush","poll_next","poll_ready","start_send","text","to_owned","to_str","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_config"],"q":["salvo_extra","","","","","","","","","salvo_extra::basic_auth","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo_extra::compression","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo_extra::cors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo_extra::jwt_authsalvo_extra::proxy","","","","","","","","","","","","salvo_extra::serve","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo_extra::size_limiter","","","","","","","","","","","salvo_extra::sse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","salvo_extra::ws","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Compress the body of a response.","CORS Filters","","ProxyHandler.","","","Server-Sent Events (SSE)","Websocket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a middleware that compresses the <code>Body</code> using …","","","","","","","","Create a middleware that compresses the <code>Body</code> using …","","","","","Create a middleware that compresses the <code>Body</code> using gzip, …","","","","","","","","","","","","","","","A constructed via <code>salvo_extra::cors::cors()</code>.","","","","Sets that <em>any</em> <code>Origin</code> header is allowed.","Sets whether to add the <code>Access-Control-Allow-Credentials</code> …","Adds a header to the list of allowed request headers.","Adds multiple headers to the list of allowed request …","Adds a method to the existing list of allowed request …","Adds multiple methods to the existing list of allowed …","Add an origin to the existing list of allowed <code>Origin</code>s.","Add multiple origins to the existing list of allowed …","","","","","Builds the <code>Cors</code> wrapper from the configured settings.","","","Example","Adds a header to the list of exposed headers.","Adds multiple headers to the list of exposed headers.","","","","","","","","","Sets the <code>Access-Control-Max-Age</code> header.","","","","","","","","","","","The algorithms supported for signing/verifying JWTs","","All the different kind of keys we can use to decode a JWT …","ECDSA using SHA-256","ECDSA using SHA-384","","HMAC using SHA-256","HMAC using SHA-384","HMAC using SHA-512","","","An error that can occur when encoding/decoding JWTs","","","RSASSA-PSS using SHA-256","RSASSA-PSS using SHA-384","RSASSA-PSS using SHA-512","","RSASSA-PKCS1-v1_5 using SHA-256","RSASSA-PKCS1-v1_5 using SHA-384","RSASSA-PKCS1-v1_5 using SHA-512","The return type of a successful call to decode.","Contains the various validations that are applied after …","If it contains a value, the validation will check that …","If it contains a value, the validation will check that …","","","","","","","","","","","","","","","","","","","","","","","","","The decoded JWT claims","","","","","","","","","","Decode and validate a JWT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If you’re using HMAC with a base64 encoded, use this.","If you know what you’re doing and have a RSA EC encoded …","If you have a ECDSA public key in PEM format, use this.","If you have (n, e) RSA public key components, use this.","If you know what you’re doing and have a RSA DER …","If you are loading a public RSA key in a PEM format, use …","If you’re using HMAC, use this.","","","","","","","","","The decoded JWT header","","","","","","","","","","","","Unwrap this error into its underlying type.","Convert self to <code>DecodingKey<\'static></code>.","If it contains a value, the validation will check that …","Return the specific type of this error.","Add some leeway (in seconds) to the <code>exp</code>, <code>iat</code> and <code>nbf</code> …","","","","","","","","Create a default validation setup allowing the given alg","","","","<code>aud</code> is a collection of one or more acceptable audience …","If it contains a value, the validation will check that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to validate the <code>exp</code> field.","Whether to validate the <code>nbf</code> field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Server-sent event","","","","","","","","Set Server-sent event comment Comment field (“:”)","Set Server-sent event data data field(s) (“data:”)","","","","","","","","","Set Server-sent event id Identifier field (“id:”)","Customize the interval between keep-alive messages.","","","","Set Server-sent event data data field(s) (“data:”)","Set Server-sent event event Event name field (“event:”…","","","Set Server-sent event retry Retry timeout field (“retry:…","","Send stream.","Customize the text of the keep-alive message.","","","","","","","","","","","","","","","","A WebSocket message.","Connection header did not include ‘upgrade’","A websocket <code>Stream</code> and <code>Sink</code>, provided to <code>ws</code> filters.","Creates a Websocket Handler. Request:","Return the bytes of this message, if the message can …","Construct a new Binary <code>Message</code>.","","","","","","","","","","","Gracefully close this websocket.","Construct the default Close <code>Message</code>.","Try to get the close frame (close code and reason)","Construct a Close <code>Message</code> with a code and reason.","","","","","","","","","","","","","","","","","Destructure this message into binary data.","Returns true if this message is a Binary message.","Returns true if this message a is a Close message.","Returns true if this message is a Ping message.","Returns true if this message is a Pong message.","Returns true if this message is a Text message.","Set the maximum frame size (defaults to 16 megabytes)","Set the maximum message size (defaults to 64 megabytes)","Set the size of the internal message send queue.","","","Construct a new Ping <code>Message</code>.","","","","","","Construct a new Text <code>Message</code>.","","Try to get a reference to the string text, if this is a …","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,2,3,1,2,3,1,3,1,1,2,3,1,1,2,2,3,1,2,3,1,1,2,3,1,2,3,1,2,3,1,4,3,2,3,1,5,0,0,5,5,6,5,6,5,6,0,5,6,5,6,6,6,6,0,5,6,5,6,0,6,5,6,6,5,6,5,6,5,6,5,6,5,6,0,0,0,0,7,7,7,7,7,7,7,7,7,8,7,8,7,7,7,0,7,7,7,8,7,8,8,7,8,9,7,10,7,7,8,7,8,7,8,7,8,0,0,0,11,11,0,11,11,11,0,0,0,0,0,11,11,11,0,11,11,11,0,0,12,12,13,14,15,16,17,18,11,19,20,21,12,13,14,15,16,17,18,11,19,20,21,12,21,14,19,11,20,12,11,20,12,14,14,14,0,13,18,11,12,11,11,20,12,14,11,19,20,21,21,12,13,14,15,16,17,18,11,19,20,21,21,21,21,21,21,21,12,20,20,20,20,20,20,20,11,22,15,16,17,18,13,11,19,13,14,15,16,17,18,11,19,20,21,12,21,20,12,21,12,20,12,13,15,16,17,18,12,14,14,11,12,12,11,20,12,21,13,14,15,16,17,18,11,19,20,21,12,13,14,15,16,17,18,11,19,20,21,12,13,14,15,16,17,18,11,19,20,21,12,12,12,14,13,14,15,16,17,18,11,19,20,21,12,0,23,23,23,23,23,23,23,23,23,23,23,0,0,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,0,26,26,26,26,26,0,26,26,26,26,0,0,0,27,28,29,27,28,29,28,28,28,27,27,28,28,27,28,29,28,29,27,28,29,28,28,29,29,28,0,29,29,27,28,27,28,29,27,28,29,29,27,28,29,27,28,29,0,0,0,0,30,30,31,32,30,33,31,32,30,33,30,30,32,30,30,30,30,30,32,30,33,33,31,32,30,33,31,31,32,30,30,33,30,30,30,30,30,30,31,31,31,30,31,30,32,32,32,32,32,30,30,30,33,31,32,30,33,31,32,30,33,32,31,32,30,33,31,32,30,33,31],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["decodeerror",4]]],[[["depot",3],["response",3],["request",3]],[["pin",3],["box",3]]],[[]],[[]],[[]],[[["basicauthconfig",3]],["basicauthhandler",3]],null,[[],[["option",4],["error",8]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["string",3]],["bool",15]],null,[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["compressionhandler",3]],[[],["compressionalgo",4]],[[],["compressionhandler",3]],[[]],[[]],[[],["vec",3]],null,[[],["vec",3]],[[],["compressionhandler",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["compressionhandler",3]],[[["depot",3],["response",3],["request",3]],[["pin",3],["box",3]]],[[]],[[]],[[["compressionalgo",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,[[]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["corshandler",3]],[[],["builder",3]],[[]],[[],["builder",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["depot",3],["response",3],["request",3]],[["pin",3],["box",3]]],[[]],[[]],[[],["origin",3]],[[]],[[],["u64",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["error",8]]],null,null,[[],["algorithm",4]],[[],["decodingkey",3]],[[],["validation",3]],[[]],[[]],[[]],null,null,null,[[["decodingkey",3],["validation",3],["str",15]],[["error",3],["result",4],["tokendata",3]]],[[["str",15]],[["tokendata",3],["jwterror",3],["result",4]]],[[],["headerextractor",3]],[[],["algorithm",4]],[[],["validation",3]],[[],[["result",4],["algorithm",4]]],[[["algorithm",4]],["bool",15]],[[["decodingkey",3]],["bool",15]],[[["validation",3]],["bool",15]],null,[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["keyrejected",3]],["error",3]],[[["error",3]],["error",3]],[[["fromutf8error",3]],["error",3]],[[["errorkind",4]],["error",3]],[[["decodeerror",4]],["error",3]],[[["unspecified",3]],["error",3]],[[]],[[["str",15]],[["result",4],["decodingkey",3],["error",3]]],[[],["decodingkey",3]],[[],[["result",4],["decodingkey",3],["error",3]]],[[["str",15]],["decodingkey",3]],[[],["decodingkey",3]],[[],[["result",4],["decodingkey",3],["error",3]]],[[],["decodingkey",3]],[[["str",15]],[["result",4],["algorithm",4],["error",3]]],[[["request",3]],[["pin",3],["box",3]]],[[["request",3]],[["pin",3],["box",3]]],[[["request",3]],[["pin",3],["box",3]]],[[["request",3]],[["pin",3],["box",3]]],[[["request",3]],[["pin",3],["box",3]]],[[["depot",3],["response",3],["request",3]],[["pin",3],["box",3]]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["errorkind",4]],[[],["decodingkey",3]],null,[[],["errorkind",4]],null,[[["decodingkey",3]],["bool",15]],[[["validation",3]],["bool",15]],[[["jwtconfig",3]],["jwthandler",3]],[[["string",3],["into",8]]],[[["string",3],["into",8]]],[[["string",3],["into",8]]],[[]],[[["algorithm",4]],["validation",3]],null,null,[[],["result",4]],[[]],null,[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["depot",3],["response",3],["request",3]],[["pin",3],["box",3]]],[[]],[[["vec",3],["string",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],null,null,[[]],[[]],[[]],[[]],[[],["staticdir",3]],[[],["staticfile",3]],[[]],[[]],[[]],[[]],[[["depot",3],["response",3],["request",3]],[["pin",3],["box",3]]],[[["depot",3],["response",3],["request",3]],[["pin",3],["box",3]]],[[]],[[]],[[["sized",8],["staticroots",8]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["options",3],["sized",8],["staticroots",8]]],null,[[]],[[]],[[]],[[["depot",3],["response",3],["request",3]],[["pin",3],["box",3]]],[[]],[[["u64",15]],["maxsizehandler",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["string",3],["into",8]],["sseevent",3]],[[["string",3],["into",8]],["sseevent",3]],[[],["sseevent",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["string",3],["into",8]],["sseevent",3]],[[["duration",3]]],[[]],[[]],[[]],[[["serialize",8]],[["error",3],["result",4],["sseevent",3]]],[[["string",3],["into",8]],["sseevent",3]],[[],["ssekeepalive",3]],[[["context",3],["pin",3]],[["option",4],["poll",4]]],[[["duration",3]],["sseevent",3]],[[["response",3]]],[[["response",3]]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],[["option",4],["poll",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,[[]],[[["into",8],["vec",3]],["message",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["message",3]],[[]],[[]],[[],["message",3]],[[],["option",4]],[[],["message",3]],[[["message",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["request",3],["response",3]],[["httperror",3],["result",4]]],[[]],[[]],[[],[["vec",3],["u8",15]]],[[]],[[]],[[],[["vec",3],["u8",15]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["message",3]],["bool",15]],[[]],[[["into",8],["vec",3]],["message",3]],[[["context",3],["pin",3]],[["result",4],["poll",4]]],[[["context",3],["pin",3]],[["result",4],["poll",4]]],[[["context",3],["pin",3]],[["option",4],["poll",4]]],[[["context",3],["pin",3]],[["result",4],["poll",4]]],[[["pin",3],["message",3]],["result",4]],[[["string",3],["into",8]],["message",3]],[[]],[[],[["result",4],["str",15]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],[["option",4],["poll",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[["websocketconfig",3]]]],"p":[[4,"Error"],[3,"BasicAuthHandler"],[3,"BasicAuthConfig"],[8,"BasicAuthValidator"],[4,"CompressionAlgo"],[3,"CompressionHandler"],[3,"Builder"],[3,"CorsHandler"],[8,"IntoOrigin"],[8,"Seconds"],[4,"Algorithm"],[3,"Validation"],[3,"JwtHandler"],[3,"JwtConfig"],[3,"FormExtractor"],[3,"QueryExtractor"],[3,"CookieExtractor"],[3,"HeaderExtractor"],[3,"TokenData"],[3,"DecodingKey"],[3,"JwtError"],[8,"JwtExtractor"],[3,"ProxyHandler"],[3,"StaticDir"],[3,"StaticFile"],[3,"MaxSizeHandler"],[3,"SseError"],[3,"SseEvent"],[3,"SseKeepAlive"],[3,"Message"],[3,"WsHandler"],[3,"WebSocket"],[3,"MissingConnectionUpgrade"]]},\
"salvo_macros":{"doc":"","t":[23],"n":["fn_handler"],"q":["salvo_macros"],"d":[""],"i":[0],"f":[null],"p":[]}\
}');
initSearch(searchIndex);