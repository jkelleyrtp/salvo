{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1","program":"C:\\Users\\chris\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","display_bytes","C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","codegen-units=4","-C","debuginfo=2","-C","metadata=7535a6e6d14f5106","-C","extra-filename=-7535a6e6d14f5106","--out-dir","d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps","-L","dependency=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chris\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libdisplay_bytes-7535a6e6d14f5106.rmeta"},"prelude":{"crate_id":{"name":"display_bytes","disambiguator":[10372615944081907504,3026931163675665488]},"crate_root":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src","external_crates":[{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}}],"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":331,"byte_end":17986,"line_start":7,"line_end":518,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":1197,"byte_end":1209,"line_start":36,"line_end":36,"column_start":17,"column_end":29},"alias_span":null,"name":"FormatBase64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":1197,"byte_end":1209,"line_start":36,"line_end":36,"column_start":17,"column_end":29},"alias_span":null,"name":"FormatBase64","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":1225,"byte_end":1236,"line_start":37,"line_end":37,"column_start":15,"column_end":26},"alias_span":null,"name":"DEFAULT_HEX","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":1238,"byte_end":1247,"line_start":37,"line_end":37,"column_start":28,"column_end":37},"alias_span":null,"name":"FormatHex","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":331,"byte_end":17986,"line_start":7,"line_end":518,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":26},{"krate":0,"index":33},{"krate":0,"index":218},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":150},{"krate":0,"index":163},{"krate":0,"index":159},{"krate":0,"index":38},{"krate":0,"index":43},{"krate":0,"index":47},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":167},{"krate":0,"index":182},{"krate":0,"index":178},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":75},{"krate":0,"index":91},{"krate":0,"index":96},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":186},{"krate":0,"index":192},{"krate":0,"index":117},{"krate":0,"index":121},{"krate":0,"index":128}],"decl_id":null,"docs":" Human-readable display of byte sequences.","sig":null,"attributes":[{"value":"/ Human-readable display of byte sequences.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":331,"byte_end":376,"line_start":7,"line_end":7,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":377,"byte_end":380,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Supports printing of both UTF-8 and ASCII-only sequences.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":381,"byte_end":442,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":443,"byte_end":446,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ For easy usage, see the free functions `display_bytes()` and `display_bytes_string()`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":447,"byte_end":536,"line_start":11,"line_end":11,"column_start":1,"column_end":90}},{"value":"/ in this crate. For more control over formatting, see the statics in this crate or build","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":537,"byte_end":628,"line_start":12,"line_end":12,"column_start":1,"column_end":92}},{"value":"/ an instance of `DisplayBytesConfig` yourself.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":629,"byte_end":678,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":679,"byte_end":682,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":683,"byte_end":694,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ extern crate display_bytes;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":695,"byte_end":726,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/ ","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":727,"byte_end":731,"line_start":17,"line_end":17,"column_start":1,"column_end":5}},{"value":"/ use display_bytes::{display_bytes, display_bytes_string};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":732,"byte_end":793,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/ ","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":794,"byte_end":798,"line_start":19,"line_end":19,"column_start":1,"column_end":5}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":799,"byte_end":814,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"/     let bytes = b\"Hello, world!\\x89\\x90\\xAB\\xCD\";","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":815,"byte_end":868,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/     println!(\"{:?}\", bytes);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":869,"byte_end":901,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/     println!(\"{}\", display_bytes(bytes));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":902,"byte_end":947,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(display_bytes_string(bytes),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":948,"byte_end":995,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/                \"Hello, world! {{ 89 90 AB CD }} \");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":996,"byte_end":1051,"line_start":25,"line_end":25,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":1052,"byte_end":1057,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":1058,"byte_end":1065,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":1066,"byte_end":1088,"line_start":28,"line_end":28,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\base64.rs","byte_start":18450,"byte_end":18462,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"FormatBase64","qualname":"::base64::FormatBase64","value":"","parent":null,"children":[],"decl_id":null,"docs":" Formats byte sequences in Base-64.\n","sig":null,"attributes":[{"value":"/ Formats byte sequences in Base-64.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\base64.rs","byte_start":18370,"byte_end":18408,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\hex.rs","byte_start":22202,"byte_end":22213,"line_start":12,"line_end":12,"column_start":11,"column_end":22},"name":"DEFAULT_HEX","qualname":"::hex::DEFAULT_HEX","value":"FormatHex","parent":null,"children":[],"decl_id":null,"docs":" Default hexadecimal byte format used by this crate.\n","sig":null,"attributes":[{"value":"/ Default hexadecimal byte format used by this crate.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\hex.rs","byte_start":22136,"byte_end":22191,"line_start":11,"line_end":11,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\hex.rs","byte_start":22402,"byte_end":22411,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"name":"FormatHex","qualname":"::hex::FormatHex","value":"FormatHex { prefix, separator, uppercase }","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141}],"decl_id":null,"docs":" Formats bytes in hexadecimal pairs (`00 - FF`).\n","sig":null,"attributes":[{"value":"/ Formats bytes in hexadecimal pairs (`00 - FF`).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\hex.rs","byte_start":22309,"byte_end":22360,"line_start":18,"line_end":18,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\hex.rs","byte_start":22469,"byte_end":22475,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"name":"prefix","qualname":"::hex::FormatHex::prefix","value":"&'s str","parent":{"krate":0,"index":137},"children":[],"decl_id":null,"docs":" The prefix, if any, for each byte.\n","sig":null,"attributes":[{"value":"/ The prefix, if any, for each byte.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\hex.rs","byte_start":22422,"byte_end":22460,"line_start":21,"line_end":21,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\hex.rs","byte_start":22552,"byte_end":22561,"line_start":24,"line_end":24,"column_start":9,"column_end":18},"name":"separator","qualname":"::hex::FormatHex::separator","value":"&'s str","parent":{"krate":0,"index":137},"children":[],"decl_id":null,"docs":" The separator for individual hex-formatted bytes.\n","sig":null,"attributes":[{"value":"/ The separator for individual hex-formatted bytes.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\hex.rs","byte_start":22490,"byte_end":22543,"line_start":23,"line_end":23,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\hex.rs","byte_start":22639,"byte_end":22648,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"name":"uppercase","qualname":"::hex::FormatHex::uppercase","value":"bool","parent":{"krate":0,"index":137},"children":[],"decl_id":null,"docs":" Whether or not to write the hex-pairs in uppercase\n","sig":null,"attributes":[{"value":"/ Whether or not to write the hex-pairs in uppercase","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\hex.rs","byte_start":22576,"byte_end":22630,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":1928,"byte_end":1937,"line_start":66,"line_end":66,"column_start":11,"column_end":20},"name":"HEX_ASCII","qualname":"::HEX_ASCII","value":"DisplayBytesConfig","parent":null,"children":[],"decl_id":null,"docs":" Prints byte sections with hexadecimal bytes wrapped in ` {{ }} `. Prints only ASCII sequences.\n","sig":null,"attributes":[{"value":"/ Prints byte sections with hexadecimal bytes wrapped in ` {{ }} `. Prints only ASCII sequences.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":1819,"byte_end":1917,"line_start":65,"line_end":65,"column_start":1,"column_end":99}}]},{"kind":"Const","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":2299,"byte_end":2307,"line_start":77,"line_end":77,"column_start":11,"column_end":19},"name":"HEX_UTF8","qualname":"::HEX_UTF8","value":"DisplayBytesConfig","parent":null,"children":[],"decl_id":null,"docs":" Prints byte sections with hexadecimal bytes wrapped in ` {{ }} `. Prints all valid UTF-8 strings.\n","sig":null,"attributes":[{"value":"/ Prints byte sections with hexadecimal bytes wrapped in ` {{ }} `. Prints all valid UTF-8 strings.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":2187,"byte_end":2288,"line_start":76,"line_end":76,"column_start":1,"column_end":102}}]},{"kind":"Const","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":2715,"byte_end":2727,"line_start":90,"line_end":90,"column_start":11,"column_end":23},"name":"BASE64_ASCII","qualname":"::BASE64_ASCII","value":"DisplayBytesConfig","parent":null,"children":[],"decl_id":null,"docs":" Prints byte sections as Base-64 wrapped in ` {{ }} `. Prints only ASCII sequences.","sig":null,"attributes":[{"value":"/ Prints byte sections as Base-64 wrapped in ` {{ }} `. Prints only ASCII sequences.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":2557,"byte_end":2643,"line_start":87,"line_end":87,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":2644,"byte_end":2647,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Provided as a static so it may be used by-reference.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":2648,"byte_end":2704,"line_start":89,"line_end":89,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":3072,"byte_end":3083,"line_start":101,"line_end":101,"column_start":11,"column_end":22},"name":"BASE64_UTF8","qualname":"::BASE64_UTF8","value":"DisplayBytesConfig","parent":null,"children":[],"decl_id":null,"docs":" Prints byte sections as Base-64 wrapped in ` {{ }} `. Prints all valid UTF-8 strings.\n","sig":null,"attributes":[{"value":"/ Prints byte sections as Base-64 wrapped in ` {{ }} `. Prints all valid UTF-8 strings.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":2972,"byte_end":3061,"line_start":100,"line_end":100,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":3473,"byte_end":3491,"line_start":115,"line_end":115,"column_start":12,"column_end":30},"name":"DisplayBytesConfig","qualname":"::DisplayBytesConfig","value":"DisplayBytesConfig {  }","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"decl_id":null,"docs":" Configuration builder for `DisplayBytes`.","sig":null,"attributes":[{"value":"/ Configuration builder for `DisplayBytes`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":3329,"byte_end":3374,"line_start":111,"line_end":111,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":3375,"byte_end":3378,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Consts with sane defaults are provided in this module.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":3379,"byte_end":3437,"line_start":113,"line_end":113,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":4008,"byte_end":4019,"line_start":137,"line_end":137,"column_start":12,"column_end":23},"name":"byte_format","qualname":"<DisplayBytesConfig>::byte_format","value":"pub fn byte_format<F_: ByteFormat>(Self, F_) -> DisplayBytesConfig","parent":null,"children":[],"decl_id":null,"docs":" Set the type used to format byte sequences.\n","sig":null,"attributes":[{"value":"/ Set the type used to format byte sequences.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":3949,"byte_end":3996,"line_start":136,"line_end":136,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":4483,"byte_end":4498,"line_start":150,"line_end":150,"column_start":12,"column_end":27},"name":"byte_format_mut","qualname":"<DisplayBytesConfig>::byte_format_mut","value":"pub fn byte_format_mut(&mut Self) -> &mut F","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the current `ByteFormat`.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the current `ByteFormat`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":4415,"byte_end":4471,"line_start":149,"line_end":149,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":4720,"byte_end":4730,"line_start":157,"line_end":157,"column_start":12,"column_end":22},"name":"delimiters","qualname":"<DisplayBytesConfig>::delimiters","value":"pub fn delimiters<'d_>(Self, [&'d_ str; ]) -> DisplayBytesConfig","parent":null,"children":[],"decl_id":null,"docs":" Set the pair of delimiters used to wrap byte sequences in the formatted stream.","sig":null,"attributes":[{"value":"/ Set the pair of delimiters used to wrap byte sequences in the formatted stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":4563,"byte_end":4646,"line_start":154,"line_end":154,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":4651,"byte_end":4654,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that this can change the lifetime bound.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":4659,"byte_end":4708,"line_start":156,"line_end":156,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":5213,"byte_end":5227,"line_start":170,"line_end":170,"column_start":12,"column_end":26},"name":"delimiters_mut","qualname":"<DisplayBytesConfig>::delimiters_mut","value":"pub fn delimiters_mut(&mut Self) -> &mut [&'d str; ]","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the current pair of delimiters.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the current pair of delimiters.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":5139,"byte_end":5201,"line_start":169,"line_end":169,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":5489,"byte_end":5499,"line_start":177,"line_end":177,"column_start":12,"column_end":22},"name":"ascii_only","qualname":"<DisplayBytesConfig>::ascii_only","value":"pub fn ascii_only(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If set to `true`, only displays ASCII byte sequences (bytes in `[0x00, 0x7F]`).","sig":null,"attributes":[{"value":"/ If set to `true`, only displays ASCII byte sequences (bytes in `[0x00, 0x7F]`).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":5297,"byte_end":5380,"line_start":174,"line_end":174,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":5385,"byte_end":5388,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Otherwise, displays all valid UTF-8 sequences at least `min_str_len` bytes long.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":5393,"byte_end":5477,"line_start":176,"line_end":176,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":6215,"byte_end":6226,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"min_str_len","qualname":"<DisplayBytesConfig>::min_str_len","value":"pub fn min_str_len(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The minimum number of *bytes* in length that a valid string sequence\n must be to be displayed.","sig":null,"attributes":[{"value":"/ The minimum number of *bytes* in length that a valid string sequence","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":5595,"byte_end":5667,"line_start":181,"line_end":181,"column_start":5,"column_end":77}},{"value":"/ must be to be displayed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":5672,"byte_end":5700,"line_start":182,"line_end":182,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":5705,"byte_end":5708,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Strings shorter than this length will be included in the nearest byte sequence. Use this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":5713,"byte_end":5805,"line_start":184,"line_end":184,"column_start":5,"column_end":97}},{"value":"/ to avoid extra noise from random decodable characters splitting byte sequences.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":5810,"byte_end":5893,"line_start":185,"line_end":185,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":5898,"byte_end":5901,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":5906,"byte_end":5917,"line_start":187,"line_end":187,"column_start":5,"column_end":16}},{"value":"/ This does not affect byte sequences that can be completely decoded. If `print_terminators`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":5922,"byte_end":6016,"line_start":188,"line_end":188,"column_start":5,"column_end":99}},{"value":"/ is set, this also will not affect strings at the beginning or at the end of the byte","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":6021,"byte_end":6109,"line_start":189,"line_end":189,"column_start":5,"column_end":93}},{"value":"/ slice (e.g. valid strings at the start and end will be printed regardless of length).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":6114,"byte_end":6203,"line_start":190,"line_end":190,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":6487,"byte_end":6504,"line_start":197,"line_end":197,"column_start":12,"column_end":29},"name":"print_terminators","qualname":"<DisplayBytesConfig>::print_terminators","value":"pub fn print_terminators(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If set to `true`, valid strings at the start and end of a byte slice will\n be printed regardless of their length relative to `min_str_len`.\n","sig":null,"attributes":[{"value":"/ If set to `true`, valid strings at the start and end of a byte slice will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":6325,"byte_end":6402,"line_start":195,"line_end":195,"column_start":5,"column_end":82}},{"value":"/ be printed regardless of their length relative to `min_str_len`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":6407,"byte_end":6475,"line_start":196,"line_end":196,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":6761,"byte_end":6775,"line_start":203,"line_end":203,"column_start":12,"column_end":26},"name":"escape_control","qualname":"<DisplayBytesConfig>::escape_control","value":"pub fn escape_control(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If set to `true`, control characters will be printed in their escaped form (`\\n`)\n instead of printed directly.\n","sig":null,"attributes":[{"value":"/ If set to `true`, control characters will be printed in their escaped form (`\\n`)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":6627,"byte_end":6712,"line_start":201,"line_end":201,"column_start":5,"column_end":90}},{"value":"/ instead of printed directly.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":6717,"byte_end":6749,"line_start":202,"line_end":202,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":6986,"byte_end":7003,"line_start":209,"line_end":209,"column_start":12,"column_end":29},"name":"invert_delimiters","qualname":"<DisplayBytesConfig>::invert_delimiters","value":"pub fn invert_delimiters(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If set to `true`, wraps decoded strings in the given delimiters\n rather than byte sequences.\n","sig":null,"attributes":[{"value":"/ If set to `true`, wraps decoded strings in the given delimiters","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":6871,"byte_end":6938,"line_start":207,"line_end":207,"column_start":5,"column_end":72}},{"value":"/ rather than byte sequences.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":6943,"byte_end":6974,"line_start":208,"line_end":208,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":9029,"byte_end":9049,"line_start":267,"line_end":267,"column_start":12,"column_end":32},"name":"display_bytes_string","qualname":"<DisplayBytesConfig>::display_bytes_string","value":"pub fn display_bytes_string<'b>(&Self, &'b [u8]) -> Cow where 'd:'b, F: 'b","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert `bytes` to a string (an ASCII-only string if `ascii_only` is set,\n UTF-8 otherwise), or otherwise format `bytes` to a string using the properties\n in this configuration.\n","sig":null,"attributes":[{"value":"/ Attempt to convert `bytes` to a string (an ASCII-only string if `ascii_only` is set,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":8811,"byte_end":8899,"line_start":264,"line_end":264,"column_start":5,"column_end":93}},{"value":"/ UTF-8 otherwise), or otherwise format `bytes` to a string using the properties","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":8904,"byte_end":8986,"line_start":265,"line_end":265,"column_start":5,"column_end":87}},{"value":"/ in this configuration.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":8991,"byte_end":9017,"line_start":266,"line_end":266,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":9516,"byte_end":9533,"line_start":278,"line_end":278,"column_start":12,"column_end":29},"name":"ref_display_bytes","qualname":"<DisplayBytesConfig>::ref_display_bytes","value":"pub fn ref_display_bytes<'b>(&'b Self, &'b [u8]) -> DisplayBytes","parent":null,"children":[],"decl_id":null,"docs":" Get a type that implements `Display` which will format `bytes` to an output stream\n using the properties in this configuration.\n","sig":null,"attributes":[{"value":"/ Get a type that implements `Display` which will format `bytes` to an output stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":9366,"byte_end":9452,"line_start":276,"line_end":276,"column_start":5,"column_end":91}},{"value":"/ using the properties in this configuration.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":9457,"byte_end":9504,"line_start":277,"line_end":277,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":9931,"byte_end":9944,"line_start":291,"line_end":291,"column_start":12,"column_end":25},"name":"display_bytes","qualname":"<DisplayBytesConfig>::display_bytes","value":"pub fn display_bytes<'b>(Self, &'b [u8]) -> DisplayBytes where 'd:'b","parent":null,"children":[],"decl_id":null,"docs":" Get a type that implements `Display` which will format `bytes` to an output stream\n using the properties in this configuration.\n","sig":null,"attributes":[{"value":"/ Get a type that implements `Display` which will format `bytes` to an output stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":9781,"byte_end":9867,"line_start":289,"line_end":289,"column_start":5,"column_end":91}},{"value":"/ using the properties in this configuration.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":9872,"byte_end":9919,"line_start":290,"line_end":290,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":10216,"byte_end":10226,"line_start":301,"line_end":301,"column_start":11,"column_end":21},"name":"ByteFormat","qualname":"::ByteFormat","value":"ByteFormat","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"decl_id":null,"docs":" Formats byte sequences in human-readable representations.\n","sig":null,"attributes":[{"value":"/ Formats byte sequences in human-readable representations.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":10144,"byte_end":10205,"line_start":300,"line_end":300,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":10326,"byte_end":10335,"line_start":303,"line_end":303,"column_start":8,"column_end":17},"name":"fmt_bytes","qualname":"::ByteFormat::fmt_bytes","value":"pub fn fmt_bytes(&Self, &[u8], &mut fmt::Formatter) -> fmt::Result","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Encode the given byte-sequence in some human-readable format and print it to `f`.\n","sig":null,"attributes":[{"value":"/ Encode the given byte-sequence in some human-readable format and print it to `f`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":10233,"byte_end":10318,"line_start":302,"line_end":302,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":10575,"byte_end":10590,"line_start":308,"line_end":308,"column_start":8,"column_end":23},"name":"bytes_to_string","qualname":"::ByteFormat::bytes_to_string","value":"pub fn bytes_to_string(&Self, &[u8]) -> String","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Uses `fmt_bytes()` to encode the byte-sequence and print it to a `String`.","sig":null,"attributes":[{"value":"/ Uses `fmt_bytes()` to encode the byte-sequence and print it to a `String`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":10402,"byte_end":10480,"line_start":305,"line_end":305,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":10485,"byte_end":10488,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ Not used directly except for testing. However, you may find it useful.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":10493,"byte_end":10567,"line_start":307,"line_end":307,"column_start":5,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":12043,"byte_end":12063,"line_start":349,"line_end":349,"column_start":8,"column_end":28},"name":"display_bytes_string","qualname":"::display_bytes_string","value":"pub fn display_bytes_string(&[u8]) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert the byte slice to a string, or else format it to a string using the default\n `DisplayBytesConfig`.","sig":null,"attributes":[{"value":"/ Attempt to convert the byte slice to a string, or else format it to a string using the default","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":11592,"byte_end":11690,"line_start":341,"line_end":341,"column_start":1,"column_end":99}},{"value":"/ `DisplayBytesConfig`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":11691,"byte_end":11716,"line_start":342,"line_end":342,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":11717,"byte_end":11720,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ All string-decodable sequences of useful length will be displayed as they are, and all","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":11721,"byte_end":11811,"line_start":344,"line_end":344,"column_start":1,"column_end":91}},{"value":"/ non-decodable byte sequences will be printed in a human-readable format.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":11812,"byte_end":11888,"line_start":345,"line_end":345,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":11889,"byte_end":11892,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ The format is unspecified. If you want to specify a format, use `DisplayBytesConfig` directly","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":11893,"byte_end":11990,"line_start":347,"line_end":347,"column_start":1,"column_end":98}},{"value":"/ or one of the statics in the crate root.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":11991,"byte_end":12035,"line_start":348,"line_end":348,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":12548,"byte_end":12561,"line_start":360,"line_end":360,"column_start":8,"column_end":21},"name":"display_bytes","qualname":"::display_bytes","value":"pub fn display_bytes<'b>(&'b [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wrap a byte slice in an adapter which implements `Display`.","sig":null,"attributes":[{"value":"/ Wrap a byte slice in an adapter which implements `Display`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":12136,"byte_end":12199,"line_start":353,"line_end":353,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":12200,"byte_end":12203,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ This adapter will print any string-decodable sequences of useful length in the byte stream,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":12204,"byte_end":12299,"line_start":355,"line_end":355,"column_start":1,"column_end":96}},{"value":"/ and all non-decodable byte sequences in a human-readable format.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":12300,"byte_end":12368,"line_start":356,"line_end":356,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":12369,"byte_end":12372,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ The format is deliberately unspecified in the type. If you want to specify a format, use","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":12373,"byte_end":12465,"line_start":358,"line_end":358,"column_start":1,"column_end":93}},{"value":"/ `DisplayBytesConfig` directly or one of the statics in the crate root.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":12466,"byte_end":12540,"line_start":359,"line_end":359,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":12920,"byte_end":12932,"line_start":369,"line_end":369,"column_start":12,"column_end":24},"name":"DisplayBytes","qualname":"::DisplayBytes","value":"DisplayBytes {  }","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191}],"decl_id":null,"docs":" A wrapper around a byte sequence which implements `Display`.","sig":null,"attributes":[{"value":"/ A wrapper around a byte sequence which implements `Display`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":12649,"byte_end":12713,"line_start":364,"line_end":364,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":12714,"byte_end":12717,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ Non-decodable byte sequences will be printed in human-readable representation based","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":12718,"byte_end":12805,"line_start":366,"line_end":366,"column_start":1,"column_end":88}},{"value":"/ on the byte format `F`. Use `DisplayBytesConfig` to get an instance of this type.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":12806,"byte_end":12891,"line_start":367,"line_end":367,"column_start":1,"column_end":86}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\base64.rs","byte_start":18658,"byte_end":18670,"line_start":20,"line_end":20,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\hex.rs","byte_start":22683,"byte_end":22692,"line_start":29,"line_end":29,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":1394,"byte_end":1404,"line_start":46,"line_end":46,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":1622,"byte_end":1632,"line_start":57,"line_end":57,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":1737,"byte_end":1747,"line_start":61,"line_end":61,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":3681,"byte_end":3699,"line_start":125,"line_end":125,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":3809,"byte_end":3827,"line_start":131,"line_end":131,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":3917,"byte_end":3935,"line_start":135,"line_end":135,"column_start":13,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":7151,"byte_end":7169,"line_start":214,"line_end":214,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":9749,"byte_end":9767,"line_start":288,"line_end":288,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":10756,"byte_end":10770,"line_start":311,"line_end":311,"column_start":64,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":13073,"byte_end":13085,"line_start":375,"line_end":375,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":13627,"byte_end":13639,"line_start":395,"line_end":395,"column_start":47,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\base64.rs","byte_start":18658,"byte_end":18670,"line_start":20,"line_end":20,"column_start":21,"column_end":33},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":130},"to":{"krate":0,"index":96}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\hex.rs","byte_start":22683,"byte_end":22692,"line_start":29,"line_end":29,"column_start":25,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":137},"to":{"krate":0,"index":96}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":1394,"byte_end":1404,"line_start":46,"line_end":46,"column_start":32,"column_end":42},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":150},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":1622,"byte_end":1632,"line_start":57,"line_end":57,"column_start":33,"column_end":43},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":150},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":1737,"byte_end":1747,"line_start":61,"line_end":61,"column_start":29,"column_end":39},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":150},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":3681,"byte_end":3699,"line_start":125,"line_end":125,"column_start":18,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":167},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":3809,"byte_end":3827,"line_start":131,"line_end":131,"column_start":18,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":167},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":3917,"byte_end":3935,"line_start":135,"line_end":135,"column_start":13,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":7151,"byte_end":7169,"line_start":214,"line_end":214,"column_start":25,"column_end":43},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":9749,"byte_end":9767,"line_start":288,"line_end":288,"column_start":25,"column_end":43},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":10756,"byte_end":10770,"line_start":311,"line_end":311,"column_start":64,"column_end":78},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":99},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":13073,"byte_end":13085,"line_start":375,"line_end":375,"column_start":13,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\display_bytes-0.2.1\\src\\lib.rs","byte_start":13627,"byte_end":13639,"line_start":395,"line_end":395,"column_start":47,"column_end":59},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":186},"to":{"krate":2,"index":6611}}]}