{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0","program":"C:\\Users\\chris\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","textnonce","--edition=2018","C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","codegen-units=4","-C","debuginfo=2","-C","metadata=10bc83021c71afe9","-C","extra-filename=-10bc83021c71afe9","--out-dir","d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps","-L","dependency=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps","--extern","base64=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libbase64-e906f43e1bb84661.rmeta","--extern","rand=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\librand-4973e9039b8bc199.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chris\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libtextnonce-10bc83021c71afe9.rmeta"},"prelude":{"crate_id":{"name":"textnonce","disambiguator":[2931265773595483349,16576465491921025531]},"crate_root":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src","external_crates":[{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","num":13,"id":{"name":"rand","disambiguator":[2150750509847750270,5869094667710950446]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","num":14,"id":{"name":"rand_core","disambiguator":[9956298365862523499,6260231337206772661]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","num":15,"id":{"name":"getrandom","disambiguator":[6833556235923248421,5027942584189727747]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","num":16,"id":{"name":"cfg_if","disambiguator":[13041342758304267303,15943940606214615876]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","num":17,"id":{"name":"rand_chacha","disambiguator":[5667761880367719275,14805222883816820083]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","num":18,"id":{"name":"ppv_lite86","disambiguator":[7233009868607535441,14252753245726698915]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","num":19,"id":{"name":"base64","disambiguator":[4387836446881449916,4313625099896932234]}}],"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":342,"byte_end":6586,"line_start":8,"line_end":186,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":342,"byte_end":6586,"line_start":8,"line_end":186,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":34},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":21},{"krate":0,"index":32},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":26},{"krate":0,"index":24},{"krate":0,"index":9},{"krate":0,"index":16},{"krate":0,"index":18}],"decl_id":null,"docs":" A nonce is a cryptographic concept of an arbitrary number that is never used\n more than once.","sig":null,"attributes":[{"value":"/ A nonce is a cryptographic concept of an arbitrary number that is never used","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":342,"byte_end":422,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ more than once.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":423,"byte_end":442,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":443,"byte_end":446,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `TextNonce` is a nonce because the first 16 characters represents the current","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":447,"byte_end":528,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"/ time, which will never have been generated before, nor will it be generated","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":529,"byte_end":608,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ again, across the period of time in which a `Timespec` (or `std::time::Duration`,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":609,"byte_end":694,"line_start":13,"line_end":13,"column_start":1,"column_end":86}},{"value":"/ counting from the UNIX epoch) is valid.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":695,"byte_end":738,"line_start":14,"line_end":14,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":739,"byte_end":742,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `TextNonce` additionally includes bytes of randomness, making it difficult to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":743,"byte_end":824,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/ predict. This makes it suitable to be used for a session ID.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":825,"byte_end":889,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":890,"byte_end":893,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ It is also text-based, using only characters in the base64 character set.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":894,"byte_end":971,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":972,"byte_end":975,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Various length `TextNonce`es may be generated.  The minimum length is 16","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":976,"byte_end":1052,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ characters, and lengths must be evenly divisible by 4.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":1053,"byte_end":1111,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"deny(missing_debug_implementations, trivial_casts, trivial_numeric_casts,\n       unused_import_braces, unused_qualifications, unused_results,\n       unused_lifetimes, unused_labels, unused_extern_crates,\n       non_ascii_idents, keyword_idents, deprecated_in_future,\n       unstable_features, single_use_lifetimes, unsafe_code, unreachable_pub,\n       missing_docs, missing_copy_implementations)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":1113,"byte_end":1509,"line_start":24,"line_end":28,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":2516,"byte_end":2525,"line_start":54,"line_end":54,"column_start":12,"column_end":21},"name":"TextNonce","qualname":"::TextNonce","value":"","parent":null,"children":[],"decl_id":null,"docs":" A nonce is a cryptographic concept of an arbitrary number that is never used\n more than once.","sig":null,"attributes":[{"value":"/ A nonce is a cryptographic concept of an arbitrary number that is never used","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":1630,"byte_end":1710,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ more than once.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":1711,"byte_end":1730,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":1731,"byte_end":1734,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ `TextNonce` is a nonce because the first 16 characters represents the current","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":1735,"byte_end":1816,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/ time, which will never have been generated before, nor will it be generated","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":1817,"byte_end":1896,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ again, across the period of time in which a `Timespec` (or `std::time::Duration`,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":1897,"byte_end":1982,"line_start":42,"line_end":42,"column_start":1,"column_end":86}},{"value":"/ counting from the UNIX epoch) is valid.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":1983,"byte_end":2026,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":2027,"byte_end":2030,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ `TextNonce` additionally includes bytes of randomness, making it difficult to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":2031,"byte_end":2112,"line_start":45,"line_end":45,"column_start":1,"column_end":82}},{"value":"/ predict. This makes it suitable to be used for session IDs.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":2113,"byte_end":2176,"line_start":46,"line_end":46,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":2177,"byte_end":2180,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ It is also text-based, using only characters in the base64 character set.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":2181,"byte_end":2258,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":2259,"byte_end":2262,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Various length `TextNonce`es may be generated.  The minimum length is 16","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":2263,"byte_end":2339,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/ characters, and lengths must be evenly divisible by 4.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":2340,"byte_end":2398,"line_start":51,"line_end":51,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":2526,"byte_end":2536,"line_start":54,"line_end":54,"column_start":22,"column_end":32},"name":"0","qualname":"::TextNonce::0","value":"std::string::String","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":2670,"byte_end":2673,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<TextNonce>::new","value":"pub fn new() -> TextNonce","parent":null,"children":[],"decl_id":null,"docs":" Generate a new `TextNonce` with 16 characters of time and 16 characters of\n randomness\n","sig":null,"attributes":[{"value":"/ Generate a new `TextNonce` with 16 characters of time and 16 characters of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":2561,"byte_end":2639,"line_start":57,"line_end":57,"column_start":5,"column_end":83}},{"value":"/ randomness","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":2644,"byte_end":2658,"line_start":58,"line_end":58,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":2949,"byte_end":2954,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"sized","qualname":"<TextNonce>::sized","value":"pub fn sized(usize) -> Result<TextNonce, String>","parent":null,"children":[],"decl_id":null,"docs":" Generate a new `TextNonce`. `length` must be at least 16, and divisible by 4.\n The first 16 characters come from the time component, and all characters\n after that will be random.\n","sig":null,"attributes":[{"value":"/ Generate a new `TextNonce`. `length` must be at least 16, and divisible by 4.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":2740,"byte_end":2821,"line_start":63,"line_end":63,"column_start":5,"column_end":86}},{"value":"/ The first 16 characters come from the time component, and all characters","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":2826,"byte_end":2902,"line_start":64,"line_end":64,"column_start":5,"column_end":81}},{"value":"/ after that will be random.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":2907,"byte_end":2937,"line_start":65,"line_end":65,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":3342,"byte_end":3355,"line_start":73,"line_end":73,"column_start":12,"column_end":25},"name":"sized_urlsafe","qualname":"<TextNonce>::sized_urlsafe","value":"pub fn sized_urlsafe(usize) -> Result<TextNonce, String>","parent":null,"children":[],"decl_id":null,"docs":" Generate a new `TextNonce` using the `URL_SAFE` variant of base64 (using '_' and '-')\n `length` must be at least 16, and divisible by 4.  The first 16 characters come\n from the time component, and all characters after that will be random.\n","sig":null,"attributes":[{"value":"/ Generate a new `TextNonce` using the `URL_SAFE` variant of base64 (using '_' and '-')","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":3074,"byte_end":3163,"line_start":70,"line_end":70,"column_start":5,"column_end":94}},{"value":"/ `length` must be at least 16, and divisible by 4.  The first 16 characters come","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":3168,"byte_end":3251,"line_start":71,"line_end":71,"column_start":5,"column_end":88}},{"value":"/ from the time component, and all characters after that will be random.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":3256,"byte_end":3330,"line_start":72,"line_end":72,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":3728,"byte_end":3744,"line_start":80,"line_end":80,"column_start":12,"column_end":28},"name":"sized_configured","qualname":"<TextNonce>::sized_configured","value":"pub fn sized_configured(usize, base64::Config) -> Result<TextNonce, String>","parent":null,"children":[],"decl_id":null,"docs":" Generate a new `TextNonce` specifying the Base64 configuration to use.\n `length` must be at least 16, and divisible by 4.  The first 16 characters come\n from the time component, and all characters after that will be random.\n","sig":null,"attributes":[{"value":"/ Generate a new `TextNonce` specifying the Base64 configuration to use.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":3475,"byte_end":3549,"line_start":77,"line_end":77,"column_start":5,"column_end":79}},{"value":"/ `length` must be at least 16, and divisible by 4.  The first 16 characters come","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":3554,"byte_end":3637,"line_start":78,"line_end":78,"column_start":5,"column_end":88}},{"value":"/ from the time component, and all characters after that will be random.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":3642,"byte_end":3716,"line_start":79,"line_end":79,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":4886,"byte_end":4897,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"into_string","qualname":"<TextNonce>::into_string","value":"pub fn into_string(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Convert into a string\n","sig":null,"attributes":[{"value":"/ Convert into a string","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":4849,"byte_end":4874,"line_start":112,"line_end":112,"column_start":5,"column_end":30}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":2545,"byte_end":2554,"line_start":56,"line_end":56,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":4990,"byte_end":4999,"line_start":119,"line_end":119,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":5123,"byte_end":5132,"line_start":125,"line_end":125,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":2545,"byte_end":2554,"line_start":56,"line_end":56,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":21},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":4990,"byte_end":4999,"line_start":119,"line_end":119,"column_start":23,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":21},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textnonce-1.0.0\\src\\lib.rs","byte_start":5123,"byte_end":5132,"line_start":125,"line_end":125,"column_start":16,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":21},"to":{"krate":2,"index":2242}}]}