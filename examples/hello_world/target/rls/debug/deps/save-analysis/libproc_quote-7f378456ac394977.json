{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2","program":"C:\\Users\\chris\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","proc_quote","--edition=2018","C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=7f378456ac394977","-C","extra-filename=-7f378456ac394977","--out-dir","d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps","-L","dependency=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps","--extern","proc_macro_hack=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\proc_macro_hack-3954fda9b14fd9a2.dll","--extern","proc_macro2=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libproc_macro2-3c12c133f5f6fe84.rmeta","--extern","proc_quote_impl=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\proc_quote_impl-22b593bcc9c74f8c.dll","--extern","quote=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libquote-900a4a0cb3596930.rmeta","--extern","syn=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libsyn-32ab5b267d8d8d17.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chris\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libproc_quote-7f378456ac394977.rmeta"},"prelude":{"crate_id":{"name":"proc_quote","disambiguator":[6322770524815586957,11358992777537526320]},"crate_root":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src","external_crates":[{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","num":13,"id":{"name":"proc_macro_hack","disambiguator":[847568761660495912,12460282608658048690]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","num":14,"id":{"name":"quote","disambiguator":[3347676139245151592,2188930151663339714]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","num":15,"id":{"name":"proc_macro","disambiguator":[464113763227836680,14938334670346201950]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","num":16,"id":{"name":"proc_macro2","disambiguator":[16945363453802090877,13195442133295663798]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","num":17,"id":{"name":"unicode_xid","disambiguator":[7888800425705327329,12673675028785149434]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","num":18,"id":{"name":"proc_quote_impl","disambiguator":[3525154424669035129,16273681535264168240]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","num":19,"id":{"name":"syn","disambiguator":[15854055892638232003,13525483800155003619]}}],"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":0,"byte_end":16791,"line_start":1,"line_end":467,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2652,"byte_end":2653,"line_start":71,"line_end":71,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":77},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2670,"byte_end":2678,"line_start":72,"line_end":72,"column_start":16,"column_end":24},"alias_span":null,"name":"ToTokens","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":10},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2695,"byte_end":2709,"line_start":73,"line_end":73,"column_start":16,"column_end":30},"alias_span":null,"name":"TokenStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":60},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":11839,"byte_end":11844,"line_start":321,"line_end":321,"column_start":26,"column_end":31},"alias_span":null,"name":"_proc_macro_hack_quote","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":68},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":15268,"byte_end":15281,"line_start":417,"line_end":417,"column_start":26,"column_end":39},"alias_span":null,"name":"_proc_macro_hack_quote_spanned","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":15376,"byte_end":15377,"line_start":423,"line_end":423,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"Ident, Span, Group, Punct, Delimiter, Spacing, TokenStream","parent":{"krate":0,"index":51}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":0,"byte_end":16791,"line_start":1,"line_end":467,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":61},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":71},{"krate":0,"index":51}],"decl_id":null,"docs":" This crate provides the [`quote!`] macro for turning Rust syntax tree data\n structures into tokens of source code.","sig":null,"attributes":[{"value":"/ This crate provides the [`quote!`] macro for turning Rust syntax tree data","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":0,"byte_end":78,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/ structures into tokens of source code.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":79,"byte_end":121,"line_start":2,"line_end":2,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":122,"byte_end":125,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ [`quote!`]: macro.quote.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":126,"byte_end":158,"line_start":4,"line_end":4,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":159,"byte_end":162,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Procedural macros in Rust receive a stream of tokens as input, execute","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":163,"byte_end":237,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ arbitrary Rust code to determine how to manipulate those tokens, and produce","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":238,"byte_end":318,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ a stream of tokens to hand back to the compiler to compile into the caller's","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":319,"byte_end":399,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ crate. Quasi-quoting is a solution to one piece of that -- producing tokens","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":400,"byte_end":479,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ to return to the compiler.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":480,"byte_end":510,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":511,"byte_end":514,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The idea of quasi-quoting is that we write *code* that we treat as *data*.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":515,"byte_end":593,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ Within the `quote!` macro, we can write what looks like code to our text","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":594,"byte_end":670,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ editor or IDE. We get all the benefits of the editor's brace matching,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":671,"byte_end":745,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ syntax highlighting, indentation, and maybe autocompletion. But rather than","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":746,"byte_end":825,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ compiling that as code into the current crate, we can treat it as data, pass","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":826,"byte_end":906,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ it around, mutate it, and eventually hand it back to the compiler as tokens","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":907,"byte_end":986,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ to compile into the macro caller's crate.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":987,"byte_end":1032,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1033,"byte_end":1036,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This crate is motivated by the procedural macro use case, but it is a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1037,"byte_end":1110,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ general-purpose Rust quasi-quoting library and is not specific to procedural","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1111,"byte_end":1191,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ macros.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1192,"byte_end":1203,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1204,"byte_end":1207,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1208,"byte_end":1221,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1222,"byte_end":1225,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The following quasi-quoted block of code is something you might find in [a]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1226,"byte_end":1305,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ procedural macro having to do with data structure serialization. The `#var`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1306,"byte_end":1385,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ syntax performs interpolation of runtime variables into the quoted tokens.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1386,"byte_end":1464,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ Check out the documentation of the [`quote!`] macro for more detail about","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1465,"byte_end":1542,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ the syntax. See also the [`quote_spanned!`] macro which is important for","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1543,"byte_end":1619,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ implementing hygienic procedural macros.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1620,"byte_end":1664,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1665,"byte_end":1668,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [a]: https://serde.rs/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1669,"byte_end":1695,"line_start":33,"line_end":33,"column_start":1,"column_end":27}},{"value":"/ [`quote_spanned!`]: macro.quote_spanned.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1696,"byte_end":1744,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1745,"byte_end":1748,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1749,"byte_end":1767,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"/ # use quote::quote;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1768,"byte_end":1791,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ #","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1792,"byte_end":1797,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ # let generics = \"\";","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1798,"byte_end":1822,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ # let where_clause = \"\";","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1823,"byte_end":1851,"line_start":40,"line_end":40,"column_start":1,"column_end":29}},{"value":"/ # let field_ty = \"\";","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1852,"byte_end":1876,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/ # let item_ty = \"\";","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1877,"byte_end":1900,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/ # let path = \"\";","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1901,"byte_end":1921,"line_start":43,"line_end":43,"column_start":1,"column_end":21}},{"value":"/ # let value = \"\";","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1922,"byte_end":1943,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/ #","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1944,"byte_end":1949,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ let tokens = quote! {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1950,"byte_end":1975,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     struct SerializeWith #generics #where_clause {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":1976,"byte_end":2030,"line_start":47,"line_end":47,"column_start":1,"column_end":55}},{"value":"/         value: &'a #field_ty,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2031,"byte_end":2064,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/         phantom: core::marker::PhantomData<#item_ty>,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2065,"byte_end":2122,"line_start":49,"line_end":49,"column_start":1,"column_end":58}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2123,"byte_end":2132,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2133,"byte_end":2136,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     impl #generics serde::Serialize for SerializeWith #generics #where_clause {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2137,"byte_end":2220,"line_start":52,"line_end":52,"column_start":1,"column_end":84}},{"value":"/         fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2221,"byte_end":2297,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/         where","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2298,"byte_end":2315,"line_start":54,"line_end":54,"column_start":1,"column_end":18}},{"value":"/             S: serde::Serializer,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2316,"byte_end":2353,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/         {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2354,"byte_end":2367,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"/             #path(self.value, serializer)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2368,"byte_end":2413,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2414,"byte_end":2427,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2428,"byte_end":2437,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2438,"byte_end":2441,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/     SerializeWith {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2442,"byte_end":2465,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/         value: #value,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2466,"byte_end":2492,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"/         phantom: core::marker::PhantomData::<#item_ty>,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2493,"byte_end":2552,"line_start":63,"line_end":63,"column_start":1,"column_end":60}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2553,"byte_end":2562,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2563,"byte_end":2569,"line_start":65,"line_end":65,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":2570,"byte_end":2577,"line_start":66,"line_end":66,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":19178,"byte_end":19184,"line_start":32,"line_end":32,"column_start":11,"column_end":17},"name":"Repeat","qualname":"::repeat::Repeat","value":"Repeat<T: Iterator>: private::Sealed<T>","parent":null,"children":[{"krate":0,"index":10}],"decl_id":null,"docs":" Defines the behavior of types that can be interpolated inside repeating patterns (`#(...)*`).","sig":null,"attributes":[{"value":"/ Defines the behavior of types that can be interpolated inside repeating patterns (`#(...)*`).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":17323,"byte_end":17420,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":17421,"byte_end":17424,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ### Which types *do* `Repeat`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":17425,"byte_end":17458,"line_start":7,"line_end":7,"column_start":1,"column_end":34}},{"value":"/   - [`Iterator<T>`] consumes the iterator, iterating through every element.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":17459,"byte_end":17538,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   - <a href=\"https://doc.rust-lang.org/std/borrow/trait.Borrow.html\">`Borrow<[T]>`</a>","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":17539,"byte_end":17629,"line_start":9,"line_end":9,"column_start":1,"column_end":91}},{"value":"/ (includes [`Vec`], [`array`], and [`slice`]) iterates with the [`slice::iter`] method,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":17630,"byte_end":17720,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/ thus not consuming the original data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":17721,"byte_end":17762,"line_start":11,"line_end":11,"column_start":1,"column_end":42}},{"value":"/   - [`ToTokens`], interpolates the variable in every iteration.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":17763,"byte_end":17830,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":17831,"byte_end":17834,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Which types *do NOT* `Repeat`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":17835,"byte_end":17872,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/   - [`IntoIterator`], to avoid ambiguity (Ex. \"Which behavior would have been used for [`Vec`],","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":17873,"byte_end":17972,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ which implements both [`IntoIterator`] and <a href=\"https://doc.rust-lang.org/std/borrow/trait.Borrow.html\">","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":17973,"byte_end":18085,"line_start":16,"line_end":16,"column_start":1,"column_end":113}},{"value":"/ `Borrow<[T]>`</a>?\"; \"Which behavior would have been used for [`TokenStream`], which implements both","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":18086,"byte_end":18190,"line_start":17,"line_end":17,"column_start":1,"column_end":105}},{"value":"/ [`IntoIterator`] and [`ToTokens`]?\"). To use the iterator, you may call [`IntoIterator::into_iter`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":18191,"byte_end":18294,"line_start":18,"line_end":18,"column_start":1,"column_end":104}},{"value":"/ explicitly.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":18295,"byte_end":18310,"line_start":19,"line_end":19,"column_start":1,"column_end":16}},{"value":"/   - Ambiguous types that implement at least two of the `Repeat` traits. In the very unlikely case","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":18311,"byte_end":18412,"line_start":20,"line_end":20,"column_start":1,"column_end":102}},{"value":"/ this happens, disambiguate the type by wrapping it under some structure that only implements the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":18413,"byte_end":18513,"line_start":21,"line_end":21,"column_start":1,"column_end":101}},{"value":"/ trait you desire to use.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":18514,"byte_end":18542,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":18543,"byte_end":18546,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`Iterator<T>`]: https://doc.rust-lang.org/std/iter/trait.Iterator.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":18547,"byte_end":18622,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ [`Vec`]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":18623,"byte_end":18685,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/ [`array`]: https://doc.rust-lang.org/std/primitive.array.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":18686,"byte_end":18751,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ [`slice`]: https://doc.rust-lang.org/std/slice/index.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":18752,"byte_end":18813,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/ [`slice::iter`]: https://doc.rust-lang.org/std/primitive.slice.html#method.iter","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":18814,"byte_end":18897,"line_start":28,"line_end":28,"column_start":1,"column_end":84}},{"value":"/ [`ToTokens`]: https://docs.rs/proc-quote/0/proc_quote/trait.ToTokens.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":18898,"byte_end":18975,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ [`IntoIterator`]: https://doc.rust-lang.org/std/iter/trait.IntoIterator.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":18976,"byte_end":19056,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ [`IntoIterator::into_iter`]: https://doc.rust-lang.org/std/iter/trait.IntoIterator.html#tymethod.into_iter","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":19057,"byte_end":19167,"line_start":31,"line_end":31,"column_start":1,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":19386,"byte_end":19409,"line_start":37,"line_end":37,"column_start":8,"column_end":31},"name":"__proc_quote__as_repeat","qualname":"::repeat::Repeat::__proc_quote__as_repeat","value":"pub fn __proc_quote__as_repeat(Self) -> T","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":19335,"byte_end":19359,"line_start":35,"line_end":35,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":19471,"byte_end":19477,"line_start":42,"line_end":42,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::repeat::private::Sealed","value":"Sealed<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":20774,"byte_end":20788,"line_start":79,"line_end":79,"column_start":12,"column_end":26},"name":"ToTokensRepeat","qualname":"::repeat::ToTokensRepeat","value":"","parent":null,"children":[],"decl_id":null,"docs":" Struct that wraps a reference to `ToTokens` in order to use it in repeating patterns.\n","sig":null,"attributes":[{"value":"/ Struct that wraps a reference to `ToTokens` in order to use it in repeating patterns.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":20673,"byte_end":20762,"line_start":78,"line_end":78,"column_start":1,"column_end":90}}]},{"kind":"Mod","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":15326,"byte_end":15330,"line_start":421,"line_end":421,"column_start":9,"column_end":13},"name":"__rt","qualname":"::__rt","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":15391,"byte_end":15403,"line_start":425,"line_end":425,"column_start":12,"column_end":24},"name":"append_ident","qualname":"::__rt::append_ident","value":"pub fn append_ident(&mut TokenStream, &str, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":15923,"byte_end":15935,"line_start":439,"line_end":439,"column_start":12,"column_end":24},"name":"append_punct","qualname":"::__rt::append_punct","value":"pub fn append_punct(&mut TokenStream, char, Spacing, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":16137,"byte_end":16162,"line_start":445,"line_end":445,"column_start":12,"column_end":37},"name":"append_stringified_tokens","qualname":"::__rt::append_stringified_tokens","value":"pub fn append_stringified_tokens(&mut TokenStream, &str, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":16408,"byte_end":16424,"line_start":453,"line_end":453,"column_start":12,"column_end":28},"name":"append_to_tokens","qualname":"::__rt::append_to_tokens","value":"pub fn append_to_tokens<T: ToTokens>(&mut TokenStream, &T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\lib.rs","byte_start":16536,"byte_end":16548,"line_start":457,"line_end":457,"column_start":12,"column_end":24},"name":"append_group","qualname":"::__rt::append_group","value":"pub fn append_group(&mut TokenStream, TokenStream, Delimiter, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":19534,"byte_end":19535,"line_start":44,"line_end":44,"column_start":50,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":19881,"byte_end":19882,"line_start":52,"line_end":52,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":20859,"byte_end":20873,"line_start":80,"line_end":80,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":19208,"byte_end":19214,"line_start":32,"line_end":32,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":13},"to":{"krate":0,"index":8}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":19534,"byte_end":19535,"line_start":44,"line_end":44,"column_start":50,"column_end":51},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":17},"to":{"krate":0,"index":13}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":19881,"byte_end":19882,"line_start":52,"line_end":52,"column_start":46,"column_end":47},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":27},"to":{"krate":0,"index":8}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-quote-0.3.2\\src\\repeat.rs","byte_start":20859,"byte_end":20873,"line_start":80,"line_end":80,"column_start":41,"column_end":55},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":38},"to":{"krate":2,"index":5311}}]}