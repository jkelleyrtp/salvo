(function() {var implementors = {};
implementors["salvo_core"] = [{"text":"impl RefUnwindSafe for CatcherImpl","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Depot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HttpError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReadError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FormData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilePart","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldHeaders","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; RefUnwindSafe for NextField&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; RefUnwindSafe for Field&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; RefUnwindSafe for FieldData&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for ReadToString&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for Multipart&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HttpRange","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ResponseBody","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Response","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for FnFilter&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Router","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DetectMatched","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PathState","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Server","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for HyperHandler","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TlsServer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NamedFile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NamedFileBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileChunk","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for HtmlTextContent&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for JsonTextContent&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for PlainTextContent&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for XmlTextContent&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]}];
implementors["salvo_extra"] = [{"text":"impl !RefUnwindSafe for BasicAuthHandler","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BasicAuthConfig","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; !RefUnwindSafe for JwtHandler&lt;C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; !RefUnwindSafe for JwtConfig&lt;C&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeaderExtractor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FormExtractor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryExtractor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CookieExtractor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Options","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Static","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cors","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for WsHandler&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WebSocket","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Message","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MissingConnectionUpgrade","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()