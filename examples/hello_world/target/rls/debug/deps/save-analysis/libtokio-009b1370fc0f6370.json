{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0","program":"C:\\Users\\chris\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio","--edition=2018","C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","codegen-units=4","-C","debuginfo=2","--cfg","feature=\"bytes\"","--cfg","feature=\"default\"","--cfg","feature=\"fs\"","--cfg","feature=\"full\"","--cfg","feature=\"io-std\"","--cfg","feature=\"io-util\"","--cfg","feature=\"libc\"","--cfg","feature=\"macros\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"net\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"parking_lot\"","--cfg","feature=\"process\"","--cfg","feature=\"rt\"","--cfg","feature=\"rt-multi-thread\"","--cfg","feature=\"signal\"","--cfg","feature=\"signal-hook-registry\"","--cfg","feature=\"sync\"","--cfg","feature=\"time\"","--cfg","feature=\"tokio-macros\"","--cfg","feature=\"winapi\"","-C","metadata=009b1370fc0f6370","-C","extra-filename=-009b1370fc0f6370","--out-dir","d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps","-L","dependency=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps","--extern","bytes=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libbytes-e26a4ab70dff9121.rmeta","--extern","memchr=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libmemchr-a0dc0ef7a38b8231.rmeta","--extern","mio=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libmio-1321b8cccfdd50a7.rmeta","--extern","num_cpus=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libnum_cpus-fa37b08f54c5f0ab.rmeta","--extern","once_cell=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libonce_cell-175aa3b345f3b8c8.rmeta","--extern","parking_lot=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libparking_lot-4173c1ed2815535d.rmeta","--extern","pin_project_lite=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libpin_project_lite-9c249b4595e822bc.rmeta","--extern","tokio_macros=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\tokio_macros-c3f447e5c9182bf6.dll","--extern","winapi=d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libwinapi-7ab5223e13dc6ef8.rmeta","--cap-lints","allow","--cfg","tokio_track_caller","--error-format=json","--sysroot","C:\\Users\\chris\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Kenorld\\salvo\\examples\\hello_world\\target\\rls\\debug\\deps\\libtokio-009b1370fc0f6370.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[11001661535677149104,6797459252074549345]},"crate_root":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src","external_crates":[{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\parking_lot.rs","num":13,"id":{"name":"parking_lot","disambiguator":[7464336308393387758,17796220798281168815]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\parking_lot.rs","num":14,"id":{"name":"instant","disambiguator":[7547240491563405882,15519885169262210000]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\parking_lot.rs","num":15,"id":{"name":"cfg_if","disambiguator":[6575273302406667930,3940799058014447604]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\parking_lot.rs","num":16,"id":{"name":"lock_api","disambiguator":[6472453349098338485,4826286967577243190]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\parking_lot.rs","num":17,"id":{"name":"scopeguard","disambiguator":[1053023215469869761,846511992489767797]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\parking_lot.rs","num":18,"id":{"name":"parking_lot_core","disambiguator":[311211846264050079,15047164303854410695]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\parking_lot.rs","num":19,"id":{"name":"smallvec","disambiguator":[8786722734638104729,5302331452337924916]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\windows.rs","num":20,"id":{"name":"winapi","disambiguator":[4247108052807861146,12051563380877582114]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\try_join.rs","num":21,"id":{"name":"pin_project_lite","disambiguator":[16195817785888709049,13104194840729818764]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\registration.rs","num":22,"id":{"name":"mio","disambiguator":[15467233828198203091,15044156780043263388]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\registration.rs","num":23,"id":{"name":"log","disambiguator":[3025726331045746021,4878634889828534736]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\registration.rs","num":24,"id":{"name":"cfg_if","disambiguator":[13041342758304267303,15943940606214615876]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\registration.rs","num":25,"id":{"name":"ntapi","disambiguator":[16367051111125754422,16468581102166176975]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\registration.rs","num":26,"id":{"name":"miow","disambiguator":[6638858901077985725,15866042359362186714]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\registration.rs","num":27,"id":{"name":"socket2","disambiguator":[4768596161232734064,7377385452921433176]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","num":28,"id":{"name":"bytes","disambiguator":[10587713108828201408,7429414292964262406]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\registry.rs","num":29,"id":{"name":"once_cell","disambiguator":[13554842292853118119,6295194893907200120]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","num":30,"id":{"name":"tokio_macros","disambiguator":[9296414730820422176,5191211969257480069]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_until.rs","num":31,"id":{"name":"memchr","disambiguator":[5766648311291674695,15612451569681712896]}},{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\mod.rs","num":32,"id":{"name":"num_cpus","disambiguator":[298938040438223827,570958154305529956]}}],"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":0,"byte_end":17634,"line_start":1,"line_end":482,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\support.rs","byte_start":31552,"byte_end":31559,"line_start":2,"line_end":2,"column_start":28,"column_end":35},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\support.rs","byte_start":31600,"byte_end":31610,"line_start":3,"line_end":3,"column_start":40,"column_end":50},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\support.rs","byte_start":31637,"byte_end":31649,"line_start":4,"line_end":4,"column_start":26,"column_end":38},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":2,"index":9138},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\support.rs","byte_start":31675,"byte_end":31681,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":2,"index":32457},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\support.rs","byte_start":31701,"byte_end":31704,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":2,"index":34962},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\support.rs","byte_start":31725,"byte_end":31729,"line_start":9,"line_end":9,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537028,"byte_end":8537040,"line_start":28,"line_end":28,"column_start":29,"column_end":41},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537085,"byte_end":8537095,"line_start":31,"line_end":31,"column_start":27,"column_end":37},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537148,"byte_end":8537162,"line_start":34,"line_end":34,"column_start":31,"column_end":45},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537209,"byte_end":8537219,"line_start":37,"line_end":37,"column_start":28,"column_end":38},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537252,"byte_end":8537256,"line_start":40,"line_end":40,"column_start":21,"column_end":25},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537299,"byte_end":8537308,"line_start":43,"line_end":43,"column_start":26,"column_end":35},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537349,"byte_end":8537357,"line_start":46,"line_end":46,"column_start":25,"column_end":33},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":1141},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537406,"byte_end":8537417,"line_start":49,"line_end":49,"column_start":29,"column_end":40},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":945},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537450,"byte_end":8537454,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":968},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537496,"byte_end":8537504,"line_start":55,"line_end":55,"column_start":26,"column_end":34},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537506,"byte_end":8537514,"line_start":55,"line_end":55,"column_start":36,"column_end":44},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537516,"byte_end":8537523,"line_start":55,"line_end":55,"column_start":46,"column_end":53},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537567,"byte_end":8537576,"line_start":58,"line_end":58,"column_start":26,"column_end":35},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":1013},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537629,"byte_end":8537643,"line_start":61,"line_end":61,"column_start":31,"column_end":45},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537688,"byte_end":8537698,"line_start":64,"line_end":64,"column_start":27,"column_end":37},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537751,"byte_end":8537765,"line_start":67,"line_end":67,"column_start":31,"column_end":45},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537812,"byte_end":8537823,"line_start":70,"line_end":70,"column_start":28,"column_end":39},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":1053},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537860,"byte_end":8537866,"line_start":73,"line_end":73,"column_start":23,"column_end":29},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":1065},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537921,"byte_end":8537936,"line_start":76,"line_end":76,"column_start":32,"column_end":47},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8537993,"byte_end":8538009,"line_start":79,"line_end":79,"column_start":33,"column_end":49},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8538044,"byte_end":8538049,"line_start":82,"line_end":82,"column_start":22,"column_end":27},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8538082,"byte_end":8538086,"line_start":85,"line_end":85,"column_start":21,"column_end":25},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8538250,"byte_end":8538261,"line_start":98,"line_end":98,"column_start":32,"column_end":43},"alias_span":null,"name":"symlink_dir","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8538318,"byte_end":8538330,"line_start":101,"line_end":101,"column_start":33,"column_end":45},"alias_span":null,"name":"symlink_file","value":"","parent":{"krate":0,"index":741}},{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\mod.rs","byte_start":31932,"byte_end":31939,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":43070,"byte_end":43082,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":43127,"byte_end":43136,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":43181,"byte_end":43190,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":43237,"byte_end":43247,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":43288,"byte_end":43295,"line_start":200,"line_end":200,"column_start":25,"column_end":32},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":1,"index":2704},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":43465,"byte_end":43470,"line_start":205,"line_end":205,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":1,"index":7080},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":43472,"byte_end":43481,"line_start":205,"line_end":205,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":1,"index":2702},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":43483,"byte_end":43489,"line_start":205,"line_end":205,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":1,"index":7157},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":43491,"byte_end":43499,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1607},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":43593,"byte_end":43601,"line_start":211,"line_end":211,"column_start":26,"column_end":34},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1620},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":43603,"byte_end":43608,"line_start":211,"line_end":211,"column_start":36,"column_end":41},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1841},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44026,"byte_end":44032,"line_start":233,"line_end":233,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1842},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44034,"byte_end":44040,"line_start":233,"line_end":233,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1846},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44079,"byte_end":44084,"line_start":236,"line_end":236,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1847},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44086,"byte_end":44091,"line_start":236,"line_end":236,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1851},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44132,"byte_end":44138,"line_start":239,"line_end":239,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1852},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44140,"byte_end":44146,"line_start":239,"line_end":239,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1969},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44202,"byte_end":44207,"line_start":244,"line_end":244,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1963},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44209,"byte_end":44217,"line_start":244,"line_end":244,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1966},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44219,"byte_end":44228,"line_start":244,"line_end":244,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2849},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44310,"byte_end":44314,"line_start":249,"line_end":249,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2855},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44316,"byte_end":44324,"line_start":249,"line_end":249,"column_start":15,"column_end":23},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2358},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44326,"byte_end":44332,"line_start":249,"line_end":249,"column_start":25,"column_end":31},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2875},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44334,"byte_end":44339,"line_start":249,"line_end":249,"column_start":33,"column_end":38},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":3034},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44341,"byte_end":44347,"line_start":249,"line_end":249,"column_start":40,"column_end":46},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":3041},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44349,"byte_end":44353,"line_start":249,"line_end":249,"column_start":48,"column_end":52},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2725},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44355,"byte_end":44370,"line_start":249,"line_end":249,"column_start":54,"column_end":69},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2733},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44372,"byte_end":44384,"line_start":249,"line_end":249,"column_start":71,"column_end":83},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2784},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44386,"byte_end":44398,"line_start":249,"line_end":249,"column_start":85,"column_end":97},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2787},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44400,"byte_end":44413,"line_start":249,"line_end":249,"column_start":99,"column_end":112},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":10986},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44423,"byte_end":44432,"line_start":250,"line_end":250,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":10955},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44434,"byte_end":44443,"line_start":250,"line_end":250,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":10909},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44445,"byte_end":44454,"line_start":250,"line_end":250,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2876},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44456,"byte_end":44468,"line_start":250,"line_end":250,"column_start":42,"column_end":54},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2873},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44470,"byte_end":44475,"line_start":250,"line_end":250,"column_start":56,"column_end":61},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":10768},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44477,"byte_end":44482,"line_start":250,"line_end":250,"column_start":63,"column_end":68},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":3035},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44484,"byte_end":44490,"line_start":250,"line_end":250,"column_start":70,"column_end":76},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":3039},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44492,"byte_end":44496,"line_start":250,"line_end":250,"column_start":78,"column_end":82},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":9405},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44498,"byte_end":44503,"line_start":250,"line_end":250,"column_start":84,"column_end":89},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":9365},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":44505,"byte_end":44509,"line_start":250,"line_end":250,"column_start":91,"column_end":95},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":81417,"byte_end":81430,"line_start":28,"line_end":28,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":299}},{"kind":"Use","ref_id":{"krate":0,"index":3648},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":81490,"byte_end":81501,"line_start":32,"line_end":32,"column_start":26,"column_end":37},"alias_span":null,"name":"lookup_host","value":"","parent":{"krate":0,"index":299}},{"kind":"Use","ref_id":{"krate":0,"index":3657},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\mod.rs","byte_start":8873814,"byte_end":8873822,"line_start":8,"line_end":8,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3254}},{"kind":"Use","ref_id":{"krate":0,"index":3664},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\mod.rs","byte_start":8873824,"byte_end":8873833,"line_start":8,"line_end":8,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3254}},{"kind":"Use","ref_id":{"krate":0,"index":3671},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\mod.rs","byte_start":8873876,"byte_end":8873889,"line_start":11,"line_end":11,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":3254}},{"kind":"Use","ref_id":{"krate":0,"index":3675},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\mod.rs","byte_start":8873891,"byte_end":8873905,"line_start":11,"line_end":11,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":3254}},{"kind":"Use","ref_id":{"krate":0,"index":3680},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\mod.rs","byte_start":8873907,"byte_end":8873919,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3254}},{"kind":"Use","ref_id":{"krate":0,"index":3681},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\mod.rs","byte_start":8873907,"byte_end":8873919,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3418}},{"kind":"Use","ref_id":{"krate":0,"index":3653},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":81548,"byte_end":81559,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":299}},{"kind":"Use","ref_id":{"krate":0,"index":3655},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":81586,"byte_end":81595,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpSocket","value":"","parent":{"krate":0,"index":299}},{"kind":"Use","ref_id":{"krate":0,"index":3686},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":81622,"byte_end":81631,"line_start":37,"line_end":37,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":299}},{"kind":"Use","ref_id":{"krate":0,"index":3688},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":81664,"byte_end":81673,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":299}},{"kind":"Use","ref_id":{"krate":0,"index":4825},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9049079,"byte_end":9049086,"line_start":193,"line_end":193,"column_start":28,"column_end":35},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":0,"index":5025},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9049211,"byte_end":9049221,"line_start":201,"line_end":201,"column_start":22,"column_end":32},"alias_span":null,"name":"EnterGuard","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":0,"index":5014},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9049223,"byte_end":9049229,"line_start":201,"line_end":201,"column_start":34,"column_end":40},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":0,"index":5513},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9255416,"byte_end":9255422,"line_start":47,"line_end":47,"column_start":17,"column_end":23},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":5508}},{"kind":"Use","ref_id":{"krate":0,"index":6871},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307116,"byte_end":9307123,"line_start":432,"line_end":432,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":5663}},{"kind":"Use","ref_id":{"krate":0,"index":6883},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307125,"byte_end":9307142,"line_start":432,"line_end":432,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":5663}},{"kind":"Use","ref_id":{"krate":0,"index":5947},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9351580,"byte_end":9351587,"line_start":76,"line_end":76,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":5852}},{"kind":"Use","ref_id":{"krate":0,"index":5940},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9351589,"byte_end":9351595,"line_start":76,"line_end":76,"column_start":34,"column_end":40},"alias_span":null,"name":"Permit","value":"","parent":{"krate":0,"index":5852}},{"kind":"Use","ref_id":{"krate":0,"index":5944},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9351597,"byte_end":9351605,"line_start":76,"line_end":76,"column_start":42,"column_end":50},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":5852}},{"kind":"Use","ref_id":{"krate":0,"index":5937},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9351607,"byte_end":9351613,"line_start":76,"line_end":76,"column_start":52,"column_end":58},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":5852}},{"kind":"Use","ref_id":{"krate":0,"index":6204},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9351691,"byte_end":9351708,"line_start":83,"line_end":83,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":5852}},{"kind":"Use","ref_id":{"krate":0,"index":6198},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9351710,"byte_end":9351727,"line_start":83,"line_end":83,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":5852}},{"kind":"Use","ref_id":{"krate":0,"index":6189},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9351729,"byte_end":9351744,"line_start":83,"line_end":83,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":5852}},{"kind":"Use","ref_id":{"krate":0,"index":6264},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307224,"byte_end":9307229,"line_start":439,"line_end":439,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":5663}},{"kind":"Use","ref_id":{"krate":0,"index":6268},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307231,"byte_end":9307241,"line_start":439,"line_end":439,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":5663}},{"kind":"Use","ref_id":{"krate":0,"index":6966},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307243,"byte_end":9307255,"line_start":439,"line_end":439,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":5663}},{"kind":"Use","ref_id":{"krate":0,"index":6272},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307257,"byte_end":9307272,"line_start":439,"line_end":439,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":5663}},{"kind":"Use","ref_id":{"krate":0,"index":6971},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307323,"byte_end":9307329,"line_start":442,"line_end":442,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":5663}},{"kind":"Use","ref_id":{"krate":0,"index":7064},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307420,"byte_end":9307432,"line_start":447,"line_end":447,"column_start":31,"column_end":43},"alias_span":null,"name":"AcquireError","value":"","parent":{"krate":0,"index":5663}},{"kind":"Use","ref_id":{"krate":0,"index":7054},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307434,"byte_end":9307449,"line_start":447,"line_end":447,"column_start":45,"column_end":60},"alias_span":null,"name":"TryAcquireError","value":"","parent":{"krate":0,"index":5663}},{"kind":"Use","ref_id":{"krate":0,"index":7069},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307496,"byte_end":9307505,"line_start":450,"line_end":450,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":5663}},{"kind":"Use","ref_id":{"krate":0,"index":7073},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307507,"byte_end":9307522,"line_start":450,"line_end":450,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":5663}},{"kind":"Use","ref_id":{"krate":0,"index":7080},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307524,"byte_end":9307544,"line_start":450,"line_end":450,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":5663}},{"kind":"Use","ref_id":{"krate":0,"index":7085},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307585,"byte_end":9307591,"line_start":453,"line_end":453,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":5663}},{"kind":"Use","ref_id":{"krate":0,"index":6671},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307593,"byte_end":9307608,"line_start":453,"line_end":453,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":5663}},{"kind":"Use","ref_id":{"krate":0,"index":6698},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307610,"byte_end":9307626,"line_start":453,"line_end":453,"column_start":47,"column_end":63},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":5663}},{"kind":"Use","ref_id":{"krate":0,"index":4511},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":138118,"byte_end":138127,"line_start":219,"line_end":219,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":4513},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":138129,"byte_end":138139,"line_start":219,"line_end":219,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":7300},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":138183,"byte_end":138197,"line_start":222,"line_end":222,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":7303},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":138234,"byte_end":138239,"line_start":225,"line_end":225,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":7297},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":138295,"byte_end":138309,"line_start":228,"line_end":228,"column_start":27,"column_end":41},"alias_span":null,"name":"block_in_place","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":7306},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":138360,"byte_end":138369,"line_start":232,"line_end":232,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":7323},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":138407,"byte_end":138418,"line_start":235,"line_end":235,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":7314},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":138420,"byte_end":138428,"line_start":235,"line_end":235,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":7249},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":138476,"byte_end":138484,"line_start":238,"line_end":238,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":7303},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":14962,"byte_end":14967,"line_start":399,"line_end":399,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7520},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9600125,"byte_end":9600130,"line_start":99,"line_end":99,"column_start":25,"column_end":30},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":7339}},{"kind":"Use","ref_id":{"krate":0,"index":7519},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9600132,"byte_end":9600143,"line_start":99,"line_end":99,"column_start":32,"column_end":43},"alias_span":null,"name":"sleep_until","value":"","parent":{"krate":0,"index":7339}},{"kind":"Use","ref_id":{"krate":0,"index":8200},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9600145,"byte_end":9600150,"line_start":99,"line_end":99,"column_start":45,"column_end":50},"alias_span":null,"name":"Sleep","value":"","parent":{"krate":0,"index":7339}},{"kind":"Use","ref_id":{"krate":0,"index":7833},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9600206,"byte_end":9600213,"line_start":104,"line_end":104,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":7339}},{"kind":"Use","ref_id":{"krate":0,"index":7670},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9600249,"byte_end":9600257,"line_start":107,"line_end":107,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":7339}},{"kind":"Use","ref_id":{"krate":0,"index":7671},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9600259,"byte_end":9600270,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":7339}},{"kind":"Use","ref_id":{"krate":0,"index":7856},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9600272,"byte_end":9600280,"line_start":107,"line_end":107,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":7339}},{"kind":"Use","ref_id":{"krate":0,"index":7695},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9600330,"byte_end":9600337,"line_start":111,"line_end":111,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":7339}},{"kind":"Use","ref_id":{"krate":0,"index":7697},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9600339,"byte_end":9600349,"line_start":111,"line_end":111,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":7339}},{"kind":"Use","ref_id":{"krate":0,"index":8162},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9600351,"byte_end":9600358,"line_start":111,"line_end":111,"column_start":40,"column_end":47},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":7339}},{"kind":"Use","ref_id":{"krate":2,"index":34832},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9600471,"byte_end":9600479,"line_start":119,"line_end":119,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":7339}},{"kind":"Use","ref_id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\mod.rs","byte_start":139182,"byte_end":139194,"line_start":37,"line_end":37,"column_start":15,"column_end":27},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":664}},{"kind":"Use","ref_id":{"krate":30,"index":50},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16747,"byte_end":16778,"line_start":452,"line_end":452,"column_start":27,"column_end":58},"alias_span":null,"name":"select_priv_declare_output_enum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":44},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16993,"byte_end":16997,"line_start":458,"line_end":458,"column_start":31,"column_end":35},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":46},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":17132,"byte_end":17136,"line_start":462,"line_end":462,"column_start":31,"column_end":35},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":0,"byte_end":17634,"line_start":1,"line_end":482,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":741},{"krate":0,"index":79},{"krate":0,"index":123},{"krate":0,"index":299},{"krate":0,"index":367},{"krate":0,"index":552},{"krate":0,"index":3782},{"krate":0,"index":643},{"krate":0,"index":4008},{"krate":0,"index":644},{"krate":0,"index":5508},{"krate":0,"index":5663},{"krate":0,"index":663},{"krate":0,"index":7338},{"krate":0,"index":7339},{"krate":0,"index":664},{"krate":0,"index":729},{"krate":0,"index":8154},{"krate":0,"index":8155},{"krate":0,"index":8156}],"decl_id":null,"docs":" A runtime for writing reliable network applications without compromising speed.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":55,"byte_end":167,"line_start":2,"line_end":6,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":168,"byte_end":274,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"/ A runtime for writing reliable network applications without compromising speed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":483,"byte_end":566,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":567,"byte_end":570,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":571,"byte_end":651,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":652,"byte_end":724,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":725,"byte_end":761,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":762,"byte_end":765,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":766,"byte_end":833,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, sleeps, and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":834,"byte_end":914,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":915,"byte_end":938,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":939,"byte_end":1026,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1027,"byte_end":1100,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1101,"byte_end":1179,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1180,"byte_end":1260,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1261,"byte_end":1311,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1312,"byte_end":1315,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1316,"byte_end":1372,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1373,"byte_end":1376,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1377,"byte_end":1409,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1410,"byte_end":1433,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1434,"byte_end":1457,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1458,"byte_end":1484,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1485,"byte_end":1506,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1507,"byte_end":1526,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1527,"byte_end":1556,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1557,"byte_end":1584,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1585,"byte_end":1604,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1605,"byte_end":1634,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1635,"byte_end":1681,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1682,"byte_end":1685,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1686,"byte_end":1707,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1708,"byte_end":1711,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1712,"byte_end":1791,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1792,"byte_end":1865,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1866,"byte_end":1945,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1946,"byte_end":1961,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1962,"byte_end":1965,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":1966,"byte_end":2038,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2039,"byte_end":2076,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2077,"byte_end":2080,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2081,"byte_end":2092,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2093,"byte_end":2143,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2144,"byte_end":2151,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2152,"byte_end":2155,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2156,"byte_end":2186,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2187,"byte_end":2190,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2191,"byte_end":2272,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2273,"byte_end":2358,"line_start":66,"line_end":66,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2359,"byte_end":2443,"line_start":67,"line_end":67,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2444,"byte_end":2474,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2475,"byte_end":2478,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2479,"byte_end":2495,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2496,"byte_end":2499,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2500,"byte_end":2566,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2567,"byte_end":2570,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2571,"byte_end":2582,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2583,"byte_end":2633,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2634,"byte_end":2641,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2642,"byte_end":2645,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2646,"byte_end":2673,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2674,"byte_end":2677,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2678,"byte_end":2757,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2758,"byte_end":2840,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2841,"byte_end":2922,"line_start":82,"line_end":82,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2923,"byte_end":2958,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2959,"byte_end":2962,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2963,"byte_end":2979,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2980,"byte_end":2983,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":2984,"byte_end":3066,"line_start":87,"line_end":87,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3067,"byte_end":3117,"line_start":88,"line_end":88,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3118,"byte_end":3121,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3122,"byte_end":3133,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"rt\", \"net\"] }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3134,"byte_end":3189,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3190,"byte_end":3197,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3198,"byte_end":3201,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3202,"byte_end":3227,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3228,"byte_end":3231,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3232,"byte_end":3308,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3309,"byte_end":3392,"line_start":97,"line_end":97,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3393,"byte_end":3436,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3437,"byte_end":3440,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3441,"byte_end":3520,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3521,"byte_end":3604,"line_start":101,"line_end":101,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3605,"byte_end":3683,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3684,"byte_end":3703,"line_start":103,"line_end":103,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3704,"byte_end":3707,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt\" feature flag","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3708,"byte_end":3781,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ is enabled.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3782,"byte_end":3797,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3798,"byte_end":3801,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3802,"byte_end":3845,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3846,"byte_end":3878,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3879,"byte_end":3914,"line_start":110,"line_end":110,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3915,"byte_end":3958,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":3959,"byte_end":4012,"line_start":112,"line_end":112,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4013,"byte_end":4016,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4017,"byte_end":4095,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4096,"byte_end":4152,"line_start":115,"line_end":115,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4153,"byte_end":4156,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4157,"byte_end":4230,"line_start":117,"line_end":117,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4231,"byte_end":4251,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4252,"byte_end":4327,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4328,"byte_end":4340,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4341,"byte_end":4421,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4422,"byte_end":4452,"line_start":122,"line_end":122,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4453,"byte_end":4456,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4457,"byte_end":4533,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4534,"byte_end":4546,"line_start":125,"line_end":125,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4547,"byte_end":4550,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4551,"byte_end":4583,"line_start":127,"line_end":127,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4584,"byte_end":4617,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4618,"byte_end":4655,"line_start":129,"line_end":129,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4656,"byte_end":4693,"line_start":130,"line_end":130,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4694,"byte_end":4725,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4726,"byte_end":4759,"line_start":132,"line_end":132,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4760,"byte_end":4763,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4764,"byte_end":4835,"line_start":134,"line_end":134,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4836,"byte_end":4916,"line_start":135,"line_end":135,"column_start":1,"column_end":81}},{"value":"/ tasks, [sleeping][sleep] work to run in the future, or [repeating an operation at an","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":4917,"byte_end":5005,"line_start":136,"line_end":136,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5006,"byte_end":5030,"line_start":137,"line_end":137,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5031,"byte_end":5034,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5035,"byte_end":5110,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5111,"byte_end":5114,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5115,"byte_end":5147,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/ [sleep]: crate::time::sleep()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5148,"byte_end":5181,"line_start":142,"line_end":142,"column_start":1,"column_end":34}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5182,"byte_end":5221,"line_start":143,"line_end":143,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5222,"byte_end":5259,"line_start":144,"line_end":144,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5260,"byte_end":5263,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5264,"byte_end":5342,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5343,"byte_end":5427,"line_start":147,"line_end":147,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. However, this macro provides only basic configuration options. As","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5428,"byte_end":5512,"line_start":148,"line_end":148,"column_start":1,"column_end":85}},{"value":"/ an alternative, the [`tokio::runtime`] module provides more powerful APIs for configuring","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5513,"byte_end":5606,"line_start":149,"line_end":149,"column_start":1,"column_end":94}},{"value":"/ and managing runtimes. You should use that module if the `#[tokio::main]` macro doesn't","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5607,"byte_end":5698,"line_start":150,"line_end":150,"column_start":1,"column_end":92}},{"value":"/ provide the functionality you need.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5699,"byte_end":5738,"line_start":151,"line_end":151,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5739,"byte_end":5742,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt\" or \"rt-multi-thread\" feature flags, to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5743,"byte_end":5821,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ enable the basic [single-threaded scheduler][rt] and the [thread-pool","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5822,"byte_end":5895,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ scheduler][rt-multi-thread], respectively. See the [`runtime` module","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5896,"byte_end":5968,"line_start":155,"line_end":155,"column_start":1,"column_end":73}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":5969,"byte_end":6047,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":6048,"byte_end":6118,"line_start":157,"line_end":157,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":6119,"byte_end":6122,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":6123,"byte_end":6149,"line_start":159,"line_end":159,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":6150,"byte_end":6188,"line_start":160,"line_end":160,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":6189,"byte_end":6229,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":6230,"byte_end":6270,"line_start":162,"line_end":162,"column_start":1,"column_end":41}},{"value":"/ [rt]: runtime/index.html#basic-scheduler","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":6271,"byte_end":6315,"line_start":163,"line_end":163,"column_start":1,"column_end":45}},{"value":"/ [rt-multi-thread]: runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":6316,"byte_end":6376,"line_start":164,"line_end":164,"column_start":1,"column_end":61}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":6377,"byte_end":6432,"line_start":165,"line_end":165,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":6433,"byte_end":6436,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":6437,"byte_end":6477,"line_start":167,"line_end":167,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":6478,"byte_end":6481,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":6482,"byte_end":6561,"line_start":169,"line_end":169,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":6562,"byte_end":6639,"line_start":170,"line_end":170,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":6640,"byte_end":6720,"line_start":171,"line_end":171,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":6721,"byte_end":6795,"line_start":172,"line_end":172,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":6796,"byte_end":6875,"line_start":173,"line_end":173,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":6876,"byte_end":6953,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":6954,"byte_end":7027,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, can be used to run blocking code that would otherwise","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7028,"byte_end":7104,"line_start":176,"line_end":176,"column_start":1,"column_end":77}},{"value":"/ block other tasks from running and are kept alive when not used for a certain","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7105,"byte_end":7186,"line_start":177,"line_end":177,"column_start":1,"column_end":82}},{"value":"/ amount of time which can be configured with [`thread_keep_alive`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7187,"byte_end":7257,"line_start":178,"line_end":178,"column_start":1,"column_end":71}},{"value":"/ Since it is not possible for Tokio to swap out blocking tasks, like it","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7258,"byte_end":7332,"line_start":179,"line_end":179,"column_start":1,"column_end":75}},{"value":"/ can do with asynchronous code, the upper limit on the number of blocking","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7333,"byte_end":7409,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ threads is very large. These limits can be configured on the [`Builder`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7410,"byte_end":7487,"line_start":181,"line_end":181,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7488,"byte_end":7491,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7492,"byte_end":7569,"line_start":183,"line_end":183,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7570,"byte_end":7573,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7574,"byte_end":7614,"line_start":185,"line_end":185,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7615,"byte_end":7668,"line_start":186,"line_end":186,"column_start":1,"column_end":54}},{"value":"/ [`thread_keep_alive`]: crate::runtime::Builder::thread_keep_alive()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7669,"byte_end":7740,"line_start":187,"line_end":187,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7741,"byte_end":7744,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7745,"byte_end":7752,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7753,"byte_end":7771,"line_start":190,"line_end":190,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7772,"byte_end":7793,"line_start":191,"line_end":191,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7794,"byte_end":7838,"line_start":192,"line_end":192,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7839,"byte_end":7842,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7843,"byte_end":7903,"line_start":194,"line_end":194,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7904,"byte_end":7956,"line_start":195,"line_end":195,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7957,"byte_end":7992,"line_start":196,"line_end":196,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":7993,"byte_end":8004,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8005,"byte_end":8008,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8009,"byte_end":8064,"line_start":199,"line_end":199,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8065,"byte_end":8140,"line_start":200,"line_end":200,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8141,"byte_end":8158,"line_start":201,"line_end":201,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8159,"byte_end":8196,"line_start":202,"line_end":202,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8197,"byte_end":8202,"line_start":203,"line_end":203,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8203,"byte_end":8210,"line_start":204,"line_end":204,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8211,"byte_end":8214,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8215,"byte_end":8293,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8294,"byte_end":8370,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8371,"byte_end":8447,"line_start":208,"line_end":208,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8448,"byte_end":8472,"line_start":209,"line_end":209,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8473,"byte_end":8476,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8477,"byte_end":8511,"line_start":211,"line_end":211,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8512,"byte_end":8549,"line_start":212,"line_end":212,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8550,"byte_end":8553,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8554,"byte_end":8576,"line_start":214,"line_end":214,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8577,"byte_end":8580,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8581,"byte_end":8660,"line_start":216,"line_end":216,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8661,"byte_end":8708,"line_start":217,"line_end":217,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8709,"byte_end":8712,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8713,"byte_end":8792,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8793,"byte_end":8873,"line_start":220,"line_end":220,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8874,"byte_end":8954,"line_start":221,"line_end":221,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":8955,"byte_end":9026,"line_start":222,"line_end":222,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9027,"byte_end":9058,"line_start":223,"line_end":223,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9059,"byte_end":9062,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9063,"byte_end":9143,"line_start":225,"line_end":225,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9144,"byte_end":9204,"line_start":226,"line_end":226,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9205,"byte_end":9208,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9209,"byte_end":9288,"line_start":228,"line_end":228,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9289,"byte_end":9358,"line_start":229,"line_end":229,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9359,"byte_end":9436,"line_start":230,"line_end":230,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9437,"byte_end":9493,"line_start":231,"line_end":231,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9494,"byte_end":9574,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9575,"byte_end":9620,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9621,"byte_end":9700,"line_start":234,"line_end":234,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9701,"byte_end":9735,"line_start":235,"line_end":235,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9736,"byte_end":9739,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9740,"byte_end":9768,"line_start":237,"line_end":237,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9769,"byte_end":9808,"line_start":238,"line_end":238,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9809,"byte_end":9850,"line_start":239,"line_end":239,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9851,"byte_end":9896,"line_start":240,"line_end":240,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9897,"byte_end":9921,"line_start":241,"line_end":241,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9922,"byte_end":9952,"line_start":242,"line_end":242,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9953,"byte_end":9979,"line_start":243,"line_end":243,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::UdpSocket","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":9980,"byte_end":10012,"line_start":244,"line_end":244,"column_start":1,"column_end":33}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10013,"byte_end":10040,"line_start":245,"line_end":245,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10041,"byte_end":10069,"line_start":246,"line_end":246,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10070,"byte_end":10094,"line_start":247,"line_end":247,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10095,"byte_end":10131,"line_start":248,"line_end":248,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10132,"byte_end":10170,"line_start":249,"line_end":249,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10171,"byte_end":10174,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10175,"byte_end":10189,"line_start":251,"line_end":251,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10190,"byte_end":10193,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10194,"byte_end":10223,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10224,"byte_end":10227,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10228,"byte_end":10241,"line_start":255,"line_end":255,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10242,"byte_end":10274,"line_start":256,"line_end":256,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10275,"byte_end":10324,"line_start":257,"line_end":257,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10325,"byte_end":10328,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10329,"byte_end":10347,"line_start":259,"line_end":259,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10348,"byte_end":10411,"line_start":260,"line_end":260,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10412,"byte_end":10478,"line_start":261,"line_end":261,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10479,"byte_end":10482,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10483,"byte_end":10497,"line_start":263,"line_end":263,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10498,"byte_end":10557,"line_start":264,"line_end":264,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10558,"byte_end":10561,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10562,"byte_end":10599,"line_start":266,"line_end":266,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10600,"byte_end":10640,"line_start":267,"line_end":267,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10641,"byte_end":10644,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10645,"byte_end":10725,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10726,"byte_end":10748,"line_start":270,"line_end":270,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10749,"byte_end":10812,"line_start":271,"line_end":271,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10813,"byte_end":10853,"line_start":272,"line_end":272,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10854,"byte_end":10904,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10905,"byte_end":10940,"line_start":274,"line_end":274,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10941,"byte_end":10976,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":10977,"byte_end":11060,"line_start":276,"line_end":276,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11061,"byte_end":11096,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11097,"byte_end":11122,"line_start":278,"line_end":278,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11123,"byte_end":11145,"line_start":279,"line_end":279,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11146,"byte_end":11149,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11150,"byte_end":11192,"line_start":281,"line_end":281,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11193,"byte_end":11265,"line_start":282,"line_end":282,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11266,"byte_end":11344,"line_start":283,"line_end":283,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11345,"byte_end":11376,"line_start":284,"line_end":284,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11377,"byte_end":11398,"line_start":285,"line_end":285,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11399,"byte_end":11416,"line_start":286,"line_end":286,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11417,"byte_end":11432,"line_start":287,"line_end":287,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11433,"byte_end":11442,"line_start":288,"line_end":288,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11443,"byte_end":11448,"line_start":289,"line_end":289,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11449,"byte_end":11456,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11457,"byte_end":11460,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11461,"byte_end":11481,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11482,"byte_end":11485,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11486,"byte_end":11567,"line_start":294,"line_end":294,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11568,"byte_end":11646,"line_start":295,"line_end":295,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11647,"byte_end":11727,"line_start":296,"line_end":296,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11728,"byte_end":11805,"line_start":297,"line_end":297,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11806,"byte_end":11889,"line_start":298,"line_end":298,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11890,"byte_end":11967,"line_start":299,"line_end":299,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":11968,"byte_end":12055,"line_start":300,"line_end":300,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":12056,"byte_end":12137,"line_start":301,"line_end":301,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":12138,"byte_end":12147,"line_start":302,"line_end":302,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":12148,"byte_end":12151,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":12152,"byte_end":12217,"line_start":304,"line_end":304,"column_start":1,"column_end":66}},{"value":"/ - `rt`: Enables `tokio::spawn`, the basic (current thread) scheduler,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":12218,"byte_end":12291,"line_start":305,"line_end":305,"column_start":1,"column_end":74}},{"value":"/         and non-scheduler utilities.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":12292,"byte_end":12332,"line_start":306,"line_end":306,"column_start":1,"column_end":41}},{"value":"/ - `rt-multi-thread`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":12333,"byte_end":12419,"line_start":307,"line_end":307,"column_start":1,"column_end":87}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":12420,"byte_end":12471,"line_start":308,"line_end":308,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":12472,"byte_end":12532,"line_start":309,"line_end":309,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":12533,"byte_end":12623,"line_start":310,"line_end":310,"column_start":1,"column_end":91}},{"value":"/          as well as (on Unix-like systems) `AsyncFd`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":12624,"byte_end":12680,"line_start":311,"line_end":311,"column_start":1,"column_end":57}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":12681,"byte_end":12758,"line_start":312,"line_end":312,"column_start":1,"column_end":78}},{"value":"/           the built in timer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":12759,"byte_end":12792,"line_start":313,"line_end":313,"column_start":1,"column_end":34}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":12793,"byte_end":12841,"line_start":314,"line_end":314,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":12842,"byte_end":12911,"line_start":315,"line_end":315,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":12912,"byte_end":12958,"line_start":316,"line_end":316,"column_start":1,"column_end":47}},{"value":"/ - `stream`: Enables optional `Stream` implementations for types within Tokio.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":12959,"byte_end":13040,"line_start":317,"line_end":317,"column_start":1,"column_end":82}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13041,"byte_end":13091,"line_start":318,"line_end":318,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13092,"byte_end":13130,"line_start":319,"line_end":319,"column_start":1,"column_end":39}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13131,"byte_end":13209,"line_start":320,"line_end":320,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13210,"byte_end":13213,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13214,"byte_end":13296,"line_start":322,"line_end":322,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13297,"byte_end":13319,"line_start":323,"line_end":323,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13320,"byte_end":13323,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13324,"byte_end":13349,"line_start":325,"line_end":325,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13350,"byte_end":13353,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13354,"byte_end":13422,"line_start":327,"line_end":327,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13423,"byte_end":13486,"line_start":328,"line_end":328,"column_start":1,"column_end":64}},{"value":"/ dependencies.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13487,"byte_end":13504,"line_start":329,"line_end":329,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13505,"byte_end":13508,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13509,"byte_end":13588,"line_start":331,"line_end":331,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13589,"byte_end":13666,"line_start":332,"line_end":332,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13667,"byte_end":13700,"line_start":333,"line_end":333,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13701,"byte_end":13704,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ ### Unstable features","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13705,"byte_end":13730,"line_start":335,"line_end":335,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13731,"byte_end":13734,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 1.x","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13735,"byte_end":13820,"line_start":337,"line_end":337,"column_start":1,"column_end":86}},{"value":"/ releases. To enable these features, the `--cfg tokio_unstable` must be passed to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13821,"byte_end":13905,"line_start":338,"line_end":338,"column_start":1,"column_end":85}},{"value":"/ `rustc` when compiling. This is easiest done using the `RUSTFLAGS` env variable:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13906,"byte_end":13990,"line_start":339,"line_end":339,"column_start":1,"column_end":85}},{"value":"/ `RUSTFLAGS=\"--cfg tokio_unstable\"`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":13991,"byte_end":14030,"line_start":340,"line_end":340,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":14031,"byte_end":14034,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ - `tracing`: Enables tracing events.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":14035,"byte_end":14075,"line_start":342,"line_end":342,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":14076,"byte_end":14079,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":14080,"byte_end":14177,"line_start":344,"line_end":344,"column_start":1,"column_end":98}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":730},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":75}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":14366,"byte_end":14378,"line_start":350,"line_end":350,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\support.rs","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1103},{"krate":0,"index":1174},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1195},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1110}],"decl_id":null,"docs":" Asynchronous file and standard stream adaptation.","sig":null,"attributes":[{"value":"cfg(feature = \"fs\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":19114,"byte_end":19136,"line_start":51,"line_end":51,"column_start":13,"column_end":35}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8535749,"byte_end":8535767,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ Asynchronous file and standard stream adaptation.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8535769,"byte_end":8535822,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8535823,"byte_end":8535826,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains utility methods and adapter types for input/output to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8535827,"byte_end":8535905,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ files or standard streams (`Stdin`, `Stdout`, `Stderr`), and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8535906,"byte_end":8535970,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"/ filesystem manipulation, for use within (and only within) a Tokio runtime.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8535971,"byte_end":8536049,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8536050,"byte_end":8536053,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Tasks run by *worker* threads should not block, as this could delay","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8536054,"byte_end":8536125,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ servicing reactor events. Portable filesystem operations are blocking,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8536126,"byte_end":8536200,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ however. This module offers adapters which use a `blocking` annotation","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8536201,"byte_end":8536275,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ to inform the runtime that a blocking operation is required. When","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8536276,"byte_end":8536345,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ necessary, this allows the runtime to convert the current thread from a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8536346,"byte_end":8536421,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ *worker* to a *backup* thread, where blocking is acceptable.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8536422,"byte_end":8536486,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8536487,"byte_end":8536490,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8536491,"byte_end":8536503,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8536504,"byte_end":8536507,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Where possible, users should prefer the provided asynchronous-specific","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8536508,"byte_end":8536582,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ traits such as [`AsyncRead`], or methods returning a `Future` or `Poll`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8536583,"byte_end":8536658,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ type. Adaptions also extend to traits like `std::io::Read` where methods","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8536659,"byte_end":8536735,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ return `std::io::Result`. Be warned that these adapted methods may return","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8536736,"byte_end":8536813,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ `std::io::ErrorKind::WouldBlock` if a *worker* thread can not be converted","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8536814,"byte_end":8536892,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ to a *backup* thread immediately.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8536893,"byte_end":8536930,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8536931,"byte_end":8536934,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@crate::io::AsyncRead","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\mod.rs","byte_start":8536935,"byte_end":8536980,"line_start":25,"line_end":25,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540498,"byte_end":8540510,"line_start":48,"line_end":48,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"pub async fn canonicalize<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical, absolute form of a path with all intermediate\n components normalized and symbolic links resolved.","sig":null,"attributes":[{"value":"/ Returns the canonical, absolute form of a path with all intermediate","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8538992,"byte_end":8539064,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ components normalized and symbolic links resolved.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539065,"byte_end":8539119,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539120,"byte_end":8539123,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::canonicalize`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539124,"byte_end":8539186,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539187,"byte_end":8539190,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::canonicalize","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539191,"byte_end":8539223,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539224,"byte_end":8539227,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539228,"byte_end":8539260,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539261,"byte_end":8539264,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `realpath` function on Unix","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539265,"byte_end":8539339,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ and the `CreateFile` and `GetFinalPathNameByHandle` functions on Windows.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539340,"byte_end":8539417,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539418,"byte_end":8539474,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539475,"byte_end":8539478,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ On Windows, this converts the path to use [extended length path][path]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539479,"byte_end":8539553,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ syntax, which allows your program to use longer path names, but means you","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539554,"byte_end":8539631,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ can only join backslash-delimited paths to it, and it may be incompatible","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539632,"byte_end":8539709,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ with other applications (if passed to the application on the command-line,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539710,"byte_end":8539788,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or written to a file another application may read).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539789,"byte_end":8539844,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539845,"byte_end":8539848,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539849,"byte_end":8539934,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/ [path]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx#maxpath","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8539935,"byte_end":8540034,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540035,"byte_end":8540038,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540039,"byte_end":8540051,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540052,"byte_end":8540055,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540056,"byte_end":8540134,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540135,"byte_end":8540167,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540168,"byte_end":8540171,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ * `path` does not exist.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540172,"byte_end":8540200,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ * A non-final component in path is not a directory.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540201,"byte_end":8540256,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540257,"byte_end":8540260,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540261,"byte_end":8540275,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540276,"byte_end":8540279,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540280,"byte_end":8540293,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540294,"byte_end":8540312,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540313,"byte_end":8540329,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540330,"byte_end":8540333,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540334,"byte_end":8540352,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540353,"byte_end":8540392,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/     let path = fs::canonicalize(\"../a/../foo.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540393,"byte_end":8540455,"line_start":44,"line_end":44,"column_start":1,"column_end":63}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540456,"byte_end":8540470,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540471,"byte_end":8540476,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\canonicalize.rs","byte_start":8540477,"byte_end":8540484,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8542067,"byte_end":8542077,"line_start":49,"line_end":49,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"pub async fn create_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty directory at the provided path","sig":null,"attributes":[{"value":"/ Creates a new, empty directory at the provided path","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8540721,"byte_end":8540776,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8540777,"byte_end":8540780,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8540781,"byte_end":8540841,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8540842,"byte_end":8540845,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8540846,"byte_end":8540876,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8540877,"byte_end":8540880,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8540881,"byte_end":8540913,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8540914,"byte_end":8540917,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8540918,"byte_end":8540989,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8540990,"byte_end":8541040,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541041,"byte_end":8541097,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541098,"byte_end":8541101,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541102,"byte_end":8541187,"line_start":18,"line_end":18,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541188,"byte_end":8541191,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: If a parent of the given path doesn't exist, this function will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541192,"byte_end":8541269,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ return an error. To create a directory and all its missing parents at the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541270,"byte_end":8541347,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ same time, use the [`create_dir_all`] function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541348,"byte_end":8541399,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541400,"byte_end":8541403,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541404,"byte_end":8541416,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541417,"byte_end":8541420,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541421,"byte_end":8541499,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541500,"byte_end":8541532,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541533,"byte_end":8541536,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * User lacks permissions to create directory at `path`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541537,"byte_end":8541596,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ * A parent of the given path doesn't exist. (To create a directory and all","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541597,"byte_end":8541675,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   its missing parents at the same time, use the [`create_dir_all`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541676,"byte_end":8541746,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/   function.)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541747,"byte_end":8541763,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/ * `path` already exists.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541764,"byte_end":8541792,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541793,"byte_end":8541796,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: super::create_dir_all()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541797,"byte_end":8541844,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541845,"byte_end":8541848,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541849,"byte_end":8541863,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541864,"byte_end":8541867,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541868,"byte_end":8541881,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541882,"byte_end":8541900,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541901,"byte_end":8541917,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541918,"byte_end":8541921,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541922,"byte_end":8541940,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541941,"byte_end":8541980,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/     fs::create_dir(\"/some/dir\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8541981,"byte_end":8542024,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8542025,"byte_end":8542039,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8542040,"byte_end":8542045,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir.rs","byte_start":8542046,"byte_end":8542053,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543830,"byte_end":8543844,"line_start":50,"line_end":50,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"pub async fn create_dir_all<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Recursively creates a directory and all of its parent components if they\n are missing.","sig":null,"attributes":[{"value":"/ Recursively creates a directory and all of its parent components if they","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542281,"byte_end":8542357,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ are missing.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542358,"byte_end":8542374,"line_start":7,"line_end":7,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542375,"byte_end":8542378,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir_all`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542379,"byte_end":8542443,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542444,"byte_end":8542447,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir_all","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542448,"byte_end":8542482,"line_start":11,"line_end":11,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542483,"byte_end":8542486,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542487,"byte_end":8542519,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542520,"byte_end":8542523,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542524,"byte_end":8542595,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542596,"byte_end":8542646,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542647,"byte_end":8542703,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542704,"byte_end":8542707,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542708,"byte_end":8542793,"line_start":19,"line_end":19,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542794,"byte_end":8542797,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542798,"byte_end":8542810,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542811,"byte_end":8542814,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542815,"byte_end":8542893,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542894,"byte_end":8542926,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542927,"byte_end":8542930,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * If any directory in the path specified by `path` does not already exist","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8542931,"byte_end":8543008,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ and it could not be created otherwise. The specific error conditions for","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543009,"byte_end":8543085,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ when a directory is being created (after it is determined to not exist) are","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543086,"byte_end":8543165,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ outlined by [`fs::create_dir`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543166,"byte_end":8543201,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543202,"byte_end":8543205,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Notable exception is made for situations where any of the directories","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543206,"byte_end":8543279,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ specified in the `path` could not be created as it was being created concurrently.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543280,"byte_end":8543366,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ Such cases are considered to be successful. That is, calling `create_dir_all`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543367,"byte_end":8543448,"line_start":33,"line_end":33,"column_start":1,"column_end":82}},{"value":"/ concurrently from multiple threads or processes is guaranteed not to fail","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543449,"byte_end":8543526,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ due to a race condition with itself.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543527,"byte_end":8543567,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543568,"byte_end":8543571,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`fs::create_dir`]: std::fs::create_dir","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543572,"byte_end":8543615,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543616,"byte_end":8543619,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543620,"byte_end":8543634,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543635,"byte_end":8543638,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543639,"byte_end":8543652,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543653,"byte_end":8543671,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543672,"byte_end":8543675,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543676,"byte_end":8543694,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543695,"byte_end":8543739,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/     fs::create_dir_all(\"/some/dir\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543740,"byte_end":8543787,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543788,"byte_end":8543802,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543803,"byte_end":8543808,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\create_dir_all.rs","byte_start":8543809,"byte_end":8543816,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544300,"byte_end":8544310,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":1115}],"decl_id":null,"docs":" A builder for creating directories in various manners.","sig":null,"attributes":[{"value":"/ A builder for creating directories in various manners.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544052,"byte_end":8544110,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544111,"byte_end":8544114,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirBuilder`] for usage on","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544115,"byte_end":8544188,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ the Tokio runtime.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544189,"byte_end":8544211,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544212,"byte_end":8544215,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std::fs::DirBuilder]: std::fs::DirBuilder","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544216,"byte_end":8544262,"line_start":11,"line_end":11,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544949,"byte_end":8544952,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new set of options with default mode/security settings for all\n platforms and also non-recursive.","sig":null,"attributes":[{"value":"/ Creates a new set of options with default mode/security settings for all","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544544,"byte_end":8544620,"line_start":23,"line_end":23,"column_start":5,"column_end":81}},{"value":"/ platforms and also non-recursive.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544625,"byte_end":8544662,"line_start":24,"line_end":24,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544667,"byte_end":8544670,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::new`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544675,"byte_end":8544740,"line_start":26,"line_end":26,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544745,"byte_end":8544748,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::new","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544753,"byte_end":8544788,"line_start":28,"line_end":28,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544793,"byte_end":8544796,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544801,"byte_end":8544815,"line_start":30,"line_end":30,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544820,"byte_end":8544823,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544828,"byte_end":8544841,"line_start":32,"line_end":32,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544846,"byte_end":8544876,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544881,"byte_end":8544884,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544889,"byte_end":8544925,"line_start":35,"line_end":35,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544930,"byte_end":8544937,"line_start":36,"line_end":36,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545574,"byte_end":8545583,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"pub fn recursive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether to create directories recursively (including all parent directories).\n Parents that do not exist are created with the same security and permissions settings.","sig":null,"attributes":[{"value":"/ Indicates whether to create directories recursively (including all parent directories).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545003,"byte_end":8545094,"line_start":41,"line_end":41,"column_start":5,"column_end":96}},{"value":"/ Parents that do not exist are created with the same security and permissions settings.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545099,"byte_end":8545189,"line_start":42,"line_end":42,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545194,"byte_end":8545197,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This option defaults to `false`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545202,"byte_end":8545238,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545243,"byte_end":8545246,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::recursive`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545251,"byte_end":8545322,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545327,"byte_end":8545330,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::recursive","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545335,"byte_end":8545376,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545381,"byte_end":8545384,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545389,"byte_end":8545403,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545408,"byte_end":8545411,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545416,"byte_end":8545429,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545434,"byte_end":8545464,"line_start":53,"line_end":53,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545469,"byte_end":8545472,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545477,"byte_end":8545517,"line_start":55,"line_end":55,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545522,"byte_end":8545550,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545555,"byte_end":8545562,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546788,"byte_end":8546794,"line_start":99,"line_end":99,"column_start":18,"column_end":24},"name":"create","qualname":"<DirBuilder>::create","value":"pub async fn create<'_,\n                    impl AsRef<Path>: AsRef<Path>>(&'_ Self, impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates the specified directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates the specified directory with the configured options.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545687,"byte_end":8545751,"line_start":63,"line_end":63,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545756,"byte_end":8545759,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545764,"byte_end":8545832,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/ recursive mode is enabled.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545837,"byte_end":8545867,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545872,"byte_end":8545875,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::create`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545880,"byte_end":8545948,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545953,"byte_end":8545956,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::create","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8545961,"byte_end":8545999,"line_start":70,"line_end":70,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546004,"byte_end":8546007,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546012,"byte_end":8546024,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546029,"byte_end":8546032,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ An error will be returned under the following circumstances:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546037,"byte_end":8546101,"line_start":74,"line_end":74,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546106,"byte_end":8546109,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ * Path already points to an existing file.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546114,"byte_end":8546160,"line_start":76,"line_end":76,"column_start":5,"column_end":51}},{"value":"/ * Path already points to an existing directory and the mode is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546165,"byte_end":8546231,"line_start":77,"line_end":77,"column_start":5,"column_end":71}},{"value":"/   non-recursive.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546236,"byte_end":8546256,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/ * The calling process doesn't have permissions to create the directory","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546261,"byte_end":8546335,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/   or its missing parents.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546340,"byte_end":8546369,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/ * Other I/O error occurred.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546374,"byte_end":8546405,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546410,"byte_end":8546413,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546418,"byte_end":8546432,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546437,"byte_end":8546440,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546445,"byte_end":8546458,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546463,"byte_end":8546493,"line_start":86,"line_end":86,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546498,"byte_end":8546514,"line_start":87,"line_end":87,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546519,"byte_end":8546522,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546527,"byte_end":8546545,"line_start":89,"line_end":89,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546550,"byte_end":8546589,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/     DirBuilder::new()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546594,"byte_end":8546619,"line_start":91,"line_end":91,"column_start":5,"column_end":30}},{"value":"/         .recursive(true)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546624,"byte_end":8546652,"line_start":92,"line_end":92,"column_start":5,"column_end":33}},{"value":"/         .create(\"/tmp/foo/bar/baz\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546657,"byte_end":8546696,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546701,"byte_end":8546721,"line_start":94,"line_end":94,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546726,"byte_end":8546729,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546734,"byte_end":8546748,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546753,"byte_end":8546758,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8546763,"byte_end":8546770,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8550274,"byte_end":8550278,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816}],"decl_id":null,"docs":" A reference to an open file on the filesystem.","sig":null,"attributes":[{"value":"/ A reference to an open file on the filesystem.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8548218,"byte_end":8548268,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8548269,"byte_end":8548272,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::File`][std] for usage from the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8548273,"byte_end":8548351,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ Tokio runtime.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8548352,"byte_end":8548370,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8548371,"byte_end":8548374,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ An instance of a `File` can be read and/or written depending on what options","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8548375,"byte_end":8548455,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ it was opened with. Files also implement [`AsyncSeek`] to alter the logical","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8548456,"byte_end":8548535,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ cursor that the file contains internally.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8548536,"byte_end":8548581,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8548582,"byte_end":8548585,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A file will not be closed immediately when it goes out of scope if there","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8548586,"byte_end":8548662,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ are any IO operations that have not yet completed. To ensure that a file is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8548663,"byte_end":8548742,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ closed immediately when it is dropped, you should call [`flush`] before","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8548743,"byte_end":8548818,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ dropping it. Note that this does not ensure that the file has been fully","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8548819,"byte_end":8548895,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ written to disk; the operating system might keep the changes around in an","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8548896,"byte_end":8548973,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ in-memory buffer. See the [`sync_all`] method for telling the OS to write","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8548974,"byte_end":8549051,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ the data to disk.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549052,"byte_end":8549073,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549074,"byte_end":8549077,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Reading and writing to a `File` is usually done using the convenience","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549078,"byte_end":8549151,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ methods found on the [`AsyncReadExt`] and [`AsyncWriteExt`] traits.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549152,"byte_end":8549223,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549224,"byte_end":8549227,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [std]: struct@std::fs::File","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549228,"byte_end":8549259,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"/ [`AsyncSeek`]: trait@crate::io::AsyncSeek","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549260,"byte_end":8549305,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ [`flush`]: fn@crate::io::AsyncWriteExt::flush","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549306,"byte_end":8549355,"line_start":44,"line_end":44,"column_start":1,"column_end":50}},{"value":"/ [`sync_all`]: fn@crate::fs::File::sync_all","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549356,"byte_end":8549402,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549403,"byte_end":8549454,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549455,"byte_end":8549508,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549509,"byte_end":8549512,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549513,"byte_end":8549527,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549528,"byte_end":8549531,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Create a new file and asynchronously write bytes to it:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549532,"byte_end":8549591,"line_start":51,"line_end":51,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549592,"byte_end":8549595,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549596,"byte_end":8549609,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549610,"byte_end":8549634,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/ use tokio::io::AsyncWriteExt; // for write_all()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549635,"byte_end":8549687,"line_start":55,"line_end":55,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549688,"byte_end":8549691,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549692,"byte_end":8549737,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549738,"byte_end":8549788,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549789,"byte_end":8549833,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549834,"byte_end":8549846,"line_start":60,"line_end":60,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549847,"byte_end":8549854,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549855,"byte_end":8549862,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549863,"byte_end":8549866,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a buffer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549867,"byte_end":8549912,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549913,"byte_end":8549916,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549917,"byte_end":8549930,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549931,"byte_end":8549955,"line_start":67,"line_end":67,"column_start":1,"column_end":25}},{"value":"/ use tokio::io::AsyncReadExt; // for read_to_end()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8549956,"byte_end":8550009,"line_start":68,"line_end":68,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8550010,"byte_end":8550013,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8550014,"byte_end":8550059,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8550060,"byte_end":8550108,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8550109,"byte_end":8550112,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let mut contents = vec![];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8550113,"byte_end":8550143,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8550144,"byte_end":8550187,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8550188,"byte_end":8550191,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8550192,"byte_end":8550233,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8550234,"byte_end":8550246,"line_start":77,"line_end":77,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8550247,"byte_end":8550254,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8550255,"byte_end":8550262,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551888,"byte_end":8551892,"line_start":143,"line_end":143,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"pub async fn open<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open a file in read-only mode.","sig":null,"attributes":[{"value":"/ Attempts to open a file in read-only mode.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8550851,"byte_end":8550897,"line_start":110,"line_end":110,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8550902,"byte_end":8550905,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8550910,"byte_end":8550951,"line_start":112,"line_end":112,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8550956,"byte_end":8550959,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8550964,"byte_end":8551003,"line_start":114,"line_end":114,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551008,"byte_end":8551011,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551016,"byte_end":8551028,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551033,"byte_end":8551036,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if called from outside of the Tokio","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551041,"byte_end":8551115,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ runtime or if path does not already exist. Other errors may also be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551120,"byte_end":8551191,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ returned according to OpenOptions::open.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551196,"byte_end":8551240,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551245,"byte_end":8551248,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551253,"byte_end":8551267,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551272,"byte_end":8551275,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551280,"byte_end":8551293,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551298,"byte_end":8551322,"line_start":125,"line_end":125,"column_start":5,"column_end":29}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551327,"byte_end":8551359,"line_start":126,"line_end":126,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551364,"byte_end":8551367,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551372,"byte_end":8551417,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551422,"byte_end":8551470,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551475,"byte_end":8551478,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551483,"byte_end":8551513,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551518,"byte_end":8551561,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551566,"byte_end":8551569,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551574,"byte_end":8551615,"line_start":134,"line_end":134,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551620,"byte_end":8551632,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551637,"byte_end":8551644,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551649,"byte_end":8551656,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551661,"byte_end":8551664,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The [`read_to_end`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551669,"byte_end":8551741,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551746,"byte_end":8551749,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ [`read_to_end`]: fn@crate::io::AsyncReadExt::read_to_end","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551754,"byte_end":8551814,"line_start":141,"line_end":141,"column_start":5,"column_end":65}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8551819,"byte_end":8551870,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8553117,"byte_end":8553123,"line_start":183,"line_end":183,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"pub async fn create<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552089,"byte_end":8552125,"line_start":150,"line_end":150,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552130,"byte_end":8552133,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552138,"byte_end":8552214,"line_start":152,"line_end":152,"column_start":5,"column_end":81}},{"value":"/ it if it does.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552219,"byte_end":8552237,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552242,"byte_end":8552245,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552250,"byte_end":8552291,"line_start":155,"line_end":155,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552296,"byte_end":8552299,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552304,"byte_end":8552343,"line_start":157,"line_end":157,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552348,"byte_end":8552351,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552356,"byte_end":8552368,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552373,"byte_end":8552376,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Results in an error if called from outside of the Tokio runtime or if","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552381,"byte_end":8552454,"line_start":161,"line_end":161,"column_start":5,"column_end":78}},{"value":"/ the underlying [`create`] call results in an error.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552459,"byte_end":8552514,"line_start":162,"line_end":162,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552519,"byte_end":8552522,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ [`create`]: std::fs::File::create","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552527,"byte_end":8552564,"line_start":164,"line_end":164,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552569,"byte_end":8552572,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552577,"byte_end":8552591,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552596,"byte_end":8552599,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552604,"byte_end":8552617,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552622,"byte_end":8552646,"line_start":169,"line_end":169,"column_start":5,"column_end":29}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552651,"byte_end":8552684,"line_start":170,"line_end":170,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552689,"byte_end":8552692,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552697,"byte_end":8552742,"line_start":172,"line_end":172,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552747,"byte_end":8552797,"line_start":173,"line_end":173,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552802,"byte_end":8552846,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552851,"byte_end":8552863,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552868,"byte_end":8552875,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552880,"byte_end":8552887,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552892,"byte_end":8552895,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552900,"byte_end":8552971,"line_start":179,"line_end":179,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552976,"byte_end":8552979,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8552984,"byte_end":8553041,"line_start":181,"line_end":181,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8553046,"byte_end":8553099,"line_start":182,"line_end":182,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8553760,"byte_end":8553768,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"from_std","qualname":"<File>::from_std","value":"pub fn from_std(sys::File) -> File","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","sig":null,"attributes":[{"value":"/ Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8553336,"byte_end":8553405,"line_start":189,"line_end":189,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8553410,"byte_end":8553413,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8553418,"byte_end":8553442,"line_start":191,"line_end":191,"column_start":5,"column_end":29}},{"value":"/ [file]: File","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8553447,"byte_end":8553463,"line_start":192,"line_end":192,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8553468,"byte_end":8553471,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8553476,"byte_end":8553490,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8553495,"byte_end":8553498,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8553503,"byte_end":8553516,"line_start":196,"line_end":196,"column_start":5,"column_end":18}},{"value":"/ // This line could block. It is not recommended to do this on the Tokio","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8553521,"byte_end":8553596,"line_start":197,"line_end":197,"column_start":5,"column_end":80}},{"value":"/ // runtime.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8553601,"byte_end":8553616,"line_start":198,"line_end":198,"column_start":5,"column_end":20}},{"value":"/ let std_file = std::fs::File::open(\"foo.txt\").unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8553621,"byte_end":8553680,"line_start":199,"line_end":199,"column_start":5,"column_end":64}},{"value":"/ let file = tokio::fs::File::from_std(std_file);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8553685,"byte_end":8553736,"line_start":200,"line_end":200,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8553741,"byte_end":8553748,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554807,"byte_end":8554815,"line_start":236,"line_end":236,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"pub async fn sync_all<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to sync all OS-internal metadata to disk.","sig":null,"attributes":[{"value":"/ Attempts to sync all OS-internal metadata to disk.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554044,"byte_end":8554098,"line_start":213,"line_end":213,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554103,"byte_end":8554106,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to ensure that all in-core data reaches the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554111,"byte_end":8554185,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ filesystem before returning.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554190,"byte_end":8554222,"line_start":216,"line_end":216,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554227,"byte_end":8554230,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554235,"byte_end":8554249,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554254,"byte_end":8554257,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554262,"byte_end":8554275,"line_start":220,"line_end":220,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554280,"byte_end":8554304,"line_start":221,"line_end":221,"column_start":5,"column_end":29}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554309,"byte_end":8554342,"line_start":222,"line_end":222,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554347,"byte_end":8554350,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554355,"byte_end":8554400,"line_start":224,"line_end":224,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554405,"byte_end":8554455,"line_start":225,"line_end":225,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554460,"byte_end":8554504,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554509,"byte_end":8554536,"line_start":227,"line_end":227,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554541,"byte_end":8554553,"line_start":228,"line_end":228,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554558,"byte_end":8554565,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554570,"byte_end":8554577,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554582,"byte_end":8554585,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554590,"byte_end":8554661,"line_start":232,"line_end":232,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554666,"byte_end":8554669,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554674,"byte_end":8554731,"line_start":234,"line_end":234,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8554736,"byte_end":8554789,"line_start":235,"line_end":235,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556009,"byte_end":8556018,"line_start":271,"line_end":271,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"pub async fn sync_data<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function is similar to `sync_all`, except that it may not\n synchronize file metadata to the filesystem.","sig":null,"attributes":[{"value":"/ This function is similar to `sync_all`, except that it may not","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555028,"byte_end":8555094,"line_start":244,"line_end":244,"column_start":5,"column_end":71}},{"value":"/ synchronize file metadata to the filesystem.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555099,"byte_end":8555147,"line_start":245,"line_end":245,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555152,"byte_end":8555155,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize content, but don't","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555160,"byte_end":8555235,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ need the metadata on disk. The goal of this method is to reduce disk","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555240,"byte_end":8555312,"line_start":248,"line_end":248,"column_start":5,"column_end":77}},{"value":"/ operations.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555317,"byte_end":8555332,"line_start":249,"line_end":249,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555337,"byte_end":8555340,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of `sync_all`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555345,"byte_end":8555423,"line_start":251,"line_end":251,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555428,"byte_end":8555431,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555436,"byte_end":8555450,"line_start":253,"line_end":253,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555455,"byte_end":8555458,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555463,"byte_end":8555476,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555481,"byte_end":8555505,"line_start":256,"line_end":256,"column_start":5,"column_end":29}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555510,"byte_end":8555543,"line_start":257,"line_end":257,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555548,"byte_end":8555551,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555556,"byte_end":8555601,"line_start":259,"line_end":259,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555606,"byte_end":8555656,"line_start":260,"line_end":260,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555661,"byte_end":8555705,"line_start":261,"line_end":261,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555710,"byte_end":8555738,"line_start":262,"line_end":262,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555743,"byte_end":8555755,"line_start":263,"line_end":263,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555760,"byte_end":8555767,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555772,"byte_end":8555779,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555784,"byte_end":8555787,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555792,"byte_end":8555863,"line_start":267,"line_end":267,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555868,"byte_end":8555871,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555876,"byte_end":8555933,"line_start":269,"line_end":269,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8555938,"byte_end":8555991,"line_start":270,"line_end":270,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8557296,"byte_end":8557303,"line_start":309,"line_end":309,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"pub async fn set_len<'_>(&'_ Self, u64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the underlying file, updating the size of this file to become size.","sig":null,"attributes":[{"value":"/ Truncates or extends the underlying file, updating the size of this file to become size.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556232,"byte_end":8556324,"line_start":279,"line_end":279,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556329,"byte_end":8556332,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ If the size is less than the current file's size, then the file will be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556337,"byte_end":8556412,"line_start":281,"line_end":281,"column_start":5,"column_end":80}},{"value":"/ shrunk. If it is greater than the current file's size, then the file","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556417,"byte_end":8556489,"line_start":282,"line_end":282,"column_start":5,"column_end":77}},{"value":"/ will be extended to size and have all of the intermediate data filled in","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556494,"byte_end":8556570,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ with 0s.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556575,"byte_end":8556587,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556592,"byte_end":8556595,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556600,"byte_end":8556612,"line_start":286,"line_end":286,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556617,"byte_end":8556620,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the file is not opened for","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556625,"byte_end":8556693,"line_start":288,"line_end":288,"column_start":5,"column_end":73}},{"value":"/ writing.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556698,"byte_end":8556710,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556715,"byte_end":8556718,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556723,"byte_end":8556737,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556742,"byte_end":8556745,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556750,"byte_end":8556763,"line_start":293,"line_end":293,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556768,"byte_end":8556792,"line_start":294,"line_end":294,"column_start":5,"column_end":29}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556797,"byte_end":8556830,"line_start":295,"line_end":295,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556835,"byte_end":8556838,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556843,"byte_end":8556888,"line_start":297,"line_end":297,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556893,"byte_end":8556943,"line_start":298,"line_end":298,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556948,"byte_end":8556992,"line_start":299,"line_end":299,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8556997,"byte_end":8557025,"line_start":300,"line_end":300,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8557030,"byte_end":8557042,"line_start":301,"line_end":301,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8557047,"byte_end":8557054,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8557059,"byte_end":8557066,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8557071,"byte_end":8557074,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8557079,"byte_end":8557150,"line_start":305,"line_end":305,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8557155,"byte_end":8557158,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8557163,"byte_end":8557220,"line_start":307,"line_end":307,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8557225,"byte_end":8557278,"line_start":308,"line_end":308,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8558887,"byte_end":8558895,"line_start":368,"line_end":368,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Queries metadata about the underlying file.","sig":null,"attributes":[{"value":"/ Queries metadata about the underlying file.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8558501,"byte_end":8558548,"line_start":353,"line_end":353,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8558553,"byte_end":8558556,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8558561,"byte_end":8558575,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8558580,"byte_end":8558583,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8558588,"byte_end":8558601,"line_start":357,"line_end":357,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8558606,"byte_end":8558630,"line_start":358,"line_end":358,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8558635,"byte_end":8558638,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8558643,"byte_end":8558688,"line_start":360,"line_end":360,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8558693,"byte_end":8558737,"line_start":361,"line_end":361,"column_start":5,"column_end":49}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8558742,"byte_end":8558784,"line_start":362,"line_end":362,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8558789,"byte_end":8558792,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", metadata);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8558797,"byte_end":8558828,"line_start":364,"line_end":364,"column_start":5,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8558833,"byte_end":8558845,"line_start":365,"line_end":365,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8558850,"byte_end":8558857,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8558862,"byte_end":8558869,"line_start":367,"line_end":367,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559519,"byte_end":8559528,"line_start":388,"line_end":388,"column_start":18,"column_end":27},"name":"try_clone","qualname":"<File>::try_clone","value":"pub async fn try_clone<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Create a new `File` instance that shares the same underlying file handle\n as the existing `File` instance. Reads, writes, and seeks will affect both\n File instances simultaneously.","sig":null,"attributes":[{"value":"/ Create a new `File` instance that shares the same underlying file handle","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559023,"byte_end":8559099,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ as the existing `File` instance. Reads, writes, and seeks will affect both","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559104,"byte_end":8559182,"line_start":374,"line_end":374,"column_start":5,"column_end":83}},{"value":"/ File instances simultaneously.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559187,"byte_end":8559221,"line_start":375,"line_end":375,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559226,"byte_end":8559229,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559234,"byte_end":8559248,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559253,"byte_end":8559256,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559261,"byte_end":8559274,"line_start":379,"line_end":379,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559279,"byte_end":8559303,"line_start":380,"line_end":380,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559308,"byte_end":8559311,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559316,"byte_end":8559361,"line_start":382,"line_end":382,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559366,"byte_end":8559410,"line_start":383,"line_end":383,"column_start":5,"column_end":49}},{"value":"/ let file_clone = file.try_clone().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559415,"byte_end":8559460,"line_start":384,"line_end":384,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559465,"byte_end":8559477,"line_start":385,"line_end":385,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559482,"byte_end":8559489,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559494,"byte_end":8559501,"line_start":387,"line_end":387,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560258,"byte_end":8560266,"line_start":412,"line_end":412,"column_start":18,"column_end":26},"name":"into_std","qualname":"<File>::into_std","value":"pub async fn into_std(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Destructures `File` into a [`std::fs::File`][std]. This function is\n async to allow any in-flight operations to complete.","sig":null,"attributes":[{"value":"/ Destructures `File` into a [`std::fs::File`][std]. This function is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559707,"byte_end":8559778,"line_start":394,"line_end":394,"column_start":5,"column_end":76}},{"value":"/ async to allow any in-flight operations to complete.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559783,"byte_end":8559839,"line_start":395,"line_end":395,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559844,"byte_end":8559847,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Use `File::try_into_std` to attempt conversion immediately.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559852,"byte_end":8559915,"line_start":397,"line_end":397,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559920,"byte_end":8559923,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559928,"byte_end":8559952,"line_start":399,"line_end":399,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559957,"byte_end":8559960,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559965,"byte_end":8559979,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559984,"byte_end":8559987,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8559992,"byte_end":8560005,"line_start":403,"line_end":403,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560010,"byte_end":8560034,"line_start":404,"line_end":404,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560039,"byte_end":8560042,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560047,"byte_end":8560092,"line_start":406,"line_end":406,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560097,"byte_end":8560147,"line_start":407,"line_end":407,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.into_std().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560152,"byte_end":8560199,"line_start":408,"line_end":408,"column_start":5,"column_end":52}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560204,"byte_end":8560216,"line_start":409,"line_end":409,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560221,"byte_end":8560228,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560233,"byte_end":8560240,"line_start":411,"line_end":411,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560980,"byte_end":8560992,"line_start":437,"line_end":437,"column_start":12,"column_end":24},"name":"try_into_std","qualname":"<File>::try_into_std","value":"pub fn try_into_std(Self) -> Result<sys::File, Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to immediately destructure `File` into a [`std::fs::File`][std].","sig":null,"attributes":[{"value":"/ Tries to immediately destructure `File` into a [`std::fs::File`][std].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560426,"byte_end":8560500,"line_start":417,"line_end":417,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560505,"byte_end":8560508,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560513,"byte_end":8560537,"line_start":419,"line_end":419,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560542,"byte_end":8560545,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560550,"byte_end":8560562,"line_start":421,"line_end":421,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560567,"byte_end":8560570,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This function will return an error containing the file if some","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560575,"byte_end":8560641,"line_start":423,"line_end":423,"column_start":5,"column_end":71}},{"value":"/ operation is in-flight.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560646,"byte_end":8560673,"line_start":424,"line_end":424,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560678,"byte_end":8560681,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560686,"byte_end":8560700,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560705,"byte_end":8560708,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560713,"byte_end":8560726,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560731,"byte_end":8560755,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560760,"byte_end":8560763,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560768,"byte_end":8560813,"line_start":431,"line_end":431,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560818,"byte_end":8560868,"line_start":432,"line_end":432,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.try_into_std().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560873,"byte_end":8560927,"line_start":433,"line_end":433,"column_start":5,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560932,"byte_end":8560944,"line_start":434,"line_end":434,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560949,"byte_end":8560956,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8560961,"byte_end":8560968,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8562270,"byte_end":8562285,"line_start":476,"line_end":476,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"pub async fn set_permissions<'_>(&'_ Self, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the underlying file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the underlying file.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561245,"byte_end":8561296,"line_start":447,"line_end":447,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561301,"byte_end":8561304,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561309,"byte_end":8561341,"line_start":449,"line_end":449,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561346,"byte_end":8561349,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ This function currently corresponds to the `fchmod` function on Unix and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561354,"byte_end":8561430,"line_start":451,"line_end":451,"column_start":5,"column_end":81}},{"value":"/ the `SetFileInformationByHandle` function on Windows. Note that, this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561435,"byte_end":8561508,"line_start":452,"line_end":452,"column_start":5,"column_end":78}},{"value":"/ [may change in the future][changes].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561513,"byte_end":8561553,"line_start":453,"line_end":453,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561558,"byte_end":8561561,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561566,"byte_end":8561651,"line_start":455,"line_end":455,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561656,"byte_end":8561659,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561664,"byte_end":8561676,"line_start":457,"line_end":457,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561681,"byte_end":8561684,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the user lacks permission change","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561689,"byte_end":8561763,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/ attributes on the underlying file. It may also return an error in other","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561768,"byte_end":8561843,"line_start":460,"line_end":460,"column_start":5,"column_end":80}},{"value":"/ os-specific unspecified cases.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561848,"byte_end":8561882,"line_start":461,"line_end":461,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561887,"byte_end":8561890,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561895,"byte_end":8561909,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561914,"byte_end":8561917,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561922,"byte_end":8561935,"line_start":465,"line_end":465,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561940,"byte_end":8561964,"line_start":466,"line_end":466,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561969,"byte_end":8561972,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8561977,"byte_end":8562022,"line_start":468,"line_end":468,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8562027,"byte_end":8562071,"line_start":469,"line_end":469,"column_start":5,"column_end":49}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8562076,"byte_end":8562133,"line_start":470,"line_end":470,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8562138,"byte_end":8562167,"line_start":471,"line_end":471,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8562172,"byte_end":8562211,"line_start":472,"line_end":472,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8562216,"byte_end":8562228,"line_start":473,"line_end":473,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8562233,"byte_end":8562240,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8562245,"byte_end":8562252,"line_start":475,"line_end":475,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572605,"byte_end":8572614,"line_start":41,"line_end":41,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"pub async fn hard_link<impl AsRef<Path>: AsRef<Path>,\n                       impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                      impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new hard link on the filesystem.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8571558,"byte_end":8571604,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8571605,"byte_end":8571608,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::hard_link`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8571609,"byte_end":8571668,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8571669,"byte_end":8571672,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::hard_link","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8571673,"byte_end":8571702,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8571703,"byte_end":8571706,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that systems","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8571707,"byte_end":8571786,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ often require these two paths to both be located on the same filesystem.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8571787,"byte_end":8571863,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8571864,"byte_end":8571867,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8571868,"byte_end":8571900,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8571901,"byte_end":8571904,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `link` function on Unix","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8571905,"byte_end":8571975,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ and the `CreateHardLink` function on Windows.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8571976,"byte_end":8572025,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572026,"byte_end":8572082,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572083,"byte_end":8572086,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572087,"byte_end":8572172,"line_start":21,"line_end":21,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572173,"byte_end":8572176,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572177,"byte_end":8572189,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572190,"byte_end":8572193,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572194,"byte_end":8572272,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572273,"byte_end":8572305,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572306,"byte_end":8572309,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * The `src` path is not a file or doesn't exist.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572310,"byte_end":8572362,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572363,"byte_end":8572366,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572367,"byte_end":8572381,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572382,"byte_end":8572385,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572386,"byte_end":8572399,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572400,"byte_end":8572418,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572419,"byte_end":8572422,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572423,"byte_end":8572441,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572442,"byte_end":8572486,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/     fs::hard_link(\"a.txt\", \"b.txt\").await?; // Hard link a.txt to b.txt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572487,"byte_end":8572562,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572563,"byte_end":8572577,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572578,"byte_end":8572583,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\hard_link.rs","byte_start":8572584,"byte_end":8572591,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8574009,"byte_end":8574017,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"pub async fn metadata<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Given a path, queries the file system to get information about a file,\n directory, etc.","sig":null,"attributes":[{"value":"/ Given a path, queries the file system to get information about a file,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8572904,"byte_end":8572978,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ directory, etc.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8572979,"byte_end":8572998,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8572999,"byte_end":8573002,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::metadata`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573003,"byte_end":8573061,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573062,"byte_end":8573065,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573066,"byte_end":8573143,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ destination file.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573144,"byte_end":8573165,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573166,"byte_end":8573169,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573170,"byte_end":8573202,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573203,"byte_end":8573206,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `stat` function on Unix and the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573207,"byte_end":8573285,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ `GetFileAttributesEx` function on Windows.  Note that, this [may change in","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573286,"byte_end":8573364,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ the future][changes].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573365,"byte_end":8573390,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573391,"byte_end":8573394,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::metadata","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573395,"byte_end":8573423,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573424,"byte_end":8573509,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573510,"byte_end":8573513,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573514,"byte_end":8573526,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573527,"byte_end":8573530,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573531,"byte_end":8573609,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573610,"byte_end":8573642,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573643,"byte_end":8573646,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * The user lacks permissions to perform `metadata` call on `path`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573647,"byte_end":8573717,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ * `path` does not exist.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573718,"byte_end":8573746,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573747,"byte_end":8573750,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573751,"byte_end":8573765,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573766,"byte_end":8573769,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573770,"byte_end":8573788,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573789,"byte_end":8573807,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573808,"byte_end":8573811,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573812,"byte_end":8573830,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573831,"byte_end":8573875,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/     let attr = fs::metadata(\"/some/file/path.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573876,"byte_end":8573938,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/     // inspect attr ...","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573939,"byte_end":8573966,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573967,"byte_end":8573981,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573982,"byte_end":8573987,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\metadata.rs","byte_start":8573988,"byte_end":8573995,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1141},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576113,"byte_end":8576124,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" Options and flags which can be used to configure how a file is opened.","sig":null,"attributes":[{"value":"/ Options and flags which can be used to configure how a file is opened.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8574228,"byte_end":8574302,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8574303,"byte_end":8574306,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This builder exposes the ability to configure how a [`File`] is opened and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8574307,"byte_end":8574385,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ what operations are permitted on the open file. The [`File::open`] and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8574386,"byte_end":8574460,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ [`File::create`] methods are aliases for commonly used options using this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8574461,"byte_end":8574538,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ builder.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8574539,"byte_end":8574551,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8574552,"byte_end":8574555,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Generally speaking, when using `OpenOptions`, you'll first call [`new`],","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8574556,"byte_end":8574632,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ then chain calls to methods to set each option, then call [`open`], passing","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8574633,"byte_end":8574712,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ the path of the file you're trying to open. This will give you a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8574713,"byte_end":8574781,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`][result] with a [`File`] inside that you can further operate","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8574782,"byte_end":8574860,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ on.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8574861,"byte_end":8574868,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8574869,"byte_end":8574872,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::OpenOptions`] for usage from","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8574873,"byte_end":8574949,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ the Tokio runtime.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8574950,"byte_end":8574972,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8574973,"byte_end":8574976,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `From<std::fs::OpenOptions>` is implemented for more advanced configuration","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8574977,"byte_end":8575056,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ than the methods provided here.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575057,"byte_end":8575092,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575093,"byte_end":8575096,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`new`]: OpenOptions::new","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575097,"byte_end":8575126,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ [`open`]: OpenOptions::open","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575127,"byte_end":8575158,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ [result]: std::io::Result","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575159,"byte_end":8575188,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ [`File`]: File","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575189,"byte_end":8575207,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ [`File::open`]: File::open","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575208,"byte_end":8575238,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ [`File::create`]: File::create","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575239,"byte_end":8575273,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::OpenOptions`]: std::fs::OpenOptions","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575274,"byte_end":8575324,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575325,"byte_end":8575328,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575329,"byte_end":8575343,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575344,"byte_end":8575347,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Opening a file to read:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575348,"byte_end":8575375,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575376,"byte_end":8575379,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575380,"byte_end":8575393,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575394,"byte_end":8575425,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575426,"byte_end":8575442,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575443,"byte_end":8575446,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575447,"byte_end":8575465,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575466,"byte_end":8575505,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575506,"byte_end":8575543,"line_start":43,"line_end":43,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575544,"byte_end":8575567,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575568,"byte_end":8575596,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575597,"byte_end":8575617,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575618,"byte_end":8575621,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575622,"byte_end":8575636,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575637,"byte_end":8575642,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575643,"byte_end":8575650,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575651,"byte_end":8575654,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Opening a file for both reading and writing, as well as creating it if it","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575655,"byte_end":8575732,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ doesn't exist:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575733,"byte_end":8575751,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575752,"byte_end":8575755,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575756,"byte_end":8575769,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575770,"byte_end":8575801,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575802,"byte_end":8575818,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575819,"byte_end":8575822,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575823,"byte_end":8575841,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575842,"byte_end":8575881,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575882,"byte_end":8575919,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575920,"byte_end":8575943,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/         .write(true)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575944,"byte_end":8575968,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/         .create(true)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575969,"byte_end":8575994,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8575995,"byte_end":8576023,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576024,"byte_end":8576044,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576045,"byte_end":8576048,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576049,"byte_end":8576063,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576064,"byte_end":8576069,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576070,"byte_end":8576077,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576645,"byte_end":8576648,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"pub fn new() -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank new set of options ready for configuration.","sig":null,"attributes":[{"value":"/ Creates a blank new set of options ready for configuration.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576172,"byte_end":8576235,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576240,"byte_end":8576243,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576248,"byte_end":8576293,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576298,"byte_end":8576301,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::new`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576306,"byte_end":8576372,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576377,"byte_end":8576380,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::new","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576385,"byte_end":8576421,"line_start":81,"line_end":81,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576426,"byte_end":8576429,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576434,"byte_end":8576448,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576453,"byte_end":8576456,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576461,"byte_end":8576474,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576479,"byte_end":8576510,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576515,"byte_end":8576518,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let mut options = OpenOptions::new();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576523,"byte_end":8576564,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/ let future = options.read(true).open(\"foo.txt\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576569,"byte_end":8576621,"line_start":89,"line_end":89,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576626,"byte_end":8576633,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577377,"byte_end":8577381,"line_start":120,"line_end":120,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"pub fn read(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for read access.","sig":null,"attributes":[{"value":"/ Sets the option for read access.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576728,"byte_end":8576764,"line_start":95,"line_end":95,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576769,"byte_end":8576772,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576777,"byte_end":8576842,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"/ `read`-able if opened.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576847,"byte_end":8576873,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576878,"byte_end":8576881,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::read`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576886,"byte_end":8576953,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576958,"byte_end":8576961,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::read","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576966,"byte_end":8577003,"line_start":102,"line_end":102,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577008,"byte_end":8577011,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577016,"byte_end":8577030,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577035,"byte_end":8577038,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577043,"byte_end":8577056,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577061,"byte_end":8577092,"line_start":107,"line_end":107,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577097,"byte_end":8577113,"line_start":108,"line_end":108,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577118,"byte_end":8577121,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577126,"byte_end":8577144,"line_start":110,"line_end":110,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577149,"byte_end":8577188,"line_start":111,"line_end":111,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577193,"byte_end":8577230,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/         .read(true)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577235,"byte_end":8577258,"line_start":113,"line_end":113,"column_start":5,"column_end":28}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577263,"byte_end":8577291,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577296,"byte_end":8577316,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577321,"byte_end":8577324,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577329,"byte_end":8577343,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577348,"byte_end":8577353,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577358,"byte_end":8577365,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578132,"byte_end":8578137,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"pub fn write(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for write access.","sig":null,"attributes":[{"value":"/ Sets the option for write access.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577478,"byte_end":8577515,"line_start":125,"line_end":125,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577520,"byte_end":8577523,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577528,"byte_end":8577593,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/ `write`-able if opened.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577598,"byte_end":8577625,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577630,"byte_end":8577633,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::write`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577638,"byte_end":8577706,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577711,"byte_end":8577714,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::write","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577719,"byte_end":8577757,"line_start":132,"line_end":132,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577762,"byte_end":8577765,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577770,"byte_end":8577784,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577789,"byte_end":8577792,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577797,"byte_end":8577810,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577815,"byte_end":8577846,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577851,"byte_end":8577867,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577872,"byte_end":8577875,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577880,"byte_end":8577898,"line_start":140,"line_end":140,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577903,"byte_end":8577942,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577947,"byte_end":8577984,"line_start":142,"line_end":142,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8577989,"byte_end":8578013,"line_start":143,"line_end":143,"column_start":5,"column_end":29}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578018,"byte_end":8578046,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578051,"byte_end":8578071,"line_start":145,"line_end":145,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578076,"byte_end":8578079,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578084,"byte_end":8578098,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578103,"byte_end":8578108,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578113,"byte_end":8578120,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580367,"byte_end":8580373,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"pub fn append(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for the append mode.","sig":null,"attributes":[{"value":"/ Sets the option for the append mode.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578237,"byte_end":8578277,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578282,"byte_end":8578285,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This option, when true, means that writes will append to a file instead","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578290,"byte_end":8578365,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ of overwriting previous contents.  Note that setting","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578370,"byte_end":8578426,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/ `.write(true).append(true)` has the same effect as setting only","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578431,"byte_end":8578498,"line_start":159,"line_end":159,"column_start":5,"column_end":72}},{"value":"/ `.append(true)`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578503,"byte_end":8578523,"line_start":160,"line_end":160,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578528,"byte_end":8578531,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ For most filesystems, the operating system guarantees that all writes are","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578536,"byte_end":8578613,"line_start":162,"line_end":162,"column_start":5,"column_end":82}},{"value":"/ atomic: no writes get mangled because another process writes at the same","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578618,"byte_end":8578694,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ time.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578699,"byte_end":8578708,"line_start":164,"line_end":164,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578713,"byte_end":8578716,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ One maybe obvious note when using append-mode: make sure that all data","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578721,"byte_end":8578795,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ that belongs together is written to the file in one operation. This","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578800,"byte_end":8578871,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ can be done by concatenating strings before passing them to [`write()`],","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578876,"byte_end":8578952,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ or using a buffered writer (with a buffer of adequate size),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8578957,"byte_end":8579021,"line_start":169,"line_end":169,"column_start":5,"column_end":69}},{"value":"/ and calling [`flush()`] when the message is complete.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579026,"byte_end":8579083,"line_start":170,"line_end":170,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579088,"byte_end":8579091,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ If a file is opened with both read and append access, beware that after","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579096,"byte_end":8579171,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ opening, and after every write, the position for reading may be set at the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579176,"byte_end":8579254,"line_start":173,"line_end":173,"column_start":5,"column_end":83}},{"value":"/ end of the file. So, before writing, save the current position (using","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579259,"byte_end":8579332,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ [`seek`]`(`[`SeekFrom`]`::`[`Current`]`(0))`), and restore it before the next read.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579337,"byte_end":8579424,"line_start":175,"line_end":175,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579429,"byte_end":8579432,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::append`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579437,"byte_end":8579506,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579511,"byte_end":8579514,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::append","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579519,"byte_end":8579558,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579563,"byte_end":8579566,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579571,"byte_end":8579582,"line_start":181,"line_end":181,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579587,"byte_end":8579590,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This function doesn't create the file if it doesn't exist. Use the [`create`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579595,"byte_end":8579676,"line_start":183,"line_end":183,"column_start":5,"column_end":86}},{"value":"/ method to do so.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579681,"byte_end":8579701,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579706,"byte_end":8579709,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`write()`]: crate::io::AsyncWriteExt::write","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579714,"byte_end":8579762,"line_start":186,"line_end":186,"column_start":5,"column_end":53}},{"value":"/ [`flush()`]: crate::io::AsyncWriteExt::flush","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579767,"byte_end":8579815,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/ [`seek`]: crate::io::AsyncSeekExt::seek","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579820,"byte_end":8579863,"line_start":188,"line_end":188,"column_start":5,"column_end":48}},{"value":"/ [`SeekFrom`]: std::io::SeekFrom","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579868,"byte_end":8579903,"line_start":189,"line_end":189,"column_start":5,"column_end":40}},{"value":"/ [`Current`]: std::io::SeekFrom::Current","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579908,"byte_end":8579951,"line_start":190,"line_end":190,"column_start":5,"column_end":48}},{"value":"/ [`create`]: OpenOptions::create","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579956,"byte_end":8579991,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8579996,"byte_end":8579999,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580004,"byte_end":8580018,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580023,"byte_end":8580026,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580031,"byte_end":8580044,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580049,"byte_end":8580080,"line_start":196,"line_end":196,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580085,"byte_end":8580101,"line_start":197,"line_end":197,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580106,"byte_end":8580109,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580114,"byte_end":8580132,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580137,"byte_end":8580176,"line_start":200,"line_end":200,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580181,"byte_end":8580218,"line_start":201,"line_end":201,"column_start":5,"column_end":42}},{"value":"/         .append(true)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580223,"byte_end":8580248,"line_start":202,"line_end":202,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580253,"byte_end":8580281,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580286,"byte_end":8580306,"line_start":204,"line_end":204,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580311,"byte_end":8580314,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580319,"byte_end":8580333,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580338,"byte_end":8580343,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580348,"byte_end":8580355,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581290,"byte_end":8581298,"line_start":242,"line_end":242,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"pub fn truncate(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for truncating a previous file.","sig":null,"attributes":[{"value":"/ Sets the option for truncating a previous file.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580476,"byte_end":8580527,"line_start":214,"line_end":214,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580532,"byte_end":8580535,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a file is successfully opened with this option set it will truncate","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580540,"byte_end":8580614,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ the file to 0 length if it already exists.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580619,"byte_end":8580665,"line_start":217,"line_end":217,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580670,"byte_end":8580673,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write access for truncate to work.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580678,"byte_end":8580745,"line_start":219,"line_end":219,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580750,"byte_end":8580753,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::truncate`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580758,"byte_end":8580829,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580834,"byte_end":8580837,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::truncate","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580842,"byte_end":8580883,"line_start":223,"line_end":223,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580888,"byte_end":8580891,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580896,"byte_end":8580910,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580915,"byte_end":8580918,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580923,"byte_end":8580936,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580941,"byte_end":8580972,"line_start":228,"line_end":228,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580977,"byte_end":8580993,"line_start":229,"line_end":229,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8580998,"byte_end":8581001,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581006,"byte_end":8581024,"line_start":231,"line_end":231,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581029,"byte_end":8581068,"line_start":232,"line_end":232,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581073,"byte_end":8581110,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581115,"byte_end":8581139,"line_start":234,"line_end":234,"column_start":5,"column_end":29}},{"value":"/         .truncate(true)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581144,"byte_end":8581171,"line_start":235,"line_end":235,"column_start":5,"column_end":32}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581176,"byte_end":8581204,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581209,"byte_end":8581229,"line_start":237,"line_end":237,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581234,"byte_end":8581237,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581242,"byte_end":8581256,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581261,"byte_end":8581266,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581271,"byte_end":8581278,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582295,"byte_end":8582301,"line_start":278,"line_end":278,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"pub fn create(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for creating a new file.","sig":null,"attributes":[{"value":"/ Sets the option for creating a new file.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581407,"byte_end":8581451,"line_start":247,"line_end":247,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581456,"byte_end":8581459,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created if the file","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581464,"byte_end":8581536,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ does not yet already exist.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581541,"byte_end":8581572,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581577,"byte_end":8581580,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ In order for the file to be created, [`write`] or [`append`] access must","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581585,"byte_end":8581661,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ be used.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581666,"byte_end":8581678,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581683,"byte_end":8581686,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581691,"byte_end":8581760,"line_start":255,"line_end":255,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581765,"byte_end":8581768,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581773,"byte_end":8581812,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/ [`write`]: OpenOptions::write","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581817,"byte_end":8581850,"line_start":258,"line_end":258,"column_start":5,"column_end":38}},{"value":"/ [`append`]: OpenOptions::append","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581855,"byte_end":8581890,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581895,"byte_end":8581898,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581903,"byte_end":8581917,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581922,"byte_end":8581925,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581930,"byte_end":8581943,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581948,"byte_end":8581979,"line_start":264,"line_end":264,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8581984,"byte_end":8582000,"line_start":265,"line_end":265,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582005,"byte_end":8582008,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582013,"byte_end":8582031,"line_start":267,"line_end":267,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582036,"byte_end":8582075,"line_start":268,"line_end":268,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582080,"byte_end":8582117,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582122,"byte_end":8582146,"line_start":270,"line_end":270,"column_start":5,"column_end":29}},{"value":"/         .create(true)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582151,"byte_end":8582176,"line_start":271,"line_end":271,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582181,"byte_end":8582209,"line_start":272,"line_end":272,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582214,"byte_end":8582234,"line_start":273,"line_end":273,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582239,"byte_end":8582242,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582247,"byte_end":8582261,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582266,"byte_end":8582271,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582276,"byte_end":8582283,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583700,"byte_end":8583710,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"pub fn create_new(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option to always create a new file.","sig":null,"attributes":[{"value":"/ Sets the option to always create a new file.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582404,"byte_end":8582452,"line_start":283,"line_end":283,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582457,"byte_end":8582460,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created.  No file is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582465,"byte_end":8582538,"line_start":285,"line_end":285,"column_start":5,"column_end":78}},{"value":"/ allowed to exist at the target location, also no (dangling) symlink.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582543,"byte_end":8582615,"line_start":286,"line_end":286,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582620,"byte_end":8582623,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This option is useful because it is atomic. Otherwise between checking","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582628,"byte_end":8582702,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ whether a file exists and creating a new one, the file may have been","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582707,"byte_end":8582779,"line_start":289,"line_end":289,"column_start":5,"column_end":77}},{"value":"/ created by another process (a TOCTOU race condition / attack).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582784,"byte_end":8582850,"line_start":290,"line_end":290,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582855,"byte_end":8582858,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ If `.create_new(true)` is set, [`.create()`] and [`.truncate()`] are","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582863,"byte_end":8582935,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ ignored.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582940,"byte_end":8582952,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582957,"byte_end":8582960,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write or append access in order to create a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8582965,"byte_end":8583041,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ new file.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583046,"byte_end":8583059,"line_start":296,"line_end":296,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583064,"byte_end":8583067,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create_new`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583072,"byte_end":8583145,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583150,"byte_end":8583153,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create_new","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583158,"byte_end":8583201,"line_start":300,"line_end":300,"column_start":5,"column_end":48}},{"value":"/ [`.create()`]: OpenOptions::create","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583206,"byte_end":8583244,"line_start":301,"line_end":301,"column_start":5,"column_end":43}},{"value":"/ [`.truncate()`]: OpenOptions::truncate","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583249,"byte_end":8583291,"line_start":302,"line_end":302,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583296,"byte_end":8583299,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583304,"byte_end":8583318,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583323,"byte_end":8583326,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583331,"byte_end":8583344,"line_start":306,"line_end":306,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583349,"byte_end":8583380,"line_start":307,"line_end":307,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583385,"byte_end":8583401,"line_start":308,"line_end":308,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583406,"byte_end":8583409,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583414,"byte_end":8583432,"line_start":310,"line_end":310,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583437,"byte_end":8583476,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583481,"byte_end":8583518,"line_start":312,"line_end":312,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583523,"byte_end":8583547,"line_start":313,"line_end":313,"column_start":5,"column_end":29}},{"value":"/         .create_new(true)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583552,"byte_end":8583581,"line_start":314,"line_end":314,"column_start":5,"column_end":34}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583586,"byte_end":8583614,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583619,"byte_end":8583639,"line_start":316,"line_end":316,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583644,"byte_end":8583647,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583652,"byte_end":8583666,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583671,"byte_end":8583676,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583681,"byte_end":8583688,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8586162,"byte_end":8586166,"line_start":378,"line_end":378,"column_start":18,"column_end":22},"name":"open","qualname":"<OpenOptions>::open","value":"pub async fn open<'_,\n                  impl AsRef<Path>: AsRef<Path>>(&'_ Self, impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file at `path` with the options specified by `self`.","sig":null,"attributes":[{"value":"/ Opens a file at `path` with the options specified by `self`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583825,"byte_end":8583889,"line_start":326,"line_end":326,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583894,"byte_end":8583897,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::open`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583902,"byte_end":8583969,"line_start":328,"line_end":328,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583974,"byte_end":8583977,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::open","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8583982,"byte_end":8584019,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584024,"byte_end":8584027,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584032,"byte_end":8584044,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584049,"byte_end":8584052,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function will return an error under a number of different","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584057,"byte_end":8584123,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/ circumstances. Some of these error conditions are listed here, together","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584128,"byte_end":8584203,"line_start":335,"line_end":335,"column_start":5,"column_end":80}},{"value":"/ with their [`ErrorKind`]. The mapping to [`ErrorKind`]s is not part of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584208,"byte_end":8584282,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ the compatibility contract of the function, especially the `Other` kind","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584287,"byte_end":8584362,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ might change to more specific kinds in the future.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584367,"byte_end":8584421,"line_start":338,"line_end":338,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584426,"byte_end":8584429,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ * [`NotFound`]: The specified file does not exist and neither `create`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584434,"byte_end":8584508,"line_start":340,"line_end":340,"column_start":5,"column_end":79}},{"value":"/   or `create_new` is set.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584513,"byte_end":8584542,"line_start":341,"line_end":341,"column_start":5,"column_end":34}},{"value":"/ * [`NotFound`]: One of the directory components of the file path does","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584547,"byte_end":8584620,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/   not exist.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584625,"byte_end":8584641,"line_start":343,"line_end":343,"column_start":5,"column_end":21}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to get the specified","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584646,"byte_end":8584720,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/   access rights for the file.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584725,"byte_end":8584758,"line_start":345,"line_end":345,"column_start":5,"column_end":38}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to open one of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584763,"byte_end":8584835,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/   directory components of the specified path.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584840,"byte_end":8584889,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ * [`AlreadyExists`]: `create_new` was specified and the file already","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584894,"byte_end":8584966,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/   exists.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584971,"byte_end":8584984,"line_start":349,"line_end":349,"column_start":5,"column_end":18}},{"value":"/ * [`InvalidInput`]: Invalid combinations of open options (truncate","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8584989,"byte_end":8585059,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/   without write access, no access mode set, etc.).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585064,"byte_end":8585118,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/ * [`Other`]: One of the directory components of the specified file path","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585123,"byte_end":8585198,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/   was not, in fact, a directory.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585203,"byte_end":8585239,"line_start":353,"line_end":353,"column_start":5,"column_end":41}},{"value":"/ * [`Other`]: Filesystem-level errors: full disk, write permission","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585244,"byte_end":8585313,"line_start":354,"line_end":354,"column_start":5,"column_end":74}},{"value":"/   requested on a read-only file system, exceeded disk quota, too many","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585318,"byte_end":8585391,"line_start":355,"line_end":355,"column_start":5,"column_end":78}},{"value":"/   open files, too long filename, too many symbolic links in the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585396,"byte_end":8585463,"line_start":356,"line_end":356,"column_start":5,"column_end":72}},{"value":"/   specified path (Unix-like systems only), etc.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585468,"byte_end":8585519,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585524,"byte_end":8585527,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585532,"byte_end":8585546,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585551,"byte_end":8585554,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585559,"byte_end":8585572,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585577,"byte_end":8585608,"line_start":362,"line_end":362,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585613,"byte_end":8585629,"line_start":363,"line_end":363,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585634,"byte_end":8585637,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585642,"byte_end":8585660,"line_start":365,"line_end":365,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585665,"byte_end":8585704,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new().open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585709,"byte_end":8585770,"line_start":367,"line_end":367,"column_start":5,"column_end":66}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585775,"byte_end":8585789,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585794,"byte_end":8585799,"line_start":369,"line_end":369,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585804,"byte_end":8585811,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585816,"byte_end":8585819,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind`]: std::io::ErrorKind","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585824,"byte_end":8585861,"line_start":372,"line_end":372,"column_start":5,"column_end":42}},{"value":"/ [`AlreadyExists`]: std::io::ErrorKind::AlreadyExists","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585866,"byte_end":8585922,"line_start":373,"line_end":373,"column_start":5,"column_end":61}},{"value":"/ [`InvalidInput`]: std::io::ErrorKind::InvalidInput","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585927,"byte_end":8585981,"line_start":374,"line_end":374,"column_start":5,"column_end":59}},{"value":"/ [`NotFound`]: std::io::ErrorKind::NotFound","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8585986,"byte_end":8586032,"line_start":375,"line_end":375,"column_start":5,"column_end":51}},{"value":"/ [`Other`]: std::io::ErrorKind::Other","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8586037,"byte_end":8586077,"line_start":376,"line_end":376,"column_start":5,"column_end":45}},{"value":"/ [`PermissionDenied`]: std::io::ErrorKind::PermissionDenied","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8586082,"byte_end":8586144,"line_start":377,"line_end":377,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8590004,"byte_end":8590015,"line_start":489,"line_end":489,"column_start":16,"column_end":27},"name":"access_mode","qualname":"<OpenOptions>::access_mode","value":"pub fn access_mode(&mut Self, u32) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Overrides the `dwDesiredAccess` argument to the call to [`CreateFile`]\n with the specified value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8591313,"byte_end":8591323,"line_start":522,"line_end":522,"column_start":16,"column_end":26},"name":"share_mode","qualname":"<OpenOptions>::share_mode","value":"pub fn share_mode(&mut Self, u32) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Overrides the `dwShareMode` argument to the call to [`CreateFile`] with\n the specified value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8592646,"byte_end":8592658,"line_start":554,"line_end":554,"column_start":16,"column_end":28},"name":"custom_flags","qualname":"<OpenOptions>::custom_flags","value":"pub fn custom_flags(&mut Self, u32) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets extra flags for the `dwFileFlags` argument to the call to\n [`CreateFile2`] to the specified value (or combines it with\n `attributes` and `security_qos_flags` to set the `dwFlagsAndAttributes`\n for [`CreateFile`]).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8594312,"byte_end":8594322,"line_start":593,"line_end":593,"column_start":16,"column_end":26},"name":"attributes","qualname":"<OpenOptions>::attributes","value":"pub fn attributes(&mut Self, u32) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the `dwFileAttributes` argument to the call to [`CreateFile2`] to\n the specified value (or combines it with `custom_flags` and\n `security_qos_flags` to set the `dwFlagsAndAttributes` for\n [`CreateFile`]).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8596660,"byte_end":8596678,"line_start":641,"line_end":641,"column_start":16,"column_end":34},"name":"security_qos_flags","qualname":"<OpenOptions>::security_qos_flags","value":"pub fn security_qos_flags(&mut Self, u32) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the `dwSecurityQosFlags` argument to the call to [`CreateFile2`] to\n the specified value (or combines it with `custom_flags` and `attributes`\n to set the `dwFlagsAndAttributes` for [`CreateFile`]).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":945},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8598432,"byte_end":8598436,"line_start":44,"line_end":44,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"pub async fn read<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file into a bytes vector.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file into a bytes vector.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597108,"byte_end":8597168,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597169,"byte_end":8597172,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597173,"byte_end":8597227,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597228,"byte_end":8597231,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597232,"byte_end":8597256,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597257,"byte_end":8597260,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for using [`File::open`] and [`read_to_end`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597261,"byte_end":8597340,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ with fewer imports and without an intermediate variable. It pre-allocates a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597341,"byte_end":8597420,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ buffer based on the file size when available, so it is generally faster than","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597421,"byte_end":8597501,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ reading into a vector created with `Vec::new()`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597502,"byte_end":8597554,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597555,"byte_end":8597558,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`File::open`]: super::File::open","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597559,"byte_end":8597596,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/ [`read_to_end`]: crate::io::AsyncReadExt::read_to_end","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597597,"byte_end":8597654,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597655,"byte_end":8597658,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597659,"byte_end":8597671,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597672,"byte_end":8597675,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This function will return an error if `path` does not already exist.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597676,"byte_end":8597748,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ Other errors may also be returned according to [`OpenOptions::open`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597749,"byte_end":8597822,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597823,"byte_end":8597826,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`OpenOptions::open`]: super::OpenOptions::open","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597827,"byte_end":8597878,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597879,"byte_end":8597882,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ It will also return an error if it encounters while reading an error","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597883,"byte_end":8597955,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ of a kind other than [`ErrorKind::Interrupted`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8597956,"byte_end":8598008,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8598009,"byte_end":8598012,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`ErrorKind::Interrupted`]: std::io::ErrorKind::Interrupted","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8598013,"byte_end":8598076,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8598077,"byte_end":8598080,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8598081,"byte_end":8598095,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8598096,"byte_end":8598099,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8598100,"byte_end":8598113,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8598114,"byte_end":8598132,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8598133,"byte_end":8598162,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8598163,"byte_end":8598166,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8598167,"byte_end":8598185,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error + 'static>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8598186,"byte_end":8598259,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/     let contents = fs::read(\"address.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8598260,"byte_end":8598314,"line_start":39,"line_end":39,"column_start":1,"column_end":55}},{"value":"/     let foo: SocketAddr = String::from_utf8_lossy(&contents).parse()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8598315,"byte_end":8598389,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8598390,"byte_end":8598404,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8598405,"byte_end":8598410,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read.rs","byte_start":8598411,"byte_end":8598418,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":968},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8598973,"byte_end":8598981,"line_start":16,"line_end":16,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"pub async fn read_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8598825,"byte_end":8598882,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8598883,"byte_end":8598886,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_dir`](std::fs::read_dir)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8598887,"byte_end":8598959,"line_start":15,"line_end":15,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599751,"byte_end":8599758,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream of the entries in a directory.","sig":null,"attributes":[{"value":"/ Stream of the entries in a directory.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599175,"byte_end":8599216,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599217,"byte_end":8599220,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This stream is returned from the [`read_dir`] function of this module and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599221,"byte_end":8599298,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ will yield instances of [`DirEntry`]. Through a [`DirEntry`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599299,"byte_end":8599363,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ information like the entry's path and possibly other metadata can be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599364,"byte_end":8599436,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ learned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599437,"byte_end":8599449,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599450,"byte_end":8599453,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599454,"byte_end":8599466,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599467,"byte_end":8599470,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This stream will return an [`Err`] if there's some sort of intermittent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599471,"byte_end":8599546,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ IO error during iteration.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599547,"byte_end":8599577,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599578,"byte_end":8599581,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: read_dir","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599582,"byte_end":8599608,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/ [`DirEntry`]: DirEntry","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599609,"byte_end":8599635,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ [`Err`]: std::result::Result::Err","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599636,"byte_end":8599673,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599691,"byte_end":8599739,"line_start":39,"line_end":39,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8600012,"byte_end":8600022,"line_start":50,"line_end":50,"column_start":18,"column_end":28},"name":"next_entry","qualname":"<ReadDir>::next_entry","value":"pub async fn next_entry<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next entry in the directory stream.\n","sig":null,"attributes":[{"value":"/ Returns the next entry in the directory stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599943,"byte_end":8599994,"line_start":49,"line_end":49,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8601056,"byte_end":8601071,"line_start":73,"line_end":73,"column_start":12,"column_end":27},"name":"poll_next_entry","qualname":"<ReadDir>::poll_next_entry","value":"pub fn poll_next_entry(&mut Self, &mut Context)\n-> Poll<io::Result<Option<DirEntry>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next directory entry in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next directory entry in the stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8600168,"byte_end":8600221,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8600226,"byte_end":8600229,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8600234,"byte_end":8600258,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8600263,"byte_end":8600266,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next directory entry is not yet available.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8600271,"byte_end":8600343,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/  * `Poll::Ready(Ok(Some(entry)))` if the next directory entry is available.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8600348,"byte_end":8600427,"line_start":60,"line_end":60,"column_start":5,"column_end":84}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more directory entries in this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8600432,"byte_end":8600509,"line_start":61,"line_end":61,"column_start":5,"column_end":82}},{"value":"/    stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8600514,"byte_end":8600528,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the next","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8600533,"byte_end":8600610,"line_start":63,"line_end":63,"column_start":5,"column_end":82}},{"value":"/    directory entry.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8600615,"byte_end":8600638,"line_start":64,"line_end":64,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8600643,"byte_end":8600646,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8600651,"byte_end":8600723,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when the next directory entry","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8600728,"byte_end":8600804,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/ becomes available on the underlying IO resource.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8600809,"byte_end":8600861,"line_start":68,"line_end":68,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8600866,"byte_end":8600869,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_entry`, only the `Waker` from","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8600874,"byte_end":8600949,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/ the `Context` passed to the most recent call is scheduled to receive a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8600954,"byte_end":8601028,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ wakeup.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8601033,"byte_end":8601044,"line_start":72,"line_end":72,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603193,"byte_end":8603201,"line_start":142,"line_end":142,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::read_dir::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" Entries returned by the [`ReadDir`] stream.","sig":null,"attributes":[{"value":"/ Entries returned by the [`ReadDir`] stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8602742,"byte_end":8602789,"line_start":131,"line_end":131,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8602790,"byte_end":8602793,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ [`ReadDir`]: struct@ReadDir","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8602794,"byte_end":8602825,"line_start":133,"line_end":133,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8602826,"byte_end":8602829,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirEntry`] for usage from the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8602830,"byte_end":8602907,"line_start":135,"line_end":135,"column_start":1,"column_end":78}},{"value":"/ Tokio runtime.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8602908,"byte_end":8602926,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8602927,"byte_end":8602930,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ An instance of `DirEntry` represents an entry inside of a directory on the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8602931,"byte_end":8603009,"line_start":138,"line_end":138,"column_start":1,"column_end":79}},{"value":"/ filesystem. Each entry can be inspected via methods to learn about the full","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603010,"byte_end":8603089,"line_start":139,"line_end":139,"column_start":1,"column_end":80}},{"value":"/ path or possibly other metadata through per-platform extension traits.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603090,"byte_end":8603164,"line_start":140,"line_end":140,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604033,"byte_end":8604037,"line_start":174,"line_end":174,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"pub fn path(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to the file that this entry represents.","sig":null,"attributes":[{"value":"/ Returns the full path to the file that this entry represents.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603248,"byte_end":8603313,"line_start":145,"line_end":145,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603318,"byte_end":8603321,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path to `read_dir`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603326,"byte_end":8603397,"line_start":147,"line_end":147,"column_start":5,"column_end":76}},{"value":"/ with the filename of this entry.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603402,"byte_end":8603438,"line_start":148,"line_end":148,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603443,"byte_end":8603446,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603451,"byte_end":8603465,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603470,"byte_end":8603473,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603478,"byte_end":8603491,"line_start":152,"line_end":152,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603496,"byte_end":8603514,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603519,"byte_end":8603522,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603527,"byte_end":8603572,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603577,"byte_end":8603624,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603629,"byte_end":8603632,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603637,"byte_end":8603694,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603699,"byte_end":8603738,"line_start":159,"line_end":159,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603743,"byte_end":8603748,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603753,"byte_end":8603765,"line_start":161,"line_end":161,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603770,"byte_end":8603777,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603782,"byte_end":8603789,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603794,"byte_end":8603797,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This prints output like:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603802,"byte_end":8603830,"line_start":165,"line_end":165,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603835,"byte_end":8603838,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603843,"byte_end":8603854,"line_start":167,"line_end":167,"column_start":5,"column_end":16}},{"value":"/ \"./whatever.txt\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603859,"byte_end":8603879,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/ \"./foo.html\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603884,"byte_end":8603900,"line_start":169,"line_end":169,"column_start":5,"column_end":21}},{"value":"/ \"./hello_world.rs\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603905,"byte_end":8603927,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603932,"byte_end":8603939,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603944,"byte_end":8603947,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The exact text, of course, depends on what files you have in `.`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603952,"byte_end":8604021,"line_start":173,"line_end":173,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604557,"byte_end":8604566,"line_start":195,"line_end":195,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"pub fn file_name(&Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare file name of this directory entry without any other\n leading path component.","sig":null,"attributes":[{"value":"/ Returns the bare file name of this directory entry without any other","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604091,"byte_end":8604163,"line_start":178,"line_end":178,"column_start":5,"column_end":77}},{"value":"/ leading path component.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604168,"byte_end":8604195,"line_start":179,"line_end":179,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604200,"byte_end":8604203,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604208,"byte_end":8604222,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604227,"byte_end":8604230,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604235,"byte_end":8604242,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604247,"byte_end":8604265,"line_start":184,"line_end":184,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604270,"byte_end":8604273,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604278,"byte_end":8604323,"line_start":186,"line_end":186,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604328,"byte_end":8604375,"line_start":187,"line_end":187,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604380,"byte_end":8604383,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604388,"byte_end":8604445,"line_start":189,"line_end":189,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.file_name());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604450,"byte_end":8604494,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604499,"byte_end":8604504,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604509,"byte_end":8604521,"line_start":192,"line_end":192,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604526,"byte_end":8604533,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604538,"byte_end":8604545,"line_start":194,"line_end":194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605663,"byte_end":8605671,"line_start":229,"line_end":229,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the metadata for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the metadata for the file that this entry points at.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604626,"byte_end":8604690,"line_start":199,"line_end":199,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604695,"byte_end":8604698,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604703,"byte_end":8604773,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604778,"byte_end":8604790,"line_start":202,"line_end":202,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604795,"byte_end":8604798,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604803,"byte_end":8604835,"line_start":204,"line_end":204,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604840,"byte_end":8604843,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ On Windows this function is cheap to call (no extra system calls","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604848,"byte_end":8604916,"line_start":206,"line_end":206,"column_start":5,"column_end":73}},{"value":"/ needed), but on Unix platforms this function is the equivalent of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604921,"byte_end":8604990,"line_start":207,"line_end":207,"column_start":5,"column_end":74}},{"value":"/ calling `symlink_metadata` on the path.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8604995,"byte_end":8605038,"line_start":208,"line_end":208,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605043,"byte_end":8605046,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605051,"byte_end":8605065,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605070,"byte_end":8605073,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605078,"byte_end":8605085,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605090,"byte_end":8605108,"line_start":213,"line_end":213,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605113,"byte_end":8605116,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605121,"byte_end":8605166,"line_start":215,"line_end":215,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605171,"byte_end":8605218,"line_start":216,"line_end":216,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605223,"byte_end":8605226,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605231,"byte_end":8605288,"line_start":218,"line_end":218,"column_start":5,"column_end":62}},{"value":"/     if let Ok(metadata) = entry.metadata().await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605293,"byte_end":8605347,"line_start":219,"line_end":219,"column_start":5,"column_end":59}},{"value":"/         // Now let's show our entry's permissions!","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605352,"byte_end":8605406,"line_start":220,"line_end":220,"column_start":5,"column_end":59}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), metadata.permissions());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605411,"byte_end":8605484,"line_start":221,"line_end":221,"column_start":5,"column_end":78}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605489,"byte_end":8605505,"line_start":222,"line_end":222,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605510,"byte_end":8605580,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605585,"byte_end":8605594,"line_start":224,"line_end":224,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605599,"byte_end":8605604,"line_start":225,"line_end":225,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605609,"byte_end":8605621,"line_start":226,"line_end":226,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605626,"byte_end":8605633,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605638,"byte_end":8605645,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606855,"byte_end":8606864,"line_start":264,"line_end":264,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"pub async fn file_type<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the file type for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the file type for the file that this entry points at.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605797,"byte_end":8605862,"line_start":234,"line_end":234,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605867,"byte_end":8605870,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605875,"byte_end":8605945,"line_start":236,"line_end":236,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605950,"byte_end":8605962,"line_start":237,"line_end":237,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605967,"byte_end":8605970,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8605975,"byte_end":8606007,"line_start":239,"line_end":239,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606012,"byte_end":8606015,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ On Windows and most Unix platforms this function is free (no extra","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606020,"byte_end":8606090,"line_start":241,"line_end":241,"column_start":5,"column_end":75}},{"value":"/ system calls needed), but some Unix platforms may require the equivalent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606095,"byte_end":8606171,"line_start":242,"line_end":242,"column_start":5,"column_end":81}},{"value":"/ call to `symlink_metadata` to learn about the target file type.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606176,"byte_end":8606243,"line_start":243,"line_end":243,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606248,"byte_end":8606251,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606256,"byte_end":8606270,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606275,"byte_end":8606278,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606283,"byte_end":8606290,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606295,"byte_end":8606313,"line_start":248,"line_end":248,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606318,"byte_end":8606321,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606326,"byte_end":8606371,"line_start":250,"line_end":250,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606376,"byte_end":8606423,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606428,"byte_end":8606431,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606436,"byte_end":8606493,"line_start":253,"line_end":253,"column_start":5,"column_end":62}},{"value":"/     if let Ok(file_type) = entry.file_type().await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606498,"byte_end":8606554,"line_start":254,"line_end":254,"column_start":5,"column_end":61}},{"value":"/         // Now let's show our entry's file type!","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606559,"byte_end":8606611,"line_start":255,"line_end":255,"column_start":5,"column_end":57}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), file_type);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606616,"byte_end":8606676,"line_start":256,"line_end":256,"column_start":5,"column_end":65}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606681,"byte_end":8606697,"line_start":257,"line_end":257,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606702,"byte_end":8606772,"line_start":258,"line_end":258,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606777,"byte_end":8606786,"line_start":259,"line_end":259,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606791,"byte_end":8606796,"line_start":260,"line_end":260,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606801,"byte_end":8606813,"line_start":261,"line_end":261,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606818,"byte_end":8606825,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8606830,"byte_end":8606837,"line_start":263,"line_end":263,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_link.rs","byte_start":8607407,"byte_end":8607416,"line_start":11,"line_end":11,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"pub async fn read_link<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_link.rs","byte_start":8607225,"byte_end":8607295,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_link.rs","byte_start":8607296,"byte_end":8607299,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_link`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_link.rs","byte_start":8607300,"byte_end":8607359,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_link.rs","byte_start":8607360,"byte_end":8607363,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read_link","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_link.rs","byte_start":8607364,"byte_end":8607393,"line_start":10,"line_end":10,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":1013},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_to_string.rs","byte_start":8608124,"byte_end":8608138,"line_start":23,"line_end":23,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"pub async fn read_to_string<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will open a file for reading and read the entire\n contents into a string and return said string.","sig":null,"attributes":[{"value":"/ Creates a future which will open a file for reading and read the entire","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_to_string.rs","byte_start":8607617,"byte_end":8607692,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents into a string and return said string.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_to_string.rs","byte_start":8607693,"byte_end":8607743,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_to_string.rs","byte_start":8607744,"byte_end":8607747,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of [`std::fs::read_to_string`][std].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_to_string.rs","byte_start":8607748,"byte_end":8607817,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_to_string.rs","byte_start":8607818,"byte_end":8607821,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::read_to_string","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_to_string.rs","byte_start":8607822,"byte_end":8607859,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_to_string.rs","byte_start":8607860,"byte_end":8607863,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_to_string.rs","byte_start":8607864,"byte_end":8607878,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_to_string.rs","byte_start":8607879,"byte_end":8607882,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_to_string.rs","byte_start":8607883,"byte_end":8607896,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_to_string.rs","byte_start":8607897,"byte_end":8607915,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_to_string.rs","byte_start":8607916,"byte_end":8607919,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_to_string.rs","byte_start":8607920,"byte_end":8607965,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/ let contents = fs::read_to_string(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_to_string.rs","byte_start":8607966,"byte_end":8608022,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/ println!(\"foo.txt contains {} bytes\", contents.len());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_to_string.rs","byte_start":8608023,"byte_end":8608081,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_to_string.rs","byte_start":8608082,"byte_end":8608094,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_to_string.rs","byte_start":8608095,"byte_end":8608102,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_to_string.rs","byte_start":8608103,"byte_end":8608110,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_dir.rs","byte_start":8608486,"byte_end":8608496,"line_start":9,"line_end":9,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"pub async fn remove_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes an existing, empty directory.","sig":null,"attributes":[{"value":"/ Removes an existing, empty directory.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_dir.rs","byte_start":8608350,"byte_end":8608391,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_dir.rs","byte_start":8608392,"byte_end":8608395,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir`](std::fs::remove_dir)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_dir.rs","byte_start":8608396,"byte_end":8608472,"line_start":8,"line_end":8,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_dir_all.rs","byte_start":8608910,"byte_end":8608924,"line_start":11,"line_end":11,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"pub async fn remove_dir_all<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory at this path, after removing all its contents. Use carefully!","sig":null,"attributes":[{"value":"/ Removes a directory at this path, after removing all its contents. Use carefully!","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_dir_all.rs","byte_start":8608700,"byte_end":8608785,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_dir_all.rs","byte_start":8608786,"byte_end":8608789,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir_all`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_dir_all.rs","byte_start":8608790,"byte_end":8608854,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_dir_all.rs","byte_start":8608855,"byte_end":8608858,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::remove_dir_all","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_dir_all.rs","byte_start":8608859,"byte_end":8608896,"line_start":10,"line_end":10,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_file.rs","byte_start":8609461,"byte_end":8609472,"line_start":15,"line_end":15,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"pub async fn remove_file<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a file from the filesystem.","sig":null,"attributes":[{"value":"/ Removes a file from the filesystem.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_file.rs","byte_start":8609132,"byte_end":8609171,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_file.rs","byte_start":8609172,"byte_end":8609175,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that there is no guarantee that the file is immediately deleted (e.g.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_file.rs","byte_start":8609176,"byte_end":8609254,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ depending on platform, other open file descriptors may prevent immediate","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_file.rs","byte_start":8609255,"byte_end":8609331,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ removal).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_file.rs","byte_start":8609332,"byte_end":8609345,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_file.rs","byte_start":8609346,"byte_end":8609349,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_file`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_file.rs","byte_start":8609350,"byte_end":8609411,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_file.rs","byte_start":8609412,"byte_end":8609415,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::remove_file","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\remove_file.rs","byte_start":8609416,"byte_end":8609447,"line_start":14,"line_end":14,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":1053},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\rename.rs","byte_start":8609940,"byte_end":8609946,"line_start":12,"line_end":12,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"pub async fn rename<impl AsRef<Path>: AsRef<Path>,\n                    impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                   impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new name, replacing the original file if\n `to` already exists.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new name, replacing the original file if","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\rename.rs","byte_start":8609677,"byte_end":8609754,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ `to` already exists.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\rename.rs","byte_start":8609755,"byte_end":8609779,"line_start":7,"line_end":7,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\rename.rs","byte_start":8609780,"byte_end":8609783,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This will not work if the new name is on a different mount point.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\rename.rs","byte_start":8609784,"byte_end":8609853,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\rename.rs","byte_start":8609854,"byte_end":8609857,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::rename`](std::fs::rename)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\rename.rs","byte_start":8609858,"byte_end":8609926,"line_start":11,"line_end":11,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1065},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\set_permissions.rs","byte_start":8610422,"byte_end":8610437,"line_start":12,"line_end":12,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"pub async fn set_permissions<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                            Permissions)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions found on a file or a directory.","sig":null,"attributes":[{"value":"/ Changes the permissions found on a file or a directory.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\set_permissions.rs","byte_start":8610236,"byte_end":8610295,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\set_permissions.rs","byte_start":8610296,"byte_end":8610299,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::set_permissions`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\set_permissions.rs","byte_start":8610300,"byte_end":8610365,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\set_permissions.rs","byte_start":8610366,"byte_end":8610369,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::set_permissions","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\set_permissions.rs","byte_start":8610370,"byte_end":8610408,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_metadata.rs","byte_start":8610866,"byte_end":8610882,"line_start":12,"line_end":12,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"pub async fn symlink_metadata<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Queries the file system metadata for a path.","sig":null,"attributes":[{"value":"/ Queries the file system metadata for a path.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_metadata.rs","byte_start":8610689,"byte_end":8610737,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_metadata.rs","byte_start":8610738,"byte_end":8610741,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::symlink_metadata`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_metadata.rs","byte_start":8610742,"byte_end":8610808,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_metadata.rs","byte_start":8610809,"byte_end":8610812,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::symlink_metadata","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_metadata.rs","byte_start":8610813,"byte_end":8610852,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\write.rs","byte_start":8611492,"byte_end":8611497,"line_start":22,"line_end":22,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"pub async fn write<impl AsRef<Path>: AsRef<Path>,\n                   impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<Path>,\n                                                  impl AsRef<[u8]>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that will open a file for writing and write the entire\n contents of `contents` to it.","sig":null,"attributes":[{"value":"/ Creates a future that will open a file for writing and write the entire","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\write.rs","byte_start":8611086,"byte_end":8611161,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents of `contents` to it.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\write.rs","byte_start":8611162,"byte_end":8611195,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\write.rs","byte_start":8611196,"byte_end":8611199,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of [`std::fs::write`][std].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\write.rs","byte_start":8611200,"byte_end":8611260,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\write.rs","byte_start":8611261,"byte_end":8611264,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::write","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\write.rs","byte_start":8611265,"byte_end":8611293,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\write.rs","byte_start":8611294,"byte_end":8611297,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\write.rs","byte_start":8611298,"byte_end":8611312,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\write.rs","byte_start":8611313,"byte_end":8611316,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\write.rs","byte_start":8611317,"byte_end":8611330,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\write.rs","byte_start":8611331,"byte_end":8611349,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\write.rs","byte_start":8611350,"byte_end":8611353,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\write.rs","byte_start":8611354,"byte_end":8611399,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/ fs::write(\"foo.txt\", b\"Hello world!\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\write.rs","byte_start":8611400,"byte_end":8611449,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\write.rs","byte_start":8611450,"byte_end":8611462,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\write.rs","byte_start":8611463,"byte_end":8611470,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\write.rs","byte_start":8611471,"byte_end":8611478,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\copy.rs","byte_start":8612258,"byte_end":8612262,"line_start":23,"line_end":23,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"pub async fn copy<impl AsRef<Path>: AsRef<Path>,\n                  impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                 impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents of one file to another. This function will also copy the permission bits\n of the original file to the destination file.\n This function will overwrite the contents of to.","sig":null,"attributes":[{"value":"/ Copies the contents of one file to another. This function will also copy the permission bits","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\copy.rs","byte_start":8611770,"byte_end":8611866,"line_start":4,"line_end":4,"column_start":1,"column_end":97}},{"value":"/ of the original file to the destination file.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\copy.rs","byte_start":8611867,"byte_end":8611916,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/ This function will overwrite the contents of to.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\copy.rs","byte_start":8611917,"byte_end":8611969,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\copy.rs","byte_start":8611970,"byte_end":8611973,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of [`std::fs::copy`][std].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\copy.rs","byte_start":8611974,"byte_end":8612033,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\copy.rs","byte_start":8612034,"byte_end":8612037,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::copy","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\copy.rs","byte_start":8612038,"byte_end":8612065,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\copy.rs","byte_start":8612066,"byte_end":8612069,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\copy.rs","byte_start":8612070,"byte_end":8612084,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\copy.rs","byte_start":8612085,"byte_end":8612088,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\copy.rs","byte_start":8612089,"byte_end":8612102,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\copy.rs","byte_start":8612103,"byte_end":8612121,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\copy.rs","byte_start":8612122,"byte_end":8612125,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\copy.rs","byte_start":8612126,"byte_end":8612171,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/ fs::copy(\"foo.txt\", \"bar.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\copy.rs","byte_start":8612172,"byte_end":8612214,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\copy.rs","byte_start":8612215,"byte_end":8612227,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\copy.rs","byte_start":8612228,"byte_end":8612235,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\copy.rs","byte_start":8612236,"byte_end":8612243,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_dir.rs","byte_start":8612816,"byte_end":8612827,"line_start":14,"line_end":14,"column_start":14,"column_end":25},"name":"symlink_dir","qualname":"::fs::symlink_dir::symlink_dir","value":"pub async fn symlink_dir<impl AsRef<Path>: AsRef<Path>,\n                         impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                        impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory symlink on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new directory symlink on the filesystem.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_dir.rs","byte_start":8612531,"byte_end":8612585,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_dir.rs","byte_start":8612586,"byte_end":8612589,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a directory symbolic link pointing to the `src`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_dir.rs","byte_start":8612590,"byte_end":8612664,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ path.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_dir.rs","byte_start":8612665,"byte_end":8612674,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_dir.rs","byte_start":8612675,"byte_end":8612678,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::os::windows::fs::symlink_dir`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_dir.rs","byte_start":8612679,"byte_end":8612753,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_dir.rs","byte_start":8612754,"byte_end":8612757,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [std]: std::os::windows::fs::symlink_dir","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_dir.rs","byte_start":8612758,"byte_end":8612802,"line_start":13,"line_end":13,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_file.rs","byte_start":8613392,"byte_end":8613404,"line_start":14,"line_end":14,"column_start":14,"column_end":26},"name":"symlink_file","qualname":"::fs::symlink_file::symlink_file","value":"pub async fn symlink_file<impl AsRef<Path>: AsRef<Path>,\n                          impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                         impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new file symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new file symbolic link on the filesystem.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_file.rs","byte_start":8613109,"byte_end":8613164,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_file.rs","byte_start":8613165,"byte_end":8613168,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a file symbolic link pointing to the `src`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_file.rs","byte_start":8613169,"byte_end":8613238,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ path.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_file.rs","byte_start":8613239,"byte_end":8613248,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_file.rs","byte_start":8613249,"byte_end":8613252,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::os::windows::fs::symlink_file`][std]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_file.rs","byte_start":8613253,"byte_end":8613328,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_file.rs","byte_start":8613329,"byte_end":8613332,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [std]: std::os::windows::fs::symlink_file","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\symlink_file.rs","byte_start":8613333,"byte_end":8613378,"line_start":13,"line_end":13,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":32426,"byte_end":32432,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":1196},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":32391,"byte_end":32421,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":32486,"byte_end":32490,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":1196},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":32443,"byte_end":32481,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1204},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":32652,"byte_end":32656,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":1196},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":32509,"byte_end":32575,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":32580,"byte_end":32647,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":1196},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":32362,"byte_end":32371,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1201},{"krate":0,"index":1204}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":32298,"byte_end":32335,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":32819,"byte_end":32829,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":32774,"byte_end":32811,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":33232,"byte_end":33242,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":32948,"byte_end":33033,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":33038,"byte_end":33109,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":33114,"byte_end":33187,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":33192,"byte_end":33220,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":33620,"byte_end":33631,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":33499,"byte_end":33566,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":33571,"byte_end":33594,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":33599,"byte_end":33608,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\poll_fn.rs","byte_start":34865,"byte_end":34871,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":108}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\poll_fn.rs","byte_start":34813,"byte_end":34853,"line_start":10,"line_end":10,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\poll_fn.rs","byte_start":35001,"byte_end":35008,"line_start":18,"line_end":18,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\poll_fn.rs","byte_start":34922,"byte_end":34993,"line_start":17,"line_end":17,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\ready.rs","byte_start":8613932,"byte_end":8613937,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\ready.rs","byte_start":8613703,"byte_end":8613744,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\ready.rs","byte_start":8613745,"byte_end":8613748,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\ready.rs","byte_start":8613749,"byte_end":8613826,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\ready.rs","byte_start":8613895,"byte_end":8613920,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":124},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":1360},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1580},{"krate":0,"index":1606},{"krate":0,"index":1767},{"krate":0,"index":1785},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1856},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":3184}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":35522,"byte_end":35599,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":35600,"byte_end":35603,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":35604,"byte_end":35675,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":35676,"byte_end":35756,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":35757,"byte_end":35831,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":35832,"byte_end":35835,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":35836,"byte_end":35866,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":35867,"byte_end":35870,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":35871,"byte_end":35951,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":35952,"byte_end":36029,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":36030,"byte_end":36107,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":36108,"byte_end":36188,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":36189,"byte_end":36267,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":36268,"byte_end":36333,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":36334,"byte_end":36337,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":36338,"byte_end":36410,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":36411,"byte_end":36478,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":36479,"byte_end":36558,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":36559,"byte_end":36633,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":36634,"byte_end":36708,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":36709,"byte_end":36726,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":36727,"byte_end":36730,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":36731,"byte_end":36795,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":36796,"byte_end":36871,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":36872,"byte_end":36947,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":36948,"byte_end":37025,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37026,"byte_end":37029,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37030,"byte_end":37106,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37107,"byte_end":37182,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37183,"byte_end":37263,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37264,"byte_end":37335,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37336,"byte_end":37405,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37406,"byte_end":37409,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37410,"byte_end":37482,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37483,"byte_end":37563,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37564,"byte_end":37617,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37618,"byte_end":37621,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37622,"byte_end":37635,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37636,"byte_end":37676,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37677,"byte_end":37701,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37702,"byte_end":37705,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37706,"byte_end":37724,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37725,"byte_end":37764,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37765,"byte_end":37814,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37815,"byte_end":37848,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37849,"byte_end":37852,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37853,"byte_end":37883,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37884,"byte_end":37927,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37928,"byte_end":37931,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37932,"byte_end":37982,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37983,"byte_end":37997,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":37998,"byte_end":38003,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38004,"byte_end":38011,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38012,"byte_end":38015,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38016,"byte_end":38045,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38046,"byte_end":38086,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38087,"byte_end":38123,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38124,"byte_end":38165,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38166,"byte_end":38169,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38170,"byte_end":38205,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38206,"byte_end":38209,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38210,"byte_end":38291,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38292,"byte_end":38366,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38367,"byte_end":38445,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38446,"byte_end":38490,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38491,"byte_end":38494,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38495,"byte_end":38565,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38566,"byte_end":38644,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38645,"byte_end":38723,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38724,"byte_end":38801,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38802,"byte_end":38805,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38806,"byte_end":38881,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38882,"byte_end":38920,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38921,"byte_end":38924,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38925,"byte_end":38938,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38939,"byte_end":38993,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":38994,"byte_end":39018,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39019,"byte_end":39022,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39023,"byte_end":39041,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39042,"byte_end":39081,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39082,"byte_end":39127,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39128,"byte_end":39171,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39172,"byte_end":39211,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39212,"byte_end":39215,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39216,"byte_end":39250,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39251,"byte_end":39296,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39297,"byte_end":39300,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39301,"byte_end":39332,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39333,"byte_end":39347,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39348,"byte_end":39353,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39354,"byte_end":39361,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39362,"byte_end":39365,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39366,"byte_end":39447,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39448,"byte_end":39526,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39527,"byte_end":39589,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39590,"byte_end":39593,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39594,"byte_end":39607,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39608,"byte_end":39660,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39661,"byte_end":39685,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39686,"byte_end":39689,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39690,"byte_end":39708,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39709,"byte_end":39748,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39749,"byte_end":39796,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39797,"byte_end":39806,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39807,"byte_end":39854,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39855,"byte_end":39858,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39859,"byte_end":39901,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39902,"byte_end":39943,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39944,"byte_end":39947,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":39948,"byte_end":40008,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40009,"byte_end":40043,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40044,"byte_end":40047,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40048,"byte_end":40138,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40139,"byte_end":40142,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40143,"byte_end":40157,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40158,"byte_end":40163,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40164,"byte_end":40171,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40172,"byte_end":40175,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40176,"byte_end":40221,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40222,"byte_end":40264,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40265,"byte_end":40310,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40311,"byte_end":40350,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40351,"byte_end":40390,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40391,"byte_end":40394,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40395,"byte_end":40439,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40440,"byte_end":40443,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40444,"byte_end":40526,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40527,"byte_end":40606,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40607,"byte_end":40681,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40682,"byte_end":40755,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40756,"byte_end":40816,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40817,"byte_end":40820,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40821,"byte_end":40862,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40863,"byte_end":40866,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40867,"byte_end":40935,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":40936,"byte_end":41005,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":41006,"byte_end":41072,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":41073,"byte_end":41136,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":41137,"byte_end":41204,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":41205,"byte_end":41274,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":41275,"byte_end":41345,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":41346,"byte_end":41424,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":41425,"byte_end":41450,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":41451,"byte_end":41454,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":41455,"byte_end":41531,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":41532,"byte_end":41535,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":41536,"byte_end":41567,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":41568,"byte_end":41571,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":41572,"byte_end":41652,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":41653,"byte_end":41729,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":41730,"byte_end":41777,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":41778,"byte_end":41781,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":41782,"byte_end":41855,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":41856,"byte_end":41932,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":41933,"byte_end":42009,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42010,"byte_end":42013,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42014,"byte_end":42035,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42036,"byte_end":42059,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42060,"byte_end":42082,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42083,"byte_end":42086,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42087,"byte_end":42109,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42110,"byte_end":42113,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42114,"byte_end":42190,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42191,"byte_end":42238,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42239,"byte_end":42242,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42243,"byte_end":42277,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42278,"byte_end":42314,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42315,"byte_end":42355,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42356,"byte_end":42398,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42399,"byte_end":42472,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Encoder.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42473,"byte_end":42556,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Decoder.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42557,"byte_end":42640,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42641,"byte_end":42668,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42669,"byte_end":42702,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42703,"byte_end":42730,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42731,"byte_end":42758,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42759,"byte_end":42790,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42791,"byte_end":42861,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.3/futures/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42862,"byte_end":42938,"line_start":181,"line_end":181,"column_start":1,"column_end":77}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\mod.rs","byte_start":42939,"byte_end":42968,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45646,"byte_end":45658,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":44969,"byte_end":45000,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45001,"byte_end":45004,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45005,"byte_end":45077,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45078,"byte_end":45156,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45157,"byte_end":45243,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45244,"byte_end":45321,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45322,"byte_end":45333,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45334,"byte_end":45337,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45338,"byte_end":45406,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45407,"byte_end":45431,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45432,"byte_end":45435,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45436,"byte_end":45478,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45479,"byte_end":45529,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45530,"byte_end":45583,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45584,"byte_end":45635,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":46756,"byte_end":46769,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45676,"byte_end":45761,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45766,"byte_end":45807,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45812,"byte_end":45815,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45820,"byte_end":45867,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45872,"byte_end":45875,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45880,"byte_end":45939,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45944,"byte_end":46002,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":46007,"byte_end":46088,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":46093,"byte_end":46119,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":46124,"byte_end":46127,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":46132,"byte_end":46203,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":46208,"byte_end":46270,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":46275,"byte_end":46346,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":46351,"byte_end":46432,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":46437,"byte_end":46513,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":46518,"byte_end":46569,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":46574,"byte_end":46577,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":46582,"byte_end":46653,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":46658,"byte_end":46661,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":46666,"byte_end":46705,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":46710,"byte_end":46748,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":47672,"byte_end":47679,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":46847,"byte_end":46921,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":46926,"byte_end":46993,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":46998,"byte_end":47001,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":47006,"byte_end":47077,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":47082,"byte_end":47151,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":47156,"byte_end":47230,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":47235,"byte_end":47312,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":47317,"byte_end":47387,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":47392,"byte_end":47445,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":47450,"byte_end":47453,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":47458,"byte_end":47530,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":47535,"byte_end":47557,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":47562,"byte_end":47565,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":47570,"byte_end":47609,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":47614,"byte_end":47664,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50993,"byte_end":51002,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":161}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":49306,"byte_end":49336,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":49337,"byte_end":49340,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":49341,"byte_end":49420,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":49421,"byte_end":49495,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":49496,"byte_end":49575,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":49576,"byte_end":49653,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":49654,"byte_end":49665,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":49666,"byte_end":49669,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":49670,"byte_end":49747,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":49748,"byte_end":49766,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":49767,"byte_end":49770,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(()))` means that data was immediately read and placed into","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":49771,"byte_end":49851,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   the output buffer. The amount of data read can be determined by the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":49852,"byte_end":49925,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/   increase in the length of the slice returned by `ReadBuf::filled`. If the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":49926,"byte_end":50005,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   difference is 0, EOF has been reached.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50006,"byte_end":50050,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50051,"byte_end":50054,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50055,"byte_end":50120,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50121,"byte_end":50201,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50202,"byte_end":50281,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50282,"byte_end":50355,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50356,"byte_end":50429,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50430,"byte_end":50451,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50452,"byte_end":50455,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50456,"byte_end":50540,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50541,"byte_end":50565,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50566,"byte_end":50569,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50570,"byte_end":50643,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50644,"byte_end":50723,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50724,"byte_end":50727,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50728,"byte_end":50793,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50794,"byte_end":50815,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50816,"byte_end":50819,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50820,"byte_end":50859,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50860,"byte_end":50896,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50897,"byte_end":50936,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":50937,"byte_end":50982,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":51492,"byte_end":51501,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":51009,"byte_end":51062,"line_start":44,"line_end":44,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":51067,"byte_end":51070,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))` and fills `buf` with data","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":51075,"byte_end":51146,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ read. If no data was read (`buf.filled().is_empty()`) it implies that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":51151,"byte_end":51224,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":51229,"byte_end":51254,"line_start":48,"line_end":48,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":51259,"byte_end":51262,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns `Poll::Pending`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":51267,"byte_end":51342,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ and arranges for the current task (via `cx.waker()`) to receive a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":51347,"byte_end":51416,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ notification when the object becomes readable or is closed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":51421,"byte_end":51484,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54097,"byte_end":54106,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":53615,"byte_end":53645,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":53646,"byte_end":53649,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":53650,"byte_end":53724,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":53725,"byte_end":53795,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":53796,"byte_end":53865,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":53866,"byte_end":53869,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":53870,"byte_end":53935,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":53936,"byte_end":53957,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":53958,"byte_end":53961,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":53962,"byte_end":53998,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":53999,"byte_end":54040,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54041,"byte_end":54086,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54748,"byte_end":54758,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, SeekFrom) -> io::Result<()>","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54113,"byte_end":54170,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54175,"byte_end":54178,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54183,"byte_end":54256,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54261,"byte_end":54287,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54292,"byte_end":54295,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54300,"byte_end":54375,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54380,"byte_end":54436,"line_start":25,"line_end":25,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54441,"byte_end":54444,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54449,"byte_end":54461,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54466,"byte_end":54469,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This function can return [`io::ErrorKind::Other`] in case there is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54474,"byte_end":54544,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ another seek in progress. To avoid this, it is advisable that any call","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54549,"byte_end":54623,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ to `start_seek` is preceded by a call to `poll_complete` to ensure all","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54628,"byte_end":54702,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pending seeks have completed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54707,"byte_end":54740,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":55281,"byte_end":55294,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54825,"byte_end":54868,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54873,"byte_end":54876,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54881,"byte_end":54930,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":54935,"byte_end":55005,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`]. Repeatedly","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":55010,"byte_end":55082,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ calling this function without calling `start_seek` might return the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":55087,"byte_end":55158,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ same result.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":55163,"byte_end":55179,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":55184,"byte_end":55187,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":55192,"byte_end":55204,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":55209,"byte_end":55212,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":55217,"byte_end":55273,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58585,"byte_end":58595,"line_start":45,"line_end":45,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":218}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":56722,"byte_end":56754,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":56755,"byte_end":56758,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":56759,"byte_end":56841,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":56842,"byte_end":56917,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":56918,"byte_end":56985,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":56986,"byte_end":56989,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":56990,"byte_end":57070,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57071,"byte_end":57089,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57090,"byte_end":57093,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57094,"byte_end":57165,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57166,"byte_end":57180,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57181,"byte_end":57184,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57185,"byte_end":57253,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57254,"byte_end":57334,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57335,"byte_end":57414,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57415,"byte_end":57488,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57489,"byte_end":57562,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57563,"byte_end":57584,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57585,"byte_end":57588,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57589,"byte_end":57673,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57674,"byte_end":57698,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57699,"byte_end":57702,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57703,"byte_end":57785,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57786,"byte_end":57869,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57870,"byte_end":57873,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57874,"byte_end":57958,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":57959,"byte_end":58043,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58044,"byte_end":58122,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58123,"byte_end":58202,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58203,"byte_end":58264,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58265,"byte_end":58268,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58269,"byte_end":58335,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58336,"byte_end":58358,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58359,"byte_end":58362,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58363,"byte_end":58401,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58402,"byte_end":58446,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58447,"byte_end":58486,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58487,"byte_end":58526,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58527,"byte_end":58574,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58979,"byte_end":58989,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58602,"byte_end":58656,"line_start":46,"line_end":46,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58661,"byte_end":58664,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58669,"byte_end":58730,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58735,"byte_end":58738,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58743,"byte_end":58805,"line_start":50,"line_end":50,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58810,"byte_end":58868,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58873,"byte_end":58940,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":58945,"byte_end":58971,"line_start":53,"line_end":53,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":59530,"byte_end":59540,"line_start":69,"line_end":69,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":59117,"byte_end":59188,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":59193,"byte_end":59215,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":59220,"byte_end":59223,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":59228,"byte_end":59274,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":59279,"byte_end":59282,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":59287,"byte_end":59351,"line_start":65,"line_end":65,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":59356,"byte_end":59414,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":59419,"byte_end":59487,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":59492,"byte_end":59522,"line_start":68,"line_end":68,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62826,"byte_end":62839,"line_start":129,"line_end":129,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":59622,"byte_end":59696,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":59701,"byte_end":59749,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":59754,"byte_end":59757,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":59762,"byte_end":59833,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":59838,"byte_end":59914,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":59919,"byte_end":59995,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":60000,"byte_end":60075,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":60080,"byte_end":60151,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":60156,"byte_end":60232,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":60237,"byte_end":60265,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":60270,"byte_end":60273,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":60278,"byte_end":60339,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":60344,"byte_end":60415,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":60420,"byte_end":60492,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":60497,"byte_end":60572,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":60577,"byte_end":60650,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":60655,"byte_end":60730,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":60735,"byte_end":60807,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":60812,"byte_end":60823,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":60828,"byte_end":60831,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":60836,"byte_end":60910,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":60915,"byte_end":60987,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":60992,"byte_end":61061,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":61066,"byte_end":61134,"line_start":94,"line_end":94,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":61139,"byte_end":61200,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":61205,"byte_end":61208,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":61213,"byte_end":61231,"line_start":97,"line_end":97,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":61236,"byte_end":61239,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":61244,"byte_end":61314,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":61319,"byte_end":61322,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":61327,"byte_end":61390,"line_start":101,"line_end":101,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":61395,"byte_end":61464,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":61469,"byte_end":61544,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":61549,"byte_end":61622,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":61627,"byte_end":61678,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":61683,"byte_end":61686,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":61691,"byte_end":61761,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":61766,"byte_end":61841,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":61846,"byte_end":61918,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":61923,"byte_end":61993,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":61998,"byte_end":62073,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62078,"byte_end":62081,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62086,"byte_end":62167,"line_start":113,"line_end":113,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62172,"byte_end":62247,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62252,"byte_end":62319,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62324,"byte_end":62327,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62332,"byte_end":62344,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62349,"byte_end":62352,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62357,"byte_end":62428,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62433,"byte_end":62499,"line_start":120,"line_end":120,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62504,"byte_end":62578,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62583,"byte_end":62647,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62652,"byte_end":62691,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62696,"byte_end":62699,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62704,"byte_end":62716,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62721,"byte_end":62724,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62729,"byte_end":62804,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62809,"byte_end":62818,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63952,"byte_end":63971,"line_start":154,"line_end":154,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"::io::async_write::AsyncWrite::poll_write_vectored","value":"pub fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Like [`poll_write`], except that it writes from a slice of buffers.","sig":null,"attributes":[{"value":"/ Like [`poll_write`], except that it writes from a slice of buffers.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62921,"byte_end":62992,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":62997,"byte_end":63000,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Data is copied from each buffer in order, with the final buffer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63005,"byte_end":63072,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ read from possibly being only partially consumed. This method must","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63077,"byte_end":63147,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/ behave as a call to [`write`] with the buffers concatenated would.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63152,"byte_end":63222,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63227,"byte_end":63230,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ The default implementation calls [`poll_write`] with either the first nonempty","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63235,"byte_end":63317,"line_start":137,"line_end":137,"column_start":5,"column_end":87}},{"value":"/ buffer provided, or an empty one if none exists.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63322,"byte_end":63374,"line_start":138,"line_end":138,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63379,"byte_end":63382,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63387,"byte_end":63448,"line_start":140,"line_end":140,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63453,"byte_end":63456,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63461,"byte_end":63523,"line_start":142,"line_end":142,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63528,"byte_end":63586,"line_start":143,"line_end":143,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63591,"byte_end":63658,"line_start":144,"line_end":144,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63663,"byte_end":63689,"line_start":145,"line_end":145,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63694,"byte_end":63697,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63702,"byte_end":63712,"line_start":147,"line_end":147,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63717,"byte_end":63720,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This should be implemented as a single \"atomic\" write action. If any","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63725,"byte_end":63797,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ data has been partially written, it is wrong to return an error or","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63802,"byte_end":63872,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"/ pending.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63877,"byte_end":63889,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63894,"byte_end":63897,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":63902,"byte_end":63944,"line_start":153,"line_end":153,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":64739,"byte_end":64756,"line_start":176,"line_end":176,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"::io::async_write::AsyncWrite::is_write_vectored","value":"pub fn is_write_vectored(&Self) -> bool","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Determines if this writer has an efficient [`poll_write_vectored`]\n implementation.","sig":null,"attributes":[{"value":"/ Determines if this writer has an efficient [`poll_write_vectored`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":64269,"byte_end":64339,"line_start":166,"line_end":166,"column_start":5,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":64344,"byte_end":64363,"line_start":167,"line_end":167,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":64368,"byte_end":64371,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ If a writer does not override the default [`poll_write_vectored`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":64376,"byte_end":64445,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ implementation, code using it may want to avoid the method all together","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":64450,"byte_end":64525,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ and coalesce writes into a single buffer for higher performance.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":64530,"byte_end":64598,"line_start":171,"line_end":171,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":64603,"byte_end":64606,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `false`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":64611,"byte_end":64658,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":64663,"byte_end":64666,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_vectored`]: AsyncWrite::poll_write_vectored","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":64671,"byte_end":64731,"line_start":175,"line_end":175,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71996,"byte_end":72003,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"ReadBuf","qualname":"::io::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271}],"decl_id":null,"docs":" A wrapper around a byte buffer that is incrementally filled and initialized.","sig":null,"attributes":[{"value":"/ A wrapper around a byte buffer that is incrementally filled and initialized.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71048,"byte_end":71128,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71129,"byte_end":71132,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a sort of \"double cursor\". It tracks three regions in the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71133,"byte_end":71207,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ buffer: a region at the beginning of the buffer that has been logically","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71208,"byte_end":71283,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ filled with data, a region that has been initialized at some point but not","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71284,"byte_end":71362,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ yet logically filled, and a region at the end that may be uninitialized.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71363,"byte_end":71439,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ The filled region is guaranteed to be a subset of the initialized region.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71440,"byte_end":71517,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71518,"byte_end":71521,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ In summary, the contents of the buffer can be visualized as:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71522,"byte_end":71586,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71587,"byte_end":71590,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```not_rust","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71591,"byte_end":71606,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/ [             capacity              ]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71607,"byte_end":71648,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ [ filled |         unfilled         ]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71649,"byte_end":71690,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ [    initialized    | uninitialized ]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71691,"byte_end":71732,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71733,"byte_end":71740,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71741,"byte_end":71744,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ It is undefined behavior to de-initialize any bytes from the uninitialized","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71745,"byte_end":71823,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ region, since it is merely unknown whether this region is uninitialized or","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71824,"byte_end":71902,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ not, and if part of it turns out to be initialized, it must stay initialized.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":71903,"byte_end":71984,"line_start":26,"line_end":26,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":72205,"byte_end":72208,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuf>::new","value":"pub fn new(&'a mut [u8]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully initialized buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully initialized buffer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":72119,"byte_end":72179,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":72184,"byte_end":72193,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":72654,"byte_end":72660,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ReadBuf>::uninit","value":"pub fn uninit(&'a mut [MaybeUninit<u8>]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully uninitialized buffer.","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully uninitialized buffer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":72473,"byte_end":72535,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":72540,"byte_end":72543,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Use `assume_init` if part of the buffer is known to be already inintialized.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":72548,"byte_end":72628,"line_start":48,"line_end":48,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":72633,"byte_end":72642,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":72888,"byte_end":72896,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ReadBuf>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total capacity of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns the total capacity of the buffer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":72817,"byte_end":72862,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":72867,"byte_end":72876,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":73042,"byte_end":73048,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"filled","qualname":"<ReadBuf>::filled","value":"pub fn filled(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the filled portion of the buffer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":72949,"byte_end":73016,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":73021,"byte_end":73030,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":73502,"byte_end":73512,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"filled_mut","qualname":"<ReadBuf>::filled_mut","value":"pub fn filled_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the filled portion of the buffer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":73408,"byte_end":73476,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":73481,"byte_end":73490,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":73990,"byte_end":73994,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"take","qualname":"<ReadBuf>::take","value":"pub fn take(&mut Self, usize) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ReadBuf` comprised of the unfilled section up to `n`.\n","sig":null,"attributes":[{"value":"/ Returns a new `ReadBuf` comprised of the unfilled section up to `n`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":73892,"byte_end":73964,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":73969,"byte_end":73978,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":74400,"byte_end":74411,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"initialized","qualname":"<ReadBuf>::initialized","value":"pub fn initialized(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the initialized portion of the buffer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":74252,"byte_end":74324,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":74329,"byte_end":74332,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":74337,"byte_end":74374,"line_start":94,"line_end":94,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":74379,"byte_end":74388,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":74923,"byte_end":74938,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"initialized_mut","qualname":"<ReadBuf>::initialized_mut","value":"pub fn initialized_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the initialized portion of the buffer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":74774,"byte_end":74847,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":74852,"byte_end":74855,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":74860,"byte_end":74897,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":74902,"byte_end":74911,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":75699,"byte_end":75711,"line_start":124,"line_end":124,"column_start":19,"column_end":31},"name":"unfilled_mut","qualname":"<ReadBuf>::unfilled_mut","value":"pub unsafe fn unfilled_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":75321,"byte_end":75427,"line_start":116,"line_end":116,"column_start":5,"column_end":111}},{"value":"/ initialized.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":75432,"byte_end":75448,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":75453,"byte_end":75456,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":75461,"byte_end":75473,"line_start":119,"line_end":119,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":75478,"byte_end":75481,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":75486,"byte_end":75582,"line_start":121,"line_end":121,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":75587,"byte_end":75666,"line_start":122,"line_end":122,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":75671,"byte_end":75680,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":76073,"byte_end":76092,"line_start":133,"line_end":133,"column_start":12,"column_end":31},"name":"initialize_unfilled","qualname":"<ReadBuf>::initialize_unfilled","value":"pub fn initialize_unfilled(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":75799,"byte_end":75900,"line_start":128,"line_end":128,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":75905,"byte_end":75908,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Since `ReadBuf` tracks the region of the buffer that has been initialized, this is effectively \"free\" after","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":75913,"byte_end":76024,"line_start":130,"line_end":130,"column_start":5,"column_end":116}},{"value":"/ the first use.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":76029,"byte_end":76047,"line_start":131,"line_end":131,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":76052,"byte_end":76061,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":76430,"byte_end":76452,"line_start":144,"line_end":144,"column_start":12,"column_end":34},"name":"initialize_unfilled_to","qualname":"<ReadBuf>::initialize_unfilled_to","value":"pub fn initialize_unfilled_to(&mut Self, usize) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is\n fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":76184,"byte_end":76289,"line_start":137,"line_end":137,"column_start":5,"column_end":110}},{"value":"/ fully initialized.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":76294,"byte_end":76316,"line_start":138,"line_end":138,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":76321,"byte_end":76324,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":76329,"byte_end":76341,"line_start":140,"line_end":140,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":76346,"byte_end":76349,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `n`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":76354,"byte_end":76404,"line_start":142,"line_end":142,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":76409,"byte_end":76418,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":77297,"byte_end":77306,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"remaining","qualname":"<ReadBuf>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes at the end of the slice that have not yet been filled.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes at the end of the slice that have not yet been filled.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":77185,"byte_end":77271,"line_start":165,"line_end":165,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":77276,"byte_end":77285,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":77573,"byte_end":77578,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"clear","qualname":"<ReadBuf>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, resetting the filled region to empty.","sig":null,"attributes":[{"value":"/ Clears the buffer, resetting the filled region to empty.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":77374,"byte_end":77434,"line_start":171,"line_end":171,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":77439,"byte_end":77442,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed, and the contents of the buffer are not modified.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":77447,"byte_end":77547,"line_start":173,"line_end":173,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":77552,"byte_end":77561,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":77907,"byte_end":77914,"line_start":187,"line_end":187,"column_start":12,"column_end":19},"name":"advance","qualname":"<ReadBuf>::advance","value":"pub fn advance(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Advances the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Advances the size of the filled region of the buffer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":77628,"byte_end":77685,"line_start":179,"line_end":179,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":77690,"byte_end":77693,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":77698,"byte_end":77749,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":77754,"byte_end":77757,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":77762,"byte_end":77774,"line_start":183,"line_end":183,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":77779,"byte_end":77782,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":77787,"byte_end":77881,"line_start":185,"line_end":185,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":77886,"byte_end":77895,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":78524,"byte_end":78534,"line_start":203,"line_end":203,"column_start":12,"column_end":22},"name":"set_filled","qualname":"<ReadBuf>::set_filled","value":"pub fn set_filled(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Sets the size of the filled region of the buffer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":78051,"byte_end":78104,"line_start":192,"line_end":192,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":78109,"byte_end":78112,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":78117,"byte_end":78168,"line_start":194,"line_end":194,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":78173,"byte_end":78176,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Note that this can be used to *shrink* the filled region of the buffer in addition to growing it (for","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":78181,"byte_end":78286,"line_start":196,"line_end":196,"column_start":5,"column_end":110}},{"value":"/ example, by a `AsyncRead` implementation that compresses data in-place).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":78291,"byte_end":78367,"line_start":197,"line_end":197,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":78372,"byte_end":78375,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":78380,"byte_end":78392,"line_start":199,"line_end":199,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":78397,"byte_end":78400,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the intialized region.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":78405,"byte_end":78498,"line_start":201,"line_end":201,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":78503,"byte_end":78512,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":79138,"byte_end":79149,"line_start":220,"line_end":220,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ReadBuf>::assume_init","value":"pub unsafe fn assume_init(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Asserts that the first `n` unfilled bytes of the buffer are initialized.","sig":null,"attributes":[{"value":"/ Asserts that the first `n` unfilled bytes of the buffer are initialized.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":78718,"byte_end":78794,"line_start":211,"line_end":211,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":78799,"byte_end":78802,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ `ReadBuf` assumes that bytes are never de-initialized, so this method does nothing when called with fewer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":78807,"byte_end":78916,"line_start":213,"line_end":213,"column_start":5,"column_end":114}},{"value":"/ bytes than are already known to be initialized.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":78921,"byte_end":78972,"line_start":214,"line_end":214,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":78977,"byte_end":78980,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":78985,"byte_end":78997,"line_start":216,"line_end":216,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":79002,"byte_end":79005,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `n` unfilled bytes of the buffer have already been initialized.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":79010,"byte_end":79105,"line_start":218,"line_end":218,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":79110,"byte_end":79119,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":79529,"byte_end":79538,"line_start":233,"line_end":233,"column_start":12,"column_end":21},"name":"put_slice","qualname":"<ReadBuf>::put_slice","value":"pub fn put_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends data to the buffer, advancing the written position and possibly also the initialized position.","sig":null,"attributes":[{"value":"/ Appends data to the buffer, advancing the written position and possibly also the initialized position.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":79301,"byte_end":79407,"line_start":227,"line_end":227,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":79412,"byte_end":79415,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":79420,"byte_end":79432,"line_start":229,"line_end":229,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":79437,"byte_end":79440,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `buf.len()`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":79445,"byte_end":79503,"line_start":231,"line_end":231,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":79508,"byte_end":79517,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1607},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8634782,"byte_end":8634790,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"Interest","qualname":"::io::driver::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Readiness event interest","sig":null,"attributes":[{"value":"/ Readiness event interest","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8634538,"byte_end":8634566,"line_start":8,"line_end":8,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8634567,"byte_end":8634570,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Specifies the readiness events the caller is interested in when awaiting on","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8634571,"byte_end":8634650,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ I/O resource readiness states.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8634651,"byte_end":8634685,"line_start":11,"line_end":11,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":1366},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8634942,"byte_end":8634950,"line_start":20,"line_end":20,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" Interest in all readable events.","sig":null,"attributes":[{"value":"/ Interest in all readable events.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8634828,"byte_end":8634864,"line_start":17,"line_end":17,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8634869,"byte_end":8634872,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Readable interest includes read-closed events.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8634877,"byte_end":8634927,"line_start":19,"line_end":19,"column_start":5,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":1367},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635117,"byte_end":8635125,"line_start":25,"line_end":25,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" Interest in all writable events","sig":null,"attributes":[{"value":"/ Interest in all writable events","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635003,"byte_end":8635038,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635043,"byte_end":8635046,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Writable interest includes write-closed events.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635051,"byte_end":8635102,"line_start":24,"line_end":24,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635561,"byte_end":8635572,"line_start":40,"line_end":40,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"pub const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable interest.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635178,"byte_end":8635235,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635240,"byte_end":8635243,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635248,"byte_end":8635262,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635267,"byte_end":8635270,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635275,"byte_end":8635282,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635287,"byte_end":8635315,"line_start":32,"line_end":32,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635320,"byte_end":8635323,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ assert!(Interest::READABLE.is_readable());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635328,"byte_end":8635374,"line_start":34,"line_end":34,"column_start":5,"column_end":51}},{"value":"/ assert!(!Interest::WRITABLE.is_readable());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635379,"byte_end":8635426,"line_start":35,"line_end":35,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635431,"byte_end":8635434,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635439,"byte_end":8635494,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_readable());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635499,"byte_end":8635531,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635536,"byte_end":8635543,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8636012,"byte_end":8636023,"line_start":57,"line_end":57,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"pub const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable interest.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635629,"byte_end":8635686,"line_start":44,"line_end":44,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635691,"byte_end":8635694,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635699,"byte_end":8635713,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635718,"byte_end":8635721,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635726,"byte_end":8635733,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635738,"byte_end":8635766,"line_start":49,"line_end":49,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635771,"byte_end":8635774,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ assert!(!Interest::READABLE.is_writable());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635779,"byte_end":8635826,"line_start":51,"line_end":51,"column_start":5,"column_end":52}},{"value":"/ assert!(Interest::WRITABLE.is_writable());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635831,"byte_end":8635877,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635882,"byte_end":8635885,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635890,"byte_end":8635945,"line_start":54,"line_end":54,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_writable());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635950,"byte_end":8635982,"line_start":55,"line_end":55,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8635987,"byte_end":8635994,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8636441,"byte_end":8636444,"line_start":74,"line_end":74,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"pub const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interst` values.","sig":null,"attributes":[{"value":"/ Add together two `Interst` values.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8636080,"byte_end":8636118,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8636123,"byte_end":8636126,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function works from a `const` context.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8636131,"byte_end":8636178,"line_start":63,"line_end":63,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8636183,"byte_end":8636186,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8636191,"byte_end":8636205,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8636210,"byte_end":8636213,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8636218,"byte_end":8636225,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8636230,"byte_end":8636258,"line_start":68,"line_end":68,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8636263,"byte_end":8636266,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ const BOTH: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8636271,"byte_end":8636341,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8636346,"byte_end":8636349,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ assert!(BOTH.is_readable());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8636354,"byte_end":8636386,"line_start":72,"line_end":72,"column_start":5,"column_end":37}},{"value":"/ assert!(BOTH.is_writable());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8636391,"byte_end":8636423,"line_start":73,"line_end":73,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1620},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8637822,"byte_end":8637827,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Ready","qualname":"::io::driver::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Describes the readiness state of an I/O resources.","sig":null,"attributes":[{"value":"/ Describes the readiness state of an I/O resources.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8637587,"byte_end":8637641,"line_start":11,"line_end":11,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8637642,"byte_end":8637645,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `Ready` tracks which operation an I/O resource is ready to perform.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8637646,"byte_end":8637717,"line_start":13,"line_end":13,"column_start":1,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":1389},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8637903,"byte_end":8637908,"line_start":20,"line_end":20,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::io::driver::ready::Ready::EMPTY","value":"Ready","parent":{"krate":0,"index":1388},"children":[],"decl_id":null,"docs":" Returns the empty `Ready` set.\n","sig":null,"attributes":[{"value":"/ Returns the empty `Ready` set.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8637854,"byte_end":8637888,"line_start":19,"line_end":19,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":1390},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8638002,"byte_end":8638010,"line_start":23,"line_end":23,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::ready::Ready::READABLE","value":"Ready","parent":{"krate":0,"index":1388},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readable readiness.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8637933,"byte_end":8637987,"line_start":22,"line_end":22,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":1391},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8638111,"byte_end":8638119,"line_start":26,"line_end":26,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::ready::Ready::WRITABLE","value":"Ready","parent":{"krate":0,"index":1388},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing writable readiness.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8638042,"byte_end":8638096,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":1392},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8638223,"byte_end":8638234,"line_start":29,"line_end":29,"column_start":15,"column_end":26},"name":"READ_CLOSED","qualname":"::io::driver::ready::Ready::READ_CLOSED","value":"Ready","parent":{"krate":0,"index":1388},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing read closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing read closed readiness.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8638151,"byte_end":8638208,"line_start":28,"line_end":28,"column_start":5,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8638342,"byte_end":8638354,"line_start":32,"line_end":32,"column_start":15,"column_end":27},"name":"WRITE_CLOSED","qualname":"::io::driver::ready::Ready::WRITE_CLOSED","value":"Ready","parent":{"krate":0,"index":1388},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing write closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing write closed readiness.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8638269,"byte_end":8638327,"line_start":31,"line_end":31,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":1394},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8638469,"byte_end":8638472,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"ALL","qualname":"::io::driver::ready::Ready::ALL","value":"Ready","parent":{"krate":0,"index":1388},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readiness for all operations.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readiness for all operations.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8638390,"byte_end":8638454,"line_start":34,"line_end":34,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639329,"byte_end":8639337,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Ready>::is_empty","value":"pub fn is_empty(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Ready` is the empty set","sig":null,"attributes":[{"value":"/ Returns true if `Ready` is the empty set","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639088,"byte_end":8639132,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639137,"byte_end":8639140,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639145,"byte_end":8639159,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639164,"byte_end":8639167,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639172,"byte_end":8639179,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639184,"byte_end":8639209,"line_start":65,"line_end":65,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639214,"byte_end":8639217,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ assert!(Ready::EMPTY.is_empty());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639222,"byte_end":8639259,"line_start":67,"line_end":67,"column_start":5,"column_end":42}},{"value":"/ assert!(!Ready::READABLE.is_empty());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639264,"byte_end":8639305,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639310,"byte_end":8639317,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639748,"byte_end":8639759,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Ready>::is_readable","value":"pub fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes `readable`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes `readable`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639394,"byte_end":8639445,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639450,"byte_end":8639453,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639458,"byte_end":8639472,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639477,"byte_end":8639480,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639485,"byte_end":8639492,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639497,"byte_end":8639522,"line_start":79,"line_end":79,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639527,"byte_end":8639530,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_readable());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639535,"byte_end":8639576,"line_start":81,"line_end":81,"column_start":5,"column_end":46}},{"value":"/ assert!(Ready::READABLE.is_readable());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639581,"byte_end":8639624,"line_start":82,"line_end":82,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::READ_CLOSED.is_readable());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639629,"byte_end":8639675,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/ assert!(!Ready::WRITABLE.is_readable());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639680,"byte_end":8639724,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639729,"byte_end":8639736,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640216,"byte_end":8640227,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Ready>::is_writable","value":"pub fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes writable `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes writable `readiness`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639851,"byte_end":8639912,"line_start":90,"line_end":90,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639917,"byte_end":8639920,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639925,"byte_end":8639939,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639944,"byte_end":8639947,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639952,"byte_end":8639959,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639964,"byte_end":8639989,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8639994,"byte_end":8639997,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_writable());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640002,"byte_end":8640043,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/ assert!(!Ready::READABLE.is_writable());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640048,"byte_end":8640092,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/ assert!(Ready::WRITABLE.is_writable());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640097,"byte_end":8640140,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_writable());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640145,"byte_end":8640192,"line_start":100,"line_end":100,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640197,"byte_end":8640204,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640648,"byte_end":8640662,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Ready>::is_read_closed","value":"pub fn is_read_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes read-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes read-closed `readiness`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640320,"byte_end":8640384,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640389,"byte_end":8640392,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640397,"byte_end":8640411,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640416,"byte_end":8640419,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640424,"byte_end":8640431,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640436,"byte_end":8640461,"line_start":111,"line_end":111,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640466,"byte_end":8640469,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_read_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640474,"byte_end":8640518,"line_start":113,"line_end":113,"column_start":5,"column_end":49}},{"value":"/ assert!(!Ready::READABLE.is_read_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640523,"byte_end":8640570,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/ assert!(Ready::READ_CLOSED.is_read_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640575,"byte_end":8640624,"line_start":115,"line_end":115,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640629,"byte_end":8640636,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8641065,"byte_end":8641080,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Ready>::is_write_closed","value":"pub fn is_write_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes write-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes write-closed `readiness`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640732,"byte_end":8640797,"line_start":121,"line_end":121,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640802,"byte_end":8640805,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640810,"byte_end":8640824,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640829,"byte_end":8640832,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640837,"byte_end":8640844,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640849,"byte_end":8640874,"line_start":126,"line_end":126,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640879,"byte_end":8640882,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_write_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640887,"byte_end":8640932,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/ assert!(!Ready::WRITABLE.is_write_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640937,"byte_end":8640985,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_write_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8640990,"byte_end":8641041,"line_start":130,"line_end":130,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8641046,"byte_end":8641053,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1842},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stderr.rs","byte_start":8687284,"byte_end":8687290,"line_start":38,"line_end":38,"column_start":16,"column_end":22},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"Stderr {  }","parent":null,"children":[{"krate":0,"index":1843}],"decl_id":null,"docs":" A handle to the standard error stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20562,"byte_end":20588,"line_start":120,"line_end":120,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1841},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stderr.rs","byte_start":8688369,"byte_end":8688375,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"stderr","qualname":"::io::stderr::stderr","value":"pub fn stderr() -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20562,"byte_end":20588,"line_start":120,"line_end":120,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1847},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stdin.rs","byte_start":8690485,"byte_end":8690490,"line_start":29,"line_end":29,"column_start":16,"column_end":21},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"Stdin {  }","parent":null,"children":[{"krate":0,"index":1848}],"decl_id":null,"docs":" A handle to the standard input stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20562,"byte_end":20588,"line_start":120,"line_end":120,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1846},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stdin.rs","byte_start":8691147,"byte_end":8691152,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"stdin","qualname":"::io::stdin::stdin","value":"pub fn stdin() -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20562,"byte_end":20588,"line_start":120,"line_end":120,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1852},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stdout.rs","byte_start":8693019,"byte_end":8693025,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"Stdout {  }","parent":null,"children":[{"krate":0,"index":1853}],"decl_id":null,"docs":" A handle to the standard output stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20562,"byte_end":20588,"line_start":120,"line_end":120,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1851},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stdout.rs","byte_start":8694093,"byte_end":8694099,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"stdout","qualname":"::io::stdout::stdout","value":"pub fn stdout() -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20562,"byte_end":20588,"line_start":120,"line_end":120,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1963},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8695756,"byte_end":8695764,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1965}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20765,"byte_end":20792,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1966},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8695893,"byte_end":8695902,"line_start":25,"line_end":25,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1968}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20765,"byte_end":20792,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1969},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8696216,"byte_end":8696221,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20765,"byte_end":20792,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8696847,"byte_end":8696857,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8696744,"byte_end":8696819,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8696824,"byte_end":8696835,"line_start":64,"line_end":64,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8697264,"byte_end":8697271,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8696940,"byte_end":8696989,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8696994,"byte_end":8696997,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8697002,"byte_end":8697014,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8697019,"byte_end":8697022,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8697027,"byte_end":8697101,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8697106,"byte_end":8697156,"line_start":74,"line_end":74,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8697161,"byte_end":8697225,"line_start":75,"line_end":75,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8697230,"byte_end":8697252,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1887},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8697772,"byte_end":8697782,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8697670,"byte_end":8697744,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8697749,"byte_end":8697760,"line_start":94,"line_end":94,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":11038},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\seek.rs","byte_start":8700588,"byte_end":8700592,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":11041},{"krate":0,"index":11042},{"krate":0,"index":11043}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2725},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8703816,"byte_end":8703831,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2726},{"krate":0,"index":2728},{"krate":0,"index":2730},{"krate":0,"index":2731}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20765,"byte_end":20792,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2726},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8706541,"byte_end":8706551,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8709442,"byte_end":8709451,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8710851,"byte_end":8710856,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2731},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8712696,"byte_end":8712701,"line_start":248,"line_end":248,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2733},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8714774,"byte_end":8714786,"line_start":61,"line_end":61,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2734},{"krate":0,"index":2736},{"krate":0,"index":2738},{"krate":0,"index":2741},{"krate":0,"index":2748},{"krate":0,"index":2750},{"krate":0,"index":2752},{"krate":0,"index":2754},{"krate":0,"index":2756},{"krate":0,"index":2758},{"krate":0,"index":2760},{"krate":0,"index":2762},{"krate":0,"index":2764},{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":2770},{"krate":0,"index":2772},{"krate":0,"index":2774},{"krate":0,"index":2776},{"krate":0,"index":2778},{"krate":0,"index":2780},{"krate":0,"index":2782},{"krate":0,"index":2743},{"krate":0,"index":2745},{"krate":0,"index":2747}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20765,"byte_end":20792,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2734},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8715906,"byte_end":8715911,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8718740,"byte_end":8718744,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2738},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8721047,"byte_end":8721055,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8722952,"byte_end":8722962,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2748},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8724399,"byte_end":8724406,"line_start":321,"line_end":321,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8725695,"byte_end":8725702,"line_start":359,"line_end":359,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2752},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8727033,"byte_end":8727041,"line_start":397,"line_end":397,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2754},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8728381,"byte_end":8728389,"line_start":435,"line_end":435,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2756},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8729670,"byte_end":8729678,"line_start":472,"line_end":472,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2758},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8730973,"byte_end":8730981,"line_start":510,"line_end":510,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2760},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8732344,"byte_end":8732352,"line_start":549,"line_end":549,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2762},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8733645,"byte_end":8733653,"line_start":586,"line_end":586,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8735113,"byte_end":8735122,"line_start":626,"line_end":626,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8736516,"byte_end":8736525,"line_start":666,"line_end":666,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8737872,"byte_end":8737883,"line_start":704,"line_end":704,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8739244,"byte_end":8739255,"line_start":742,"line_end":742,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2772},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8740556,"byte_end":8740567,"line_start":779,"line_end":779,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2774},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8741879,"byte_end":8741890,"line_start":817,"line_end":817,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2776},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8743271,"byte_end":8743282,"line_start":856,"line_end":856,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8744576,"byte_end":8744587,"line_start":893,"line_end":893,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8746065,"byte_end":8746077,"line_start":933,"line_end":933,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2782},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8747471,"byte_end":8747483,"line_start":973,"line_end":973,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2743},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8749142,"byte_end":8749153,"line_start":1021,"line_end":1021,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2745},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8750708,"byte_end":8750722,"line_start":1068,"line_end":1068,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8752014,"byte_end":8752018,"line_start":1106,"line_end":1106,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2784},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_seek_ext.rs","byte_start":8753106,"byte_end":8753118,"line_start":33,"line_end":33,"column_start":15,"column_end":27},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":2785}],"decl_id":null,"docs":" An extension trait that adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20765,"byte_end":20792,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_seek_ext.rs","byte_start":8754114,"byte_end":8754118,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":2784},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2787},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8756242,"byte_end":8756255,"line_start":65,"line_end":65,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2788},{"krate":0,"index":2790},{"krate":0,"index":2793},{"krate":0,"index":2797},{"krate":0,"index":2799},{"krate":0,"index":2801},{"krate":0,"index":2803},{"krate":0,"index":2805},{"krate":0,"index":2807},{"krate":0,"index":2809},{"krate":0,"index":2811},{"krate":0,"index":2813},{"krate":0,"index":2815},{"krate":0,"index":2817},{"krate":0,"index":2819},{"krate":0,"index":2821},{"krate":0,"index":2823},{"krate":0,"index":2825},{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":2831},{"krate":0,"index":2795},{"krate":0,"index":2796}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20765,"byte_end":20792,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2788},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8758097,"byte_end":8758102,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8760909,"byte_end":8760918,"line_start":185,"line_end":185,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8762260,"byte_end":8762269,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2797},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8763669,"byte_end":8763677,"line_start":269,"line_end":269,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8764938,"byte_end":8764946,"line_start":306,"line_end":306,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2801},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8766261,"byte_end":8766270,"line_start":344,"line_end":344,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2803},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8767583,"byte_end":8767592,"line_start":382,"line_end":382,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8768932,"byte_end":8768941,"line_start":420,"line_end":420,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2807},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8770276,"byte_end":8770285,"line_start":458,"line_end":458,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8771662,"byte_end":8771671,"line_start":496,"line_end":496,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2811},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8773058,"byte_end":8773067,"line_start":534,"line_end":534,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2813},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8774522,"byte_end":8774532,"line_start":574,"line_end":574,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2815},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8775922,"byte_end":8775932,"line_start":614,"line_end":614,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2817},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8777264,"byte_end":8777276,"line_start":653,"line_end":653,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8778603,"byte_end":8778615,"line_start":691,"line_end":691,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8779969,"byte_end":8779981,"line_start":729,"line_end":729,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2823},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8781330,"byte_end":8781342,"line_start":767,"line_end":767,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2825},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8782733,"byte_end":8782745,"line_start":805,"line_end":805,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8784146,"byte_end":8784158,"line_start":843,"line_end":843,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2829},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8785625,"byte_end":8785638,"line_start":883,"line_end":883,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2831},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8787040,"byte_end":8787053,"line_start":923,"line_end":923,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2795},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8788073,"byte_end":8788078,"line_start":956,"line_end":956,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2796},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8789368,"byte_end":8789376,"line_start":995,"line_end":995,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":2787},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10986},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8790737,"byte_end":8790746,"line_start":27,"line_end":27,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":10988},{"krate":0,"index":10989},{"krate":0,"index":10990},{"krate":0,"index":10991}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8791082,"byte_end":8791085,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8790940,"byte_end":8791032,"line_start":37,"line_end":37,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8791037,"byte_end":8791070,"line_start":38,"line_end":38,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8791247,"byte_end":8791260,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8791170,"byte_end":8791235,"line_start":43,"line_end":43,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8791614,"byte_end":8791621,"line_start":57,"line_end":57,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8791477,"byte_end":8791523,"line_start":54,"line_end":54,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8791528,"byte_end":8791531,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8791536,"byte_end":8791602,"line_start":56,"line_end":56,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8791813,"byte_end":8791820,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8791668,"byte_end":8791722,"line_start":61,"line_end":61,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8791727,"byte_end":8791730,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8791735,"byte_end":8791801,"line_start":63,"line_end":63,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8792031,"byte_end":8792042,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8791879,"byte_end":8791940,"line_start":68,"line_end":68,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8791945,"byte_end":8791948,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8791953,"byte_end":8792019,"line_start":70,"line_end":70,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8792273,"byte_end":8792283,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8792122,"byte_end":8792185,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8792190,"byte_end":8792193,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8792198,"byte_end":8792261,"line_start":77,"line_end":77,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8792487,"byte_end":8792493,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8792327,"byte_end":8792383,"line_start":82,"line_end":82,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8792388,"byte_end":8792391,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8792396,"byte_end":8792475,"line_start":84,"line_end":84,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":10955},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8796432,"byte_end":8796441,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":10957}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8796720,"byte_end":8796723,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8796566,"byte_end":8796623,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8796628,"byte_end":8796631,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8796636,"byte_end":8796708,"line_start":28,"line_end":28,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2145},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8797055,"byte_end":8797068,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8796855,"byte_end":8796940,"line_start":35,"line_end":35,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8796945,"byte_end":8796958,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8796963,"byte_end":8796966,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8796971,"byte_end":8797043,"line_start":38,"line_end":38,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2146},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8797525,"byte_end":8797532,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8797380,"byte_end":8797430,"line_start":52,"line_end":52,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8797435,"byte_end":8797438,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8797443,"byte_end":8797513,"line_start":54,"line_end":54,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2147},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8797752,"byte_end":8797759,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8797599,"byte_end":8797657,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8797662,"byte_end":8797665,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8797670,"byte_end":8797740,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8797994,"byte_end":8798005,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8797834,"byte_end":8797899,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8797904,"byte_end":8797907,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8797912,"byte_end":8797982,"line_start":68,"line_end":68,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2149},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8798269,"byte_end":8798279,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8798114,"byte_end":8798181,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8798186,"byte_end":8798189,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8798194,"byte_end":8798257,"line_start":75,"line_end":75,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10909},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8801856,"byte_end":8801865,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":10911},{"krate":0,"index":10912},{"krate":0,"index":10913}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8802173,"byte_end":8802176,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8802031,"byte_end":8802123,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8802128,"byte_end":8802161,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8802338,"byte_end":8802351,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8802261,"byte_end":8802326,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2190},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8803433,"byte_end":8803440,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8803375,"byte_end":8803421,"line_start":84,"line_end":84,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8803631,"byte_end":8803638,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8803487,"byte_end":8803541,"line_start":89,"line_end":89,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8803546,"byte_end":8803549,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8803554,"byte_end":8803619,"line_start":91,"line_end":91,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8803848,"byte_end":8803859,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8803697,"byte_end":8803758,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8803763,"byte_end":8803766,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8803771,"byte_end":8803836,"line_start":98,"line_end":98,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8804090,"byte_end":8804100,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8803939,"byte_end":8804002,"line_start":103,"line_end":103,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8804007,"byte_end":8804010,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8804015,"byte_end":8804078,"line_start":105,"line_end":105,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8804212,"byte_end":8804218,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8804144,"byte_end":8804200,"line_start":110,"line_end":110,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10860},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8806632,"byte_end":8806637,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10863},{"krate":0,"index":10864},{"krate":0,"index":10865}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2229},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8807078,"byte_end":8807085,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8807004,"byte_end":8807066,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2230},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8807417,"byte_end":8807424,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8807154,"byte_end":8807224,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8807229,"byte_end":8807232,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8807237,"byte_end":8807310,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8807315,"byte_end":8807388,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8807393,"byte_end":8807405,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2231},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8807783,"byte_end":8807794,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8807513,"byte_end":8807590,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8807595,"byte_end":8807598,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8807603,"byte_end":8807676,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8807681,"byte_end":8807754,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8807759,"byte_end":8807771,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8807991,"byte_end":8808001,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8807923,"byte_end":8807979,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":2849},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\copy.rs","byte_start":8811394,"byte_end":8811398,"line_start":56,"line_end":56,"column_start":18,"column_end":22},"name":"copy","qualname":"::io::util::copy::copy","value":"pub async fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20765,"byte_end":20792,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2855},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\copy_buf.rs","byte_start":8815203,"byte_end":8815211,"line_start":54,"line_end":54,"column_start":18,"column_end":26},"name":"copy_buf","qualname":"::io::util::copy_buf::copy_buf","value":"pub async fn copy_buf<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncBufRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20765,"byte_end":20792,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2873},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\empty.rs","byte_start":8817020,"byte_end":8817025,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2874}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20765,"byte_end":20792,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2875},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\empty.rs","byte_start":8817704,"byte_end":8817709,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20765,"byte_end":20792,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10818},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\flush.rs","byte_start":8818950,"byte_end":8818955,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":10821},{"krate":0,"index":10822}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10768},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820054,"byte_end":8820059,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":10770},{"krate":0,"index":10771},{"krate":0,"index":10772},{"krate":0,"index":10773}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2330},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820906,"byte_end":8820915,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820416,"byte_end":8820456,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820461,"byte_end":8820464,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820469,"byte_end":8820483,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820488,"byte_end":8820491,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820496,"byte_end":8820503,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820508,"byte_end":8820542,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820547,"byte_end":8820582,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820587,"byte_end":8820590,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820595,"byte_end":8820678,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820683,"byte_end":8820723,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820728,"byte_end":8820731,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820736,"byte_end":8820789,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820794,"byte_end":8820837,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820842,"byte_end":8820847,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820852,"byte_end":8820864,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820869,"byte_end":8820876,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820881,"byte_end":8820888,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2335},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8821142,"byte_end":8821149,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8821075,"byte_end":8821130,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8821268,"byte_end":8821275,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8821209,"byte_end":8821256,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2337},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8821562,"byte_end":8821572,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8821327,"byte_end":8821388,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8821393,"byte_end":8821396,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8821401,"byte_end":8821464,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8821469,"byte_end":8821550,"line_start":76,"line_end":76,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8822458,"byte_end":8822472,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next line in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next line in the stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8821665,"byte_end":8821707,"line_start":86,"line_end":86,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8821712,"byte_end":8821715,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8821720,"byte_end":8821744,"line_start":88,"line_end":88,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8821749,"byte_end":8821752,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next line is not yet available.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8821757,"byte_end":8821818,"line_start":90,"line_end":90,"column_start":5,"column_end":66}},{"value":"/  * `Poll::Ready(Ok(Some(line)))` if the next line is available.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8821823,"byte_end":8821890,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more lines in this stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8821895,"byte_end":8821968,"line_start":92,"line_end":92,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the next line.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8821973,"byte_end":8822056,"line_start":93,"line_end":93,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8822061,"byte_end":8822064,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8822069,"byte_end":8822141,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8822146,"byte_end":8822215,"line_start":96,"line_end":96,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8822220,"byte_end":8822264,"line_start":97,"line_end":97,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8822269,"byte_end":8822272,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_line`, only the `Waker` from","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8822277,"byte_end":8822351,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ the `Context` passed to the most recent call is scheduled to receive a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8822356,"byte_end":8822430,"line_start":100,"line_end":100,"column_start":5,"column_end":79}},{"value":"/ wakeup.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8822435,"byte_end":8822446,"line_start":101,"line_end":101,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2876},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8824200,"byte_end":8824212,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"DuplexStream","qualname":"::io::util::mem::DuplexStream","value":"DuplexStream {  }","parent":null,"children":[{"krate":0,"index":2877},{"krate":0,"index":2878}],"decl_id":null,"docs":" A bidirectional pipe to read and write bytes in memory.","sig":null,"attributes":[{"value":"/ A bidirectional pipe to read and write bytes in memory.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8823412,"byte_end":8823471,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8823472,"byte_end":8823475,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A pair of `DuplexStream`s are created together, and they act as a \"channel\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8823476,"byte_end":8823555,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ that can be used as in-memory IO types. Writing to one of the pairs will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8823556,"byte_end":8823632,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ allow that data to be read from the other, and vice versa.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8823633,"byte_end":8823695,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8823696,"byte_end":8823699,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8823700,"byte_end":8823713,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8823714,"byte_end":8823717,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8823718,"byte_end":8823725,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn ex() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8823726,"byte_end":8823770,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/ # use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8823771,"byte_end":8823822,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ let (mut client, mut server) = tokio::io::duplex(64);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8823823,"byte_end":8823880,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8823881,"byte_end":8823884,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ client.write_all(b\"ping\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8823885,"byte_end":8823922,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8823923,"byte_end":8823926,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 4];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8823927,"byte_end":8823954,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ server.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8823955,"byte_end":8823994,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"ping\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8823995,"byte_end":8824025,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8824026,"byte_end":8824029,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ server.write_all(b\"pong\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8824030,"byte_end":8824067,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8824068,"byte_end":8824071,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ client.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8824072,"byte_end":8824111,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"pong\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8824112,"byte_end":8824142,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8824143,"byte_end":8824155,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8824156,"byte_end":8824163,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8824164,"byte_end":8824171,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2358},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8825509,"byte_end":8825515,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"duplex","qualname":"::io::util::mem::duplex","value":"pub fn duplex(usize) -> (DuplexStream, DuplexStream)","parent":null,"children":[],"decl_id":null,"docs":" Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8825275,"byte_end":8825358,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8825359,"byte_end":8825362,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The `max_buf_size` argument is the maximum amount of bytes that can be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8825363,"byte_end":8825437,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ written to a side before the write returns `Poll::Pending`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8825438,"byte_end":8825501,"line_start":74,"line_end":74,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":10717},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read.rs","byte_start":8830571,"byte_end":8830575,"line_start":34,"line_end":34,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":10720},{"krate":0,"index":10721},{"krate":0,"index":10722}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10657},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_buf.rs","byte_start":8831792,"byte_end":8831799,"line_start":27,"line_end":27,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":10661},{"krate":0,"index":10662},{"krate":0,"index":10663}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10602},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_exact.rs","byte_start":8834004,"byte_end":8834013,"line_start":34,"line_end":34,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":10605},{"krate":0,"index":10606},{"krate":0,"index":10607}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10558},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_int.rs","byte_start":8839037,"byte_end":8839043,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":10560},{"krate":0,"index":10561}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10521},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_int.rs","byte_start":8839059,"byte_end":8839065,"line_start":133,"line_end":133,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":10523},{"krate":0,"index":10524}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10472},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_int.rs","byte_start":8839081,"byte_end":8839088,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":10474},{"krate":0,"index":10475},{"krate":0,"index":10477},{"krate":0,"index":10478}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10423},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_int.rs","byte_start":8839113,"byte_end":8839120,"line_start":136,"line_end":136,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":10425},{"krate":0,"index":10426},{"krate":0,"index":10428},{"krate":0,"index":10429}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10374},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_int.rs","byte_start":8839145,"byte_end":8839152,"line_start":137,"line_end":137,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":10376},{"krate":0,"index":10377},{"krate":0,"index":10379},{"krate":0,"index":10380}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10325},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_int.rs","byte_start":8839177,"byte_end":8839185,"line_start":138,"line_end":138,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":10327},{"krate":0,"index":10328},{"krate":0,"index":10330},{"krate":0,"index":10331}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10276},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_int.rs","byte_start":8839213,"byte_end":8839220,"line_start":140,"line_end":140,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":10278},{"krate":0,"index":10279},{"krate":0,"index":10281},{"krate":0,"index":10282}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10227},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_int.rs","byte_start":8839245,"byte_end":8839252,"line_start":141,"line_end":141,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":10229},{"krate":0,"index":10230},{"krate":0,"index":10232},{"krate":0,"index":10233}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10178},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_int.rs","byte_start":8839277,"byte_end":8839284,"line_start":142,"line_end":142,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":10180},{"krate":0,"index":10181},{"krate":0,"index":10183},{"krate":0,"index":10184}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10129},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_int.rs","byte_start":8839309,"byte_end":8839317,"line_start":143,"line_end":143,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":10131},{"krate":0,"index":10132},{"krate":0,"index":10134},{"krate":0,"index":10135}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10080},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_int.rs","byte_start":8839345,"byte_end":8839354,"line_start":145,"line_end":145,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":10082},{"krate":0,"index":10083},{"krate":0,"index":10085},{"krate":0,"index":10086}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10031},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_int.rs","byte_start":8839382,"byte_end":8839391,"line_start":146,"line_end":146,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":10033},{"krate":0,"index":10034},{"krate":0,"index":10036},{"krate":0,"index":10037}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9982},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_int.rs","byte_start":8839419,"byte_end":8839428,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":9984},{"krate":0,"index":9985},{"krate":0,"index":9987},{"krate":0,"index":9988}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9933},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_int.rs","byte_start":8839456,"byte_end":8839466,"line_start":148,"line_end":148,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":9935},{"krate":0,"index":9936},{"krate":0,"index":9938},{"krate":0,"index":9939}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9884},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_int.rs","byte_start":8839497,"byte_end":8839506,"line_start":150,"line_end":150,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":9886},{"krate":0,"index":9887},{"krate":0,"index":9889},{"krate":0,"index":9890}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9835},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_int.rs","byte_start":8839534,"byte_end":8839543,"line_start":151,"line_end":151,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":9837},{"krate":0,"index":9838},{"krate":0,"index":9840},{"krate":0,"index":9841}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9786},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_int.rs","byte_start":8839571,"byte_end":8839580,"line_start":152,"line_end":152,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":9788},{"krate":0,"index":9789},{"krate":0,"index":9791},{"krate":0,"index":9792}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9737},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_int.rs","byte_start":8839608,"byte_end":8839618,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":9739},{"krate":0,"index":9740},{"krate":0,"index":9742},{"krate":0,"index":9743}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9683},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_line.rs","byte_start":8840135,"byte_end":8840143,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":9686},{"krate":0,"index":9687},{"krate":0,"index":9688},{"krate":0,"index":9689},{"krate":0,"index":9690}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9626},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_to_end.rs","byte_start":8844038,"byte_end":8844047,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":9629},{"krate":0,"index":9630},{"krate":0,"index":9631},{"krate":0,"index":9632}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9565},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_to_string.rs","byte_start":8847791,"byte_end":8847803,"line_start":16,"line_end":16,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":9568},{"krate":0,"index":9569},{"krate":0,"index":9570},{"krate":0,"index":9571},{"krate":0,"index":9572}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9504},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_until.rs","byte_start":8850474,"byte_end":8850483,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":9507},{"krate":0,"index":9508},{"krate":0,"index":9509},{"krate":0,"index":9510},{"krate":0,"index":9511}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3035},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\repeat.rs","byte_start":8852825,"byte_end":8852831,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3036}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20765,"byte_end":20792,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3034},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\repeat.rs","byte_start":8853517,"byte_end":8853523,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20765,"byte_end":20792,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9455},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\shutdown.rs","byte_start":8854562,"byte_end":8854570,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":9458},{"krate":0,"index":9459}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3039},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\sink.rs","byte_start":8855716,"byte_end":8855720,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":3040}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20765,"byte_end":20792,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3041},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\sink.rs","byte_start":8856561,"byte_end":8856565,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":20765,"byte_end":20792,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9405},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8857810,"byte_end":8857815,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":9407},{"krate":0,"index":9408},{"krate":0,"index":9409},{"krate":0,"index":9410}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858676,"byte_end":8858688,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858164,"byte_end":8858207,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858212,"byte_end":8858215,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858220,"byte_end":8858234,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858239,"byte_end":8858242,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858247,"byte_end":8858254,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858259,"byte_end":8858293,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858298,"byte_end":8858333,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858338,"byte_end":8858341,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858346,"byte_end":8858429,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858434,"byte_end":8858481,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858486,"byte_end":8858489,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858494,"byte_end":8858556,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858561,"byte_end":8858607,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858612,"byte_end":8858617,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858622,"byte_end":8858634,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858639,"byte_end":8858646,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858651,"byte_end":8858658,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2622},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8859725,"byte_end":8859742,"line_start":85,"line_end":85,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next segment in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next segment in the stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858900,"byte_end":8858945,"line_start":68,"line_end":68,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858950,"byte_end":8858953,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858958,"byte_end":8858982,"line_start":70,"line_end":70,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858987,"byte_end":8858990,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next segment is not yet available.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858995,"byte_end":8859059,"line_start":72,"line_end":72,"column_start":5,"column_end":69}},{"value":"/  * `Poll::Ready(Ok(Some(segment)))` if the next segment is available.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8859064,"byte_end":8859137,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more segments in this stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8859142,"byte_end":8859218,"line_start":74,"line_end":74,"column_start":5,"column_end":81}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8859223,"byte_end":8859295,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/    next segment.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8859300,"byte_end":8859320,"line_start":76,"line_end":76,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8859325,"byte_end":8859328,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8859333,"byte_end":8859405,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8859410,"byte_end":8859479,"line_start":79,"line_end":79,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8859484,"byte_end":8859528,"line_start":80,"line_end":80,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8859533,"byte_end":8859536,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_segment`, only the `Waker`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8859541,"byte_end":8859613,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ from the `Context` passed to the most recent call is scheduled to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8859618,"byte_end":8859687,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8859692,"byte_end":8859713,"line_start":84,"line_end":84,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":9365},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8860899,"byte_end":8860903,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":9367},{"krate":0,"index":9368}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8861493,"byte_end":8861498,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8861190,"byte_end":8861243,"line_start":29,"line_end":29,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8861248,"byte_end":8861294,"line_start":30,"line_end":30,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8861299,"byte_end":8861302,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8861307,"byte_end":8861317,"line_start":32,"line_end":32,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8861322,"byte_end":8861325,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8861330,"byte_end":8861407,"line_start":34,"line_end":34,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8861412,"byte_end":8861481,"line_start":35,"line_end":35,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8861817,"byte_end":8861826,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8861546,"byte_end":8861617,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8861622,"byte_end":8861696,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8861701,"byte_end":8861776,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8861781,"byte_end":8861805,"line_start":43,"line_end":43,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2643},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8861949,"byte_end":8861956,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8861891,"byte_end":8861937,"line_start":48,"line_end":48,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2644},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8862248,"byte_end":8862255,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8862003,"byte_end":8862057,"line_start":53,"line_end":53,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8862062,"byte_end":8862065,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8862070,"byte_end":8862143,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8862148,"byte_end":8862220,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8862225,"byte_end":8862236,"line_start":57,"line_end":57,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8862566,"byte_end":8862577,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8862314,"byte_end":8862375,"line_start":62,"line_end":62,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8862380,"byte_end":8862383,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8862388,"byte_end":8862461,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8862466,"byte_end":8862538,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8862543,"byte_end":8862554,"line_start":66,"line_end":66,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8862723,"byte_end":8862733,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8862657,"byte_end":8862711,"line_start":71,"line_end":71,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":9314},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write.rs","byte_start":8864717,"byte_end":8864722,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":9317},{"krate":0,"index":9318},{"krate":0,"index":9319}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9261},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_all.rs","byte_start":8865860,"byte_end":8865868,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":9264},{"krate":0,"index":9265},{"krate":0,"index":9266}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9201},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_buf.rs","byte_start":8867309,"byte_end":8867317,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":9205},{"krate":0,"index":9206},{"krate":0,"index":9207}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9151},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_int.rs","byte_start":8872078,"byte_end":8872085,"line_start":125,"line_end":125,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":9153},{"krate":0,"index":9154},{"krate":0,"index":9155}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9110},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_int.rs","byte_start":8872101,"byte_end":8872108,"line_start":126,"line_end":126,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":9112},{"krate":0,"index":9113},{"krate":0,"index":9114}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9061},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_int.rs","byte_start":8872124,"byte_end":8872132,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":9063},{"krate":0,"index":9064},{"krate":0,"index":9066},{"krate":0,"index":9067}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9012},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_int.rs","byte_start":8872157,"byte_end":8872165,"line_start":129,"line_end":129,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":9014},{"krate":0,"index":9015},{"krate":0,"index":9017},{"krate":0,"index":9018}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8963},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_int.rs","byte_start":8872190,"byte_end":8872198,"line_start":130,"line_end":130,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":8965},{"krate":0,"index":8966},{"krate":0,"index":8968},{"krate":0,"index":8969}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8914},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_int.rs","byte_start":8872223,"byte_end":8872232,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":8916},{"krate":0,"index":8917},{"krate":0,"index":8919},{"krate":0,"index":8920}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8865},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_int.rs","byte_start":8872260,"byte_end":8872268,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":8867},{"krate":0,"index":8868},{"krate":0,"index":8870},{"krate":0,"index":8871}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8816},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_int.rs","byte_start":8872293,"byte_end":8872301,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":8818},{"krate":0,"index":8819},{"krate":0,"index":8821},{"krate":0,"index":8822}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8767},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_int.rs","byte_start":8872326,"byte_end":8872334,"line_start":135,"line_end":135,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":8769},{"krate":0,"index":8770},{"krate":0,"index":8772},{"krate":0,"index":8773}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8718},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_int.rs","byte_start":8872359,"byte_end":8872368,"line_start":136,"line_end":136,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":8720},{"krate":0,"index":8721},{"krate":0,"index":8723},{"krate":0,"index":8724}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8669},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_int.rs","byte_start":8872396,"byte_end":8872406,"line_start":138,"line_end":138,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":8671},{"krate":0,"index":8672},{"krate":0,"index":8674},{"krate":0,"index":8675}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8620},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_int.rs","byte_start":8872434,"byte_end":8872444,"line_start":139,"line_end":139,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":8622},{"krate":0,"index":8623},{"krate":0,"index":8625},{"krate":0,"index":8626}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8571},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_int.rs","byte_start":8872472,"byte_end":8872482,"line_start":140,"line_end":140,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":8573},{"krate":0,"index":8574},{"krate":0,"index":8576},{"krate":0,"index":8577}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8522},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_int.rs","byte_start":8872510,"byte_end":8872521,"line_start":141,"line_end":141,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":8524},{"krate":0,"index":8525},{"krate":0,"index":8527},{"krate":0,"index":8528}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8473},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_int.rs","byte_start":8872552,"byte_end":8872562,"line_start":143,"line_end":143,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":8475},{"krate":0,"index":8476},{"krate":0,"index":8478},{"krate":0,"index":8479}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8424},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_int.rs","byte_start":8872590,"byte_end":8872600,"line_start":144,"line_end":144,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":8426},{"krate":0,"index":8427},{"krate":0,"index":8429},{"krate":0,"index":8430}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8375},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_int.rs","byte_start":8872628,"byte_end":8872638,"line_start":145,"line_end":145,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":8377},{"krate":0,"index":8378},{"krate":0,"index":8380},{"krate":0,"index":8381}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8326},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_int.rs","byte_start":8872666,"byte_end":8872677,"line_start":146,"line_end":146,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":8328},{"krate":0,"index":8329},{"krate":0,"index":8331},{"krate":0,"index":8332}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":3252},{"krate":0,"index":3253},{"krate":0,"index":3254},{"krate":0,"index":3531},{"krate":0,"index":3532},{"krate":0,"index":3533},{"krate":0,"index":3534},{"krate":0,"index":3642}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":80456,"byte_end":80474,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":80476,"byte_end":80514,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":80515,"byte_end":80518,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":80519,"byte_end":80602,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":80603,"byte_end":80668,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":80669,"byte_end":80672,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":80673,"byte_end":80691,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":80692,"byte_end":80695,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":80696,"byte_end":80784,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":80785,"byte_end":80854,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":80855,"byte_end":80943,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":80944,"byte_end":81002,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":81003,"byte_end":81066,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":81067,"byte_end":81132,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":81134,"byte_end":81137,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":81138,"byte_end":81170,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":81171,"byte_end":81199,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":81200,"byte_end":81228,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":81229,"byte_end":81263,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":81264,"byte_end":81294,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":81295,"byte_end":81329,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":82651,"byte_end":82664,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":81963,"byte_end":82040,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":82041,"byte_end":82044,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":82045,"byte_end":82054,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":82055,"byte_end":82058,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":82059,"byte_end":82136,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":82137,"byte_end":82208,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`net`** feature flag.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":82209,"byte_end":82236,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":82237,"byte_end":82240,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":82241,"byte_end":82254,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":82255,"byte_end":82258,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":82259,"byte_end":82336,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":82337,"byte_end":82409,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":82410,"byte_end":82479,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":82480,"byte_end":82483,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":82484,"byte_end":82563,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":82564,"byte_end":82640,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":89104,"byte_end":89121,"line_start":250,"line_end":250,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":89137,"byte_end":89141,"line_start":251,"line_end":251,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":89202,"byte_end":89208,"line_start":252,"line_end":252,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":89280,"byte_end":89295,"line_start":254,"line_end":254,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self, Internal) -> Self::Future","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":89406,"byte_end":89414,"line_start":258,"line_end":258,"column_start":16,"column_end":24},"name":"Internal","qualname":"::net::addr::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":89351,"byte_end":89390,"line_start":257,"line_end":257,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3229},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":89656,"byte_end":89666,"line_start":270,"line_end":270,"column_start":20,"column_end":30},"name":"MaybeReady","qualname":"::net::addr::sealed::MaybeReady","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":21507,"byte_end":21530,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3244},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":89956,"byte_end":89959,"line_start":281,"line_end":281,"column_start":13,"column_end":16},"name":"One","qualname":"::net::addr::sealed::OneOrMore::One","value":"OneOrMore::One(option::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3243},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3247},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":90003,"byte_end":90007,"line_start":282,"line_end":282,"column_start":13,"column_end":17},"name":"More","qualname":"::net::addr::sealed::OneOrMore::More","value":"OneOrMore::More(vec::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3243},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3243},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":89932,"byte_end":89941,"line_start":280,"line_end":280,"column_start":18,"column_end":27},"name":"OneOrMore","qualname":"::net::addr::sealed::OneOrMore","value":"pub enum OneOrMore {\n    One(option::IntoIter<SocketAddr>),\n    More(vec::IntoIter<SocketAddr>),\n}","parent":null,"children":[{"krate":0,"index":3244},{"krate":0,"index":3247}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":21507,"byte_end":21530,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":3648},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\lookup_host.rs","byte_start":8873550,"byte_end":8873561,"line_start":32,"line_end":32,"column_start":18,"column_end":29},"name":"lookup_host","qualname":"::net::lookup_host::lookup_host","value":"pub async fn lookup_host<T>(T) -> /*impl Trait*/ where T: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Performs a DNS resolution.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":21507,"byte_end":21530,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":3254},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\mod.rs","parent":null,"children":[{"krate":0,"index":3255},{"krate":0,"index":3299},{"krate":0,"index":3334},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3369},{"krate":0,"index":3415},{"krate":0,"index":3416},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":12721},{"krate":0,"index":3419},{"krate":0,"index":3530}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":21507,"byte_end":21530,"line_start":169,"line_end":169,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\mod.rs","byte_start":8873714,"byte_end":8873735,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3653},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8875375,"byte_end":8875386,"line_start":48,"line_end":48,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":3654}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":21507,"byte_end":21530,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3273},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876902,"byte_end":8876906,"line_start":92,"line_end":92,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8875469,"byte_end":8875545,"line_start":54,"line_end":54,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8875550,"byte_end":8875553,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8875558,"byte_end":8875619,"line_start":56,"line_end":56,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8875624,"byte_end":8875627,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8875632,"byte_end":8875707,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8875712,"byte_end":8875788,"line_start":59,"line_end":59,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8875793,"byte_end":8875804,"line_start":60,"line_end":60,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8875809,"byte_end":8875812,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8875817,"byte_end":8875892,"line_start":62,"line_end":62,"column_start":5,"column_end":80}},{"value":"/ Note that strings only implement this trait when the **`net`** feature","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8875897,"byte_end":8875971,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ is enabled, as strings may contain domain names that need to be resolved.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8875976,"byte_end":8876053,"line_start":64,"line_end":64,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876058,"byte_end":8876061,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876066,"byte_end":8876142,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876147,"byte_end":8876220,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876225,"byte_end":8876298,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876303,"byte_end":8876355,"line_start":69,"line_end":69,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876360,"byte_end":8876363,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876368,"byte_end":8876431,"line_start":71,"line_end":71,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876436,"byte_end":8876439,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876444,"byte_end":8876498,"line_start":73,"line_end":73,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876503,"byte_end":8876506,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876511,"byte_end":8876525,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876530,"byte_end":8876533,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876538,"byte_end":8876551,"line_start":77,"line_end":77,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876556,"byte_end":8876588,"line_start":78,"line_end":78,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876593,"byte_end":8876596,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876601,"byte_end":8876617,"line_start":80,"line_end":80,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876622,"byte_end":8876625,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876630,"byte_end":8876648,"line_start":82,"line_end":82,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876653,"byte_end":8876692,"line_start":83,"line_end":83,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876697,"byte_end":8876763,"line_start":84,"line_end":84,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876768,"byte_end":8876771,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876776,"byte_end":8876803,"line_start":86,"line_end":86,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876808,"byte_end":8876811,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876816,"byte_end":8876843,"line_start":88,"line_end":88,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876848,"byte_end":8876862,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876867,"byte_end":8876872,"line_start":90,"line_end":90,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8876877,"byte_end":8876884,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3279},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878472,"byte_end":8878478,"line_start":144,"line_end":144,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8877617,"byte_end":8877674,"line_start":117,"line_end":117,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8877679,"byte_end":8877682,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8877687,"byte_end":8877762,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8877767,"byte_end":8877837,"line_start":120,"line_end":120,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8877842,"byte_end":8877871,"line_start":121,"line_end":121,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8877876,"byte_end":8877879,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8877884,"byte_end":8877931,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8877936,"byte_end":8877939,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8877944,"byte_end":8877958,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8877963,"byte_end":8877966,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8877971,"byte_end":8877984,"line_start":127,"line_end":127,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8877989,"byte_end":8878021,"line_start":128,"line_end":128,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878026,"byte_end":8878029,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878034,"byte_end":8878050,"line_start":130,"line_end":130,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878055,"byte_end":8878058,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878063,"byte_end":8878081,"line_start":132,"line_end":132,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878086,"byte_end":8878125,"line_start":133,"line_end":133,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878130,"byte_end":8878196,"line_start":134,"line_end":134,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878201,"byte_end":8878204,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878209,"byte_end":8878248,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878253,"byte_end":8878323,"line_start":137,"line_end":137,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878328,"byte_end":8878391,"line_start":138,"line_end":138,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878396,"byte_end":8878405,"line_start":139,"line_end":139,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878410,"byte_end":8878413,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878418,"byte_end":8878432,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878437,"byte_end":8878442,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878447,"byte_end":8878454,"line_start":143,"line_end":143,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3283},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8879146,"byte_end":8879157,"line_start":161,"line_end":161,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878768,"byte_end":8878831,"line_start":155,"line_end":155,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878836,"byte_end":8878839,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878844,"byte_end":8878920,"line_start":157,"line_end":157,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.  Note that on multiple calls","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8878925,"byte_end":8878999,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ to `poll_accept`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8879004,"byte_end":8879080,"line_start":159,"line_end":159,"column_start":5,"column_end":81}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8879085,"byte_end":8879134,"line_start":160,"line_end":160,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8881203,"byte_end":8881211,"line_start":213,"line_end":213,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpListener` from a `std::net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates new `TcpListener` from a `std::net::TcpListener`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8879765,"byte_end":8879826,"line_start":178,"line_end":178,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8879831,"byte_end":8879834,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8879839,"byte_end":8879911,"line_start":180,"line_end":180,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8879916,"byte_end":8879992,"line_start":181,"line_end":181,"column_start":5,"column_end":81}},{"value":"/ about the underlying listener; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8879997,"byte_end":8880070,"line_start":182,"line_end":182,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880075,"byte_end":8880097,"line_start":183,"line_end":183,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880102,"byte_end":8880105,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `socket2` crate and the `Socket`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880110,"byte_end":8880184,"line_start":185,"line_end":185,"column_start":5,"column_end":79}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880189,"byte_end":8880265,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880270,"byte_end":8880335,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880340,"byte_end":8880395,"line_start":188,"line_end":188,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880400,"byte_end":8880403,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880408,"byte_end":8880411,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880416,"byte_end":8880430,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880435,"byte_end":8880438,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880443,"byte_end":8880461,"line_start":193,"line_end":193,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880466,"byte_end":8880492,"line_start":194,"line_end":194,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880497,"byte_end":8880529,"line_start":195,"line_end":195,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880534,"byte_end":8880537,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880542,"byte_end":8880560,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880565,"byte_end":8880616,"line_start":198,"line_end":198,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880621,"byte_end":8880692,"line_start":199,"line_end":199,"column_start":5,"column_end":76}},{"value":"/     std_listener.set_nonblocking(true)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880697,"byte_end":8880741,"line_start":200,"line_end":200,"column_start":5,"column_end":49}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880746,"byte_end":8880806,"line_start":201,"line_end":201,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880811,"byte_end":8880825,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880830,"byte_end":8880835,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880840,"byte_end":8880847,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880852,"byte_end":8880855,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880860,"byte_end":8880872,"line_start":206,"line_end":206,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880877,"byte_end":8880880,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880885,"byte_end":8880945,"line_start":208,"line_end":208,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880950,"byte_end":8880953,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8880958,"byte_end":8881028,"line_start":210,"line_end":210,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8881033,"byte_end":8881106,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8881111,"byte_end":8881191,"line_start":212,"line_end":212,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3286},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882305,"byte_end":8882315,"line_start":247,"line_end":247,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8881579,"byte_end":8881640,"line_start":224,"line_end":224,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8881645,"byte_end":8881648,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8881653,"byte_end":8881726,"line_start":226,"line_end":226,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8881731,"byte_end":8881765,"line_start":227,"line_end":227,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8881770,"byte_end":8881773,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8881778,"byte_end":8881792,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8881797,"byte_end":8881800,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8881805,"byte_end":8881823,"line_start":231,"line_end":231,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8881828,"byte_end":8881860,"line_start":232,"line_end":232,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8881865,"byte_end":8881868,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8881873,"byte_end":8881889,"line_start":234,"line_end":234,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8881894,"byte_end":8881949,"line_start":235,"line_end":235,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8881954,"byte_end":8881957,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8881962,"byte_end":8881980,"line_start":237,"line_end":237,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8881985,"byte_end":8882024,"line_start":238,"line_end":238,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882029,"byte_end":8882095,"line_start":239,"line_end":239,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882100,"byte_end":8882103,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882108,"byte_end":8882150,"line_start":241,"line_end":241,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882155,"byte_end":8882244,"line_start":242,"line_end":242,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882249,"byte_end":8882252,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882257,"byte_end":8882271,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882276,"byte_end":8882281,"line_start":245,"line_end":245,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882286,"byte_end":8882293,"line_start":246,"line_end":246,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3287},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883008,"byte_end":8883011,"line_start":274,"line_end":274,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882391,"byte_end":8882449,"line_start":251,"line_end":251,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882454,"byte_end":8882457,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882462,"byte_end":8882522,"line_start":253,"line_end":253,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882527,"byte_end":8882530,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882535,"byte_end":8882572,"line_start":255,"line_end":255,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882577,"byte_end":8882580,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882585,"byte_end":8882599,"line_start":257,"line_end":257,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882604,"byte_end":8882607,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882612,"byte_end":8882625,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882630,"byte_end":8882662,"line_start":260,"line_end":260,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882667,"byte_end":8882670,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882675,"byte_end":8882691,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882696,"byte_end":8882699,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882704,"byte_end":8882722,"line_start":264,"line_end":264,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882727,"byte_end":8882766,"line_start":265,"line_end":265,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882771,"byte_end":8882833,"line_start":266,"line_end":266,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882838,"byte_end":8882841,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882846,"byte_end":8882903,"line_start":268,"line_end":268,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882908,"byte_end":8882948,"line_start":269,"line_end":269,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882953,"byte_end":8882956,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882961,"byte_end":8882974,"line_start":271,"line_end":271,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882979,"byte_end":8882984,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8882989,"byte_end":8882996,"line_start":273,"line_end":273,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3288},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883640,"byte_end":8883647,"line_start":299,"line_end":299,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883073,"byte_end":8883131,"line_start":278,"line_end":278,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883136,"byte_end":8883139,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883144,"byte_end":8883220,"line_start":280,"line_end":280,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883225,"byte_end":8883246,"line_start":281,"line_end":281,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883251,"byte_end":8883254,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883259,"byte_end":8883273,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883278,"byte_end":8883281,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883286,"byte_end":8883299,"line_start":285,"line_end":285,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883304,"byte_end":8883336,"line_start":286,"line_end":286,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883341,"byte_end":8883344,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883349,"byte_end":8883365,"line_start":288,"line_end":288,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883370,"byte_end":8883373,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883378,"byte_end":8883396,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883401,"byte_end":8883440,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883445,"byte_end":8883508,"line_start":292,"line_end":292,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883513,"byte_end":8883516,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883521,"byte_end":8883579,"line_start":294,"line_end":294,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883584,"byte_end":8883587,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883592,"byte_end":8883606,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883611,"byte_end":8883616,"line_start":297,"line_end":297,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883621,"byte_end":8883628,"line_start":298,"line_end":298,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3655},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8887773,"byte_end":8887782,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"TcpSocket","qualname":"::net::tcp::socket::TcpSocket","value":"TcpSocket {  }","parent":null,"children":[{"krate":0,"index":3656}],"decl_id":null,"docs":" A TCP socket that has not yet been converted to a `TcpStream` or\n `TcpListener`.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":21507,"byte_end":21530,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3312},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888646,"byte_end":8888652,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<TcpSocket>::new_v4","value":"pub fn new_v4() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv4.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv4.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8887851,"byte_end":8887895,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8887900,"byte_end":8887903,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET` and `SOCK_STREAM`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8887908,"byte_end":8887963,"line_start":92,"line_end":92,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8887968,"byte_end":8887971,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8887976,"byte_end":8887989,"line_start":94,"line_end":94,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8887994,"byte_end":8887997,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888002,"byte_end":8888075,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888080,"byte_end":8888120,"line_start":97,"line_end":97,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888125,"byte_end":8888128,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888133,"byte_end":8888147,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888152,"byte_end":8888155,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv4 socket and start listening.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888160,"byte_end":8888209,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888214,"byte_end":8888217,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888222,"byte_end":8888235,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888240,"byte_end":8888270,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888275,"byte_end":8888278,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888283,"byte_end":8888299,"line_start":106,"line_end":106,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888304,"byte_end":8888307,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888312,"byte_end":8888330,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888335,"byte_end":8888374,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888379,"byte_end":8888432,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888437,"byte_end":8888479,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888484,"byte_end":8888511,"line_start":112,"line_end":112,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888516,"byte_end":8888519,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888524,"byte_end":8888567,"line_start":114,"line_end":114,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888572,"byte_end":8888593,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888598,"byte_end":8888612,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888617,"byte_end":8888622,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888627,"byte_end":8888634,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3313},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889569,"byte_end":8889575,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<TcpSocket>::new_v6","value":"pub fn new_v6() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv6.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv6.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888777,"byte_end":8888821,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888826,"byte_end":8888829,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET6` and `SOCK_STREAM`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888834,"byte_end":8888890,"line_start":126,"line_end":126,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888895,"byte_end":8888898,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888903,"byte_end":8888916,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888921,"byte_end":8888924,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8888929,"byte_end":8889002,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889007,"byte_end":8889047,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889052,"byte_end":8889055,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889060,"byte_end":8889074,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889079,"byte_end":8889082,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv6 socket and start listening.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889087,"byte_end":8889136,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889141,"byte_end":8889144,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889149,"byte_end":8889162,"line_start":137,"line_end":137,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889167,"byte_end":8889197,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889202,"byte_end":8889205,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889210,"byte_end":8889226,"line_start":140,"line_end":140,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889231,"byte_end":8889234,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889239,"byte_end":8889257,"line_start":142,"line_end":142,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889262,"byte_end":8889301,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/     let addr = \"[::1]:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889306,"byte_end":8889355,"line_start":144,"line_end":144,"column_start":5,"column_end":54}},{"value":"/     let socket = TcpSocket::new_v6()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889360,"byte_end":8889402,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889407,"byte_end":8889434,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889439,"byte_end":8889442,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889447,"byte_end":8889490,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889495,"byte_end":8889516,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889521,"byte_end":8889535,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889540,"byte_end":8889545,"line_start":151,"line_end":151,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889550,"byte_end":8889557,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3314},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890390,"byte_end":8890403,"line_start":184,"line_end":184,"column_start":12,"column_end":25},"name":"set_reuseaddr","qualname":"<TcpSocket>::set_reuseaddr","value":"pub fn set_reuseaddr(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use address.","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use address.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889700,"byte_end":8889750,"line_start":158,"line_end":158,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889755,"byte_end":8889758,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889763,"byte_end":8889828,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889833,"byte_end":8889868,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889873,"byte_end":8889876,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889881,"byte_end":8889895,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889900,"byte_end":8889903,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889908,"byte_end":8889921,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889926,"byte_end":8889956,"line_start":166,"line_end":166,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889961,"byte_end":8889964,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889969,"byte_end":8889985,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889990,"byte_end":8889993,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8889998,"byte_end":8890016,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890021,"byte_end":8890060,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890065,"byte_end":8890118,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890123,"byte_end":8890126,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890131,"byte_end":8890173,"line_start":174,"line_end":174,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890178,"byte_end":8890214,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890219,"byte_end":8890246,"line_start":176,"line_end":176,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890251,"byte_end":8890254,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890259,"byte_end":8890303,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890308,"byte_end":8890329,"line_start":179,"line_end":179,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890334,"byte_end":8890337,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890342,"byte_end":8890356,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890361,"byte_end":8890366,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890371,"byte_end":8890378,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3315},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8891102,"byte_end":8891111,"line_start":210,"line_end":210,"column_start":12,"column_end":21},"name":"reuseaddr","qualname":"<TcpSocket>::reuseaddr","value":"pub fn reuseaddr(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the value set for `SO_REUSEADDR` on this socket","sig":null,"attributes":[{"value":"/ Retrieves the value set for `SO_REUSEADDR` on this socket","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890503,"byte_end":8890564,"line_start":188,"line_end":188,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890569,"byte_end":8890572,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890577,"byte_end":8890591,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890596,"byte_end":8890599,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890604,"byte_end":8890617,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890622,"byte_end":8890652,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890657,"byte_end":8890660,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890665,"byte_end":8890681,"line_start":195,"line_end":195,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890686,"byte_end":8890689,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890694,"byte_end":8890712,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890717,"byte_end":8890756,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890761,"byte_end":8890814,"line_start":199,"line_end":199,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890819,"byte_end":8890822,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890827,"byte_end":8890869,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890874,"byte_end":8890910,"line_start":202,"line_end":202,"column_start":5,"column_end":41}},{"value":"/     assert!(socket.reuseaddr().unwrap());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890915,"byte_end":8890960,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890965,"byte_end":8890992,"line_start":204,"line_end":204,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8890997,"byte_end":8891000,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8891005,"byte_end":8891049,"line_start":206,"line_end":206,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8891054,"byte_end":8891068,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8891073,"byte_end":8891078,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8891083,"byte_end":8891090,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3316},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8893437,"byte_end":8893457,"line_start":286,"line_end":286,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpSocket>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP send buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP send buffer on this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8893285,"byte_end":8893341,"line_start":283,"line_end":283,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8893346,"byte_end":8893349,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_SNDBUF` socket option.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8893354,"byte_end":8893425,"line_start":285,"line_end":285,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8894780,"byte_end":8894796,"line_start":313,"line_end":313,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpSocket>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP send buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP send buffer for this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8893553,"byte_end":8893613,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8893618,"byte_end":8893621,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_SNDBUF` socket","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8893626,"byte_end":8893700,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8893705,"byte_end":8893716,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8893721,"byte_end":8893724,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_send_buffer_size`] has been called on this socket","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8893729,"byte_end":8893801,"line_start":295,"line_end":295,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8893806,"byte_end":8893880,"line_start":296,"line_end":296,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8893885,"byte_end":8893953,"line_start":297,"line_end":297,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8893958,"byte_end":8893980,"line_start":298,"line_end":298,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8893985,"byte_end":8893988,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8893993,"byte_end":8894068,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/   send buffer, and will clamp the provided value if it is below the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8894073,"byte_end":8894144,"line_start":301,"line_end":301,"column_start":5,"column_end":76}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8894149,"byte_end":8894225,"line_start":302,"line_end":302,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8894230,"byte_end":8894249,"line_start":303,"line_end":303,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8894254,"byte_end":8894329,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8894334,"byte_end":8894409,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8894414,"byte_end":8894430,"line_start":306,"line_end":306,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8894435,"byte_end":8894500,"line_start":307,"line_end":307,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8894505,"byte_end":8894570,"line_start":308,"line_end":308,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8894575,"byte_end":8894647,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8894652,"byte_end":8894697,"line_start":310,"line_end":310,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8894702,"byte_end":8894705,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: #method.set_send_buffer_size","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8894710,"byte_end":8894768,"line_start":312,"line_end":312,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3318},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8895033,"byte_end":8895053,"line_start":320,"line_end":320,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpSocket>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP receive buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP receive buffer on this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8894878,"byte_end":8894937,"line_start":317,"line_end":317,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8894942,"byte_end":8894945,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_RCVBUF` socket option.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8894950,"byte_end":8895021,"line_start":319,"line_end":319,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896382,"byte_end":8896398,"line_start":347,"line_end":347,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpSocket>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP receive buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP receive buffer for this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8895149,"byte_end":8895212,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8895217,"byte_end":8895220,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_RCVBUF` socket","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8895225,"byte_end":8895299,"line_start":326,"line_end":326,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8895304,"byte_end":8895315,"line_start":327,"line_end":327,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8895320,"byte_end":8895323,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_recv_buffer_size`] has been called on this socket","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8895328,"byte_end":8895400,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8895405,"byte_end":8895479,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8895484,"byte_end":8895552,"line_start":331,"line_end":331,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8895557,"byte_end":8895579,"line_start":332,"line_end":332,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8895584,"byte_end":8895587,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8895592,"byte_end":8895667,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/   receive buffer, and will clamp the provided value if it is below the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8895672,"byte_end":8895746,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8895751,"byte_end":8895827,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8895832,"byte_end":8895851,"line_start":337,"line_end":337,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8895856,"byte_end":8895931,"line_start":338,"line_end":338,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8895936,"byte_end":8896011,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896016,"byte_end":8896032,"line_start":340,"line_end":340,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896037,"byte_end":8896102,"line_start":341,"line_end":341,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896107,"byte_end":8896172,"line_start":342,"line_end":342,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896177,"byte_end":8896249,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896254,"byte_end":8896299,"line_start":344,"line_end":344,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896304,"byte_end":8896307,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: #method.set_recv_buffer_size","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896312,"byte_end":8896370,"line_start":346,"line_end":346,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3320},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897106,"byte_end":8897116,"line_start":373,"line_end":373,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the local address of this socket.","sig":null,"attributes":[{"value":"/ Get the local address of this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896480,"byte_end":8896521,"line_start":351,"line_end":351,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896526,"byte_end":8896529,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Will fail on windows if called before `bind`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896534,"byte_end":8896583,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896588,"byte_end":8896591,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896596,"byte_end":8896610,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896615,"byte_end":8896618,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896623,"byte_end":8896636,"line_start":357,"line_end":357,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896641,"byte_end":8896671,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896676,"byte_end":8896679,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896684,"byte_end":8896700,"line_start":360,"line_end":360,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896705,"byte_end":8896708,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896713,"byte_end":8896731,"line_start":362,"line_end":362,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896736,"byte_end":8896775,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896780,"byte_end":8896833,"line_start":364,"line_end":364,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896838,"byte_end":8896841,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896846,"byte_end":8896888,"line_start":366,"line_end":366,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896893,"byte_end":8896920,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(socket.local_addr().unwrap().to_string(), \"127.0.0.1:8080\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8896925,"byte_end":8897004,"line_start":368,"line_end":368,"column_start":5,"column_end":84}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897009,"byte_end":8897053,"line_start":369,"line_end":369,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897058,"byte_end":8897072,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897077,"byte_end":8897082,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897087,"byte_end":8897094,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3321},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897946,"byte_end":8897950,"line_start":405,"line_end":405,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpSocket>::bind","value":"pub fn bind(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Bind the socket to the given address.","sig":null,"attributes":[{"value":"/ Bind the socket to the given address.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897198,"byte_end":8897239,"line_start":377,"line_end":377,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897244,"byte_end":8897247,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This calls the `bind(2)` operating-system function. Behavior is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897252,"byte_end":8897319,"line_start":379,"line_end":379,"column_start":5,"column_end":72}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897324,"byte_end":8897400,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897405,"byte_end":8897417,"line_start":381,"line_end":381,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897422,"byte_end":8897425,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897430,"byte_end":8897444,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897449,"byte_end":8897452,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Bind a socket before listening.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897457,"byte_end":8897492,"line_start":385,"line_end":385,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897497,"byte_end":8897500,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897505,"byte_end":8897518,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897523,"byte_end":8897553,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897558,"byte_end":8897561,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897566,"byte_end":8897582,"line_start":390,"line_end":390,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897587,"byte_end":8897590,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897595,"byte_end":8897613,"line_start":392,"line_end":392,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897618,"byte_end":8897657,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897662,"byte_end":8897715,"line_start":394,"line_end":394,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897720,"byte_end":8897723,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897728,"byte_end":8897770,"line_start":396,"line_end":396,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897775,"byte_end":8897802,"line_start":397,"line_end":397,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897807,"byte_end":8897810,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897815,"byte_end":8897859,"line_start":399,"line_end":399,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897864,"byte_end":8897885,"line_start":400,"line_end":400,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897890,"byte_end":8897893,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897898,"byte_end":8897912,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897917,"byte_end":8897922,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8897927,"byte_end":8897934,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3322},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899018,"byte_end":8899025,"line_start":441,"line_end":441,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpSocket>::connect","value":"pub async fn connect(Self, SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Establish a TCP connection with a peer at the specified socket address.","sig":null,"attributes":[{"value":"/ Establish a TCP connection with a peer at the specified socket address.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898037,"byte_end":8898112,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898117,"byte_end":8898120,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ The `TcpSocket` is consumed. Once the connection is established, a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898125,"byte_end":8898195,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ connected [`TcpStream`] is returned. If the connection fails, the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898200,"byte_end":8898269,"line_start":412,"line_end":412,"column_start":5,"column_end":74}},{"value":"/ encountered error is returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898274,"byte_end":8898308,"line_start":413,"line_end":413,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898313,"byte_end":8898316,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898321,"byte_end":8898349,"line_start":415,"line_end":415,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898354,"byte_end":8898357,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This calls the `connect(2)` operating-system function. Behavior is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898362,"byte_end":8898432,"line_start":417,"line_end":417,"column_start":5,"column_end":75}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898437,"byte_end":8898513,"line_start":418,"line_end":418,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898518,"byte_end":8898530,"line_start":419,"line_end":419,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898535,"byte_end":8898538,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898543,"byte_end":8898557,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898562,"byte_end":8898565,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Connecting to a peer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898570,"byte_end":8898595,"line_start":423,"line_end":423,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898600,"byte_end":8898603,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898608,"byte_end":8898621,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898626,"byte_end":8898656,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898661,"byte_end":8898664,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898669,"byte_end":8898685,"line_start":428,"line_end":428,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898690,"byte_end":8898693,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898698,"byte_end":8898716,"line_start":430,"line_end":430,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898721,"byte_end":8898760,"line_start":431,"line_end":431,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898765,"byte_end":8898818,"line_start":432,"line_end":432,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898823,"byte_end":8898826,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898831,"byte_end":8898873,"line_start":434,"line_end":434,"column_start":5,"column_end":47}},{"value":"/     let stream = socket.connect(addr).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898878,"byte_end":8898927,"line_start":435,"line_end":435,"column_start":5,"column_end":54}},{"value":"/ # drop(stream);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898932,"byte_end":8898951,"line_start":436,"line_end":436,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898956,"byte_end":8898959,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898964,"byte_end":8898978,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898983,"byte_end":8898988,"line_start":439,"line_end":439,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8898993,"byte_end":8899000,"line_start":440,"line_end":440,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3325},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8900323,"byte_end":8900329,"line_start":481,"line_end":481,"column_start":12,"column_end":18},"name":"listen","qualname":"<TcpSocket>::listen","value":"pub fn listen(Self, u32) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convert the socket into a `TcpListener`.","sig":null,"attributes":[{"value":"/ Convert the socket into a `TcpListener`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899175,"byte_end":8899219,"line_start":446,"line_end":446,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899224,"byte_end":8899227,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ `backlog` defines the maximum number of pending connections are queued","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899232,"byte_end":8899306,"line_start":448,"line_end":448,"column_start":5,"column_end":79}},{"value":"/ by the operating system at any given time. Connection are removed from","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899311,"byte_end":8899385,"line_start":449,"line_end":449,"column_start":5,"column_end":79}},{"value":"/ the queue with [`TcpListener::accept`]. When the queue is full, the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899390,"byte_end":8899461,"line_start":450,"line_end":450,"column_start":5,"column_end":76}},{"value":"/ operationg-system will start rejecting connections.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899466,"byte_end":8899521,"line_start":451,"line_end":451,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899526,"byte_end":8899529,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener::accept`]: TcpListener::accept","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899534,"byte_end":8899582,"line_start":453,"line_end":453,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899587,"byte_end":8899590,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ This calls the `listen(2)` operating-system function, marking the socket","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899595,"byte_end":8899671,"line_start":455,"line_end":455,"column_start":5,"column_end":81}},{"value":"/ as a passive socket. Behavior is platform specific. Refer to the target","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899676,"byte_end":8899751,"line_start":456,"line_end":456,"column_start":5,"column_end":80}},{"value":"/ platform's documentation for more details.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899756,"byte_end":8899802,"line_start":457,"line_end":457,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899807,"byte_end":8899810,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899815,"byte_end":8899829,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899834,"byte_end":8899837,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Create a `TcpListener`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899842,"byte_end":8899869,"line_start":461,"line_end":461,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899874,"byte_end":8899877,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899882,"byte_end":8899895,"line_start":463,"line_end":463,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899900,"byte_end":8899930,"line_start":464,"line_end":464,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899935,"byte_end":8899938,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899943,"byte_end":8899959,"line_start":466,"line_end":466,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899964,"byte_end":8899967,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899972,"byte_end":8899990,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8899995,"byte_end":8900034,"line_start":469,"line_end":469,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8900039,"byte_end":8900092,"line_start":470,"line_end":470,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8900097,"byte_end":8900100,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8900105,"byte_end":8900147,"line_start":472,"line_end":472,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8900152,"byte_end":8900179,"line_start":473,"line_end":473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8900184,"byte_end":8900187,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8900192,"byte_end":8900236,"line_start":475,"line_end":475,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8900241,"byte_end":8900262,"line_start":476,"line_end":476,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8900267,"byte_end":8900270,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8900275,"byte_end":8900289,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8900294,"byte_end":8900299,"line_start":479,"line_end":479,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8900304,"byte_end":8900311,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3657},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8902675,"byte_end":8902683,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8902342,"byte_end":8902406,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8902407,"byte_end":8902410,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8902411,"byte_end":8902499,"line_start":22,"line_end":22,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8902500,"byte_end":8902527,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8902528,"byte_end":8902531,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8902532,"byte_end":8902560,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8902561,"byte_end":8902594,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8902595,"byte_end":8902646,"line_start":27,"line_end":27,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3664},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903297,"byte_end":8903306,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8902705,"byte_end":8902770,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8902771,"byte_end":8902774,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8902775,"byte_end":8902861,"line_start":33,"line_end":33,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8902862,"byte_end":8902914,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8902915,"byte_end":8902918,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8902919,"byte_end":8903000,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903001,"byte_end":8903036,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903037,"byte_end":8903040,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903041,"byte_end":8903069,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903070,"byte_end":8903103,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903104,"byte_end":8903151,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903152,"byte_end":8903214,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903215,"byte_end":8903268,"line_start":43,"line_end":43,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904622,"byte_end":8904631,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903480,"byte_end":8903554,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903559,"byte_end":8903632,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903637,"byte_end":8903651,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903656,"byte_end":8903659,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903664,"byte_end":8903735,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903740,"byte_end":8903814,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903819,"byte_end":8903843,"line_start":58,"line_end":58,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903848,"byte_end":8903851,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903856,"byte_end":8903929,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903934,"byte_end":8903937,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903942,"byte_end":8903956,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903961,"byte_end":8903964,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903969,"byte_end":8903982,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903987,"byte_end":8904022,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904027,"byte_end":8904057,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904062,"byte_end":8904065,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904070,"byte_end":8904103,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904108,"byte_end":8904111,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904116,"byte_end":8904134,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904139,"byte_end":8904178,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904183,"byte_end":8904252,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904257,"byte_end":8904305,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904310,"byte_end":8904340,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904345,"byte_end":8904390,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904395,"byte_end":8904398,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904403,"byte_end":8904425,"line_start":77,"line_end":77,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904430,"byte_end":8904475,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904480,"byte_end":8904498,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904503,"byte_end":8904506,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904511,"byte_end":8904525,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904530,"byte_end":8904535,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904540,"byte_end":8904547,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904552,"byte_end":8904555,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904560,"byte_end":8904610,"line_start":85,"line_end":85,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3350},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8906091,"byte_end":8906095,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904793,"byte_end":8904863,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904868,"byte_end":8904937,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904942,"byte_end":8904981,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904986,"byte_end":8904989,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8904994,"byte_end":8905062,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905067,"byte_end":8905070,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905075,"byte_end":8905115,"line_start":100,"line_end":100,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905120,"byte_end":8905123,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905128,"byte_end":8905142,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905147,"byte_end":8905150,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905155,"byte_end":8905168,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905173,"byte_end":8905203,"line_start":105,"line_end":105,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905208,"byte_end":8905240,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905245,"byte_end":8905271,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905276,"byte_end":8905279,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905284,"byte_end":8905302,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905307,"byte_end":8905358,"line_start":110,"line_end":110,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905363,"byte_end":8905391,"line_start":111,"line_end":111,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905396,"byte_end":8905465,"line_start":112,"line_end":112,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905470,"byte_end":8905518,"line_start":113,"line_end":113,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905523,"byte_end":8905526,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905531,"byte_end":8905560,"line_start":115,"line_end":115,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905565,"byte_end":8905594,"line_start":116,"line_end":116,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905599,"byte_end":8905602,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905607,"byte_end":8905634,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905639,"byte_end":8905686,"line_start":119,"line_end":119,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905691,"byte_end":8905694,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905699,"byte_end":8905723,"line_start":121,"line_end":121,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905728,"byte_end":8905787,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905792,"byte_end":8905831,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905836,"byte_end":8905839,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905844,"byte_end":8905858,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905863,"byte_end":8905868,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905873,"byte_end":8905880,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905885,"byte_end":8905888,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905893,"byte_end":8905958,"line_start":129,"line_end":129,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905963,"byte_end":8905966,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8905971,"byte_end":8906017,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8906022,"byte_end":8906073,"line_start":132,"line_end":132,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3671},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8908625,"byte_end":8908638,"line_start":31,"line_end":31,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":3672}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8908274,"byte_end":8908340,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8908341,"byte_end":8908344,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8908345,"byte_end":8908432,"line_start":24,"line_end":24,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8908433,"byte_end":8908467,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8908468,"byte_end":8908471,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8908472,"byte_end":8908500,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8908501,"byte_end":8908544,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8908545,"byte_end":8908596,"line_start":29,"line_end":29,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3675},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8909364,"byte_end":8909378,"line_start":50,"line_end":50,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":3676},{"krate":0,"index":3677}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8908671,"byte_end":8908738,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8908739,"byte_end":8908742,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8908743,"byte_end":8908830,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/ shut down the TCP stream in the write direction.  Dropping the write half","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8908831,"byte_end":8908908,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ will also shut down the write half of the TCP stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8908909,"byte_end":8908966,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8908967,"byte_end":8908970,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8908971,"byte_end":8909057,"line_start":41,"line_end":41,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8909058,"byte_end":8909093,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8909094,"byte_end":8909097,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8909098,"byte_end":8909126,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8909127,"byte_end":8909170,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8909171,"byte_end":8909218,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8909219,"byte_end":8909281,"line_start":47,"line_end":47,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8909282,"byte_end":8909335,"line_start":48,"line_end":48,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3680},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8910343,"byte_end":8910355,"line_start":84,"line_end":84,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8910211,"byte_end":8910293,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8910294,"byte_end":8910314,"line_start":82,"line_end":82,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3682},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8910356,"byte_end":8910373,"line_start":84,"line_end":84,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":3680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3683},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8910375,"byte_end":8910393,"line_start":84,"line_end":84,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":3680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3392},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8910939,"byte_end":8910946,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8910676,"byte_end":8910745,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8910750,"byte_end":8910814,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8910819,"byte_end":8910871,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8910876,"byte_end":8910879,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8910884,"byte_end":8910927,"line_start":102,"line_end":102,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912196,"byte_end":8912205,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911053,"byte_end":8911127,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911132,"byte_end":8911205,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911210,"byte_end":8911224,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911229,"byte_end":8911232,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911237,"byte_end":8911308,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911313,"byte_end":8911387,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911392,"byte_end":8911416,"line_start":113,"line_end":113,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911421,"byte_end":8911424,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911429,"byte_end":8911502,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911507,"byte_end":8911510,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911515,"byte_end":8911529,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911534,"byte_end":8911537,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911542,"byte_end":8911555,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911560,"byte_end":8911595,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911600,"byte_end":8911630,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911635,"byte_end":8911638,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911643,"byte_end":8911676,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911681,"byte_end":8911684,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911689,"byte_end":8911707,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911712,"byte_end":8911751,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911756,"byte_end":8911821,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911826,"byte_end":8911879,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911884,"byte_end":8911914,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911919,"byte_end":8911964,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911969,"byte_end":8911972,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8911977,"byte_end":8911999,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912004,"byte_end":8912049,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912054,"byte_end":8912072,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912077,"byte_end":8912080,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912085,"byte_end":8912099,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912104,"byte_end":8912109,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912114,"byte_end":8912121,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912126,"byte_end":8912129,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912134,"byte_end":8912184,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3394},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913670,"byte_end":8913674,"line_start":188,"line_end":188,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912371,"byte_end":8912441,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912446,"byte_end":8912515,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912520,"byte_end":8912559,"line_start":151,"line_end":151,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912564,"byte_end":8912567,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912572,"byte_end":8912640,"line_start":153,"line_end":153,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912645,"byte_end":8912648,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912653,"byte_end":8912693,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912698,"byte_end":8912701,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912706,"byte_end":8912720,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912725,"byte_end":8912728,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912733,"byte_end":8912746,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912751,"byte_end":8912781,"line_start":160,"line_end":160,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912786,"byte_end":8912818,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912823,"byte_end":8912849,"line_start":162,"line_end":162,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912854,"byte_end":8912857,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912862,"byte_end":8912880,"line_start":164,"line_end":164,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912885,"byte_end":8912936,"line_start":165,"line_end":165,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912941,"byte_end":8912969,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8912974,"byte_end":8913039,"line_start":167,"line_end":167,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913044,"byte_end":8913097,"line_start":168,"line_end":168,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913102,"byte_end":8913105,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913110,"byte_end":8913139,"line_start":170,"line_end":170,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913144,"byte_end":8913173,"line_start":171,"line_end":171,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913178,"byte_end":8913181,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913186,"byte_end":8913213,"line_start":173,"line_end":173,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913218,"byte_end":8913265,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913270,"byte_end":8913273,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913278,"byte_end":8913302,"line_start":176,"line_end":176,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913307,"byte_end":8913366,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913371,"byte_end":8913410,"line_start":178,"line_end":178,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913415,"byte_end":8913418,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913423,"byte_end":8913437,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913442,"byte_end":8913447,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913452,"byte_end":8913459,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913464,"byte_end":8913467,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913472,"byte_end":8913537,"line_start":184,"line_end":184,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913542,"byte_end":8913545,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913550,"byte_end":8913596,"line_start":186,"line_end":186,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913601,"byte_end":8913652,"line_start":187,"line_end":187,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3401},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8914349,"byte_end":8914356,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8914086,"byte_end":8914155,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8914160,"byte_end":8914224,"line_start":206,"line_end":206,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8914229,"byte_end":8914281,"line_start":207,"line_end":207,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8914286,"byte_end":8914289,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8914294,"byte_end":8914337,"line_start":209,"line_end":209,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3402},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8914661,"byte_end":8914667,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8914462,"byte_end":8914534,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8914539,"byte_end":8914608,"line_start":215,"line_end":215,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8914613,"byte_end":8914649,"line_start":216,"line_end":216,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3686},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8918577,"byte_end":8918586,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":3687}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":21507,"byte_end":21530,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3455},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8920120,"byte_end":8920127,"line_start":109,"line_end":109,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8918665,"byte_end":8918709,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8918714,"byte_end":8918717,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8918722,"byte_end":8918796,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address. Note that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8918801,"byte_end":8918870,"line_start":75,"line_end":75,"column_start":5,"column_end":74}},{"value":"/ strings only implement this trait when the **`net`** feature is enabled,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8918875,"byte_end":8918951,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ as strings may contain domain names that need to be resolved.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8918956,"byte_end":8919021,"line_start":77,"line_end":77,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919026,"byte_end":8919029,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919034,"byte_end":8919110,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919115,"byte_end":8919184,"line_start":80,"line_end":80,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919189,"byte_end":8919265,"line_start":81,"line_end":81,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919270,"byte_end":8919329,"line_start":82,"line_end":82,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919334,"byte_end":8919337,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919342,"byte_end":8919396,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919401,"byte_end":8919404,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919409,"byte_end":8919423,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919428,"byte_end":8919431,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919436,"byte_end":8919449,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919454,"byte_end":8919484,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919489,"byte_end":8919522,"line_start":90,"line_end":90,"column_start":5,"column_end":38}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919527,"byte_end":8919553,"line_start":91,"line_end":91,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919558,"byte_end":8919561,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919566,"byte_end":8919584,"line_start":93,"line_end":93,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919589,"byte_end":8919640,"line_start":94,"line_end":94,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919645,"byte_end":8919673,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919678,"byte_end":8919747,"line_start":96,"line_end":96,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919752,"byte_end":8919755,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919760,"byte_end":8919787,"line_start":98,"line_end":98,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919792,"byte_end":8919841,"line_start":99,"line_end":99,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919846,"byte_end":8919849,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919854,"byte_end":8919868,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919873,"byte_end":8919878,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919883,"byte_end":8919890,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919895,"byte_end":8919898,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919903,"byte_end":8919974,"line_start":105,"line_end":105,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919979,"byte_end":8919982,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8919987,"byte_end":8920044,"line_start":107,"line_end":107,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8920049,"byte_end":8920102,"line_start":108,"line_end":108,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3468},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922851,"byte_end":8922859,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(std::net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8921734,"byte_end":8921791,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8921796,"byte_end":8921799,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8921804,"byte_end":8921874,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8921879,"byte_end":8921955,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8921960,"byte_end":8922031,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922036,"byte_end":8922058,"line_start":163,"line_end":163,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922063,"byte_end":8922066,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922071,"byte_end":8922085,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922090,"byte_end":8922093,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922098,"byte_end":8922116,"line_start":167,"line_end":167,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922121,"byte_end":8922147,"line_start":168,"line_end":168,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922152,"byte_end":8922182,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922187,"byte_end":8922190,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922195,"byte_end":8922213,"line_start":171,"line_end":171,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922218,"byte_end":8922269,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922274,"byte_end":8922348,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/     std_stream.set_nonblocking(true)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922353,"byte_end":8922395,"line_start":174,"line_end":174,"column_start":5,"column_end":47}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922400,"byte_end":8922454,"line_start":175,"line_end":175,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922459,"byte_end":8922473,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922478,"byte_end":8922483,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922488,"byte_end":8922495,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922500,"byte_end":8922503,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922508,"byte_end":8922520,"line_start":180,"line_end":180,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922525,"byte_end":8922528,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922533,"byte_end":8922593,"line_start":182,"line_end":182,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922598,"byte_end":8922601,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922606,"byte_end":8922676,"line_start":184,"line_end":184,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922681,"byte_end":8922754,"line_start":185,"line_end":185,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8922759,"byte_end":8922839,"line_start":186,"line_end":186,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3469},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8924501,"byte_end":8924509,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"into_std","qualname":"<TcpStream>::into_std","value":"pub fn into_std(Self) -> io::Result<std::net::TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923052,"byte_end":8923120,"line_start":193,"line_end":193,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923125,"byte_end":8923128,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::net::TcpStream`] will have `nonblocking mode` set as `true`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923133,"byte_end":8923217,"line_start":195,"line_end":195,"column_start":5,"column_end":89}},{"value":"/ Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923222,"byte_end":8923288,"line_start":196,"line_end":196,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923293,"byte_end":8923296,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923301,"byte_end":8923315,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923320,"byte_end":8923323,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923328,"byte_end":8923335,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923340,"byte_end":8923366,"line_start":201,"line_end":201,"column_start":5,"column_end":31}},{"value":"/ use std::io::Read;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923371,"byte_end":8923393,"line_start":202,"line_end":202,"column_start":5,"column_end":27}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923398,"byte_end":8923430,"line_start":203,"line_end":203,"column_start":5,"column_end":37}},{"value":"/ # use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923435,"byte_end":8923467,"line_start":204,"line_end":204,"column_start":5,"column_end":37}},{"value":"/ # use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923472,"byte_end":8923507,"line_start":205,"line_end":205,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923512,"byte_end":8923515,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923520,"byte_end":8923538,"line_start":207,"line_end":207,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923543,"byte_end":8923594,"line_start":208,"line_end":208,"column_start":5,"column_end":56}},{"value":"/     let mut data = [0u8; 12];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923599,"byte_end":8923632,"line_start":209,"line_end":209,"column_start":5,"column_end":38}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923637,"byte_end":8923704,"line_start":210,"line_end":210,"column_start":5,"column_end":72}},{"value":"/ #   let handle = tokio::spawn(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923709,"byte_end":8923750,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ #       let mut stream: TcpStream = TcpStream::connect(\"127.0.0.1:34254\").await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923755,"byte_end":8923848,"line_start":212,"line_end":212,"column_start":5,"column_end":98}},{"value":"/ #       stream.write(b\"Hello world!\").await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923853,"byte_end":8923910,"line_start":213,"line_end":213,"column_start":5,"column_end":62}},{"value":"/ #   });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923915,"byte_end":8923926,"line_start":214,"line_end":214,"column_start":5,"column_end":16}},{"value":"/     let (tokio_tcp_stream, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923931,"byte_end":8923992,"line_start":215,"line_end":215,"column_start":5,"column_end":66}},{"value":"/     let mut std_tcp_stream = tokio_tcp_stream.into_std()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8923997,"byte_end":8924059,"line_start":216,"line_end":216,"column_start":5,"column_end":67}},{"value":"/ #   handle.await.expect(\"The task being joined has panicked\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8924064,"byte_end":8924130,"line_start":217,"line_end":217,"column_start":5,"column_end":71}},{"value":"/     std_tcp_stream.set_nonblocking(false)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8924135,"byte_end":8924182,"line_start":218,"line_end":218,"column_start":5,"column_end":52}},{"value":"/     std_tcp_stream.read_exact(&mut data)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8924187,"byte_end":8924233,"line_start":219,"line_end":219,"column_start":5,"column_end":51}},{"value":"/ #   assert_eq!(b\"Hello world!\", &data);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8924238,"byte_end":8924281,"line_start":220,"line_end":220,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8924286,"byte_end":8924300,"line_start":221,"line_end":221,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8924305,"byte_end":8924310,"line_start":222,"line_end":222,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8924315,"byte_end":8924322,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ [`tokio::net::TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8924327,"byte_end":8924367,"line_start":224,"line_end":224,"column_start":5,"column_end":45}},{"value":"/ [`std::net::TcpStream`]: std::net::TcpStream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8924372,"byte_end":8924420,"line_start":225,"line_end":225,"column_start":5,"column_end":53}},{"value":"/ [`set_nonblocking`]: fn@std::net::TcpStream::set_nonblocking","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8924425,"byte_end":8924489,"line_start":226,"line_end":226,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3472},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925419,"byte_end":8925429,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925020,"byte_end":8925079,"line_start":245,"line_end":245,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925084,"byte_end":8925087,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925092,"byte_end":8925106,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925111,"byte_end":8925114,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925119,"byte_end":8925132,"line_start":249,"line_end":249,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925137,"byte_end":8925167,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925172,"byte_end":8925175,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925180,"byte_end":8925244,"line_start":252,"line_end":252,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925249,"byte_end":8925310,"line_start":253,"line_end":253,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925315,"byte_end":8925318,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925323,"byte_end":8925366,"line_start":255,"line_end":255,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925371,"byte_end":8925383,"line_start":256,"line_end":256,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925388,"byte_end":8925395,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925400,"byte_end":8925407,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3473},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925908,"byte_end":8925917,"line_start":277,"line_end":277,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925505,"byte_end":8925569,"line_start":263,"line_end":263,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925574,"byte_end":8925577,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925582,"byte_end":8925596,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925601,"byte_end":8925604,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925609,"byte_end":8925622,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925627,"byte_end":8925657,"line_start":268,"line_end":268,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925662,"byte_end":8925665,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925670,"byte_end":8925734,"line_start":270,"line_end":270,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925739,"byte_end":8925800,"line_start":271,"line_end":271,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925805,"byte_end":8925808,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925813,"byte_end":8925855,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925860,"byte_end":8925872,"line_start":274,"line_end":274,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925877,"byte_end":8925884,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925889,"byte_end":8925896,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3474},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8927408,"byte_end":8927417,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8925992,"byte_end":8926067,"line_start":281,"line_end":281,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926072,"byte_end":8926145,"line_start":282,"line_end":282,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926150,"byte_end":8926164,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926169,"byte_end":8926172,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek`, `poll_read` or","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926177,"byte_end":8926239,"line_start":285,"line_end":285,"column_start":5,"column_end":67}},{"value":"/ `poll_read_ready`, only the `Waker` from the `Context` passed to the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926244,"byte_end":8926316,"line_start":286,"line_end":286,"column_start":5,"column_end":77}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926321,"byte_end":8926385,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ `poll_write` retains a second, independent waker.)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926390,"byte_end":8926444,"line_start":288,"line_end":288,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926449,"byte_end":8926452,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926457,"byte_end":8926475,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926480,"byte_end":8926483,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926488,"byte_end":8926513,"line_start":292,"line_end":292,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926518,"byte_end":8926521,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926526,"byte_end":8926577,"line_start":294,"line_end":294,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926582,"byte_end":8926665,"line_start":295,"line_end":295,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926670,"byte_end":8926725,"line_start":296,"line_end":296,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926730,"byte_end":8926733,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926738,"byte_end":8926750,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926755,"byte_end":8926758,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926763,"byte_end":8926838,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926843,"byte_end":8926846,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926851,"byte_end":8926865,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926870,"byte_end":8926873,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926878,"byte_end":8926891,"line_start":304,"line_end":304,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926896,"byte_end":8926931,"line_start":305,"line_end":305,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926936,"byte_end":8926966,"line_start":306,"line_end":306,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926971,"byte_end":8926974,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8926979,"byte_end":8927012,"line_start":308,"line_end":308,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8927017,"byte_end":8927020,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8927025,"byte_end":8927043,"line_start":310,"line_end":310,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8927048,"byte_end":8927087,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8927092,"byte_end":8927157,"line_start":312,"line_end":312,"column_start":5,"column_end":70}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8927162,"byte_end":8927192,"line_start":313,"line_end":313,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8927197,"byte_end":8927242,"line_start":314,"line_end":314,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8927247,"byte_end":8927250,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8927255,"byte_end":8927277,"line_start":316,"line_end":316,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8927282,"byte_end":8927324,"line_start":317,"line_end":317,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8927329,"byte_end":8927347,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8927352,"byte_end":8927355,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8927360,"byte_end":8927374,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8927379,"byte_end":8927384,"line_start":321,"line_end":321,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8927389,"byte_end":8927396,"line_start":322,"line_end":322,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3475},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930489,"byte_end":8930494,"line_start":409,"line_end":409,"column_start":18,"column_end":23},"name":"ready","qualname":"<TcpStream>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928224,"byte_end":8928271,"line_start":349,"line_end":349,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928276,"byte_end":8928279,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_read()` or `try_write()`. It","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928284,"byte_end":8928358,"line_start":351,"line_end":351,"column_start":5,"column_end":79}},{"value":"/ can be used to concurrently read / write to the same socket on a single","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928363,"byte_end":8928438,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/ task without splitting the socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928443,"byte_end":8928481,"line_start":353,"line_end":353,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928486,"byte_end":8928489,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928494,"byte_end":8928508,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928513,"byte_end":8928516,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Concurrently read and write to the stream on the same task without","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928521,"byte_end":8928591,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ splitting.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928596,"byte_end":8928610,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928615,"byte_end":8928618,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928623,"byte_end":8928636,"line_start":360,"line_end":360,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928641,"byte_end":8928669,"line_start":361,"line_end":361,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928674,"byte_end":8928704,"line_start":362,"line_end":362,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928709,"byte_end":8928735,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928740,"byte_end":8928756,"line_start":364,"line_end":364,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928761,"byte_end":8928764,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928769,"byte_end":8928787,"line_start":366,"line_end":366,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928792,"byte_end":8928843,"line_start":367,"line_end":367,"column_start":5,"column_end":56}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928848,"byte_end":8928913,"line_start":368,"line_end":368,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928918,"byte_end":8928921,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928926,"byte_end":8928940,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/         let ready = stream.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8928945,"byte_end":8929030,"line_start":371,"line_end":371,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929035,"byte_end":8929038,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929043,"byte_end":8929079,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/             let mut data = vec![0; 1024];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929084,"byte_end":8929129,"line_start":374,"line_end":374,"column_start":5,"column_end":50}},{"value":"/             // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929134,"byte_end":8929208,"line_start":375,"line_end":375,"column_start":5,"column_end":79}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929213,"byte_end":8929275,"line_start":376,"line_end":376,"column_start":5,"column_end":67}},{"value":"/             match stream.try_read(&mut data) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929280,"byte_end":8929330,"line_start":377,"line_end":377,"column_start":5,"column_end":55}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929335,"byte_end":8929365,"line_start":378,"line_end":378,"column_start":5,"column_end":35}},{"value":"/                     println!(\"read {} bytes\", n);        ","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929370,"byte_end":8929431,"line_start":379,"line_end":379,"column_start":5,"column_end":66}},{"value":"/                 }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929436,"byte_end":8929457,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929462,"byte_end":8929538,"line_start":381,"line_end":381,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929543,"byte_end":8929576,"line_start":382,"line_end":382,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929581,"byte_end":8929602,"line_start":383,"line_end":383,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929607,"byte_end":8929638,"line_start":384,"line_end":384,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929643,"byte_end":8929688,"line_start":385,"line_end":385,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929693,"byte_end":8929714,"line_start":386,"line_end":386,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929719,"byte_end":8929736,"line_start":387,"line_end":387,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929741,"byte_end":8929744,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929749,"byte_end":8929762,"line_start":389,"line_end":389,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929767,"byte_end":8929770,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929775,"byte_end":8929811,"line_start":391,"line_end":391,"column_start":5,"column_end":41}},{"value":"/             // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929816,"byte_end":8929891,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929896,"byte_end":8929958,"line_start":393,"line_end":393,"column_start":5,"column_end":67}},{"value":"/             match stream.try_write(b\"hello world\") {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8929963,"byte_end":8930019,"line_start":394,"line_end":394,"column_start":5,"column_end":61}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930024,"byte_end":8930054,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/                     println!(\"write {} bytes\", n);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930059,"byte_end":8930113,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/                 }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930118,"byte_end":8930139,"line_start":397,"line_end":397,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930144,"byte_end":8930220,"line_start":398,"line_end":398,"column_start":5,"column_end":81}},{"value":"/                     continue","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930225,"byte_end":8930257,"line_start":399,"line_end":399,"column_start":5,"column_end":37}},{"value":"/                 }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930262,"byte_end":8930283,"line_start":400,"line_end":400,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930288,"byte_end":8930319,"line_start":401,"line_end":401,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930324,"byte_end":8930369,"line_start":402,"line_end":402,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930374,"byte_end":8930395,"line_start":403,"line_end":403,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930400,"byte_end":8930417,"line_start":404,"line_end":404,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930422,"byte_end":8930435,"line_start":405,"line_end":405,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930440,"byte_end":8930449,"line_start":406,"line_end":406,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930454,"byte_end":8930459,"line_start":407,"line_end":407,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930464,"byte_end":8930471,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3478},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932014,"byte_end":8932022,"line_start":457,"line_end":457,"column_start":18,"column_end":26},"name":"readable","qualname":"<TcpStream>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930651,"byte_end":8930694,"line_start":414,"line_end":414,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930699,"byte_end":8930702,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930707,"byte_end":8930784,"line_start":416,"line_end":416,"column_start":5,"column_end":82}},{"value":"/ paired with `try_read()`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930789,"byte_end":8930818,"line_start":417,"line_end":417,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930823,"byte_end":8930826,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930831,"byte_end":8930845,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930850,"byte_end":8930853,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930858,"byte_end":8930871,"line_start":421,"line_end":421,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930876,"byte_end":8930906,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930911,"byte_end":8930937,"line_start":423,"line_end":423,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930942,"byte_end":8930958,"line_start":424,"line_end":424,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930963,"byte_end":8930966,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930971,"byte_end":8930989,"line_start":426,"line_end":426,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8930994,"byte_end":8931045,"line_start":427,"line_end":427,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931050,"byte_end":8931078,"line_start":428,"line_end":428,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931083,"byte_end":8931148,"line_start":429,"line_end":429,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931153,"byte_end":8931156,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/     let mut msg = vec![0; 1024];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931161,"byte_end":8931197,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931202,"byte_end":8931205,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931210,"byte_end":8931224,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931229,"byte_end":8931278,"line_start":434,"line_end":434,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931283,"byte_end":8931320,"line_start":435,"line_end":435,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931325,"byte_end":8931328,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931333,"byte_end":8931403,"line_start":437,"line_end":437,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931408,"byte_end":8931466,"line_start":438,"line_end":438,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut msg) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931471,"byte_end":8931516,"line_start":439,"line_end":439,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931521,"byte_end":8931547,"line_start":440,"line_end":440,"column_start":5,"column_end":31}},{"value":"/                 msg.truncate(n);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931552,"byte_end":8931588,"line_start":441,"line_end":441,"column_start":5,"column_end":41}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931593,"byte_end":8931619,"line_start":442,"line_end":442,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931624,"byte_end":8931641,"line_start":443,"line_end":443,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931646,"byte_end":8931718,"line_start":444,"line_end":444,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931723,"byte_end":8931752,"line_start":445,"line_end":445,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931757,"byte_end":8931774,"line_start":446,"line_end":446,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931779,"byte_end":8931806,"line_start":447,"line_end":447,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931811,"byte_end":8931852,"line_start":448,"line_end":448,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931857,"byte_end":8931874,"line_start":449,"line_end":449,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931879,"byte_end":8931892,"line_start":450,"line_end":450,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931897,"byte_end":8931906,"line_start":451,"line_end":451,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931911,"byte_end":8931914,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     println!(\"GOT = {:?}\", msg);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931919,"byte_end":8931955,"line_start":453,"line_end":453,"column_start":5,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931960,"byte_end":8931974,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931979,"byte_end":8931984,"line_start":455,"line_end":455,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8931989,"byte_end":8931996,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3481},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933394,"byte_end":8933409,"line_start":491,"line_end":491,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<TcpStream>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932123,"byte_end":8932152,"line_start":462,"line_end":462,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932157,"byte_end":8932160,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for reading, this method will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932165,"byte_end":8932239,"line_start":464,"line_end":464,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932244,"byte_end":8932318,"line_start":465,"line_end":465,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for reading, `Waker::wake` will be called on the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932323,"byte_end":8932396,"line_start":466,"line_end":466,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932401,"byte_end":8932411,"line_start":467,"line_end":467,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932416,"byte_end":8932419,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_read_ready`, `poll_read` or","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932424,"byte_end":8932492,"line_start":469,"line_end":469,"column_start":5,"column_end":73}},{"value":"/ `poll_peek`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932497,"byte_end":8932568,"line_start":470,"line_end":470,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932573,"byte_end":8932632,"line_start":471,"line_end":471,"column_start":5,"column_end":64}},{"value":"/ `poll_write_ready` retains a second, independent waker.)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932637,"byte_end":8932697,"line_start":472,"line_end":472,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932702,"byte_end":8932705,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932710,"byte_end":8932785,"line_start":474,"line_end":474,"column_start":5,"column_end":80}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932790,"byte_end":8932865,"line_start":475,"line_end":475,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932870,"byte_end":8932938,"line_start":476,"line_end":476,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932943,"byte_end":8932946,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932951,"byte_end":8932969,"line_start":478,"line_end":478,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932974,"byte_end":8932977,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8932982,"byte_end":8933007,"line_start":480,"line_end":480,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933012,"byte_end":8933015,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for reading.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933020,"byte_end":8933085,"line_start":482,"line_end":482,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for reading.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933090,"byte_end":8933157,"line_start":483,"line_end":483,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933162,"byte_end":8933217,"line_start":484,"line_end":484,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933222,"byte_end":8933225,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933230,"byte_end":8933242,"line_start":486,"line_end":486,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933247,"byte_end":8933250,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933255,"byte_end":8933330,"line_start":488,"line_end":488,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933335,"byte_end":8933338,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933343,"byte_end":8933382,"line_start":490,"line_end":490,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3483},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935745,"byte_end":8935753,"line_start":554,"line_end":554,"column_start":12,"column_end":20},"name":"try_read","qualname":"<TcpStream>::try_read","value":"pub fn try_read(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, returning how\n many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffer, returning how","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933542,"byte_end":8933618,"line_start":495,"line_end":495,"column_start":5,"column_end":81}},{"value":"/ many bytes were read.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933623,"byte_end":8933648,"line_start":496,"line_end":496,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933653,"byte_end":8933656,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933661,"byte_end":8933737,"line_start":498,"line_end":498,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933742,"byte_end":8933810,"line_start":499,"line_end":499,"column_start":5,"column_end":73}},{"value":"/ `try_read()` is non-blocking, the buffer does not have to be stored by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933815,"byte_end":8933889,"line_start":500,"line_end":500,"column_start":5,"column_end":79}},{"value":"/ the async task and can exist entirely on the stack.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933894,"byte_end":8933949,"line_start":501,"line_end":501,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933954,"byte_end":8933957,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8933962,"byte_end":8934032,"line_start":503,"line_end":503,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934037,"byte_end":8934040,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ [`readable()`]: TcpStream::readable()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934045,"byte_end":8934086,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/ [`ready()`]: TcpStream::ready()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934091,"byte_end":8934126,"line_start":506,"line_end":506,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934131,"byte_end":8934134,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934139,"byte_end":8934151,"line_start":508,"line_end":508,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934156,"byte_end":8934159,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934164,"byte_end":8934235,"line_start":510,"line_end":510,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934240,"byte_end":8934316,"line_start":511,"line_end":511,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934321,"byte_end":8934395,"line_start":512,"line_end":512,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934400,"byte_end":8934449,"line_start":513,"line_end":513,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934454,"byte_end":8934457,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934462,"byte_end":8934476,"line_start":515,"line_end":515,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934481,"byte_end":8934484,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934489,"byte_end":8934502,"line_start":517,"line_end":517,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934507,"byte_end":8934537,"line_start":518,"line_end":518,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934542,"byte_end":8934568,"line_start":519,"line_end":519,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934573,"byte_end":8934589,"line_start":520,"line_end":520,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934594,"byte_end":8934597,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934602,"byte_end":8934620,"line_start":522,"line_end":522,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934625,"byte_end":8934676,"line_start":523,"line_end":523,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934681,"byte_end":8934709,"line_start":524,"line_end":524,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934714,"byte_end":8934779,"line_start":525,"line_end":525,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934784,"byte_end":8934787,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934792,"byte_end":8934806,"line_start":527,"line_end":527,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934811,"byte_end":8934860,"line_start":528,"line_end":528,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934865,"byte_end":8934902,"line_start":529,"line_end":529,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934907,"byte_end":8934910,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934915,"byte_end":8934988,"line_start":531,"line_end":531,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8934993,"byte_end":8935039,"line_start":532,"line_end":532,"column_start":5,"column_end":51}},{"value":"/         let mut buf = [0; 4096];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935044,"byte_end":8935080,"line_start":533,"line_end":533,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935085,"byte_end":8935088,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935093,"byte_end":8935163,"line_start":535,"line_end":535,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935168,"byte_end":8935226,"line_start":536,"line_end":536,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut buf) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935231,"byte_end":8935276,"line_start":537,"line_end":537,"column_start":5,"column_end":50}},{"value":"/             Ok(0) => break,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935281,"byte_end":8935312,"line_start":538,"line_end":538,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935317,"byte_end":8935343,"line_start":539,"line_end":539,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935348,"byte_end":8935397,"line_start":540,"line_end":540,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935402,"byte_end":8935419,"line_start":541,"line_end":541,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935424,"byte_end":8935496,"line_start":542,"line_end":542,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935501,"byte_end":8935530,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935535,"byte_end":8935552,"line_start":544,"line_end":544,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935557,"byte_end":8935584,"line_start":545,"line_end":545,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935589,"byte_end":8935630,"line_start":546,"line_end":546,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935635,"byte_end":8935652,"line_start":547,"line_end":547,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935657,"byte_end":8935670,"line_start":548,"line_end":548,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935675,"byte_end":8935684,"line_start":549,"line_end":549,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935689,"byte_end":8935692,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935697,"byte_end":8935711,"line_start":551,"line_end":551,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935716,"byte_end":8935721,"line_start":552,"line_end":552,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935726,"byte_end":8935733,"line_start":553,"line_end":553,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3486},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937190,"byte_end":8937198,"line_start":601,"line_end":601,"column_start":18,"column_end":26},"name":"writable","qualname":"<TcpStream>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935949,"byte_end":8935992,"line_start":562,"line_end":562,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8935997,"byte_end":8936000,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is usually","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936005,"byte_end":8936082,"line_start":564,"line_end":564,"column_start":5,"column_end":82}},{"value":"/ paired with `try_write()`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936087,"byte_end":8936117,"line_start":565,"line_end":565,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936122,"byte_end":8936125,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936130,"byte_end":8936144,"line_start":567,"line_end":567,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936149,"byte_end":8936152,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936157,"byte_end":8936170,"line_start":569,"line_end":569,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936175,"byte_end":8936205,"line_start":570,"line_end":570,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936210,"byte_end":8936236,"line_start":571,"line_end":571,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936241,"byte_end":8936257,"line_start":572,"line_end":572,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936262,"byte_end":8936265,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936270,"byte_end":8936288,"line_start":574,"line_end":574,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936293,"byte_end":8936344,"line_start":575,"line_end":575,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936349,"byte_end":8936377,"line_start":576,"line_end":576,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936382,"byte_end":8936447,"line_start":577,"line_end":577,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936452,"byte_end":8936455,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936460,"byte_end":8936474,"line_start":579,"line_end":579,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936479,"byte_end":8936528,"line_start":580,"line_end":580,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936533,"byte_end":8936570,"line_start":581,"line_end":581,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936575,"byte_end":8936578,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936583,"byte_end":8936654,"line_start":583,"line_end":583,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936659,"byte_end":8936717,"line_start":584,"line_end":584,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936722,"byte_end":8936774,"line_start":585,"line_end":585,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936779,"byte_end":8936805,"line_start":586,"line_end":586,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936810,"byte_end":8936836,"line_start":587,"line_end":587,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936841,"byte_end":8936858,"line_start":588,"line_end":588,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936863,"byte_end":8936935,"line_start":589,"line_end":589,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936940,"byte_end":8936969,"line_start":590,"line_end":590,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936974,"byte_end":8936991,"line_start":591,"line_end":591,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8936996,"byte_end":8937023,"line_start":592,"line_end":592,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937028,"byte_end":8937069,"line_start":593,"line_end":593,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937074,"byte_end":8937091,"line_start":594,"line_end":594,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937096,"byte_end":8937109,"line_start":595,"line_end":595,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937114,"byte_end":8937123,"line_start":596,"line_end":596,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937128,"byte_end":8937131,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937136,"byte_end":8937150,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937155,"byte_end":8937160,"line_start":599,"line_end":599,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937165,"byte_end":8937172,"line_start":600,"line_end":600,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938559,"byte_end":8938575,"line_start":635,"line_end":635,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<TcpStream>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937299,"byte_end":8937329,"line_start":606,"line_end":606,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937334,"byte_end":8937337,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for writing, this method will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937342,"byte_end":8937416,"line_start":608,"line_end":608,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937421,"byte_end":8937495,"line_start":609,"line_end":609,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for writing, `Waker::wake` will be called on the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937500,"byte_end":8937573,"line_start":610,"line_end":610,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937578,"byte_end":8937588,"line_start":611,"line_end":611,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937593,"byte_end":8937596,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_write_ready` or `poll_write`, only","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937601,"byte_end":8937676,"line_start":613,"line_end":613,"column_start":5,"column_end":80}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937681,"byte_end":8937749,"line_start":614,"line_end":614,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_read_ready` retains a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937754,"byte_end":8937826,"line_start":615,"line_end":615,"column_start":5,"column_end":77}},{"value":"/ second, independent waker.)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937831,"byte_end":8937862,"line_start":616,"line_end":616,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937867,"byte_end":8937870,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937875,"byte_end":8937950,"line_start":618,"line_end":618,"column_start":5,"column_end":80}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8937955,"byte_end":8938030,"line_start":619,"line_end":619,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938035,"byte_end":8938103,"line_start":620,"line_end":620,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938108,"byte_end":8938111,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938116,"byte_end":8938134,"line_start":622,"line_end":622,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938139,"byte_end":8938142,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938147,"byte_end":8938172,"line_start":624,"line_end":624,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938177,"byte_end":8938180,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for writing.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938185,"byte_end":8938250,"line_start":626,"line_end":626,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for writing.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938255,"byte_end":8938322,"line_start":627,"line_end":627,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938327,"byte_end":8938382,"line_start":628,"line_end":628,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938387,"byte_end":8938390,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938395,"byte_end":8938407,"line_start":630,"line_end":630,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938412,"byte_end":8938415,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938420,"byte_end":8938495,"line_start":632,"line_end":632,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938500,"byte_end":8938503,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938508,"byte_end":8938547,"line_start":634,"line_end":634,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3491},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940304,"byte_end":8940313,"line_start":687,"line_end":687,"column_start":12,"column_end":21},"name":"try_write","qualname":"<TcpStream>::try_write","value":"pub fn try_write(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write a buffer to the stream, returning how many bytes were\n written.","sig":null,"attributes":[{"value":"/ Try to write a buffer to the stream, returning how many bytes were","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938709,"byte_end":8938779,"line_start":639,"line_end":639,"column_start":5,"column_end":75}},{"value":"/ written.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938784,"byte_end":8938796,"line_start":640,"line_end":640,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938801,"byte_end":8938804,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ The function will attempt to write the entire contents of `buf`, but","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938809,"byte_end":8938881,"line_start":642,"line_end":642,"column_start":5,"column_end":77}},{"value":"/ only part of the buffer may be written.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938886,"byte_end":8938929,"line_start":643,"line_end":643,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938934,"byte_end":8938937,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8938942,"byte_end":8938996,"line_start":645,"line_end":645,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939001,"byte_end":8939004,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939009,"byte_end":8939021,"line_start":647,"line_end":647,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939026,"byte_end":8939029,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939034,"byte_end":8939108,"line_start":649,"line_end":649,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939113,"byte_end":8939183,"line_start":650,"line_end":650,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939188,"byte_end":8939237,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939242,"byte_end":8939245,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939250,"byte_end":8939264,"line_start":653,"line_end":653,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939269,"byte_end":8939272,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939277,"byte_end":8939290,"line_start":655,"line_end":655,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939295,"byte_end":8939325,"line_start":656,"line_end":656,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939330,"byte_end":8939356,"line_start":657,"line_end":657,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939361,"byte_end":8939377,"line_start":658,"line_end":658,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939382,"byte_end":8939385,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939390,"byte_end":8939408,"line_start":660,"line_end":660,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939413,"byte_end":8939464,"line_start":661,"line_end":661,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939469,"byte_end":8939497,"line_start":662,"line_end":662,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939502,"byte_end":8939567,"line_start":663,"line_end":663,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939572,"byte_end":8939575,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939580,"byte_end":8939594,"line_start":665,"line_end":665,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939599,"byte_end":8939648,"line_start":666,"line_end":666,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939653,"byte_end":8939690,"line_start":667,"line_end":667,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939695,"byte_end":8939698,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939703,"byte_end":8939774,"line_start":669,"line_end":669,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939779,"byte_end":8939837,"line_start":670,"line_end":670,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939842,"byte_end":8939894,"line_start":671,"line_end":671,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939899,"byte_end":8939925,"line_start":672,"line_end":672,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939930,"byte_end":8939956,"line_start":673,"line_end":673,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939961,"byte_end":8939978,"line_start":674,"line_end":674,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8939983,"byte_end":8940055,"line_start":675,"line_end":675,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940060,"byte_end":8940089,"line_start":676,"line_end":676,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940094,"byte_end":8940111,"line_start":677,"line_end":677,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940116,"byte_end":8940143,"line_start":678,"line_end":678,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940148,"byte_end":8940189,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940194,"byte_end":8940211,"line_start":680,"line_end":680,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940216,"byte_end":8940229,"line_start":681,"line_end":681,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940234,"byte_end":8940243,"line_start":682,"line_end":682,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940248,"byte_end":8940251,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940256,"byte_end":8940270,"line_start":684,"line_end":684,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940275,"byte_end":8940280,"line_start":685,"line_end":685,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940285,"byte_end":8940292,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3494},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941764,"byte_end":8941768,"line_start":732,"line_end":732,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940507,"byte_end":8940577,"line_start":695,"line_end":695,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940582,"byte_end":8940651,"line_start":696,"line_end":696,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940656,"byte_end":8940695,"line_start":697,"line_end":697,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940700,"byte_end":8940703,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940708,"byte_end":8940782,"line_start":699,"line_end":699,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940787,"byte_end":8940847,"line_start":700,"line_end":700,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940852,"byte_end":8940855,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940860,"byte_end":8940874,"line_start":702,"line_end":702,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940879,"byte_end":8940882,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940887,"byte_end":8940900,"line_start":704,"line_end":704,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940905,"byte_end":8940935,"line_start":705,"line_end":705,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940940,"byte_end":8940972,"line_start":706,"line_end":706,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8940977,"byte_end":8941003,"line_start":707,"line_end":707,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941008,"byte_end":8941011,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941016,"byte_end":8941034,"line_start":709,"line_end":709,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941039,"byte_end":8941090,"line_start":710,"line_end":710,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941095,"byte_end":8941123,"line_start":711,"line_end":711,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941128,"byte_end":8941197,"line_start":712,"line_end":712,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941202,"byte_end":8941205,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941210,"byte_end":8941239,"line_start":714,"line_end":714,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941244,"byte_end":8941273,"line_start":715,"line_end":715,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941278,"byte_end":8941281,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941286,"byte_end":8941313,"line_start":717,"line_end":717,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941318,"byte_end":8941362,"line_start":718,"line_end":718,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941367,"byte_end":8941370,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941375,"byte_end":8941399,"line_start":720,"line_end":720,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941404,"byte_end":8941460,"line_start":721,"line_end":721,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941465,"byte_end":8941504,"line_start":722,"line_end":722,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941509,"byte_end":8941512,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941517,"byte_end":8941531,"line_start":724,"line_end":724,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941536,"byte_end":8941541,"line_start":725,"line_end":725,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941546,"byte_end":8941553,"line_start":726,"line_end":726,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941558,"byte_end":8941561,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941566,"byte_end":8941631,"line_start":728,"line_end":728,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941636,"byte_end":8941639,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941644,"byte_end":8941690,"line_start":730,"line_end":730,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8941695,"byte_end":8941746,"line_start":731,"line_end":731,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3499},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942863,"byte_end":8942870,"line_start":766,"line_end":766,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942331,"byte_end":8942393,"line_start":748,"line_end":748,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942398,"byte_end":8942401,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942406,"byte_end":8942470,"line_start":750,"line_end":750,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942475,"byte_end":8942478,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942483,"byte_end":8942526,"line_start":752,"line_end":752,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942531,"byte_end":8942534,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942539,"byte_end":8942553,"line_start":754,"line_end":754,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942558,"byte_end":8942561,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942566,"byte_end":8942579,"line_start":756,"line_end":756,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942584,"byte_end":8942614,"line_start":757,"line_end":757,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942619,"byte_end":8942622,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942627,"byte_end":8942691,"line_start":759,"line_end":759,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942696,"byte_end":8942757,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942762,"byte_end":8942765,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942770,"byte_end":8942810,"line_start":762,"line_end":762,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942815,"byte_end":8942827,"line_start":763,"line_end":763,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942832,"byte_end":8942839,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942844,"byte_end":8942851,"line_start":765,"line_end":765,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3500},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943667,"byte_end":8943678,"line_start":790,"line_end":790,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8942937,"byte_end":8942999,"line_start":770,"line_end":770,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943004,"byte_end":8943007,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943012,"byte_end":8943081,"line_start":772,"line_end":772,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943086,"byte_end":8943159,"line_start":773,"line_end":773,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943164,"byte_end":8943237,"line_start":774,"line_end":774,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943242,"byte_end":8943317,"line_start":775,"line_end":775,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943322,"byte_end":8943340,"line_start":776,"line_end":776,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943345,"byte_end":8943348,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943353,"byte_end":8943367,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943372,"byte_end":8943375,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943380,"byte_end":8943393,"line_start":780,"line_end":780,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943398,"byte_end":8943428,"line_start":781,"line_end":781,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943433,"byte_end":8943436,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943441,"byte_end":8943505,"line_start":783,"line_end":783,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943510,"byte_end":8943571,"line_start":784,"line_end":784,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943576,"byte_end":8943579,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943584,"byte_end":8943614,"line_start":786,"line_end":786,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943619,"byte_end":8943631,"line_start":787,"line_end":787,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943636,"byte_end":8943643,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943648,"byte_end":8943655,"line_start":789,"line_end":789,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3501},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944323,"byte_end":8944329,"line_start":813,"line_end":813,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943769,"byte_end":8943841,"line_start":794,"line_end":794,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943846,"byte_end":8943857,"line_start":795,"line_end":795,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943862,"byte_end":8943865,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943870,"byte_end":8943933,"line_start":797,"line_end":797,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943938,"byte_end":8943941,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943946,"byte_end":8943987,"line_start":799,"line_end":799,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8943992,"byte_end":8943995,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944000,"byte_end":8944014,"line_start":801,"line_end":801,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944019,"byte_end":8944022,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944027,"byte_end":8944040,"line_start":803,"line_end":803,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944045,"byte_end":8944075,"line_start":804,"line_end":804,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944080,"byte_end":8944083,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944088,"byte_end":8944152,"line_start":806,"line_end":806,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944157,"byte_end":8944218,"line_start":807,"line_end":807,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944223,"byte_end":8944226,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944231,"byte_end":8944270,"line_start":809,"line_end":809,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944275,"byte_end":8944287,"line_start":810,"line_end":810,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944292,"byte_end":8944299,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944304,"byte_end":8944311,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945308,"byte_end":8945318,"line_start":840,"line_end":840,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the SO_LINGER option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the SO_LINGER option.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944484,"byte_end":8944560,"line_start":819,"line_end":819,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944565,"byte_end":8944568,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages and the stream is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944573,"byte_end":8944666,"line_start":821,"line_end":821,"column_start":5,"column_end":98}},{"value":"/ closed. If SO_LINGER is set, the system shall block the process until it can transmit the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944671,"byte_end":8944764,"line_start":822,"line_end":822,"column_start":5,"column_end":98}},{"value":"/ data or until the time expires.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944769,"byte_end":8944804,"line_start":823,"line_end":823,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944809,"byte_end":8944812,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ If SO_LINGER is not specified, and the stream is closed, the system handles the call in a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944817,"byte_end":8944910,"line_start":825,"line_end":825,"column_start":5,"column_end":98}},{"value":"/ way that allows the process to continue as quickly as possible.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944915,"byte_end":8944982,"line_start":826,"line_end":826,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944987,"byte_end":8944990,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8944995,"byte_end":8945009,"line_start":828,"line_end":828,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945014,"byte_end":8945017,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945022,"byte_end":8945035,"line_start":830,"line_end":830,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945040,"byte_end":8945070,"line_start":831,"line_end":831,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945075,"byte_end":8945078,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945083,"byte_end":8945147,"line_start":833,"line_end":833,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945152,"byte_end":8945213,"line_start":834,"line_end":834,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945218,"byte_end":8945221,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945226,"byte_end":8945255,"line_start":836,"line_end":836,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945260,"byte_end":8945272,"line_start":837,"line_end":837,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945277,"byte_end":8945284,"line_start":838,"line_end":838,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945289,"byte_end":8945296,"line_start":839,"line_end":839,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3504},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946292,"byte_end":8946295,"line_start":876,"line_end":876,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945780,"byte_end":8945838,"line_start":858,"line_end":858,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945843,"byte_end":8945846,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945851,"byte_end":8945911,"line_start":860,"line_end":860,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945916,"byte_end":8945919,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945924,"byte_end":8945959,"line_start":862,"line_end":862,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945964,"byte_end":8945967,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945972,"byte_end":8945986,"line_start":864,"line_end":864,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945991,"byte_end":8945994,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8945999,"byte_end":8946012,"line_start":866,"line_end":866,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946017,"byte_end":8946047,"line_start":867,"line_end":867,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946052,"byte_end":8946055,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946060,"byte_end":8946124,"line_start":869,"line_end":869,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946129,"byte_end":8946190,"line_start":870,"line_end":870,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946195,"byte_end":8946198,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946203,"byte_end":8946239,"line_start":872,"line_end":872,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946244,"byte_end":8946256,"line_start":873,"line_end":873,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946261,"byte_end":8946268,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946273,"byte_end":8946280,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3505},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946852,"byte_end":8946859,"line_start":897,"line_end":897,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946357,"byte_end":8946415,"line_start":880,"line_end":880,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946420,"byte_end":8946423,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946428,"byte_end":8946504,"line_start":882,"line_end":882,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946509,"byte_end":8946530,"line_start":883,"line_end":883,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946535,"byte_end":8946538,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946543,"byte_end":8946557,"line_start":885,"line_end":885,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946562,"byte_end":8946565,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946570,"byte_end":8946583,"line_start":887,"line_end":887,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946588,"byte_end":8946618,"line_start":888,"line_end":888,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946623,"byte_end":8946626,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946631,"byte_end":8946695,"line_start":890,"line_end":890,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946700,"byte_end":8946761,"line_start":891,"line_end":891,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946766,"byte_end":8946769,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946774,"byte_end":8946799,"line_start":893,"line_end":893,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946804,"byte_end":8946816,"line_start":894,"line_end":894,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946821,"byte_end":8946828,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8946833,"byte_end":8946840,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8947451,"byte_end":8947456,"line_start":911,"line_end":911,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8947074,"byte_end":8947110,"line_start":903,"line_end":903,"column_start":5,"column_end":41}},{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8947115,"byte_end":8947192,"line_start":904,"line_end":904,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8947197,"byte_end":8947243,"line_start":905,"line_end":905,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8947248,"byte_end":8947251,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8947256,"byte_end":8947335,"line_start":907,"line_end":907,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8947340,"byte_end":8947383,"line_start":908,"line_end":908,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8947388,"byte_end":8947391,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8947396,"byte_end":8947439,"line_start":910,"line_end":910,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8948105,"byte_end":8948115,"line_start":926,"line_end":926,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8947541,"byte_end":8947618,"line_start":915,"line_end":915,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8947623,"byte_end":8947669,"line_start":916,"line_end":916,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8947674,"byte_end":8947677,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8947682,"byte_end":8947760,"line_start":918,"line_end":918,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8947765,"byte_end":8947813,"line_start":919,"line_end":919,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8947818,"byte_end":8947821,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the TCP","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8947826,"byte_end":8947904,"line_start":921,"line_end":921,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling [`shutdown()`] on the `TcpStream`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8947909,"byte_end":8947985,"line_start":922,"line_end":922,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8947990,"byte_end":8947993,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8947998,"byte_end":8948031,"line_start":924,"line_end":924,"column_start":5,"column_end":38}},{"value":"/ [`shutdown()`]: fn@crate::io::AsyncWriteExt::shutdown","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8948036,"byte_end":8948093,"line_start":925,"line_end":925,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3688},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955236,"byte_end":8955245,"line_start":110,"line_end":110,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3689}],"decl_id":null,"docs":" A UDP socket","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":21507,"byte_end":21530,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3555},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955782,"byte_end":8955786,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955324,"byte_end":8955396,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955401,"byte_end":8955425,"line_start":117,"line_end":117,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955430,"byte_end":8955433,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955438,"byte_end":8955451,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955456,"byte_end":8955459,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955464,"byte_end":8955477,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955482,"byte_end":8955512,"line_start":122,"line_end":122,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955517,"byte_end":8955533,"line_start":123,"line_end":123,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955538,"byte_end":8955541,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955546,"byte_end":8955564,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955569,"byte_end":8955608,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     let sock = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955613,"byte_end":8955671,"line_start":127,"line_end":127,"column_start":5,"column_end":63}},{"value":"/     // use `sock`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955676,"byte_end":8955697,"line_start":128,"line_end":128,"column_start":5,"column_end":26}},{"value":"/ #   let _ = sock;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955702,"byte_end":8955723,"line_start":129,"line_end":129,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955728,"byte_end":8955742,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955747,"byte_end":8955752,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955757,"byte_end":8955764,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3562},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958025,"byte_end":8958033,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8956619,"byte_end":8956693,"line_start":162,"line_end":162,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8956698,"byte_end":8956701,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8956706,"byte_end":8956776,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8956781,"byte_end":8956857,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8956862,"byte_end":8956933,"line_start":166,"line_end":166,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8956938,"byte_end":8956960,"line_start":167,"line_end":167,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8956965,"byte_end":8956968,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with socket2's `Socket` interface to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8956973,"byte_end":8957045,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957050,"byte_end":8957125,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957130,"byte_end":8957183,"line_start":171,"line_end":171,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957188,"byte_end":8957191,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957196,"byte_end":8957208,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957213,"byte_end":8957216,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957221,"byte_end":8957281,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957286,"byte_end":8957289,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957294,"byte_end":8957364,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957369,"byte_end":8957442,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957447,"byte_end":8957527,"line_start":179,"line_end":179,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957532,"byte_end":8957535,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957540,"byte_end":8957553,"line_start":181,"line_end":181,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957558,"byte_end":8957561,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957566,"byte_end":8957579,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957584,"byte_end":8957614,"line_start":184,"line_end":184,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957619,"byte_end":8957656,"line_start":185,"line_end":185,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957661,"byte_end":8957664,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957669,"byte_end":8957689,"line_start":187,"line_end":187,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957694,"byte_end":8957735,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957740,"byte_end":8957801,"line_start":189,"line_end":189,"column_start":5,"column_end":66}},{"value":"/ let std_sock = std::net::UdpSocket::bind(addr)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957806,"byte_end":8957858,"line_start":190,"line_end":190,"column_start":5,"column_end":57}},{"value":"/ std_sock.set_nonblocking(true)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957863,"byte_end":8957899,"line_start":191,"line_end":191,"column_start":5,"column_end":41}},{"value":"/ let sock = UdpSocket::from_std(std_sock)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957904,"byte_end":8957950,"line_start":192,"line_end":192,"column_start":5,"column_end":51}},{"value":"/ // use `sock`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957955,"byte_end":8957972,"line_start":193,"line_end":193,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957977,"byte_end":8957989,"line_start":194,"line_end":194,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8957994,"byte_end":8958001,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958006,"byte_end":8958013,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3563},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958705,"byte_end":8958715,"line_start":219,"line_end":219,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958179,"byte_end":8958238,"line_start":202,"line_end":202,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958243,"byte_end":8958246,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958251,"byte_end":8958264,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958269,"byte_end":8958272,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958277,"byte_end":8958290,"line_start":206,"line_end":206,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958295,"byte_end":8958325,"line_start":207,"line_end":207,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958330,"byte_end":8958367,"line_start":208,"line_end":208,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958372,"byte_end":8958375,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958380,"byte_end":8958400,"line_start":210,"line_end":210,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958405,"byte_end":8958446,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958451,"byte_end":8958512,"line_start":212,"line_end":212,"column_start":5,"column_end":66}},{"value":"/ let sock = UdpSocket::bind(addr).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958517,"byte_end":8958561,"line_start":213,"line_end":213,"column_start":5,"column_end":49}},{"value":"/ // the address the socket is bound to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958566,"byte_end":8958607,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ let local_addr = sock.local_addr()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958612,"byte_end":8958652,"line_start":215,"line_end":215,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958657,"byte_end":8958669,"line_start":216,"line_end":216,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958674,"byte_end":8958681,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958686,"byte_end":8958693,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3564},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8959635,"byte_end":8959642,"line_start":247,"line_end":247,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958791,"byte_end":8958865,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958870,"byte_end":8958943,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958948,"byte_end":8958959,"line_start":225,"line_end":225,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958964,"byte_end":8958967,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958972,"byte_end":8958985,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958990,"byte_end":8958993,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8958998,"byte_end":8959011,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8959016,"byte_end":8959046,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8959051,"byte_end":8959088,"line_start":231,"line_end":231,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8959093,"byte_end":8959096,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8959101,"byte_end":8959121,"line_start":233,"line_end":233,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8959126,"byte_end":8959167,"line_start":234,"line_end":234,"column_start":5,"column_end":46}},{"value":"/ let sock = UdpSocket::bind(\"0.0.0.0:8080\".parse::<SocketAddr>().unwrap()).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8959172,"byte_end":8959257,"line_start":235,"line_end":235,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8959262,"byte_end":8959265,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ let remote_addr = \"127.0.0.1:59600\".parse::<SocketAddr>().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8959270,"byte_end":8959341,"line_start":237,"line_end":237,"column_start":5,"column_end":76}},{"value":"/ sock.connect(remote_addr).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8959346,"byte_end":8959383,"line_start":238,"line_end":238,"column_start":5,"column_end":42}},{"value":"/ let mut buf = [0u8; 32];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8959388,"byte_end":8959416,"line_start":239,"line_end":239,"column_start":5,"column_end":33}},{"value":"/ // recv from remote_addr","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8959421,"byte_end":8959449,"line_start":240,"line_end":240,"column_start":5,"column_end":33}},{"value":"/ let len = sock.recv(&mut buf).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8959454,"byte_end":8959495,"line_start":241,"line_end":241,"column_start":5,"column_end":46}},{"value":"/ // send to remote_addr","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8959500,"byte_end":8959526,"line_start":242,"line_end":242,"column_start":5,"column_end":31}},{"value":"/ let _len = sock.send(&buf[..len]).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8959531,"byte_end":8959576,"line_start":243,"line_end":243,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8959581,"byte_end":8959593,"line_start":244,"line_end":244,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8959598,"byte_end":8959605,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8959610,"byte_end":8959617,"line_start":246,"line_end":246,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3569},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962449,"byte_end":8962454,"line_start":325,"line_end":325,"column_start":18,"column_end":23},"name":"ready","qualname":"<UdpSocket>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960165,"byte_end":8960212,"line_start":266,"line_end":266,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960217,"byte_end":8960220,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_recv()` or `try_send()`. It","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960225,"byte_end":8960298,"line_start":268,"line_end":268,"column_start":5,"column_end":78}},{"value":"/ can be used to concurrently recv / send to the same socket on a single","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960303,"byte_end":8960377,"line_start":269,"line_end":269,"column_start":5,"column_end":79}},{"value":"/ task without splitting the socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960382,"byte_end":8960420,"line_start":270,"line_end":270,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960425,"byte_end":8960428,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being ready. This is a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960433,"byte_end":8960504,"line_start":272,"line_end":272,"column_start":5,"column_end":76}},{"value":"/ false-positive and attempting an operation will return with","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960509,"byte_end":8960572,"line_start":273,"line_end":273,"column_start":5,"column_end":68}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960577,"byte_end":8960609,"line_start":274,"line_end":274,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960614,"byte_end":8960617,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960622,"byte_end":8960636,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960641,"byte_end":8960644,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Concurrently receive from and send to the socket on the same task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960649,"byte_end":8960718,"line_start":278,"line_end":278,"column_start":5,"column_end":74}},{"value":"/ without splitting.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960723,"byte_end":8960745,"line_start":279,"line_end":279,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960750,"byte_end":8960753,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960758,"byte_end":8960771,"line_start":281,"line_end":281,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, Interest};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960776,"byte_end":8960812,"line_start":282,"line_end":282,"column_start":5,"column_end":41}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960817,"byte_end":8960847,"line_start":283,"line_end":283,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960852,"byte_end":8960855,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960860,"byte_end":8960878,"line_start":285,"line_end":285,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960883,"byte_end":8960922,"line_start":286,"line_end":286,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960927,"byte_end":8960989,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8960994,"byte_end":8961042,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961047,"byte_end":8961050,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961055,"byte_end":8961069,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/         let ready = socket.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961074,"byte_end":8961159,"line_start":291,"line_end":291,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961164,"byte_end":8961167,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961172,"byte_end":8961208,"line_start":293,"line_end":293,"column_start":5,"column_end":41}},{"value":"/             // The buffer is **not** included in the async task and will only exist","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961213,"byte_end":8961300,"line_start":294,"line_end":294,"column_start":5,"column_end":92}},{"value":"/             // on the stack.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961305,"byte_end":8961337,"line_start":295,"line_end":295,"column_start":5,"column_end":37}},{"value":"/             let mut data = [0; 1024];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961342,"byte_end":8961383,"line_start":296,"line_end":296,"column_start":5,"column_end":46}},{"value":"/             match socket.try_recv(&mut data[..]) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961388,"byte_end":8961442,"line_start":297,"line_end":297,"column_start":5,"column_end":59}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961447,"byte_end":8961477,"line_start":298,"line_end":298,"column_start":5,"column_end":35}},{"value":"/                     println!(\"received {:?}\", &data[..n]);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961482,"byte_end":8961544,"line_start":299,"line_end":299,"column_start":5,"column_end":67}},{"value":"/                 }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961549,"byte_end":8961570,"line_start":300,"line_end":300,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961575,"byte_end":8961622,"line_start":301,"line_end":301,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961627,"byte_end":8961704,"line_start":302,"line_end":302,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961709,"byte_end":8961740,"line_start":303,"line_end":303,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961745,"byte_end":8961783,"line_start":304,"line_end":304,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961788,"byte_end":8961809,"line_start":305,"line_end":305,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961814,"byte_end":8961831,"line_start":306,"line_end":306,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961836,"byte_end":8961849,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961854,"byte_end":8961857,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961862,"byte_end":8961898,"line_start":309,"line_end":309,"column_start":5,"column_end":41}},{"value":"/             // Write some data","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961903,"byte_end":8961937,"line_start":310,"line_end":310,"column_start":5,"column_end":39}},{"value":"/             match socket.try_send(b\"hello world\") {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8961942,"byte_end":8961997,"line_start":311,"line_end":311,"column_start":5,"column_end":60}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962002,"byte_end":8962032,"line_start":312,"line_end":312,"column_start":5,"column_end":35}},{"value":"/                     println!(\"sent {} bytes\", n);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962037,"byte_end":8962090,"line_start":313,"line_end":313,"column_start":5,"column_end":58}},{"value":"/                 }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962095,"byte_end":8962116,"line_start":314,"line_end":314,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962121,"byte_end":8962168,"line_start":315,"line_end":315,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962173,"byte_end":8962250,"line_start":316,"line_end":316,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962255,"byte_end":8962286,"line_start":317,"line_end":317,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962291,"byte_end":8962329,"line_start":318,"line_end":318,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962334,"byte_end":8962355,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962360,"byte_end":8962377,"line_start":320,"line_end":320,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962382,"byte_end":8962395,"line_start":321,"line_end":321,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962400,"byte_end":8962409,"line_start":322,"line_end":322,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962414,"byte_end":8962419,"line_start":323,"line_end":323,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962424,"byte_end":8962431,"line_start":324,"line_end":324,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3572},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964056,"byte_end":8964064,"line_start":373,"line_end":373,"column_start":18,"column_end":26},"name":"writable","qualname":"<UdpSocket>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962611,"byte_end":8962654,"line_start":330,"line_end":330,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962659,"byte_end":8962662,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962667,"byte_end":8962736,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/ usually paired with `try_send()` or `try_send_to()`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962741,"byte_end":8962797,"line_start":333,"line_end":333,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962802,"byte_end":8962805,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being writable. This is a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962810,"byte_end":8962884,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_send()` will return with","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962889,"byte_end":8962954,"line_start":336,"line_end":336,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962959,"byte_end":8962991,"line_start":337,"line_end":337,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8962996,"byte_end":8962999,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963004,"byte_end":8963018,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963023,"byte_end":8963026,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963031,"byte_end":8963044,"line_start":341,"line_end":341,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963049,"byte_end":8963079,"line_start":342,"line_end":342,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963084,"byte_end":8963100,"line_start":343,"line_end":343,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963105,"byte_end":8963108,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963113,"byte_end":8963131,"line_start":345,"line_end":345,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963136,"byte_end":8963175,"line_start":346,"line_end":346,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963180,"byte_end":8963202,"line_start":347,"line_end":347,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963207,"byte_end":8963269,"line_start":348,"line_end":348,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963274,"byte_end":8963322,"line_start":349,"line_end":349,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963327,"byte_end":8963330,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963335,"byte_end":8963349,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963354,"byte_end":8963403,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963408,"byte_end":8963445,"line_start":353,"line_end":353,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963450,"byte_end":8963453,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963458,"byte_end":8963528,"line_start":355,"line_end":355,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963533,"byte_end":8963591,"line_start":356,"line_end":356,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963596,"byte_end":8963647,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963652,"byte_end":8963678,"line_start":358,"line_end":358,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963683,"byte_end":8963709,"line_start":359,"line_end":359,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963714,"byte_end":8963731,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963736,"byte_end":8963808,"line_start":361,"line_end":361,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963813,"byte_end":8963842,"line_start":362,"line_end":362,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963847,"byte_end":8963864,"line_start":363,"line_end":363,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963869,"byte_end":8963896,"line_start":364,"line_end":364,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963901,"byte_end":8963935,"line_start":365,"line_end":365,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963940,"byte_end":8963957,"line_start":366,"line_end":366,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963962,"byte_end":8963975,"line_start":367,"line_end":367,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963980,"byte_end":8963989,"line_start":368,"line_end":368,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8963994,"byte_end":8963997,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964002,"byte_end":8964016,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964021,"byte_end":8964026,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964031,"byte_end":8964038,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3575},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965084,"byte_end":8965088,"line_start":409,"line_end":409,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address that the socket is\n connected to.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address that the socket is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964165,"byte_end":8964234,"line_start":378,"line_end":378,"column_start":5,"column_end":74}},{"value":"/ connected to.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964239,"byte_end":8964256,"line_start":379,"line_end":379,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964261,"byte_end":8964264,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964269,"byte_end":8964341,"line_start":381,"line_end":381,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964346,"byte_end":8964403,"line_start":382,"line_end":382,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964408,"byte_end":8964411,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964416,"byte_end":8964453,"line_start":384,"line_end":384,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964458,"byte_end":8964461,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964466,"byte_end":8964478,"line_start":386,"line_end":386,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964483,"byte_end":8964486,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ On success, the number of bytes sent is returned, otherwise, the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964491,"byte_end":8964559,"line_start":388,"line_end":388,"column_start":5,"column_end":73}},{"value":"/ encountered error is returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964564,"byte_end":8964598,"line_start":389,"line_end":389,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964603,"byte_end":8964606,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964611,"byte_end":8964625,"line_start":391,"line_end":391,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964630,"byte_end":8964633,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964638,"byte_end":8964651,"line_start":393,"line_end":393,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964656,"byte_end":8964674,"line_start":394,"line_end":394,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964679,"byte_end":8964709,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964714,"byte_end":8964717,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964722,"byte_end":8964740,"line_start":397,"line_end":397,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964745,"byte_end":8964784,"line_start":398,"line_end":398,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964789,"byte_end":8964811,"line_start":399,"line_end":399,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964816,"byte_end":8964878,"line_start":400,"line_end":400,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964883,"byte_end":8964931,"line_start":401,"line_end":401,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964936,"byte_end":8964939,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/     // Send a message","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964944,"byte_end":8964969,"line_start":403,"line_end":403,"column_start":5,"column_end":30}},{"value":"/     socket.send(b\"hello world\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8964974,"byte_end":8965017,"line_start":404,"line_end":404,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965022,"byte_end":8965025,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965030,"byte_end":8965044,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965049,"byte_end":8965054,"line_start":407,"line_end":407,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965059,"byte_end":8965066,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3579},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966176,"byte_end":8966185,"line_start":439,"line_end":439,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to the remote address to which it\n was previously `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to the remote address to which it","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965269,"byte_end":8965342,"line_start":416,"line_end":416,"column_start":5,"column_end":78}},{"value":"/ was previously `connect`ed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965347,"byte_end":8965378,"line_start":417,"line_end":417,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965383,"byte_end":8965386,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965391,"byte_end":8965463,"line_start":419,"line_end":419,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965468,"byte_end":8965525,"line_start":420,"line_end":420,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965530,"byte_end":8965533,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965538,"byte_end":8965613,"line_start":422,"line_end":422,"column_start":5,"column_end":80}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965618,"byte_end":8965693,"line_start":423,"line_end":423,"column_start":5,"column_end":80}},{"value":"/ be scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965698,"byte_end":8965735,"line_start":424,"line_end":424,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965740,"byte_end":8965743,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965748,"byte_end":8965766,"line_start":426,"line_end":426,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965771,"byte_end":8965774,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965779,"byte_end":8965804,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965809,"byte_end":8965812,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not available to write","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965817,"byte_end":8965878,"line_start":430,"line_end":430,"column_start":5,"column_end":66}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965883,"byte_end":8965941,"line_start":431,"line_end":431,"column_start":5,"column_end":63}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8965946,"byte_end":8966001,"line_start":432,"line_end":432,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966006,"byte_end":8966009,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966014,"byte_end":8966026,"line_start":434,"line_end":434,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966031,"byte_end":8966034,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966039,"byte_end":8966114,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966119,"byte_end":8966122,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966127,"byte_end":8966164,"line_start":438,"line_end":438,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3581},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967929,"byte_end":8967937,"line_start":493,"line_end":493,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UdpSocket>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the remote address to which it is\n connected.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the remote address to which it is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966364,"byte_end":8966435,"line_start":445,"line_end":445,"column_start":5,"column_end":76}},{"value":"/ connected.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966440,"byte_end":8966454,"line_start":446,"line_end":446,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966459,"byte_end":8966462,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ When the socket buffer is full, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966467,"byte_end":8966538,"line_start":448,"line_end":448,"column_start":5,"column_end":76}},{"value":"/ returned. This function is usually paired with `writable()`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966543,"byte_end":8966607,"line_start":449,"line_end":449,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966612,"byte_end":8966615,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966620,"byte_end":8966633,"line_start":451,"line_end":451,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966638,"byte_end":8966641,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ If successful, `Ok(n)` is returned, where `n` is the number of bytes","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966646,"byte_end":8966718,"line_start":453,"line_end":453,"column_start":5,"column_end":77}},{"value":"/ sent. If the socket is not ready to send data,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966723,"byte_end":8966773,"line_start":454,"line_end":454,"column_start":5,"column_end":55}},{"value":"/ `Err(ErrorKind::WouldBlock)` is returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966778,"byte_end":8966823,"line_start":455,"line_end":455,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966828,"byte_end":8966831,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966836,"byte_end":8966850,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966855,"byte_end":8966858,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966863,"byte_end":8966876,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966881,"byte_end":8966911,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966916,"byte_end":8966932,"line_start":461,"line_end":461,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966937,"byte_end":8966940,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966945,"byte_end":8966963,"line_start":463,"line_end":463,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8966968,"byte_end":8967007,"line_start":464,"line_end":464,"column_start":5,"column_end":44}},{"value":"/     // Bind a UDP socket","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967012,"byte_end":8967040,"line_start":465,"line_end":465,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967045,"byte_end":8967107,"line_start":466,"line_end":466,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967112,"byte_end":8967115,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967120,"byte_end":8967148,"line_start":468,"line_end":468,"column_start":5,"column_end":33}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967153,"byte_end":8967201,"line_start":469,"line_end":469,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967206,"byte_end":8967209,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967214,"byte_end":8967228,"line_start":471,"line_end":471,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967233,"byte_end":8967282,"line_start":472,"line_end":472,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967287,"byte_end":8967324,"line_start":473,"line_end":473,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967329,"byte_end":8967332,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967337,"byte_end":8967407,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967412,"byte_end":8967470,"line_start":476,"line_end":476,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967475,"byte_end":8967526,"line_start":477,"line_end":477,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967531,"byte_end":8967557,"line_start":478,"line_end":478,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967562,"byte_end":8967588,"line_start":479,"line_end":479,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967593,"byte_end":8967610,"line_start":480,"line_end":480,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967615,"byte_end":8967687,"line_start":481,"line_end":481,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967692,"byte_end":8967721,"line_start":482,"line_end":482,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967726,"byte_end":8967743,"line_start":483,"line_end":483,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967748,"byte_end":8967775,"line_start":484,"line_end":484,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967780,"byte_end":8967814,"line_start":485,"line_end":485,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967819,"byte_end":8967836,"line_start":486,"line_end":486,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967841,"byte_end":8967854,"line_start":487,"line_end":487,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967859,"byte_end":8967868,"line_start":488,"line_end":488,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967873,"byte_end":8967876,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967881,"byte_end":8967895,"line_start":490,"line_end":490,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967900,"byte_end":8967905,"line_start":491,"line_end":491,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8967910,"byte_end":8967917,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3583},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969750,"byte_end":8969758,"line_start":547,"line_end":547,"column_start":18,"column_end":26},"name":"readable","qualname":"<UdpSocket>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968097,"byte_end":8968140,"line_start":499,"line_end":499,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968145,"byte_end":8968148,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968153,"byte_end":8968230,"line_start":501,"line_end":501,"column_start":5,"column_end":82}},{"value":"/ paired with `try_recv()`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968235,"byte_end":8968264,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968269,"byte_end":8968272,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being readable. This is a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968277,"byte_end":8968351,"line_start":504,"line_end":504,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_recv()` will return with","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968356,"byte_end":8968421,"line_start":505,"line_end":505,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968426,"byte_end":8968458,"line_start":506,"line_end":506,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968463,"byte_end":8968466,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968471,"byte_end":8968485,"line_start":508,"line_end":508,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968490,"byte_end":8968493,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968498,"byte_end":8968511,"line_start":510,"line_end":510,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968516,"byte_end":8968546,"line_start":511,"line_end":511,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968551,"byte_end":8968567,"line_start":512,"line_end":512,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968572,"byte_end":8968575,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968580,"byte_end":8968598,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968603,"byte_end":8968642,"line_start":515,"line_end":515,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968647,"byte_end":8968675,"line_start":516,"line_end":516,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968680,"byte_end":8968742,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968747,"byte_end":8968795,"line_start":518,"line_end":518,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968800,"byte_end":8968803,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968808,"byte_end":8968822,"line_start":520,"line_end":520,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968827,"byte_end":8968876,"line_start":521,"line_end":521,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968881,"byte_end":8968918,"line_start":522,"line_end":522,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968923,"byte_end":8968926,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8968931,"byte_end":8969003,"line_start":524,"line_end":524,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969008,"byte_end":8969047,"line_start":525,"line_end":525,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969052,"byte_end":8969088,"line_start":526,"line_end":526,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969093,"byte_end":8969096,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969101,"byte_end":8969171,"line_start":528,"line_end":528,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969176,"byte_end":8969234,"line_start":529,"line_end":529,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969239,"byte_end":8969284,"line_start":530,"line_end":530,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969289,"byte_end":8969315,"line_start":531,"line_end":531,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969320,"byte_end":8969372,"line_start":532,"line_end":532,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969377,"byte_end":8969403,"line_start":533,"line_end":533,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969408,"byte_end":8969425,"line_start":534,"line_end":534,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969430,"byte_end":8969502,"line_start":535,"line_end":535,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969507,"byte_end":8969536,"line_start":536,"line_end":536,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969541,"byte_end":8969558,"line_start":537,"line_end":537,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969563,"byte_end":8969590,"line_start":538,"line_end":538,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969595,"byte_end":8969629,"line_start":539,"line_end":539,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969634,"byte_end":8969651,"line_start":540,"line_end":540,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969656,"byte_end":8969669,"line_start":541,"line_end":541,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969674,"byte_end":8969683,"line_start":542,"line_end":542,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969688,"byte_end":8969691,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969696,"byte_end":8969710,"line_start":544,"line_end":544,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969715,"byte_end":8969720,"line_start":545,"line_end":545,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969725,"byte_end":8969732,"line_start":546,"line_end":546,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3586},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970971,"byte_end":8970975,"line_start":582,"line_end":582,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket from the remote address\n to which it is connected. On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket from the remote address","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969859,"byte_end":8969935,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/ to which it is connected. On success, returns the number of bytes read.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8969940,"byte_end":8970015,"line_start":553,"line_end":553,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970020,"byte_end":8970023,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970028,"byte_end":8970101,"line_start":555,"line_end":555,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970106,"byte_end":8970180,"line_start":556,"line_end":556,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970185,"byte_end":8970236,"line_start":557,"line_end":557,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970241,"byte_end":8970244,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970249,"byte_end":8970321,"line_start":559,"line_end":559,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970326,"byte_end":8970383,"line_start":560,"line_end":560,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970388,"byte_end":8970391,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970396,"byte_end":8970433,"line_start":562,"line_end":562,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970438,"byte_end":8970441,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970446,"byte_end":8970459,"line_start":564,"line_end":564,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970464,"byte_end":8970494,"line_start":565,"line_end":565,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970499,"byte_end":8970515,"line_start":566,"line_end":566,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970520,"byte_end":8970523,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970528,"byte_end":8970546,"line_start":568,"line_end":568,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970551,"byte_end":8970590,"line_start":569,"line_end":569,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970595,"byte_end":8970617,"line_start":570,"line_end":570,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970622,"byte_end":8970684,"line_start":571,"line_end":571,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970689,"byte_end":8970737,"line_start":572,"line_end":572,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970742,"byte_end":8970745,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0; 10];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970750,"byte_end":8970784,"line_start":574,"line_end":574,"column_start":5,"column_end":39}},{"value":"/     let n = socket.recv(&mut buf).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970789,"byte_end":8970834,"line_start":575,"line_end":575,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970839,"byte_end":8970842,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {} bytes {:?}\", n, &buf[..n]);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970847,"byte_end":8970904,"line_start":577,"line_end":577,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970909,"byte_end":8970912,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970917,"byte_end":8970931,"line_start":579,"line_end":579,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970936,"byte_end":8970941,"line_start":580,"line_end":580,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8970946,"byte_end":8970953,"line_start":581,"line_end":581,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3590},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8972100,"byte_end":8972109,"line_start":612,"line_end":612,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram message on the socket from the remote\n address to which it is `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram message on the socket from the remote","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971160,"byte_end":8971239,"line_start":589,"line_end":589,"column_start":5,"column_end":84}},{"value":"/ address to which it is `connect`ed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971244,"byte_end":8971283,"line_start":590,"line_end":590,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971288,"byte_end":8971291,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. This method","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971296,"byte_end":8971380,"line_start":592,"line_end":592,"column_start":5,"column_end":89}},{"value":"/ resolves to an error if the socket is not connected.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971385,"byte_end":8971441,"line_start":593,"line_end":593,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971446,"byte_end":8971449,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971454,"byte_end":8971538,"line_start":595,"line_end":595,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971543,"byte_end":8971625,"line_start":596,"line_end":596,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971630,"byte_end":8971651,"line_start":597,"line_end":597,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971656,"byte_end":8971659,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971664,"byte_end":8971682,"line_start":599,"line_end":599,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971687,"byte_end":8971690,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971695,"byte_end":8971720,"line_start":601,"line_end":601,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971725,"byte_end":8971728,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971733,"byte_end":8971789,"line_start":603,"line_end":603,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(()))` reads data `ReadBuf` if the socket is ready","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971794,"byte_end":8971865,"line_start":604,"line_end":604,"column_start":5,"column_end":76}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971870,"byte_end":8971925,"line_start":605,"line_end":605,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971930,"byte_end":8971933,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971938,"byte_end":8971950,"line_start":607,"line_end":607,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971955,"byte_end":8971958,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8971963,"byte_end":8972038,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8972043,"byte_end":8972046,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8972051,"byte_end":8972088,"line_start":611,"line_end":611,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3591},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974530,"byte_end":8974538,"line_start":680,"line_end":680,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UdpSocket>::try_recv","value":"pub fn try_recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket from the remote\n address to which it is connected. On success, returns the number of\n bytes read.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket from the remote","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8972703,"byte_end":8972777,"line_start":630,"line_end":630,"column_start":5,"column_end":79}},{"value":"/ address to which it is connected. On success, returns the number of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8972782,"byte_end":8972853,"line_start":631,"line_end":631,"column_start":5,"column_end":76}},{"value":"/ bytes read.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8972858,"byte_end":8972873,"line_start":632,"line_end":632,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8972878,"byte_end":8972881,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8972886,"byte_end":8972962,"line_start":634,"line_end":634,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8972967,"byte_end":8973036,"line_start":635,"line_end":635,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973041,"byte_end":8973092,"line_start":636,"line_end":636,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973097,"byte_end":8973100,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973105,"byte_end":8973175,"line_start":638,"line_end":638,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973180,"byte_end":8973244,"line_start":639,"line_end":639,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973249,"byte_end":8973252,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973257,"byte_end":8973271,"line_start":641,"line_end":641,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973276,"byte_end":8973279,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973284,"byte_end":8973297,"line_start":643,"line_end":643,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973302,"byte_end":8973332,"line_start":644,"line_end":644,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973337,"byte_end":8973353,"line_start":645,"line_end":645,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973358,"byte_end":8973361,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973366,"byte_end":8973384,"line_start":647,"line_end":647,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973389,"byte_end":8973428,"line_start":648,"line_end":648,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973433,"byte_end":8973461,"line_start":649,"line_end":649,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973466,"byte_end":8973528,"line_start":650,"line_end":650,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973533,"byte_end":8973581,"line_start":651,"line_end":651,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973586,"byte_end":8973589,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973594,"byte_end":8973608,"line_start":653,"line_end":653,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973613,"byte_end":8973662,"line_start":654,"line_end":654,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973667,"byte_end":8973704,"line_start":655,"line_end":655,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973709,"byte_end":8973712,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973717,"byte_end":8973789,"line_start":657,"line_end":657,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973794,"byte_end":8973833,"line_start":658,"line_end":658,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973838,"byte_end":8973874,"line_start":659,"line_end":659,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973879,"byte_end":8973882,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973887,"byte_end":8973957,"line_start":661,"line_end":661,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8973962,"byte_end":8974020,"line_start":662,"line_end":662,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974025,"byte_end":8974070,"line_start":663,"line_end":663,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974075,"byte_end":8974101,"line_start":664,"line_end":664,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974106,"byte_end":8974158,"line_start":665,"line_end":665,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974163,"byte_end":8974189,"line_start":666,"line_end":666,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974194,"byte_end":8974211,"line_start":667,"line_end":667,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974216,"byte_end":8974288,"line_start":668,"line_end":668,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974293,"byte_end":8974322,"line_start":669,"line_end":669,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974327,"byte_end":8974344,"line_start":670,"line_end":670,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974349,"byte_end":8974376,"line_start":671,"line_end":671,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974381,"byte_end":8974415,"line_start":672,"line_end":672,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974420,"byte_end":8974437,"line_start":673,"line_end":673,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974442,"byte_end":8974455,"line_start":674,"line_end":674,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974460,"byte_end":8974469,"line_start":675,"line_end":675,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974474,"byte_end":8974477,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974482,"byte_end":8974496,"line_start":677,"line_end":677,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974501,"byte_end":8974506,"line_start":678,"line_end":678,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974511,"byte_end":8974518,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3593},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975747,"byte_end":8975754,"line_start":716,"line_end":716,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974702,"byte_end":8974776,"line_start":686,"line_end":686,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974781,"byte_end":8974809,"line_start":687,"line_end":687,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974814,"byte_end":8974817,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of [`ToSocketAddrs`] trait. See its","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974822,"byte_end":8974897,"line_start":689,"line_end":689,"column_start":5,"column_end":80}},{"value":"/ documentation for concrete examples.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974902,"byte_end":8974942,"line_start":690,"line_end":690,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974947,"byte_end":8974950,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ It is possible for `addr` to yield multiple addresses, but `send_to`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8974955,"byte_end":8975027,"line_start":692,"line_end":692,"column_start":5,"column_end":77}},{"value":"/ will only send data to the first address yielded by `addr`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975032,"byte_end":8975095,"line_start":693,"line_end":693,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975100,"byte_end":8975103,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ This will return an error when the IP version of the local socket does","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975108,"byte_end":8975182,"line_start":695,"line_end":695,"column_start":5,"column_end":79}},{"value":"/ not match that returned from [`ToSocketAddrs`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975187,"byte_end":8975238,"line_start":696,"line_end":696,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975243,"byte_end":8975246,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975251,"byte_end":8975299,"line_start":698,"line_end":698,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975304,"byte_end":8975307,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975312,"byte_end":8975325,"line_start":700,"line_end":700,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975330,"byte_end":8975333,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975338,"byte_end":8975351,"line_start":702,"line_end":702,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975356,"byte_end":8975386,"line_start":703,"line_end":703,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975391,"byte_end":8975407,"line_start":704,"line_end":704,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975412,"byte_end":8975415,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975420,"byte_end":8975438,"line_start":706,"line_end":706,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975443,"byte_end":8975482,"line_start":707,"line_end":707,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975487,"byte_end":8975549,"line_start":708,"line_end":708,"column_start":5,"column_end":67}},{"value":"/     let len = socket.send_to(b\"hello world\", \"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975554,"byte_end":8975628,"line_start":709,"line_end":709,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975633,"byte_end":8975636,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/     println!(\"Sent {} bytes\", len);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975641,"byte_end":8975680,"line_start":711,"line_end":711,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975685,"byte_end":8975688,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975693,"byte_end":8975707,"line_start":713,"line_end":713,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975712,"byte_end":8975717,"line_start":714,"line_end":714,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8975722,"byte_end":8975729,"line_start":715,"line_end":715,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3597},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8976805,"byte_end":8976817,"line_start":745,"line_end":745,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to a given address.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to a given address.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8976148,"byte_end":8976207,"line_start":728,"line_end":728,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8976212,"byte_end":8976215,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction, only the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8976220,"byte_end":8976304,"line_start":730,"line_end":730,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8976309,"byte_end":8976391,"line_start":731,"line_end":731,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8976396,"byte_end":8976417,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8976422,"byte_end":8976425,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8976430,"byte_end":8976448,"line_start":734,"line_end":734,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8976453,"byte_end":8976456,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8976461,"byte_end":8976486,"line_start":736,"line_end":736,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8976491,"byte_end":8976494,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to write","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8976499,"byte_end":8976556,"line_start":738,"line_end":738,"column_start":5,"column_end":62}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8976561,"byte_end":8976620,"line_start":739,"line_end":739,"column_start":5,"column_end":64}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8976625,"byte_end":8976680,"line_start":740,"line_end":740,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8976685,"byte_end":8976688,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8976693,"byte_end":8976705,"line_start":742,"line_end":742,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8976710,"byte_end":8976713,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8976718,"byte_end":8976793,"line_start":744,"line_end":744,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3599},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978617,"byte_end":8978628,"line_start":803,"line_end":803,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UdpSocket>::try_send_to","value":"pub fn try_send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the given address, but if the send is\n blocked this will return right away.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the given address, but if the send is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977066,"byte_end":8977141,"line_start":756,"line_end":756,"column_start":5,"column_end":80}},{"value":"/ blocked this will return right away.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977146,"byte_end":8977186,"line_start":757,"line_end":757,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977191,"byte_end":8977194,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977199,"byte_end":8977253,"line_start":759,"line_end":759,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977258,"byte_end":8977261,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977266,"byte_end":8977279,"line_start":761,"line_end":761,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977284,"byte_end":8977287,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ If successfull, returns the number of bytes sent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977292,"byte_end":8977344,"line_start":763,"line_end":763,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977349,"byte_end":8977352,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ Users should ensure that when the remote cannot receive, the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977357,"byte_end":8977421,"line_start":765,"line_end":765,"column_start":5,"column_end":69}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled. An error can also occur","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977426,"byte_end":8977500,"line_start":766,"line_end":766,"column_start":5,"column_end":79}},{"value":"/ if the IP version of the socket does not match that of `target`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977505,"byte_end":8977573,"line_start":767,"line_end":767,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977578,"byte_end":8977581,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977586,"byte_end":8977647,"line_start":769,"line_end":769,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977652,"byte_end":8977655,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977660,"byte_end":8977673,"line_start":771,"line_end":771,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977678,"byte_end":8977681,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977686,"byte_end":8977699,"line_start":773,"line_end":773,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977704,"byte_end":8977734,"line_start":774,"line_end":774,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977739,"byte_end":8977765,"line_start":775,"line_end":775,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977770,"byte_end":8977786,"line_start":776,"line_end":776,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977791,"byte_end":8977794,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977799,"byte_end":8977817,"line_start":778,"line_end":778,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977822,"byte_end":8977873,"line_start":779,"line_end":779,"column_start":5,"column_end":56}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977878,"byte_end":8977940,"line_start":780,"line_end":780,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977945,"byte_end":8977948,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/     let dst = \"127.0.0.1:8081\".parse()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8977953,"byte_end":8977997,"line_start":782,"line_end":782,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978002,"byte_end":8978005,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978010,"byte_end":8978024,"line_start":784,"line_end":784,"column_start":5,"column_end":19}},{"value":"/         socket.writable().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978029,"byte_end":8978066,"line_start":785,"line_end":785,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978071,"byte_end":8978074,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/         match socket.try_send_to(&b\"hello world\"[..], dst) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978079,"byte_end":8978143,"line_start":787,"line_end":787,"column_start":5,"column_end":69}},{"value":"/             Ok(sent) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978148,"byte_end":8978177,"line_start":788,"line_end":788,"column_start":5,"column_end":34}},{"value":"/                 println!(\"sent {} bytes\", sent);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978182,"byte_end":8978234,"line_start":789,"line_end":789,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978239,"byte_end":8978265,"line_start":790,"line_end":790,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978270,"byte_end":8978287,"line_start":791,"line_end":791,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978292,"byte_end":8978364,"line_start":792,"line_end":792,"column_start":5,"column_end":77}},{"value":"/                 // Writable false positive.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978369,"byte_end":8978416,"line_start":793,"line_end":793,"column_start":5,"column_end":52}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978421,"byte_end":8978450,"line_start":794,"line_end":794,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978455,"byte_end":8978472,"line_start":795,"line_end":795,"column_start":5,"column_end":22}},{"value":"/             Err(e) => return Err(e.into()),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978477,"byte_end":8978524,"line_start":796,"line_end":796,"column_start":5,"column_end":52}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978529,"byte_end":8978542,"line_start":797,"line_end":797,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978547,"byte_end":8978556,"line_start":798,"line_end":798,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978561,"byte_end":8978564,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978569,"byte_end":8978583,"line_start":800,"line_end":800,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978588,"byte_end":8978593,"line_start":801,"line_end":801,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8978598,"byte_end":8978605,"line_start":802,"line_end":802,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3605},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979900,"byte_end":8979909,"line_start":841,"line_end":841,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket. On success, returns\n the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket. On success, returns","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979052,"byte_end":8979125,"line_start":816,"line_end":816,"column_start":5,"column_end":78}},{"value":"/ the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979130,"byte_end":8979174,"line_start":817,"line_end":817,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979179,"byte_end":8979182,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979187,"byte_end":8979260,"line_start":819,"line_end":819,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979265,"byte_end":8979339,"line_start":820,"line_end":820,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979344,"byte_end":8979395,"line_start":821,"line_end":821,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979400,"byte_end":8979403,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979408,"byte_end":8979421,"line_start":823,"line_end":823,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979426,"byte_end":8979429,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979434,"byte_end":8979447,"line_start":825,"line_end":825,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979452,"byte_end":8979482,"line_start":826,"line_end":826,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979487,"byte_end":8979503,"line_start":827,"line_end":827,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979508,"byte_end":8979511,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979516,"byte_end":8979534,"line_start":829,"line_end":829,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979539,"byte_end":8979578,"line_start":830,"line_end":830,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979583,"byte_end":8979645,"line_start":831,"line_end":831,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979650,"byte_end":8979653,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979658,"byte_end":8979694,"line_start":833,"line_end":833,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979699,"byte_end":8979759,"line_start":834,"line_end":834,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979764,"byte_end":8979767,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {:?} bytes from {:?}\", len, addr);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979772,"byte_end":8979833,"line_start":836,"line_end":836,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979838,"byte_end":8979841,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979846,"byte_end":8979860,"line_start":838,"line_end":838,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979865,"byte_end":8979870,"line_start":839,"line_end":839,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8979875,"byte_end":8979882,"line_start":840,"line_end":840,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3609},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8980797,"byte_end":8980811,"line_start":865,"line_end":865,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram on the socket.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram on the socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8980113,"byte_end":8980169,"line_start":848,"line_end":848,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8980174,"byte_end":8980177,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8980182,"byte_end":8980266,"line_start":850,"line_end":850,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8980271,"byte_end":8980353,"line_start":851,"line_end":851,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8980358,"byte_end":8980379,"line_start":852,"line_end":852,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8980384,"byte_end":8980387,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8980392,"byte_end":8980410,"line_start":854,"line_end":854,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8980415,"byte_end":8980418,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8980423,"byte_end":8980448,"line_start":856,"line_end":856,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8980453,"byte_end":8980456,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8980461,"byte_end":8980517,"line_start":858,"line_end":858,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8980522,"byte_end":8980612,"line_start":859,"line_end":859,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8980617,"byte_end":8980672,"line_start":860,"line_end":860,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8980677,"byte_end":8980680,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8980685,"byte_end":8980697,"line_start":862,"line_end":862,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8980702,"byte_end":8980705,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8980710,"byte_end":8980785,"line_start":864,"line_end":864,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3610},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983258,"byte_end":8983271,"line_start":936,"line_end":936,"column_start":12,"column_end":25},"name":"try_recv_from","qualname":"<UdpSocket>::try_recv_from","value":"pub fn try_recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket. On success,\n returns the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket. On success,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8981459,"byte_end":8981530,"line_start":887,"line_end":887,"column_start":5,"column_end":76}},{"value":"/ returns the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8981535,"byte_end":8981587,"line_start":888,"line_end":888,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8981592,"byte_end":8981595,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8981600,"byte_end":8981676,"line_start":890,"line_end":890,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8981681,"byte_end":8981750,"line_start":891,"line_end":891,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8981755,"byte_end":8981806,"line_start":892,"line_end":892,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8981811,"byte_end":8981814,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8981819,"byte_end":8981889,"line_start":894,"line_end":894,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8981894,"byte_end":8981958,"line_start":895,"line_end":895,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8981963,"byte_end":8981966,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8981971,"byte_end":8981985,"line_start":897,"line_end":897,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8981990,"byte_end":8981993,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8981998,"byte_end":8982011,"line_start":899,"line_end":899,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982016,"byte_end":8982046,"line_start":900,"line_end":900,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982051,"byte_end":8982067,"line_start":901,"line_end":901,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982072,"byte_end":8982075,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982080,"byte_end":8982098,"line_start":903,"line_end":903,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982103,"byte_end":8982142,"line_start":904,"line_end":904,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982147,"byte_end":8982175,"line_start":905,"line_end":905,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982180,"byte_end":8982242,"line_start":906,"line_end":906,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982247,"byte_end":8982295,"line_start":907,"line_end":907,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982300,"byte_end":8982303,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982308,"byte_end":8982322,"line_start":909,"line_end":909,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982327,"byte_end":8982376,"line_start":910,"line_end":910,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982381,"byte_end":8982418,"line_start":911,"line_end":911,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982423,"byte_end":8982426,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982431,"byte_end":8982503,"line_start":913,"line_end":913,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982508,"byte_end":8982547,"line_start":914,"line_end":914,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982552,"byte_end":8982588,"line_start":915,"line_end":915,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982593,"byte_end":8982596,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982601,"byte_end":8982671,"line_start":917,"line_end":917,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982676,"byte_end":8982734,"line_start":918,"line_end":918,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv_from(&mut buf) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982739,"byte_end":8982789,"line_start":919,"line_end":919,"column_start":5,"column_end":55}},{"value":"/             Ok((n, _addr)) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982794,"byte_end":8982829,"line_start":920,"line_end":920,"column_start":5,"column_end":40}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982834,"byte_end":8982886,"line_start":921,"line_end":921,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982891,"byte_end":8982917,"line_start":922,"line_end":922,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982922,"byte_end":8982939,"line_start":923,"line_end":923,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8982944,"byte_end":8983016,"line_start":924,"line_end":924,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983021,"byte_end":8983050,"line_start":925,"line_end":925,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983055,"byte_end":8983072,"line_start":926,"line_end":926,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983077,"byte_end":8983104,"line_start":927,"line_end":927,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983109,"byte_end":8983143,"line_start":928,"line_end":928,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983148,"byte_end":8983165,"line_start":929,"line_end":929,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983170,"byte_end":8983183,"line_start":930,"line_end":930,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983188,"byte_end":8983197,"line_start":931,"line_end":931,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983202,"byte_end":8983205,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983210,"byte_end":8983224,"line_start":933,"line_end":933,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983229,"byte_end":8983234,"line_start":934,"line_end":934,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983239,"byte_end":8983246,"line_start":935,"line_end":935,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984531,"byte_end":8984540,"line_start":972,"line_end":972,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983454,"byte_end":8983530,"line_start":942,"line_end":942,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983535,"byte_end":8983611,"line_start":943,"line_end":943,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983616,"byte_end":8983634,"line_start":944,"line_end":944,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983639,"byte_end":8983642,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983647,"byte_end":8983658,"line_start":946,"line_end":946,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983663,"byte_end":8983666,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983671,"byte_end":8983746,"line_start":948,"line_end":948,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983751,"byte_end":8983829,"line_start":949,"line_end":949,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983834,"byte_end":8983882,"line_start":950,"line_end":950,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983887,"byte_end":8983954,"line_start":951,"line_end":951,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8983959,"byte_end":8984027,"line_start":952,"line_end":952,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984032,"byte_end":8984035,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984040,"byte_end":8984054,"line_start":954,"line_end":954,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984059,"byte_end":8984062,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984067,"byte_end":8984080,"line_start":956,"line_end":956,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984085,"byte_end":8984115,"line_start":957,"line_end":957,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984120,"byte_end":8984136,"line_start":958,"line_end":958,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984141,"byte_end":8984144,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984149,"byte_end":8984167,"line_start":960,"line_end":960,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984172,"byte_end":8984211,"line_start":961,"line_end":961,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984216,"byte_end":8984278,"line_start":962,"line_end":962,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984283,"byte_end":8984286,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984291,"byte_end":8984327,"line_start":964,"line_end":964,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.peek_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984332,"byte_end":8984392,"line_start":965,"line_end":965,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984397,"byte_end":8984400,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/     println!(\"peeked {:?} bytes from {:?}\", len, addr);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984405,"byte_end":8984464,"line_start":967,"line_end":967,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984469,"byte_end":8984472,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984477,"byte_end":8984491,"line_start":969,"line_end":969,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984496,"byte_end":8984501,"line_start":970,"line_end":970,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984506,"byte_end":8984513,"line_start":971,"line_end":971,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985889,"byte_end":8985903,"line_start":1005,"line_end":1005,"column_start":12,"column_end":26},"name":"poll_peek_from","qualname":"<UdpSocket>::poll_peek_from","value":"pub fn poll_peek_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984744,"byte_end":8984820,"line_start":979,"line_end":979,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984825,"byte_end":8984874,"line_start":980,"line_end":980,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984879,"byte_end":8984882,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984887,"byte_end":8984898,"line_start":982,"line_end":982,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984903,"byte_end":8984906,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8984911,"byte_end":8984995,"line_start":984,"line_end":984,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985000,"byte_end":8985082,"line_start":985,"line_end":985,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985087,"byte_end":8985107,"line_start":986,"line_end":986,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985112,"byte_end":8985115,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985120,"byte_end":8985195,"line_start":988,"line_end":988,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985200,"byte_end":8985273,"line_start":989,"line_end":989,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985278,"byte_end":8985326,"line_start":990,"line_end":990,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985331,"byte_end":8985398,"line_start":991,"line_end":991,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985403,"byte_end":8985471,"line_start":992,"line_end":992,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985476,"byte_end":8985479,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985484,"byte_end":8985502,"line_start":994,"line_end":994,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985507,"byte_end":8985510,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985515,"byte_end":8985540,"line_start":996,"line_end":996,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985545,"byte_end":8985548,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985553,"byte_end":8985609,"line_start":998,"line_end":998,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985614,"byte_end":8985704,"line_start":999,"line_end":999,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985709,"byte_end":8985764,"line_start":1000,"line_end":1000,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985769,"byte_end":8985772,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985777,"byte_end":8985789,"line_start":1002,"line_end":1002,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985794,"byte_end":8985797,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8985802,"byte_end":8985877,"line_start":1004,"line_end":1004,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3617},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8986768,"byte_end":8986777,"line_start":1032,"line_end":1032,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8986551,"byte_end":8986615,"line_start":1027,"line_end":1027,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8986620,"byte_end":8986623,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8986628,"byte_end":8986694,"line_start":1029,"line_end":1029,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8986699,"byte_end":8986702,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8986707,"byte_end":8986756,"line_start":1031,"line_end":1031,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987023,"byte_end":8987036,"line_start":1040,"line_end":1040,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8986846,"byte_end":8986910,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8986915,"byte_end":8986918,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8986923,"byte_end":8986994,"line_start":1038,"line_end":1038,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8986999,"byte_end":8987011,"line_start":1039,"line_end":1039,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3619},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987365,"byte_end":8987382,"line_start":1049,"line_end":1049,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987119,"byte_end":8987188,"line_start":1044,"line_end":1044,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987193,"byte_end":8987196,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987201,"byte_end":8987275,"line_start":1046,"line_end":1046,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987280,"byte_end":8987283,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987288,"byte_end":8987353,"line_start":1048,"line_end":1048,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3620},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987712,"byte_end":8987733,"line_start":1060,"line_end":1060,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987459,"byte_end":8987528,"line_start":1053,"line_end":1053,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987533,"byte_end":8987536,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987541,"byte_end":8987615,"line_start":1055,"line_end":1055,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987620,"byte_end":8987623,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987628,"byte_end":8987638,"line_start":1057,"line_end":1057,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987643,"byte_end":8987646,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987651,"byte_end":8987700,"line_start":1059,"line_end":1059,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3621},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8988066,"byte_end":8988082,"line_start":1069,"line_end":1069,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987824,"byte_end":8987892,"line_start":1064,"line_end":1064,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987897,"byte_end":8987900,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987905,"byte_end":8987978,"line_start":1066,"line_end":1066,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987983,"byte_end":8987986,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8987991,"byte_end":8988054,"line_start":1068,"line_end":1068,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3622},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8988551,"byte_end":8988571,"line_start":1082,"line_end":1082,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8988157,"byte_end":8988225,"line_start":1073,"line_end":1073,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8988230,"byte_end":8988233,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8988238,"byte_end":8988308,"line_start":1075,"line_end":1075,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8988313,"byte_end":8988387,"line_start":1076,"line_end":1076,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8988392,"byte_end":8988454,"line_start":1077,"line_end":1077,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8988459,"byte_end":8988462,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8988467,"byte_end":8988477,"line_start":1079,"line_end":1079,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8988482,"byte_end":8988485,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8988490,"byte_end":8988539,"line_start":1081,"line_end":1081,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3623},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8988910,"byte_end":8988927,"line_start":1091,"line_end":1091,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8988662,"byte_end":8988733,"line_start":1086,"line_end":1086,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8988738,"byte_end":8988741,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8988746,"byte_end":8988820,"line_start":1088,"line_end":1088,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8988825,"byte_end":8988828,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8988833,"byte_end":8988898,"line_start":1090,"line_end":1090,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3624},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989261,"byte_end":8989282,"line_start":1102,"line_end":1102,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989004,"byte_end":8989075,"line_start":1095,"line_end":1095,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989080,"byte_end":8989083,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989088,"byte_end":8989164,"line_start":1097,"line_end":1097,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989169,"byte_end":8989172,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989177,"byte_end":8989187,"line_start":1099,"line_end":1099,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989192,"byte_end":8989195,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989200,"byte_end":8989249,"line_start":1101,"line_end":1101,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989879,"byte_end":8989882,"line_start":1125,"line_end":1125,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989373,"byte_end":8989431,"line_start":1106,"line_end":1106,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989436,"byte_end":8989439,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989444,"byte_end":8989504,"line_start":1108,"line_end":1108,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989509,"byte_end":8989512,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989517,"byte_end":8989554,"line_start":1110,"line_end":1110,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989559,"byte_end":8989562,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989567,"byte_end":8989581,"line_start":1112,"line_end":1112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989586,"byte_end":8989589,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989594,"byte_end":8989607,"line_start":1114,"line_end":1114,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989612,"byte_end":8989642,"line_start":1115,"line_end":1115,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989647,"byte_end":8989665,"line_start":1116,"line_end":1116,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989670,"byte_end":8989673,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989678,"byte_end":8989718,"line_start":1118,"line_end":1118,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989723,"byte_end":8989779,"line_start":1119,"line_end":1119,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989784,"byte_end":8989787,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", sock.ttl()?);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989792,"byte_end":8989826,"line_start":1121,"line_end":1121,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989831,"byte_end":8989843,"line_start":1122,"line_end":1122,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989848,"byte_end":8989855,"line_start":1123,"line_end":1123,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989860,"byte_end":8989867,"line_start":1124,"line_end":1124,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3626},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990430,"byte_end":8990437,"line_start":1147,"line_end":1147,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8989944,"byte_end":8990002,"line_start":1129,"line_end":1129,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990007,"byte_end":8990010,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990015,"byte_end":8990091,"line_start":1131,"line_end":1131,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990096,"byte_end":8990117,"line_start":1132,"line_end":1132,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990122,"byte_end":8990125,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990130,"byte_end":8990144,"line_start":1134,"line_end":1134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990149,"byte_end":8990152,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990157,"byte_end":8990170,"line_start":1136,"line_end":1136,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990175,"byte_end":8990205,"line_start":1137,"line_end":1137,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990210,"byte_end":8990228,"line_start":1138,"line_end":1138,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990233,"byte_end":8990236,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990241,"byte_end":8990281,"line_start":1140,"line_end":1140,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990286,"byte_end":8990342,"line_start":1141,"line_end":1141,"column_start":5,"column_end":61}},{"value":"/ sock.set_ttl(60)?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990347,"byte_end":8990369,"line_start":1142,"line_end":1142,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990374,"byte_end":8990377,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990382,"byte_end":8990394,"line_start":1144,"line_end":1144,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990399,"byte_end":8990406,"line_start":1145,"line_end":1145,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990411,"byte_end":8990418,"line_start":1146,"line_end":1146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3627},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990945,"byte_end":8990962,"line_start":1158,"line_end":1158,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990515,"byte_end":8990573,"line_start":1151,"line_end":1151,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990578,"byte_end":8990581,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990586,"byte_end":8990660,"line_start":1153,"line_end":1153,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990665,"byte_end":8990738,"line_start":1154,"line_end":1154,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990743,"byte_end":8990815,"line_start":1155,"line_end":1155,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990820,"byte_end":8990890,"line_start":1156,"line_end":1156,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8990895,"byte_end":8990933,"line_start":1157,"line_end":1157,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3628},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8991417,"byte_end":8991434,"line_start":1167,"line_end":1167,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8991101,"byte_end":8991161,"line_start":1162,"line_end":1162,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8991166,"byte_end":8991169,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8991174,"byte_end":8991248,"line_start":1164,"line_end":1164,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8991253,"byte_end":8991326,"line_start":1165,"line_end":1165,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8991331,"byte_end":8991405,"line_start":1166,"line_end":1166,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8991791,"byte_end":8991809,"line_start":1176,"line_end":1176,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8991567,"byte_end":8991626,"line_start":1171,"line_end":1171,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8991631,"byte_end":8991634,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8991639,"byte_end":8991709,"line_start":1173,"line_end":1173,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8991714,"byte_end":8991717,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8991722,"byte_end":8991779,"line_start":1175,"line_end":1175,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992175,"byte_end":8992193,"line_start":1185,"line_end":1185,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8991949,"byte_end":8992010,"line_start":1180,"line_end":1180,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992015,"byte_end":8992018,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992023,"byte_end":8992093,"line_start":1182,"line_end":1182,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992098,"byte_end":8992101,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992106,"byte_end":8992163,"line_start":1184,"line_end":1184,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3631},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992830,"byte_end":8992840,"line_start":1208,"line_end":1208,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992327,"byte_end":8992374,"line_start":1189,"line_end":1189,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992379,"byte_end":8992382,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992387,"byte_end":8992401,"line_start":1191,"line_end":1191,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992406,"byte_end":8992413,"line_start":1192,"line_end":1192,"column_start":5,"column_end":12}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992418,"byte_end":8992448,"line_start":1193,"line_end":1193,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992453,"byte_end":8992469,"line_start":1194,"line_end":1194,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992474,"byte_end":8992477,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992482,"byte_end":8992500,"line_start":1196,"line_end":1196,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992505,"byte_end":8992544,"line_start":1197,"line_end":1197,"column_start":5,"column_end":44}},{"value":"/     // Create a socket","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992549,"byte_end":8992575,"line_start":1198,"line_end":1198,"column_start":5,"column_end":31}},{"value":"/     let socket = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992580,"byte_end":8992640,"line_start":1199,"line_end":1199,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992645,"byte_end":8992648,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/     if let Ok(Some(err)) = socket.take_error() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992653,"byte_end":8992705,"line_start":1201,"line_end":1201,"column_start":5,"column_end":57}},{"value":"/         println!(\"Got error: {:?}\", err);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992710,"byte_end":8992755,"line_start":1202,"line_end":1202,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992760,"byte_end":8992769,"line_start":1203,"line_end":1203,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992774,"byte_end":8992777,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992782,"byte_end":8992796,"line_start":1205,"line_end":1205,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992801,"byte_end":8992806,"line_start":1206,"line_end":1206,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992811,"byte_end":8992818,"line_start":1207,"line_end":1207,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\mod.rs","byte_start":107034,"byte_end":107040,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\mod.rs","byte_start":106971,"byte_end":107024,"line_start":49,"line_end":49,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\mod.rs","byte_start":107093,"byte_end":107098,"line_start":53,"line_end":53,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\mod.rs","byte_start":107055,"byte_end":107083,"line_start":52,"line_end":52,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":3782},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"process","qualname":"::process","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","parent":null,"children":[{"krate":0,"index":3783},{"krate":0,"index":3843},{"krate":0,"index":3850},{"krate":0,"index":3851},{"krate":0,"index":3852},{"krate":0,"index":3853},{"krate":0,"index":3854},{"krate":0,"index":3855},{"krate":0,"index":3856},{"krate":0,"index":3857},{"krate":0,"index":3858},{"krate":0,"index":3859},{"krate":0,"index":3860},{"krate":0,"index":3861},{"krate":0,"index":3862},{"krate":0,"index":3863},{"krate":0,"index":3864},{"krate":0,"index":3865},{"krate":0,"index":3866},{"krate":0,"index":3867},{"krate":0,"index":3966},{"krate":0,"index":3969},{"krate":0,"index":3868},{"krate":0,"index":3873},{"krate":0,"index":3912},{"krate":0,"index":3971},{"krate":0,"index":3975},{"krate":0,"index":3914},{"krate":0,"index":3917},{"krate":0,"index":3920},{"krate":0,"index":3978},{"krate":0,"index":3985},{"krate":0,"index":3987},{"krate":0,"index":3992},{"krate":0,"index":3926},{"krate":0,"index":3994},{"krate":0,"index":3996},{"krate":0,"index":3998},{"krate":0,"index":4000},{"krate":0,"index":4002},{"krate":0,"index":4004},{"krate":0,"index":3944},{"krate":0,"index":3948},{"krate":0,"index":3950},{"krate":0,"index":3952}],"decl_id":null,"docs":" An implementation of asynchronous process management for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"process\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":21913,"byte_end":21940,"line_start":189,"line_end":189,"column_start":13,"column_end":40}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":22016,"byte_end":22033,"line_start":191,"line_end":191,"column_start":13,"column_end":30}},{"value":"/ An implementation of asynchronous process management for Tokio.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8995473,"byte_end":8995540,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8995541,"byte_end":8995544,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a [`Command`] struct that imitates the interface of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8995545,"byte_end":8995625,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ [`std::process::Command`] type in the standard library, but provides asynchronous versions of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8995626,"byte_end":8995723,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ functions that create processes. These functions (`spawn`, `status`, `output` and their","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8995724,"byte_end":8995815,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"/ variants) return \"future aware\" types that interoperate with Tokio. The asynchronous process","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8995816,"byte_end":8995912,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"/ support is provided through signal handling on Unix and system APIs on Windows.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8995913,"byte_end":8995996,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8995997,"byte_end":8996000,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`std::process::Command`]: std::process::Command","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996001,"byte_end":8996053,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996054,"byte_end":8996057,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996058,"byte_end":8996072,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996073,"byte_end":8996076,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Here's an example program which will spawn `echo hello world` and then wait","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996077,"byte_end":8996156,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ for it complete.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996157,"byte_end":8996177,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996178,"byte_end":8996181,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996182,"byte_end":8996195,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996196,"byte_end":8996228,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996229,"byte_end":8996232,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996233,"byte_end":8996251,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996252,"byte_end":8996315,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"/     // The usage is similar as with the standard library's `Command` type","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996316,"byte_end":8996393,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/     let mut child = Command::new(\"echo\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996394,"byte_end":8996438,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/         .arg(\"hello\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996439,"byte_end":8996464,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/         .arg(\"world\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996465,"byte_end":8996490,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/         .spawn()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996491,"byte_end":8996511,"line_start":25,"line_end":25,"column_start":1,"column_end":21}},{"value":"/         .expect(\"failed to spawn\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996512,"byte_end":8996551,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996552,"byte_end":8996555,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/     // Await until the command completes","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996556,"byte_end":8996600,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/     let status = child.wait().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996601,"byte_end":8996642,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/     println!(\"the command exited with: {}\", status);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996643,"byte_end":8996699,"line_start":30,"line_end":30,"column_start":1,"column_end":57}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996700,"byte_end":8996714,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996715,"byte_end":8996720,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996721,"byte_end":8996728,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996729,"byte_end":8996732,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Next, let's take a look at an example where we not only spawn `echo hello","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996733,"byte_end":8996810,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ world` but we also capture its output.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996811,"byte_end":8996853,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996854,"byte_end":8996857,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996858,"byte_end":8996871,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996872,"byte_end":8996904,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996905,"byte_end":8996908,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996909,"byte_end":8996927,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996928,"byte_end":8996991,"line_start":42,"line_end":42,"column_start":1,"column_end":64}},{"value":"/     // Like above, but use `output` which returns a future instead of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8996992,"byte_end":8997065,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/     // immediately returning the `Child`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997066,"byte_end":8997111,"line_start":44,"line_end":44,"column_start":1,"column_end":46}},{"value":"/     let output = Command::new(\"echo\").arg(\"hello\").arg(\"world\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997112,"byte_end":8997179,"line_start":45,"line_end":45,"column_start":1,"column_end":68}},{"value":"/                         .output();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997180,"byte_end":8997218,"line_start":46,"line_end":46,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997219,"byte_end":8997222,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     let output = output.await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997223,"byte_end":8997258,"line_start":48,"line_end":48,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997259,"byte_end":8997262,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     assert!(output.status.success());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997263,"byte_end":8997304,"line_start":50,"line_end":50,"column_start":1,"column_end":42}},{"value":"/     assert_eq!(output.stdout, b\"hello world\\n\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997305,"byte_end":8997357,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997358,"byte_end":8997372,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997373,"byte_end":8997378,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997379,"byte_end":8997386,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997387,"byte_end":8997390,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ We can also read input line by line.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997391,"byte_end":8997431,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997432,"byte_end":8997435,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997436,"byte_end":8997449,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{BufReader, AsyncBufReadExt};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997450,"byte_end":8997498,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997499,"byte_end":8997531,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997532,"byte_end":8997535,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ use std::process::Stdio;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997536,"byte_end":8997564,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997565,"byte_end":8997568,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997569,"byte_end":8997587,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997588,"byte_end":8997651,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/     let mut cmd = Command::new(\"cat\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997652,"byte_end":8997694,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997695,"byte_end":8997698,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     // Specify that we want the command's standard output piped back to us.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997699,"byte_end":8997778,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/     // By default, standard input/output/error will be inherited from the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997779,"byte_end":8997856,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/     // current process (for example, this means that standard input will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997857,"byte_end":8997933,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/     // come from the keyboard and standard output/error will go directly to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8997934,"byte_end":8998013,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/     // the terminal if this process is invoked from the command line).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998014,"byte_end":8998088,"line_start":72,"line_end":72,"column_start":1,"column_end":75}},{"value":"/     cmd.stdout(Stdio::piped());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998089,"byte_end":8998124,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998125,"byte_end":8998128,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/     let mut child = cmd.spawn()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998129,"byte_end":8998164,"line_start":75,"line_end":75,"column_start":1,"column_end":36}},{"value":"/         .expect(\"failed to spawn command\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998165,"byte_end":8998212,"line_start":76,"line_end":76,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998213,"byte_end":8998216,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     let stdout = child.stdout.take()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998217,"byte_end":8998257,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/         .expect(\"child did not have a handle to stdout\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998258,"byte_end":8998319,"line_start":79,"line_end":79,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998320,"byte_end":8998323,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     let mut reader = BufReader::new(stdout).lines();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998324,"byte_end":8998380,"line_start":81,"line_end":81,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998381,"byte_end":8998384,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Ensure the child process is spawned in the runtime so it can","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998385,"byte_end":8998456,"line_start":83,"line_end":83,"column_start":1,"column_end":72}},{"value":"/     // make progress on its own while we await for any output.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998457,"byte_end":8998523,"line_start":84,"line_end":84,"column_start":1,"column_end":67}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998524,"byte_end":8998557,"line_start":85,"line_end":85,"column_start":1,"column_end":34}},{"value":"/         let status = child.wait().await","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998558,"byte_end":8998601,"line_start":86,"line_end":86,"column_start":1,"column_end":44}},{"value":"/             .expect(\"child process encountered an error\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998602,"byte_end":8998664,"line_start":87,"line_end":87,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998665,"byte_end":8998668,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/         println!(\"child status was: {}\", status);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998669,"byte_end":8998722,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998723,"byte_end":8998734,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998735,"byte_end":8998738,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     while let Some(line) = reader.next_line().await? {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998739,"byte_end":8998797,"line_start":92,"line_end":92,"column_start":1,"column_end":59}},{"value":"/         println!(\"Line: {}\", line);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998798,"byte_end":8998837,"line_start":93,"line_end":93,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998838,"byte_end":8998847,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998848,"byte_end":8998851,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998852,"byte_end":8998866,"line_start":96,"line_end":96,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998867,"byte_end":8998872,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998873,"byte_end":8998880,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998881,"byte_end":8998884,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998885,"byte_end":8998898,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998899,"byte_end":8998902,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ## Dropping/Cancellation","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998903,"byte_end":8998931,"line_start":102,"line_end":102,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998932,"byte_end":8998935,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8998936,"byte_end":8999011,"line_start":104,"line_end":104,"column_start":1,"column_end":76}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8999012,"byte_end":8999085,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8999086,"byte_end":8999166,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8999167,"byte_end":8999170,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ The [`Command::kill_on_drop`] method can be used to modify this behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8999171,"byte_end":8999247,"line_start":108,"line_end":108,"column_start":1,"column_end":77}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8999248,"byte_end":8999322,"line_start":109,"line_end":109,"column_start":1,"column_end":75}},{"value":"/ has exited.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8999323,"byte_end":8999338,"line_start":110,"line_end":110,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8999339,"byte_end":8999342,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ## Unix Processes","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8999343,"byte_end":8999364,"line_start":112,"line_end":112,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8999365,"byte_end":8999368,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms processes must be \"reaped\" by their parent process after","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8999369,"byte_end":8999447,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/ they have exited in order to release all OS resources. A child process which","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8999448,"byte_end":8999528,"line_start":115,"line_end":115,"column_start":1,"column_end":81}},{"value":"/ has exited, but has not yet been reaped by its parent is considered a \"zombie\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8999529,"byte_end":8999611,"line_start":116,"line_end":116,"column_start":1,"column_end":83}},{"value":"/ process. Such processes continue to count against limits imposed by the system,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8999612,"byte_end":8999695,"line_start":117,"line_end":117,"column_start":1,"column_end":84}},{"value":"/ and having too many zombie processes present can prevent additional processes","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8999696,"byte_end":8999777,"line_start":118,"line_end":118,"column_start":1,"column_end":82}},{"value":"/ from being spawned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8999778,"byte_end":8999801,"line_start":119,"line_end":119,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8999802,"byte_end":8999805,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ The tokio runtime will, on a best-effort basis, attempt to reap and clean up","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8999806,"byte_end":8999886,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/ any process which it has spawned. No additional guarantees are made with regards","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8999887,"byte_end":8999971,"line_start":122,"line_end":122,"column_start":1,"column_end":85}},{"value":"/ how quickly or how often this procedure will take place.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":8999972,"byte_end":9000032,"line_start":123,"line_end":123,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9000033,"byte_end":9000036,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ It is recommended to avoid dropping a [`Child`] process handle before it has been","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9000037,"byte_end":9000122,"line_start":125,"line_end":125,"column_start":1,"column_end":86}},{"value":"/ fully `await`ed if stricter cleanup guarantees are required.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9000123,"byte_end":9000187,"line_start":126,"line_end":126,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9000188,"byte_end":9000191,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ [`Command`]: crate::process::Command","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9000192,"byte_end":9000232,"line_start":128,"line_end":128,"column_start":1,"column_end":41}},{"value":"/ [`Command::kill_on_drop`]: crate::process::Command::kill_on_drop","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9000233,"byte_end":9000301,"line_start":129,"line_end":129,"column_start":1,"column_end":69}},{"value":"/ [`Child`]: crate::process::Child","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9000302,"byte_end":9000338,"line_start":130,"line_end":130,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3966},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9001440,"byte_end":9001447,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"Command","qualname":"::process::Command","value":"Command {  }","parent":null,"children":[{"krate":0,"index":3967},{"krate":0,"index":3968}],"decl_id":null,"docs":" This structure mimics the API of [`std::process::Command`] found in the standard library, but\n replaces functions that create a process with an asynchronous variant. The main provided\n asynchronous functions are [spawn](Command::spawn), [status](Command::status), and\n [output](Command::output).","sig":null,"attributes":[{"value":"/ This structure mimics the API of [`std::process::Command`] found in the standard library, but","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9000928,"byte_end":9001025,"line_start":163,"line_end":163,"column_start":1,"column_end":98}},{"value":"/ replaces functions that create a process with an asynchronous variant. The main provided","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9001026,"byte_end":9001118,"line_start":164,"line_end":164,"column_start":1,"column_end":93}},{"value":"/ asynchronous functions are [spawn](Command::spawn), [status](Command::status), and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9001119,"byte_end":9001205,"line_start":165,"line_end":165,"column_start":1,"column_end":87}},{"value":"/ [output](Command::output).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9001206,"byte_end":9001236,"line_start":166,"line_end":166,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9001237,"byte_end":9001240,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ `Command` uses asynchronous versions of some `std` types (for example [`Child`]).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9001241,"byte_end":9001326,"line_start":168,"line_end":168,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9001327,"byte_end":9001330,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ [`std::process::Command`]: std::process::Command","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9001331,"byte_end":9001383,"line_start":170,"line_end":170,"column_start":1,"column_end":53}},{"value":"/ [`Child`]: struct@Child","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9001384,"byte_end":9001411,"line_start":171,"line_end":171,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3874},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002797,"byte_end":9002800,"line_start":215,"line_end":215,"column_start":12,"column_end":15},"name":"new","qualname":"<Command>::new","value":"pub fn new<S: AsRef<OsStr>>(S) -> Command","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Command` for launching the program at\n path `program`, with the following default configuration:","sig":null,"attributes":[{"value":"/ Constructs a new `Command` for launching the program at","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9001688,"byte_end":9001747,"line_start":186,"line_end":186,"column_start":5,"column_end":64}},{"value":"/ path `program`, with the following default configuration:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9001752,"byte_end":9001813,"line_start":187,"line_end":187,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9001818,"byte_end":9001821,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ * No arguments to the program","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9001826,"byte_end":9001859,"line_start":189,"line_end":189,"column_start":5,"column_end":38}},{"value":"/ * Inherit the current process's environment","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9001864,"byte_end":9001911,"line_start":190,"line_end":190,"column_start":5,"column_end":52}},{"value":"/ * Inherit the current process's working directory","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9001916,"byte_end":9001969,"line_start":191,"line_end":191,"column_start":5,"column_end":58}},{"value":"/ * Inherit stdin/stdout/stderr for `spawn` or `status`, but create pipes for `output`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9001974,"byte_end":9002062,"line_start":192,"line_end":192,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002067,"byte_end":9002070,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Builder methods are provided to change these defaults and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002075,"byte_end":9002136,"line_start":194,"line_end":194,"column_start":5,"column_end":66}},{"value":"/ otherwise configure the process.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002141,"byte_end":9002177,"line_start":195,"line_end":195,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002182,"byte_end":9002185,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ If `program` is not an absolute path, the `PATH` will be searched in","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002190,"byte_end":9002262,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/ an OS-defined way.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002267,"byte_end":9002289,"line_start":198,"line_end":198,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002294,"byte_end":9002297,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The search path to be used may be controlled by setting the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002302,"byte_end":9002365,"line_start":200,"line_end":200,"column_start":5,"column_end":68}},{"value":"/ `PATH` environment variable on the Command,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002370,"byte_end":9002417,"line_start":201,"line_end":201,"column_start":5,"column_end":52}},{"value":"/ but this has some implementation limitations on Windows","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002422,"byte_end":9002481,"line_start":202,"line_end":202,"column_start":5,"column_end":64}},{"value":"/ (see issue [rust-lang/rust#37519]).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002486,"byte_end":9002525,"line_start":203,"line_end":203,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002530,"byte_end":9002533,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002538,"byte_end":9002552,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002557,"byte_end":9002560,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002565,"byte_end":9002581,"line_start":207,"line_end":207,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002586,"byte_end":9002589,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002594,"byte_end":9002607,"line_start":209,"line_end":209,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002612,"byte_end":9002644,"line_start":210,"line_end":210,"column_start":5,"column_end":37}},{"value":"/ let command = Command::new(\"sh\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002649,"byte_end":9002686,"line_start":211,"line_end":211,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002691,"byte_end":9002698,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002703,"byte_end":9002706,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [rust-lang/rust#37519]: https://github.com/rust-lang/rust/issues/37519","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002711,"byte_end":9002785,"line_start":214,"line_end":214,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3876},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003647,"byte_end":9003650,"line_start":251,"line_end":251,"column_start":12,"column_end":15},"name":"arg","qualname":"<Command>::arg","value":"pub fn arg<S: AsRef<OsStr>>(&mut Self, S) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Adds an argument to pass to the program.","sig":null,"attributes":[{"value":"/ Adds an argument to pass to the program.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002899,"byte_end":9002943,"line_start":219,"line_end":219,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002948,"byte_end":9002951,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Only one argument can be passed per use. So instead of:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9002956,"byte_end":9003015,"line_start":221,"line_end":221,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003020,"byte_end":9003023,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003028,"byte_end":9003041,"line_start":223,"line_end":223,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003046,"byte_end":9003084,"line_start":224,"line_end":224,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C /path/to/repo\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003089,"byte_end":9003120,"line_start":225,"line_end":225,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003125,"byte_end":9003132,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003137,"byte_end":9003140,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ usage would be:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003145,"byte_end":9003164,"line_start":228,"line_end":228,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003169,"byte_end":9003172,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003177,"byte_end":9003190,"line_start":230,"line_end":230,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003195,"byte_end":9003233,"line_start":231,"line_end":231,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003238,"byte_end":9003254,"line_start":232,"line_end":232,"column_start":5,"column_end":21}},{"value":"/   .arg(\"/path/to/repo\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003259,"byte_end":9003287,"line_start":233,"line_end":233,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003292,"byte_end":9003299,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003304,"byte_end":9003307,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ To pass multiple arguments see [`args`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003312,"byte_end":9003356,"line_start":236,"line_end":236,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003361,"byte_end":9003364,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ [`args`]: method@Self::args","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003369,"byte_end":9003400,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003405,"byte_end":9003408,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003413,"byte_end":9003427,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003432,"byte_end":9003435,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003440,"byte_end":9003456,"line_start":242,"line_end":242,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003461,"byte_end":9003464,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003469,"byte_end":9003482,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003487,"byte_end":9003519,"line_start":245,"line_end":245,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003524,"byte_end":9003527,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003532,"byte_end":9003568,"line_start":247,"line_end":247,"column_start":5,"column_end":41}},{"value":"/         .arg(\"-l\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003573,"byte_end":9003595,"line_start":248,"line_end":248,"column_start":5,"column_end":27}},{"value":"/         .arg(\"-a\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003600,"byte_end":9003623,"line_start":249,"line_end":249,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003628,"byte_end":9003635,"line_start":250,"line_end":250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3878},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004134,"byte_end":9004138,"line_start":272,"line_end":272,"column_start":12,"column_end":16},"name":"args","qualname":"<Command>::args","value":"pub fn args<I, S>(&mut Self, I) -> &mut Command where I: IntoIterator<Item =\nS>, S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Adds multiple arguments to pass to the program.","sig":null,"attributes":[{"value":"/ Adds multiple arguments to pass to the program.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003756,"byte_end":9003807,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003812,"byte_end":9003815,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ To pass a single argument see [`arg`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003820,"byte_end":9003862,"line_start":258,"line_end":258,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003867,"byte_end":9003870,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ [`arg`]: method@Self::arg","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003875,"byte_end":9003904,"line_start":260,"line_end":260,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003909,"byte_end":9003912,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003917,"byte_end":9003931,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003936,"byte_end":9003939,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003944,"byte_end":9003960,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003965,"byte_end":9003968,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003973,"byte_end":9003986,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9003991,"byte_end":9004023,"line_start":267,"line_end":267,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004028,"byte_end":9004031,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004036,"byte_end":9004072,"line_start":269,"line_end":269,"column_start":5,"column_end":41}},{"value":"/         .args(&[\"-l\", \"-a\"]);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004077,"byte_end":9004110,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004115,"byte_end":9004122,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3881},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004754,"byte_end":9004757,"line_start":296,"line_end":296,"column_start":12,"column_end":15},"name":"env","qualname":"<Command>::env","value":"pub fn env<K, V>(&mut Self, K, V) -> &mut Command where K: AsRef<OsStr>,\nV: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Inserts or updates an environment variable mapping.","sig":null,"attributes":[{"value":"/ Inserts or updates an environment variable mapping.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004310,"byte_end":9004365,"line_start":281,"line_end":281,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004370,"byte_end":9004373,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Note that environment variable names are case-insensitive (but case-preserving) on Windows,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004378,"byte_end":9004473,"line_start":283,"line_end":283,"column_start":5,"column_end":100}},{"value":"/ and case-sensitive on all other platforms.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004478,"byte_end":9004524,"line_start":284,"line_end":284,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004529,"byte_end":9004532,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004537,"byte_end":9004551,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004556,"byte_end":9004559,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004564,"byte_end":9004580,"line_start":288,"line_end":288,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004585,"byte_end":9004588,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004593,"byte_end":9004606,"line_start":290,"line_end":290,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004611,"byte_end":9004643,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004648,"byte_end":9004651,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004656,"byte_end":9004692,"line_start":293,"line_end":293,"column_start":5,"column_end":41}},{"value":"/         .env(\"PATH\", \"/bin\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004697,"byte_end":9004730,"line_start":294,"line_end":294,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004735,"byte_end":9004742,"line_start":295,"line_end":295,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3884},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005631,"byte_end":9005635,"line_start":328,"line_end":328,"column_start":12,"column_end":16},"name":"envs","qualname":"<Command>::envs","value":"pub fn envs<I, K, V>(&mut Self, I) -> &mut Command where I: IntoIterator<Item\n= (K, V)>, K: AsRef<OsStr>, V: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Adds or updates multiple environment variable mappings.","sig":null,"attributes":[{"value":"/ Adds or updates multiple environment variable mappings.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004929,"byte_end":9004988,"line_start":305,"line_end":305,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9004993,"byte_end":9004996,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005001,"byte_end":9005015,"line_start":307,"line_end":307,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005020,"byte_end":9005023,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005028,"byte_end":9005044,"line_start":309,"line_end":309,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005049,"byte_end":9005052,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005057,"byte_end":9005070,"line_start":311,"line_end":311,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005075,"byte_end":9005107,"line_start":312,"line_end":312,"column_start":5,"column_end":37}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005112,"byte_end":9005142,"line_start":313,"line_end":313,"column_start":5,"column_end":35}},{"value":"/ use std::env;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005147,"byte_end":9005164,"line_start":314,"line_end":314,"column_start":5,"column_end":22}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005169,"byte_end":9005203,"line_start":315,"line_end":315,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005208,"byte_end":9005211,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ let filtered_env : HashMap<String, String> =","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005216,"byte_end":9005264,"line_start":317,"line_end":317,"column_start":5,"column_end":53}},{"value":"/     env::vars().filter(|&(ref k, _)|","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005269,"byte_end":9005309,"line_start":318,"line_end":318,"column_start":5,"column_end":45}},{"value":"/         k == \"TERM\" || k == \"TZ\" || k == \"LANG\" || k == \"PATH\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005314,"byte_end":9005380,"line_start":319,"line_end":319,"column_start":5,"column_end":71}},{"value":"/     ).collect();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005385,"byte_end":9005405,"line_start":320,"line_end":320,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005410,"byte_end":9005413,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"printenv\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005418,"byte_end":9005460,"line_start":322,"line_end":322,"column_start":5,"column_end":47}},{"value":"/         .stdin(Stdio::null())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005465,"byte_end":9005498,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/         .stdout(Stdio::inherit())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005503,"byte_end":9005540,"line_start":324,"line_end":324,"column_start":5,"column_end":42}},{"value":"/         .env_clear()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005545,"byte_end":9005569,"line_start":325,"line_end":325,"column_start":5,"column_end":29}},{"value":"/         .envs(&filtered_env);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005574,"byte_end":9005607,"line_start":326,"line_end":326,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005612,"byte_end":9005619,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3888},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006113,"byte_end":9006123,"line_start":350,"line_end":350,"column_start":12,"column_end":22},"name":"env_remove","qualname":"<Command>::env_remove","value":"pub fn env_remove<K: AsRef<OsStr>>(&mut Self, K) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Removes an environment variable mapping.","sig":null,"attributes":[{"value":"/ Removes an environment variable mapping.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005840,"byte_end":9005884,"line_start":338,"line_end":338,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005889,"byte_end":9005892,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005897,"byte_end":9005911,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005916,"byte_end":9005919,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005924,"byte_end":9005940,"line_start":342,"line_end":342,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005945,"byte_end":9005948,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005953,"byte_end":9005966,"line_start":344,"line_end":344,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9005971,"byte_end":9006003,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006008,"byte_end":9006011,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006016,"byte_end":9006052,"line_start":347,"line_end":347,"column_start":5,"column_end":41}},{"value":"/         .env_remove(\"PATH\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006057,"byte_end":9006089,"line_start":348,"line_end":348,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006094,"byte_end":9006101,"line_start":349,"line_end":349,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3890},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006518,"byte_end":9006527,"line_start":367,"line_end":367,"column_start":12,"column_end":21},"name":"env_clear","qualname":"<Command>::env_clear","value":"pub fn env_clear(&mut Self) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Clears the entire environment map for the child process.","sig":null,"attributes":[{"value":"/ Clears the entire environment map for the child process.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006236,"byte_end":9006296,"line_start":355,"line_end":355,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006301,"byte_end":9006304,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006309,"byte_end":9006323,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006328,"byte_end":9006331,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006336,"byte_end":9006352,"line_start":359,"line_end":359,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006357,"byte_end":9006360,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006365,"byte_end":9006378,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006383,"byte_end":9006415,"line_start":362,"line_end":362,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006420,"byte_end":9006423,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006428,"byte_end":9006464,"line_start":364,"line_end":364,"column_start":5,"column_end":41}},{"value":"/         .env_clear();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006469,"byte_end":9006494,"line_start":365,"line_end":365,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006499,"byte_end":9006506,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3891},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007372,"byte_end":9007383,"line_start":394,"line_end":394,"column_start":12,"column_end":23},"name":"current_dir","qualname":"<Command>::current_dir","value":"pub fn current_dir<P: AsRef<Path>>(&mut Self, P) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the working directory for the child process.","sig":null,"attributes":[{"value":"/ Sets the working directory for the child process.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006611,"byte_end":9006664,"line_start":372,"line_end":372,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006669,"byte_end":9006672,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006677,"byte_end":9006709,"line_start":374,"line_end":374,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006714,"byte_end":9006717,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ If the program path is relative (e.g., `\"./script.sh\"`), it's ambiguous","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006722,"byte_end":9006797,"line_start":376,"line_end":376,"column_start":5,"column_end":80}},{"value":"/ whether it should be interpreted relative to the parent's working","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006802,"byte_end":9006871,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ directory or relative to `current_dir`. The behavior in this case is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006876,"byte_end":9006948,"line_start":378,"line_end":378,"column_start":5,"column_end":77}},{"value":"/ platform specific and unstable, and it's recommended to use","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9006953,"byte_end":9007016,"line_start":379,"line_end":379,"column_start":5,"column_end":68}},{"value":"/ [`canonicalize`] to get an absolute program path instead.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007021,"byte_end":9007082,"line_start":380,"line_end":380,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007087,"byte_end":9007090,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ [`canonicalize`]: crate::fs::canonicalize()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007095,"byte_end":9007142,"line_start":382,"line_end":382,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007147,"byte_end":9007150,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007155,"byte_end":9007169,"line_start":384,"line_end":384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007174,"byte_end":9007177,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007182,"byte_end":9007198,"line_start":386,"line_end":386,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007203,"byte_end":9007206,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007211,"byte_end":9007224,"line_start":388,"line_end":388,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007229,"byte_end":9007261,"line_start":389,"line_end":389,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007266,"byte_end":9007269,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007274,"byte_end":9007310,"line_start":391,"line_end":391,"column_start":5,"column_end":41}},{"value":"/         .current_dir(\"/bin\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007315,"byte_end":9007348,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007353,"byte_end":9007360,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3893},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008078,"byte_end":9008083,"line_start":418,"line_end":418,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Command>::stdin","value":"pub fn stdin<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard input (stdin) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard input (stdin) handle.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007496,"byte_end":9007573,"line_start":399,"line_end":399,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007578,"byte_end":9007581,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007586,"byte_end":9007653,"line_start":401,"line_end":401,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007658,"byte_end":9007708,"line_start":402,"line_end":402,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007713,"byte_end":9007716,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007721,"byte_end":9007766,"line_start":404,"line_end":404,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007771,"byte_end":9007812,"line_start":405,"line_end":405,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007817,"byte_end":9007820,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007825,"byte_end":9007839,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007844,"byte_end":9007847,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007852,"byte_end":9007868,"line_start":409,"line_end":409,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007873,"byte_end":9007876,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007881,"byte_end":9007894,"line_start":411,"line_end":411,"column_start":5,"column_end":18}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007899,"byte_end":9007929,"line_start":412,"line_end":412,"column_start":5,"column_end":35}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007934,"byte_end":9007966,"line_start":413,"line_end":413,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007971,"byte_end":9007974,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9007979,"byte_end":9008015,"line_start":415,"line_end":415,"column_start":5,"column_end":41}},{"value":"/         .stdin(Stdio::null());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008020,"byte_end":9008054,"line_start":416,"line_end":416,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008059,"byte_end":9008066,"line_start":417,"line_end":417,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3895},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008774,"byte_end":9008780,"line_start":442,"line_end":442,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Command>::stdout","value":"pub fn stdout<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard output (stdout) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard output (stdout) handle.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008190,"byte_end":9008269,"line_start":423,"line_end":423,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008274,"byte_end":9008277,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008282,"byte_end":9008349,"line_start":425,"line_end":425,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008354,"byte_end":9008404,"line_start":426,"line_end":426,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008409,"byte_end":9008412,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008417,"byte_end":9008462,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008467,"byte_end":9008508,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008513,"byte_end":9008516,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008521,"byte_end":9008535,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008540,"byte_end":9008543,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008548,"byte_end":9008564,"line_start":433,"line_end":433,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008569,"byte_end":9008572,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008577,"byte_end":9008590,"line_start":435,"line_end":435,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008595,"byte_end":9008628,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/ use std::process::Stdio;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008633,"byte_end":9008661,"line_start":437,"line_end":437,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008666,"byte_end":9008669,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008674,"byte_end":9008710,"line_start":439,"line_end":439,"column_start":5,"column_end":41}},{"value":"/         .stdout(Stdio::null());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008715,"byte_end":9008750,"line_start":440,"line_end":440,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008755,"byte_end":9008762,"line_start":441,"line_end":441,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3897},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009473,"byte_end":9009479,"line_start":466,"line_end":466,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Command>::stderr","value":"pub fn stderr<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard error (stderr) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard error (stderr) handle.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008888,"byte_end":9008966,"line_start":447,"line_end":447,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008971,"byte_end":9008974,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9008979,"byte_end":9009046,"line_start":449,"line_end":449,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009051,"byte_end":9009101,"line_start":450,"line_end":450,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009106,"byte_end":9009109,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009114,"byte_end":9009159,"line_start":452,"line_end":452,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009164,"byte_end":9009205,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009210,"byte_end":9009213,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009218,"byte_end":9009232,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009237,"byte_end":9009240,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009245,"byte_end":9009261,"line_start":457,"line_end":457,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009266,"byte_end":9009269,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009274,"byte_end":9009287,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009292,"byte_end":9009325,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009330,"byte_end":9009360,"line_start":461,"line_end":461,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009365,"byte_end":9009368,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009373,"byte_end":9009409,"line_start":463,"line_end":463,"column_start":5,"column_end":41}},{"value":"/         .stderr(Stdio::null());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009414,"byte_end":9009449,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009454,"byte_end":9009461,"line_start":465,"line_end":465,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3899},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9011113,"byte_end":9011125,"line_start":497,"line_end":497,"column_start":12,"column_end":24},"name":"kill_on_drop","qualname":"<Command>::kill_on_drop","value":"pub fn kill_on_drop(&mut Self, bool) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Controls whether a `kill` operation should be invoked on a spawned child\n process when its corresponding `Child` handle is dropped.","sig":null,"attributes":[{"value":"/ Controls whether a `kill` operation should be invoked on a spawned child","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009587,"byte_end":9009663,"line_start":471,"line_end":471,"column_start":5,"column_end":81}},{"value":"/ process when its corresponding `Child` handle is dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009668,"byte_end":9009729,"line_start":472,"line_end":472,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009734,"byte_end":9009737,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ By default, this value is assumed to be `false`, meaning the next spawned","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009742,"byte_end":9009819,"line_start":474,"line_end":474,"column_start":5,"column_end":82}},{"value":"/ process will not be killed on drop, similar to the behavior of the standard","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009824,"byte_end":9009903,"line_start":475,"line_end":475,"column_start":5,"column_end":84}},{"value":"/ library.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009908,"byte_end":9009920,"line_start":476,"line_end":476,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009925,"byte_end":9009928,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009933,"byte_end":9009946,"line_start":478,"line_end":478,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009951,"byte_end":9009954,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms processes must be \"reaped\" by their parent process after","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9009959,"byte_end":9010037,"line_start":480,"line_end":480,"column_start":5,"column_end":83}},{"value":"/ they have exited in order to release all OS resources. A child process which","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9010042,"byte_end":9010122,"line_start":481,"line_end":481,"column_start":5,"column_end":85}},{"value":"/ has exited, but has not yet been reaped by its parent is considered a \"zombie\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9010127,"byte_end":9010209,"line_start":482,"line_end":482,"column_start":5,"column_end":87}},{"value":"/ process. Such processes continue to count against limits imposed by the system,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9010214,"byte_end":9010297,"line_start":483,"line_end":483,"column_start":5,"column_end":88}},{"value":"/ and having too many zombie processes present can prevent additional processes","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9010302,"byte_end":9010383,"line_start":484,"line_end":484,"column_start":5,"column_end":86}},{"value":"/ from being spawned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9010388,"byte_end":9010411,"line_start":485,"line_end":485,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9010416,"byte_end":9010419,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ Although issuing a `kill` signal to the child process is a synchronous","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9010424,"byte_end":9010498,"line_start":487,"line_end":487,"column_start":5,"column_end":79}},{"value":"/ operation, the resulting zombie process cannot be `.await`ed inside of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9010503,"byte_end":9010581,"line_start":488,"line_end":488,"column_start":5,"column_end":83}},{"value":"/ destructor to avoid blocking other tasks. The tokio runtime will, on a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9010586,"byte_end":9010660,"line_start":489,"line_end":489,"column_start":5,"column_end":79}},{"value":"/ best-effort basis, attempt to reap and clean up such processes in the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9010665,"byte_end":9010738,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ background, but makes no additional guarantees are made with regards","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9010743,"byte_end":9010815,"line_start":491,"line_end":491,"column_start":5,"column_end":77}},{"value":"/ how quickly or how often this procedure will take place.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9010820,"byte_end":9010880,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9010885,"byte_end":9010888,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ If stronger guarantees are required, it is recommended to avoid dropping","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9010893,"byte_end":9010969,"line_start":494,"line_end":494,"column_start":5,"column_end":81}},{"value":"/ a [`Child`] handle where possible, and instead utilize `child.wait().await`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9010974,"byte_end":9011053,"line_start":495,"line_end":495,"column_start":5,"column_end":84}},{"value":"/ or `child.kill().await` where possible.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9011058,"byte_end":9011101,"line_start":496,"line_end":496,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3900},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9011524,"byte_end":9011538,"line_start":508,"line_end":508,"column_start":12,"column_end":26},"name":"creation_flags","qualname":"<Command>::creation_flags","value":"pub fn creation_flags(&mut Self, u32) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the [process creation flags][1] to be passed to `CreateProcess`.","sig":null,"attributes":[{"value":"/ Sets the [process creation flags][1] to be passed to `CreateProcess`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9011241,"byte_end":9011314,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9011319,"byte_end":9011322,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ These will always be ORed with `CREATE_UNICODE_ENVIRONMENT`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9011327,"byte_end":9011391,"line_start":504,"line_end":504,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9011396,"byte_end":9011399,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ [1]: https://msdn.microsoft.com/en-us/library/windows/desktop/ms684863(v=vs.85).aspx","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9011404,"byte_end":9011492,"line_start":506,"line_end":506,"column_start":5,"column_end":93}},{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9011497,"byte_end":9011512,"line_start":507,"line_end":507,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3901},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9016765,"byte_end":9016770,"line_start":635,"line_end":635,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Command>::spawn","value":"pub fn spawn(&mut Self) -> io::Result<Child>","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, returning a handle to it.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, returning a handle to it.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9013917,"byte_end":9013987,"line_start":568,"line_end":568,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9013992,"byte_end":9013995,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014000,"byte_end":9014071,"line_start":570,"line_end":570,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014076,"byte_end":9014079,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ This method will spawn the child process synchronously and return a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014084,"byte_end":9014155,"line_start":572,"line_end":572,"column_start":5,"column_end":76}},{"value":"/ handle to a future-aware child process. The `Child` returned implements","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014160,"byte_end":9014235,"line_start":573,"line_end":573,"column_start":5,"column_end":80}},{"value":"/ `Future` itself to acquire the `ExitStatus` of the child, and otherwise","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014240,"byte_end":9014315,"line_start":574,"line_end":574,"column_start":5,"column_end":80}},{"value":"/ the `Child` has methods to acquire handles to the stdin, stdout, and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014320,"byte_end":9014392,"line_start":575,"line_end":575,"column_start":5,"column_end":77}},{"value":"/ stderr streams.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014397,"byte_end":9014416,"line_start":576,"line_end":576,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014421,"byte_end":9014424,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014429,"byte_end":9014500,"line_start":578,"line_end":578,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014505,"byte_end":9014520,"line_start":579,"line_end":579,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014525,"byte_end":9014528,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014533,"byte_end":9014547,"line_start":581,"line_end":581,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014552,"byte_end":9014555,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014560,"byte_end":9014576,"line_start":583,"line_end":583,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014581,"byte_end":9014584,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014589,"byte_end":9014602,"line_start":585,"line_end":585,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014607,"byte_end":9014639,"line_start":586,"line_end":586,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014644,"byte_end":9014647,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014652,"byte_end":9014703,"line_start":588,"line_end":588,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014708,"byte_end":9014734,"line_start":589,"line_end":589,"column_start":5,"column_end":31}},{"value":"/         .spawn()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014739,"byte_end":9014759,"line_start":590,"line_end":590,"column_start":5,"column_end":25}},{"value":"/         .expect(\"ls command failed to start\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014764,"byte_end":9014813,"line_start":591,"line_end":591,"column_start":5,"column_end":54}},{"value":"/         .wait()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014818,"byte_end":9014837,"line_start":592,"line_end":592,"column_start":5,"column_end":24}},{"value":"/         .await","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014842,"byte_end":9014860,"line_start":593,"line_end":593,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014865,"byte_end":9014912,"line_start":594,"line_end":594,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014917,"byte_end":9014922,"line_start":595,"line_end":595,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014927,"byte_end":9014934,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014939,"byte_end":9014942,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014947,"byte_end":9014960,"line_start":598,"line_end":598,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014965,"byte_end":9014968,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ## Dropping/Cancellation","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9014973,"byte_end":9015001,"line_start":600,"line_end":600,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9015006,"byte_end":9015009,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9015014,"byte_end":9015089,"line_start":602,"line_end":602,"column_start":5,"column_end":80}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9015094,"byte_end":9015167,"line_start":603,"line_end":603,"column_start":5,"column_end":78}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9015172,"byte_end":9015252,"line_start":604,"line_end":604,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9015257,"byte_end":9015260,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ The [`Command::kill_on_drop`] method can be used to modify this behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9015265,"byte_end":9015341,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9015346,"byte_end":9015420,"line_start":607,"line_end":607,"column_start":5,"column_end":79}},{"value":"/ has exited.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9015425,"byte_end":9015440,"line_start":608,"line_end":608,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9015445,"byte_end":9015448,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ ## Unix Processes","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9015453,"byte_end":9015474,"line_start":610,"line_end":610,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9015479,"byte_end":9015482,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms processes must be \"reaped\" by their parent process after","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9015487,"byte_end":9015565,"line_start":612,"line_end":612,"column_start":5,"column_end":83}},{"value":"/ they have exited in order to release all OS resources. A child process which","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9015570,"byte_end":9015650,"line_start":613,"line_end":613,"column_start":5,"column_end":85}},{"value":"/ has exited, but has not yet been reaped by its parent is considered a \"zombie\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9015655,"byte_end":9015737,"line_start":614,"line_end":614,"column_start":5,"column_end":87}},{"value":"/ process. Such processes continue to count against limits imposed by the system,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9015742,"byte_end":9015825,"line_start":615,"line_end":615,"column_start":5,"column_end":88}},{"value":"/ and having too many zombie processes present can prevent additional processes","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9015830,"byte_end":9015911,"line_start":616,"line_end":616,"column_start":5,"column_end":86}},{"value":"/ from being spawned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9015916,"byte_end":9015939,"line_start":617,"line_end":617,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9015944,"byte_end":9015947,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ The tokio runtime will, on a best-effort basis, attempt to reap and clean up","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9015952,"byte_end":9016032,"line_start":619,"line_end":619,"column_start":5,"column_end":85}},{"value":"/ any process which it has spawned. No additional guarantees are made with regards","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9016037,"byte_end":9016121,"line_start":620,"line_end":620,"column_start":5,"column_end":89}},{"value":"/ how quickly or how often this procedure will take place.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9016126,"byte_end":9016186,"line_start":621,"line_end":621,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9016191,"byte_end":9016194,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ It is recommended to avoid dropping a [`Child`] process handle before it has been","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9016199,"byte_end":9016284,"line_start":623,"line_end":623,"column_start":5,"column_end":90}},{"value":"/ fully `await`ed if stricter cleanup guarantees are required.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9016289,"byte_end":9016353,"line_start":624,"line_end":624,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9016358,"byte_end":9016361,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ [`Command`]: crate::process::Command","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9016366,"byte_end":9016406,"line_start":626,"line_end":626,"column_start":5,"column_end":45}},{"value":"/ [`Command::kill_on_drop`]: crate::process::Command::kill_on_drop","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9016411,"byte_end":9016479,"line_start":627,"line_end":627,"column_start":5,"column_end":73}},{"value":"/ [`Child`]: crate::process::Child","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9016484,"byte_end":9016520,"line_start":628,"line_end":628,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9016525,"byte_end":9016528,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9016533,"byte_end":9016545,"line_start":630,"line_end":630,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9016550,"byte_end":9016553,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms this method will fail with `std::io::ErrorKind::WouldBlock`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9016558,"byte_end":9016639,"line_start":632,"line_end":632,"column_start":5,"column_end":86}},{"value":"/ if the system process limit is reached (which includes other applications","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9016644,"byte_end":9016721,"line_start":633,"line_end":633,"column_start":5,"column_end":82}},{"value":"/ running on the system).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9016726,"byte_end":9016753,"line_start":634,"line_end":634,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3906},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018630,"byte_end":9018636,"line_start":685,"line_end":685,"column_start":12,"column_end":18},"name":"status","qualname":"<Command>::status","value":"pub fn status(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting its exit status.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9017286,"byte_end":9017359,"line_start":647,"line_end":647,"column_start":5,"column_end":78}},{"value":"/ collecting its exit status.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9017364,"byte_end":9017395,"line_start":648,"line_end":648,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9017400,"byte_end":9017403,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9017408,"byte_end":9017479,"line_start":650,"line_end":650,"column_start":5,"column_end":76}},{"value":"/ If any input/output handles are set to a pipe then they will be immediately","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9017484,"byte_end":9017563,"line_start":651,"line_end":651,"column_start":5,"column_end":84}},{"value":"/ closed after the child is spawned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9017568,"byte_end":9017606,"line_start":652,"line_end":652,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9017611,"byte_end":9017614,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9017619,"byte_end":9017690,"line_start":654,"line_end":654,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9017695,"byte_end":9017710,"line_start":655,"line_end":655,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9017715,"byte_end":9017718,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ The destructor of the future returned by this function will kill","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9017723,"byte_end":9017791,"line_start":657,"line_end":657,"column_start":5,"column_end":73}},{"value":"/ the child if [`kill_on_drop`] is set to true.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9017796,"byte_end":9017845,"line_start":658,"line_end":658,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9017850,"byte_end":9017853,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ [`kill_on_drop`]: fn@Self::kill_on_drop","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9017858,"byte_end":9017901,"line_start":660,"line_end":660,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9017906,"byte_end":9017909,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9017914,"byte_end":9017926,"line_start":662,"line_end":662,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9017931,"byte_end":9017934,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ This future will return an error if the child process cannot be spawned","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9017939,"byte_end":9018014,"line_start":664,"line_end":664,"column_start":5,"column_end":80}},{"value":"/ or if there is an error while awaiting its status.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018019,"byte_end":9018073,"line_start":665,"line_end":665,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018078,"byte_end":9018081,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms this method will fail with `std::io::ErrorKind::WouldBlock`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018086,"byte_end":9018167,"line_start":667,"line_end":667,"column_start":5,"column_end":86}},{"value":"/ if the system process limit is reached (which includes other applications","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018172,"byte_end":9018249,"line_start":668,"line_end":668,"column_start":5,"column_end":82}},{"value":"/ running on the system).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018254,"byte_end":9018281,"line_start":669,"line_end":669,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018286,"byte_end":9018289,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018294,"byte_end":9018308,"line_start":671,"line_end":671,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018313,"byte_end":9018316,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018321,"byte_end":9018337,"line_start":673,"line_end":673,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018342,"byte_end":9018345,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018350,"byte_end":9018363,"line_start":675,"line_end":675,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018368,"byte_end":9018400,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018405,"byte_end":9018408,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018413,"byte_end":9018464,"line_start":678,"line_end":678,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018469,"byte_end":9018495,"line_start":679,"line_end":679,"column_start":5,"column_end":31}},{"value":"/         .status()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018500,"byte_end":9018521,"line_start":680,"line_end":680,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018526,"byte_end":9018544,"line_start":681,"line_end":681,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018549,"byte_end":9018596,"line_start":682,"line_end":682,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018601,"byte_end":9018606,"line_start":683,"line_end":683,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9018611,"byte_end":9018618,"line_start":684,"line_end":684,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3909},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020979,"byte_end":9020985,"line_start":748,"line_end":748,"column_start":12,"column_end":18},"name":"output","qualname":"<Command>::output","value":"pub fn output(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting all of its output.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9019118,"byte_end":9019191,"line_start":702,"line_end":702,"column_start":5,"column_end":78}},{"value":"/ collecting all of its output.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9019196,"byte_end":9019229,"line_start":703,"line_end":703,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9019234,"byte_end":9019237,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ > **Note**: this method, unlike the standard library, will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9019242,"byte_end":9019304,"line_start":705,"line_end":705,"column_start":5,"column_end":67}},{"value":"/ > unconditionally configure the stdout/stderr handles to be pipes, even","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9019309,"byte_end":9019384,"line_start":706,"line_end":706,"column_start":5,"column_end":80}},{"value":"/ > if they have been previously configured. If this is not desired then","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9019389,"byte_end":9019463,"line_start":707,"line_end":707,"column_start":5,"column_end":79}},{"value":"/ > the `spawn` method should be used in combination with the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9019468,"byte_end":9019531,"line_start":708,"line_end":708,"column_start":5,"column_end":68}},{"value":"/ > `wait_with_output` method on child.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9019536,"byte_end":9019577,"line_start":709,"line_end":709,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9019582,"byte_end":9019585,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ This method will return a future representing the collection of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9019590,"byte_end":9019661,"line_start":711,"line_end":711,"column_start":5,"column_end":76}},{"value":"/ child process's stdout/stderr. It will resolve to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9019666,"byte_end":9019719,"line_start":712,"line_end":712,"column_start":5,"column_end":58}},{"value":"/ the `Output` type in the standard library, containing `stdout` and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9019724,"byte_end":9019794,"line_start":713,"line_end":713,"column_start":5,"column_end":75}},{"value":"/ `stderr` as `Vec<u8>` along with an `ExitStatus` representing how the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9019799,"byte_end":9019872,"line_start":714,"line_end":714,"column_start":5,"column_end":78}},{"value":"/ process exited.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9019877,"byte_end":9019896,"line_start":715,"line_end":715,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9019901,"byte_end":9019904,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9019909,"byte_end":9019980,"line_start":717,"line_end":717,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9019985,"byte_end":9020000,"line_start":718,"line_end":718,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020005,"byte_end":9020008,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ The destructor of the future returned by this function will kill","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020013,"byte_end":9020081,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/ the child if [`kill_on_drop`] is set to true.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020086,"byte_end":9020135,"line_start":721,"line_end":721,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020140,"byte_end":9020143,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ [`kill_on_drop`]: fn@Self::kill_on_drop","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020148,"byte_end":9020191,"line_start":723,"line_end":723,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020196,"byte_end":9020199,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020204,"byte_end":9020216,"line_start":725,"line_end":725,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020221,"byte_end":9020224,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ This future will return an error if the child process cannot be spawned","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020229,"byte_end":9020304,"line_start":727,"line_end":727,"column_start":5,"column_end":80}},{"value":"/ or if there is an error while awaiting its status.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020309,"byte_end":9020363,"line_start":728,"line_end":728,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020368,"byte_end":9020371,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms this method will fail with `std::io::ErrorKind::WouldBlock`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020376,"byte_end":9020457,"line_start":730,"line_end":730,"column_start":5,"column_end":86}},{"value":"/ if the system process limit is reached (which includes other applications","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020462,"byte_end":9020539,"line_start":731,"line_end":731,"column_start":5,"column_end":82}},{"value":"/ running on the system).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020544,"byte_end":9020571,"line_start":732,"line_end":732,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020576,"byte_end":9020590,"line_start":733,"line_end":733,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020595,"byte_end":9020598,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020603,"byte_end":9020619,"line_start":735,"line_end":735,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020624,"byte_end":9020627,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020632,"byte_end":9020645,"line_start":737,"line_end":737,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020650,"byte_end":9020682,"line_start":738,"line_end":738,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020687,"byte_end":9020690,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020695,"byte_end":9020718,"line_start":740,"line_end":740,"column_start":5,"column_end":28}},{"value":"/     let output: std::process::Output = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020723,"byte_end":9020784,"line_start":741,"line_end":741,"column_start":5,"column_end":66}},{"value":"/         .output()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020789,"byte_end":9020810,"line_start":742,"line_end":742,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020815,"byte_end":9020833,"line_start":743,"line_end":743,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020838,"byte_end":9020886,"line_start":744,"line_end":744,"column_start":5,"column_end":53}},{"value":"/     println!(\"stderr of ls: {:?}\", output.stderr);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020891,"byte_end":9020945,"line_start":745,"line_end":745,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020950,"byte_end":9020955,"line_start":746,"line_end":746,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9020960,"byte_end":9020967,"line_start":747,"line_end":747,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3987},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023312,"byte_end":9023317,"line_start":838,"line_end":838,"column_start":12,"column_end":17},"name":"Child","qualname":"::process::Child","value":"Child { stdin, stdout, stderr }","parent":null,"children":[{"krate":0,"index":3988},{"krate":0,"index":3989},{"krate":0,"index":3990},{"krate":0,"index":3991}],"decl_id":null,"docs":" Representation of a child process spawned onto an event loop.","sig":null,"attributes":[{"value":"/ Representation of a child process spawned onto an event loop.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9022799,"byte_end":9022864,"line_start":827,"line_end":827,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9022865,"byte_end":9022868,"line_start":828,"line_end":828,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9022869,"byte_end":9022882,"line_start":829,"line_end":829,"column_start":1,"column_end":14}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9022883,"byte_end":9022958,"line_start":830,"line_end":830,"column_start":1,"column_end":76}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9022959,"byte_end":9023032,"line_start":831,"line_end":831,"column_start":1,"column_end":74}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023033,"byte_end":9023113,"line_start":832,"line_end":832,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023114,"byte_end":9023117,"line_start":833,"line_end":833,"column_start":1,"column_end":4}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023118,"byte_end":9023192,"line_start":834,"line_end":834,"column_start":1,"column_end":75}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023193,"byte_end":9023267,"line_start":835,"line_end":835,"column_start":1,"column_end":75}},{"value":"/ has exited.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023268,"byte_end":9023283,"line_start":836,"line_end":836,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":3989},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023455,"byte_end":9023460,"line_start":843,"line_end":843,"column_start":9,"column_end":14},"name":"stdin","qualname":"::process::Child::stdin","value":"std::option::Option<process::ChildStdin>","parent":{"krate":0,"index":3987},"children":[],"decl_id":null,"docs":" The handle for writing to the child's standard input (stdin), if it has\n been captured.\n","sig":null,"attributes":[{"value":"/ The handle for writing to the child's standard input (stdin), if it has","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023348,"byte_end":9023423,"line_start":841,"line_end":841,"column_start":5,"column_end":80}},{"value":"/ been captured.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023428,"byte_end":9023446,"line_start":842,"line_end":842,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3990},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023598,"byte_end":9023604,"line_start":847,"line_end":847,"column_start":9,"column_end":15},"name":"stdout","qualname":"::process::Child::stdout","value":"std::option::Option<process::ChildStdout>","parent":{"krate":0,"index":3987},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard output (stdout), if it\n has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard output (stdout), if it","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023487,"byte_end":9023562,"line_start":845,"line_end":845,"column_start":5,"column_end":80}},{"value":"/ has been captured.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023567,"byte_end":9023589,"line_start":846,"line_end":846,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":3991},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023742,"byte_end":9023748,"line_start":851,"line_end":851,"column_start":9,"column_end":15},"name":"stderr","qualname":"::process::Child::stderr","value":"std::option::Option<process::ChildStderr>","parent":{"krate":0,"index":3987},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard error (stderr), if it\n has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard error (stderr), if it","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023632,"byte_end":9023706,"line_start":849,"line_end":849,"column_start":5,"column_end":79}},{"value":"/ has been captured.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023711,"byte_end":9023733,"line_start":850,"line_end":850,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3927},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9024140,"byte_end":9024142,"line_start":861,"line_end":861,"column_start":12,"column_end":14},"name":"id","qualname":"<Child>::id","value":"pub fn id(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the OS-assigned process identifier associated with this child\n while it is still running.","sig":null,"attributes":[{"value":"/ Returns the OS-assigned process identifier associated with this child","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023791,"byte_end":9023864,"line_start":855,"line_end":855,"column_start":5,"column_end":78}},{"value":"/ while it is still running.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023869,"byte_end":9023899,"line_start":856,"line_end":856,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023904,"byte_end":9023907,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ Once the child has been polled to completion this will return `None`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023912,"byte_end":9023985,"line_start":858,"line_end":858,"column_start":5,"column_end":78}},{"value":"/ This is done to avoid confusion on platforms like Unix where the OS","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023990,"byte_end":9024061,"line_start":859,"line_end":859,"column_start":5,"column_end":76}},{"value":"/ identifier could be reused once the process has completed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9024066,"byte_end":9024128,"line_start":860,"line_end":860,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3928},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9024751,"byte_end":9024761,"line_start":875,"line_end":875,"column_start":12,"column_end":22},"name":"start_kill","qualname":"<Child>::start_kill","value":"pub fn start_kill(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to force the child to exit, but does not wait for the request\n to take effect.","sig":null,"attributes":[{"value":"/ Attempts to force the child to exit, but does not wait for the request","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9024321,"byte_end":9024395,"line_start":868,"line_end":868,"column_start":5,"column_end":79}},{"value":"/ to take effect.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9024400,"byte_end":9024419,"line_start":869,"line_end":869,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9024424,"byte_end":9024427,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms, this is the equivalent to sending a SIGKILL. Note","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9024432,"byte_end":9024504,"line_start":871,"line_end":871,"column_start":5,"column_end":77}},{"value":"/ that on Unix platforms it is possible for a zombie process to remain","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9024509,"byte_end":9024581,"line_start":872,"line_end":872,"column_start":5,"column_end":77}},{"value":"/ after a kill is sent; to avoid this, the caller should ensure that either","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9024586,"byte_end":9024663,"line_start":873,"line_end":873,"column_start":5,"column_end":82}},{"value":"/ `child.wait().await` or `child.try_wait()` is invoked successfully.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9024668,"byte_end":9024739,"line_start":874,"line_end":874,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3929},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9026086,"byte_end":9026090,"line_start":910,"line_end":910,"column_start":18,"column_end":22},"name":"kill","qualname":"<Child>::kill","value":"pub async fn kill<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Forces the child to exit.","sig":null,"attributes":[{"value":"/ Forces the child to exit.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025082,"byte_end":9025111,"line_start":885,"line_end":885,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025116,"byte_end":9025119,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to sending a SIGKILL on unix platforms.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025124,"byte_end":9025186,"line_start":887,"line_end":887,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025191,"byte_end":9025194,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ If the child has to be killed remotely, it is possible to do it using","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025199,"byte_end":9025272,"line_start":889,"line_end":889,"column_start":5,"column_end":78}},{"value":"/ a combination of the select! macro and a oneshot channel. In the following","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025277,"byte_end":9025355,"line_start":890,"line_end":890,"column_start":5,"column_end":83}},{"value":"/ example, the child will run until completion unless a message is sent on","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025360,"byte_end":9025436,"line_start":891,"line_end":891,"column_start":5,"column_end":81}},{"value":"/ the oneshot channel. If that happens, the child is killed immediately","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025441,"byte_end":9025514,"line_start":892,"line_end":892,"column_start":5,"column_end":78}},{"value":"/ using the `.kill()` method.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025519,"byte_end":9025550,"line_start":893,"line_end":893,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025555,"byte_end":9025558,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025563,"byte_end":9025576,"line_start":895,"line_end":895,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025581,"byte_end":9025613,"line_start":896,"line_end":896,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::oneshot::channel;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025618,"byte_end":9025656,"line_start":897,"line_end":897,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025661,"byte_end":9025664,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025669,"byte_end":9025687,"line_start":899,"line_end":899,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025692,"byte_end":9025713,"line_start":900,"line_end":900,"column_start":5,"column_end":26}},{"value":"/     let (send, recv) = channel::<()>();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025718,"byte_end":9025761,"line_start":901,"line_end":901,"column_start":5,"column_end":48}},{"value":"/     let mut child = Command::new(\"sleep\").arg(\"1\").spawn().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025766,"byte_end":9025838,"line_start":902,"line_end":902,"column_start":5,"column_end":77}},{"value":"/     tokio::spawn(async move { send.send(()) });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025843,"byte_end":9025894,"line_start":903,"line_end":903,"column_start":5,"column_end":56}},{"value":"/     tokio::select! {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025899,"byte_end":9025923,"line_start":904,"line_end":904,"column_start":5,"column_end":29}},{"value":"/         _ = child.wait() => {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025928,"byte_end":9025962,"line_start":905,"line_end":905,"column_start":5,"column_end":39}},{"value":"/         _ = recv => child.kill().await.expect(\"kill failed\"),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9025967,"byte_end":9026032,"line_start":906,"line_end":906,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9026037,"byte_end":9026046,"line_start":907,"line_end":907,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9026051,"byte_end":9026056,"line_start":908,"line_end":908,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9026061,"byte_end":9026068,"line_start":909,"line_end":909,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3932},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9026688,"byte_end":9026692,"line_start":924,"line_end":924,"column_start":18,"column_end":22},"name":"wait","qualname":"<Child>::wait","value":"pub async fn wait<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the child to exit completely, returning the status that it\n exited with. This function will continue to have the same return value\n after it has been called at least once.","sig":null,"attributes":[{"value":"/ Waits for the child to exit completely, returning the status that it","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9026204,"byte_end":9026276,"line_start":916,"line_end":916,"column_start":5,"column_end":77}},{"value":"/ exited with. This function will continue to have the same return value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9026281,"byte_end":9026355,"line_start":917,"line_end":917,"column_start":5,"column_end":79}},{"value":"/ after it has been called at least once.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9026360,"byte_end":9026403,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9026408,"byte_end":9026411,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ The stdin handle to the child process, if any, will be closed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9026416,"byte_end":9026481,"line_start":920,"line_end":920,"column_start":5,"column_end":70}},{"value":"/ before waiting. This helps avoid deadlock: it ensures that the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9026486,"byte_end":9026552,"line_start":921,"line_end":921,"column_start":5,"column_end":71}},{"value":"/ child does not block waiting for input from the parent, while","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9026557,"byte_end":9026622,"line_start":922,"line_end":922,"column_start":5,"column_end":70}},{"value":"/ the parent waits for the child to exit.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9026627,"byte_end":9026670,"line_start":923,"line_end":923,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3935},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9027875,"byte_end":9027883,"line_start":954,"line_end":954,"column_start":12,"column_end":20},"name":"try_wait","qualname":"<Child>::try_wait","value":"pub fn try_wait(&mut Self) -> io::Result<Option<ExitStatus>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to collect the exit status of the child if it has already\n exited.","sig":null,"attributes":[{"value":"/ Attempts to collect the exit status of the child if it has already","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9027066,"byte_end":9027136,"line_start":939,"line_end":939,"column_start":5,"column_end":75}},{"value":"/ exited.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9027141,"byte_end":9027152,"line_start":940,"line_end":940,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9027157,"byte_end":9027160,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ This function will not block the calling thread and will only","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9027165,"byte_end":9027230,"line_start":942,"line_end":942,"column_start":5,"column_end":70}},{"value":"/ check to see if the child process has exited or not. If the child has","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9027235,"byte_end":9027308,"line_start":943,"line_end":943,"column_start":5,"column_end":78}},{"value":"/ exited then on Unix the process ID is reaped. This function is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9027313,"byte_end":9027379,"line_start":944,"line_end":944,"column_start":5,"column_end":71}},{"value":"/ guaranteed to repeatedly return a successful exit status so long as the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9027384,"byte_end":9027459,"line_start":945,"line_end":945,"column_start":5,"column_end":80}},{"value":"/ child has already exited.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9027464,"byte_end":9027493,"line_start":946,"line_end":946,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9027498,"byte_end":9027501,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ If the child has exited, then `Ok(Some(status))` is returned. If the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9027506,"byte_end":9027578,"line_start":948,"line_end":948,"column_start":5,"column_end":77}},{"value":"/ exit status is not available at this time then `Ok(None)` is returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9027583,"byte_end":9027657,"line_start":949,"line_end":949,"column_start":5,"column_end":79}},{"value":"/ If an error occurs, then that error is returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9027662,"byte_end":9027714,"line_start":950,"line_end":950,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9027719,"byte_end":9027722,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ Note that unlike `wait`, this function will not attempt to drop stdin,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9027727,"byte_end":9027801,"line_start":952,"line_end":952,"column_start":5,"column_end":79}},{"value":"/ nor will it wake the current task if the child exits.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9027806,"byte_end":9027863,"line_start":953,"line_end":953,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3936},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9029343,"byte_end":9029359,"line_start":987,"line_end":987,"column_start":18,"column_end":34},"name":"wait_with_output","qualname":"<Child>::wait_with_output","value":"pub async fn wait_with_output(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that will resolve to an `Output`, containing the exit\n status, stdout, and stderr of the child process.","sig":null,"attributes":[{"value":"/ Returns a future that will resolve to an `Output`, containing the exit","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9028413,"byte_end":9028487,"line_start":971,"line_end":971,"column_start":5,"column_end":79}},{"value":"/ status, stdout, and stderr of the child process.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9028492,"byte_end":9028544,"line_start":972,"line_end":972,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9028549,"byte_end":9028552,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ The returned future will simultaneously waits for the child to exit and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9028557,"byte_end":9028632,"line_start":974,"line_end":974,"column_start":5,"column_end":80}},{"value":"/ collect all remaining output on the stdout/stderr handles, returning an","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9028637,"byte_end":9028712,"line_start":975,"line_end":975,"column_start":5,"column_end":80}},{"value":"/ `Output` instance.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9028717,"byte_end":9028739,"line_start":976,"line_end":976,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9028744,"byte_end":9028747,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ The stdin handle to the child process, if any, will be closed before","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9028752,"byte_end":9028824,"line_start":978,"line_end":978,"column_start":5,"column_end":77}},{"value":"/ waiting. This helps avoid deadlock: it ensures that the child does not","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9028829,"byte_end":9028903,"line_start":979,"line_end":979,"column_start":5,"column_end":79}},{"value":"/ block waiting for input from the parent, while the parent waits for the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9028908,"byte_end":9028983,"line_start":980,"line_end":980,"column_start":5,"column_end":80}},{"value":"/ child to exit.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9028988,"byte_end":9029006,"line_start":981,"line_end":981,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9029011,"byte_end":9029014,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent. In","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9029019,"byte_end":9029093,"line_start":983,"line_end":983,"column_start":5,"column_end":79}},{"value":"/ order to capture the output into this `Output` it is necessary to create","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9029098,"byte_end":9029174,"line_start":984,"line_end":984,"column_start":5,"column_end":81}},{"value":"/ new pipes between parent and child. Use `stdout(Stdio::piped())` or","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9029179,"byte_end":9029250,"line_start":985,"line_end":985,"column_start":5,"column_end":76}},{"value":"/ `stderr(Stdio::piped())`, respectively, when creating a `Command`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9029255,"byte_end":9029325,"line_start":986,"line_end":986,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":3994},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9030277,"byte_end":9030287,"line_start":1017,"line_end":1017,"column_start":12,"column_end":22},"name":"ChildStdin","qualname":"::process::ChildStdin","value":"ChildStdin {  }","parent":null,"children":[{"krate":0,"index":3995}],"decl_id":null,"docs":" The standard input stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard input stream for spawned children.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9030063,"byte_end":9030114,"line_start":1012,"line_end":1012,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9030115,"byte_end":9030118,"line_start":1013,"line_end":1013,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncWrite` trait to pass data to the stdin handle of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9030119,"byte_end":9030202,"line_start":1014,"line_end":1014,"column_start":1,"column_end":84}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9030203,"byte_end":9030248,"line_start":1015,"line_end":1015,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3998},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9030528,"byte_end":9030539,"line_start":1026,"line_end":1026,"column_start":12,"column_end":23},"name":"ChildStdout","qualname":"::process::ChildStdout","value":"ChildStdout {  }","parent":null,"children":[{"krate":0,"index":3999}],"decl_id":null,"docs":" The standard output stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard output stream for spawned children.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9030321,"byte_end":9030373,"line_start":1021,"line_end":1021,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9030374,"byte_end":9030377,"line_start":1022,"line_end":1022,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stdout","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9030378,"byte_end":9030453,"line_start":1023,"line_end":1023,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9030454,"byte_end":9030499,"line_start":1024,"line_end":1024,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4002},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9030780,"byte_end":9030791,"line_start":1035,"line_end":1035,"column_start":12,"column_end":23},"name":"ChildStderr","qualname":"::process::ChildStderr","value":"ChildStderr {  }","parent":null,"children":[{"krate":0,"index":4003}],"decl_id":null,"docs":" The standard error stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard error stream for spawned children.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9030574,"byte_end":9030625,"line_start":1030,"line_end":1030,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9030626,"byte_end":9030629,"line_start":1031,"line_end":1031,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stderr","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9030630,"byte_end":9030705,"line_start":1032,"line_end":1032,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9030706,"byte_end":9030751,"line_start":1033,"line_end":1033,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":4008},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","parent":null,"children":[{"krate":0,"index":4009},{"krate":0,"index":4024},{"krate":0,"index":4578},{"krate":0,"index":4696},{"krate":0,"index":4697},{"krate":0,"index":4812},{"krate":0,"index":4813},{"krate":0,"index":4814},{"krate":0,"index":4871},{"krate":0,"index":4872},{"krate":0,"index":4882},{"krate":0,"index":4906},{"krate":0,"index":4907},{"krate":0,"index":4938},{"krate":0,"index":4939},{"krate":0,"index":4940},{"krate":0,"index":4941},{"krate":0,"index":4944},{"krate":0,"index":5050},{"krate":0,"index":5102},{"krate":0,"index":5103},{"krate":0,"index":5204},{"krate":0,"index":5423},{"krate":0,"index":5439},{"krate":0,"index":5440},{"krate":0,"index":5441},{"krate":0,"index":5456},{"krate":0,"index":5460},{"krate":0,"index":5462},{"krate":0,"index":5469},{"krate":0,"index":5442},{"krate":0,"index":5443}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":23448,"byte_end":23470,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"/ The Tokio runtime.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042038,"byte_end":9042060,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042061,"byte_end":9042064,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require runtime","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042065,"byte_end":9042138,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ support. In particular, the following runtime services are necessary:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042139,"byte_end":9042212,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042213,"byte_end":9042216,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042217,"byte_end":9042295,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042296,"byte_end":9042353,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042354,"byte_end":9042424,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042425,"byte_end":9042497,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042498,"byte_end":9042501,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042502,"byte_end":9042582,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, often it is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042583,"byte_end":9042663,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ not required to configure a [`Runtime`] manually, and user may just use the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042664,"byte_end":9042743,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ [`tokio::main`] attribute macro, which creates a [`Runtime`] under the hood.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042744,"byte_end":9042824,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042825,"byte_end":9042828,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042829,"byte_end":9042840,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042841,"byte_end":9042844,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When no fine tuning is required, the [`tokio::main`] attribute macro can be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042845,"byte_end":9042924,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ used.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042925,"byte_end":9042934,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042935,"byte_end":9042938,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042939,"byte_end":9042952,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042953,"byte_end":9042985,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9042986,"byte_end":9043035,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043036,"byte_end":9043039,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043040,"byte_end":9043058,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043059,"byte_end":9043122,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043123,"byte_end":9043189,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043190,"byte_end":9043193,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043194,"byte_end":9043208,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043209,"byte_end":9043268,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043269,"byte_end":9043272,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043273,"byte_end":9043310,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043311,"byte_end":9043351,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043352,"byte_end":9043355,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043356,"byte_end":9043436,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043437,"byte_end":9043459,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043460,"byte_end":9043523,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043524,"byte_end":9043564,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043565,"byte_end":9043615,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043616,"byte_end":9043651,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043652,"byte_end":9043687,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043688,"byte_end":9043770,"line_start":42,"line_end":42,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043771,"byte_end":9043806,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043807,"byte_end":9043832,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043833,"byte_end":9043855,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043856,"byte_end":9043859,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043860,"byte_end":9043902,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043903,"byte_end":9043975,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9043976,"byte_end":9044053,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044054,"byte_end":9044085,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044086,"byte_end":9044107,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044108,"byte_end":9044125,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044126,"byte_end":9044141,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044142,"byte_end":9044151,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044152,"byte_end":9044157,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044158,"byte_end":9044165,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044166,"byte_end":9044169,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044170,"byte_end":9044248,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044249,"byte_end":9044327,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044328,"byte_end":9044389,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044390,"byte_end":9044393,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044394,"byte_end":9044447,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044448,"byte_end":9044451,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044452,"byte_end":9044465,"line_start":64,"line_end":64,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044466,"byte_end":9044498,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044499,"byte_end":9044548,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044549,"byte_end":9044581,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044582,"byte_end":9044585,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044586,"byte_end":9044643,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044644,"byte_end":9044673,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/     let rt  = Runtime::new()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044674,"byte_end":9044708,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044709,"byte_end":9044712,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044713,"byte_end":9044743,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044744,"byte_end":9044771,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/         let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044772,"byte_end":9044842,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044843,"byte_end":9044846,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044847,"byte_end":9044865,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044866,"byte_end":9044929,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044930,"byte_end":9044933,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044934,"byte_end":9044975,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9044976,"byte_end":9045020,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045021,"byte_end":9045024,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045025,"byte_end":9045109,"line_start":83,"line_end":83,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045110,"byte_end":9045136,"line_start":84,"line_end":84,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045137,"byte_end":9045204,"line_start":85,"line_end":85,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045205,"byte_end":9045249,"line_start":86,"line_end":86,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045250,"byte_end":9045304,"line_start":87,"line_end":87,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045305,"byte_end":9045344,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045345,"byte_end":9045384,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045385,"byte_end":9045471,"line_start":90,"line_end":90,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045472,"byte_end":9045511,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045512,"byte_end":9045541,"line_start":92,"line_end":92,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045542,"byte_end":9045568,"line_start":93,"line_end":93,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045569,"byte_end":9045572,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045573,"byte_end":9045619,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045620,"byte_end":9045696,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045697,"byte_end":9045778,"line_start":97,"line_end":97,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045779,"byte_end":9045814,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045815,"byte_end":9045840,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045841,"byte_end":9045862,"line_start":100,"line_end":100,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045863,"byte_end":9045882,"line_start":101,"line_end":101,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045883,"byte_end":9045896,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045897,"byte_end":9045907,"line_start":103,"line_end":103,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045908,"byte_end":9045913,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045914,"byte_end":9045921,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045922,"byte_end":9045925,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045926,"byte_end":9045955,"line_start":107,"line_end":107,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045956,"byte_end":9045959,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9045960,"byte_end":9046038,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046039,"byte_end":9046115,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046116,"byte_end":9046158,"line_start":111,"line_end":111,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046159,"byte_end":9046162,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ #### Multi-Thread Scheduler","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046163,"byte_end":9046194,"line_start":113,"line_end":113,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046195,"byte_end":9046198,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ The multi-thread scheduler executes futures on a _thread pool_, using a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046199,"byte_end":9046274,"line_start":115,"line_end":115,"column_start":1,"column_end":76}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046275,"byte_end":9046353,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046354,"byte_end":9046433,"line_start":117,"line_end":117,"column_start":1,"column_end":80}},{"value":"/ for most applications. The multi-thread scheduler requires the `rt-multi-thread`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046434,"byte_end":9046518,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/ feature flag, and is selected by default:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046519,"byte_end":9046564,"line_start":119,"line_end":119,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046565,"byte_end":9046572,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046573,"byte_end":9046596,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046597,"byte_end":9046600,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046601,"byte_end":9046660,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Runtime::new()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046661,"byte_end":9046708,"line_start":124,"line_end":124,"column_start":1,"column_end":48}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046709,"byte_end":9046723,"line_start":125,"line_end":125,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046724,"byte_end":9046731,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046732,"byte_end":9046735,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the multi-thread scheduler, except in some","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046736,"byte_end":9046811,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ niche use-cases, such as when running only a single thread is required.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046812,"byte_end":9046887,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046888,"byte_end":9046891,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ #### Current-Thread Scheduler","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046892,"byte_end":9046925,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046926,"byte_end":9046929,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The current-thread scheduler provides a _single-threaded_ future executor.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9046930,"byte_end":9047008,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/ All tasks will be created and executed on the current thread. This requires","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047009,"byte_end":9047088,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ the `rt` feature flag.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047089,"byte_end":9047115,"line_start":135,"line_end":135,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047116,"byte_end":9047123,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047124,"byte_end":9047147,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047148,"byte_end":9047151,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047152,"byte_end":9047211,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new_current_thread()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047212,"byte_end":9047269,"line_start":140,"line_end":140,"column_start":1,"column_end":58}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047270,"byte_end":9047288,"line_start":141,"line_end":141,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047289,"byte_end":9047303,"line_start":142,"line_end":142,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047304,"byte_end":9047311,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047312,"byte_end":9047315,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047316,"byte_end":9047341,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047342,"byte_end":9047345,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047346,"byte_end":9047420,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047421,"byte_end":9047501,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047502,"byte_end":9047581,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047582,"byte_end":9047661,"line_start":150,"line_end":150,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047662,"byte_end":9047731,"line_start":151,"line_end":151,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047732,"byte_end":9047735,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047736,"byte_end":9047770,"line_start":153,"line_end":153,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047771,"byte_end":9047774,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047775,"byte_end":9047854,"line_start":155,"line_end":155,"column_start":1,"column_end":80}},{"value":"/ multi-thread scheduler spawns threads to schedule tasks and for `spawn_blocking`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047855,"byte_end":9047939,"line_start":156,"line_end":156,"column_start":1,"column_end":85}},{"value":"/ calls.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047940,"byte_end":9047950,"line_start":157,"line_end":157,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047951,"byte_end":9047954,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9047955,"byte_end":9048033,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9048034,"byte_end":9048113,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9048114,"byte_end":9048172,"line_start":161,"line_end":161,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9048173,"byte_end":9048176,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9048177,"byte_end":9048201,"line_start":163,"line_end":163,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9048202,"byte_end":9048226,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9048227,"byte_end":9048261,"line_start":165,"line_end":165,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9048262,"byte_end":9048300,"line_start":166,"line_end":166,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9048301,"byte_end":9048347,"line_start":167,"line_end":167,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9048348,"byte_end":9048398,"line_start":168,"line_end":168,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9048399,"byte_end":9048473,"line_start":169,"line_end":169,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9048474,"byte_end":9048554,"line_start":170,"line_end":170,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9048555,"byte_end":9048617,"line_start":171,"line_end":171,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9048618,"byte_end":9048684,"line_start":172,"line_end":172,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9048685,"byte_end":9048749,"line_start":173,"line_end":173,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":4511},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9082944,"byte_end":9082953,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":4512}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":23448,"byte_end":23470,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4118},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083442,"byte_end":9083454,"line_start":32,"line_end":32,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083362,"byte_end":9083430,"line_start":31,"line_end":31,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4119},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083908,"byte_end":9083916,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083529,"byte_end":9083591,"line_start":36,"line_end":36,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083596,"byte_end":9083599,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083604,"byte_end":9083618,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083623,"byte_end":9083626,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083631,"byte_end":9083638,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083643,"byte_end":9083662,"line_start":41,"line_end":41,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083667,"byte_end":9083670,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083675,"byte_end":9083693,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083698,"byte_end":9083719,"line_start":44,"line_end":44,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083724,"byte_end":9083762,"line_start":45,"line_end":45,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083767,"byte_end":9083794,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083799,"byte_end":9083829,"line_start":47,"line_end":47,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083834,"byte_end":9083837,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083842,"byte_end":9083874,"line_start":49,"line_end":49,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083879,"byte_end":9083884,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083889,"byte_end":9083896,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4120},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084771,"byte_end":9084781,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083990,"byte_end":9084069,"line_start":56,"line_end":56,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084074,"byte_end":9084077,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084082,"byte_end":9084094,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084099,"byte_end":9084102,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084107,"byte_end":9084181,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084186,"byte_end":9084261,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084266,"byte_end":9084324,"line_start":62,"line_end":62,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084329,"byte_end":9084332,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084337,"byte_end":9084351,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084356,"byte_end":9084359,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084364,"byte_end":9084383,"line_start":66,"line_end":66,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084388,"byte_end":9084407,"line_start":67,"line_end":67,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084412,"byte_end":9084415,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084420,"byte_end":9084438,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084443,"byte_end":9084464,"line_start":70,"line_end":70,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084469,"byte_end":9084507,"line_start":71,"line_end":71,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084512,"byte_end":9084539,"line_start":72,"line_end":72,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084544,"byte_end":9084574,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084579,"byte_end":9084582,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084587,"byte_end":9084614,"line_start":75,"line_end":75,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084619,"byte_end":9084667,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084672,"byte_end":9084723,"line_start":77,"line_end":77,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084728,"byte_end":9084737,"line_start":78,"line_end":78,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084742,"byte_end":9084747,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084752,"byte_end":9084759,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4121},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085546,"byte_end":9085560,"line_start":107,"line_end":107,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self) -> Result<Box<Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084922,"byte_end":9084991,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9084996,"byte_end":9085068,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085073,"byte_end":9085086,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085091,"byte_end":9085094,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085099,"byte_end":9085113,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085118,"byte_end":9085121,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085126,"byte_end":9085145,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085150,"byte_end":9085169,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085174,"byte_end":9085177,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085182,"byte_end":9085200,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085205,"byte_end":9085226,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085231,"byte_end":9085269,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085274,"byte_end":9085301,"line_start":98,"line_end":98,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085306,"byte_end":9085336,"line_start":99,"line_end":99,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085341,"byte_end":9085344,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085349,"byte_end":9085399,"line_start":101,"line_end":101,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085404,"byte_end":9085452,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085457,"byte_end":9085498,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085503,"byte_end":9085512,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085517,"byte_end":9085522,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085527,"byte_end":9085534,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4513},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9103877,"byte_end":9103887,"line_start":144,"line_end":144,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":4515},{"krate":0,"index":4516}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":23448,"byte_end":23470,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4213},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9105190,"byte_end":9105195,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"abort","qualname":"<JoinHandle<T>>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the task associated with the handle.","sig":null,"attributes":[{"value":"/ Abort the task associated with the handle.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104233,"byte_end":9104279,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104284,"byte_end":9104287,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Awaiting a cancelled task might complete as usual if the task was","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104292,"byte_end":9104361,"line_start":163,"line_end":163,"column_start":5,"column_end":74}},{"value":"/ already completed at the time it was cancelled, but most likely it","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104366,"byte_end":9104436,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ will complete with a `Err(JoinError::Cancelled)`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104441,"byte_end":9104494,"line_start":165,"line_end":165,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104499,"byte_end":9104502,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104507,"byte_end":9104518,"line_start":167,"line_end":167,"column_start":5,"column_end":16}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104523,"byte_end":9104543,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104548,"byte_end":9104551,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104556,"byte_end":9104574,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104579,"byte_end":9104600,"line_start":171,"line_end":171,"column_start":5,"column_end":26}},{"value":"/    let mut handles = Vec::new();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104605,"byte_end":9104641,"line_start":172,"line_end":172,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104646,"byte_end":9104649,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104654,"byte_end":9104694,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104699,"byte_end":9104758,"line_start":175,"line_end":175,"column_start":5,"column_end":64}},{"value":"/       true","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104763,"byte_end":9104777,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/    }));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104782,"byte_end":9104793,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104798,"byte_end":9104801,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104806,"byte_end":9104846,"line_start":179,"line_end":179,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104851,"byte_end":9104910,"line_start":180,"line_end":180,"column_start":5,"column_end":64}},{"value":"/       false","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104915,"byte_end":9104930,"line_start":181,"line_end":181,"column_start":5,"column_end":20}},{"value":"/    }));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104935,"byte_end":9104946,"line_start":182,"line_end":182,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104951,"byte_end":9104954,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/    for handle in &handles {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104959,"byte_end":9104990,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/        handle.abort();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104995,"byte_end":9105021,"line_start":185,"line_end":185,"column_start":5,"column_end":31}},{"value":"/    }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9105026,"byte_end":9105034,"line_start":186,"line_end":186,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9105039,"byte_end":9105042,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/    for handle in handles {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9105047,"byte_end":9105077,"line_start":188,"line_end":188,"column_start":5,"column_end":35}},{"value":"/        assert!(handle.await.unwrap_err().is_cancelled());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9105082,"byte_end":9105143,"line_start":189,"line_end":189,"column_start":5,"column_end":66}},{"value":"/    }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9105148,"byte_end":9105156,"line_start":190,"line_end":190,"column_start":5,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9105161,"byte_end":9105166,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9105171,"byte_end":9105178,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4825},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9159263,"byte_end":9159270,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":4826},{"krate":0,"index":4827},{"krate":0,"index":4828},{"krate":0,"index":4829},{"krate":0,"index":4830},{"krate":0,"index":4831},{"krate":0,"index":4832},{"krate":0,"index":4833},{"krate":0,"index":4834},{"krate":0,"index":4835}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158307,"byte_end":9158365,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158366,"byte_end":9158369,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158370,"byte_end":9158442,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158443,"byte_end":9158491,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158492,"byte_end":9158495,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new_multi_thread`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158496,"byte_end":9158573,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ or [`Builder::new_current_thread`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158574,"byte_end":9158613,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158614,"byte_end":9158617,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158618,"byte_end":9158695,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158696,"byte_end":9158709,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158710,"byte_end":9158713,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158714,"byte_end":9158747,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new_multi_thread`]: method@Self::new_multi_thread","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158748,"byte_end":9158812,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ [`Builder::new_current_thread`]: method@Self::new_current_thread","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158813,"byte_end":9158881,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158882,"byte_end":9158885,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158886,"byte_end":9158900,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158901,"byte_end":9158904,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158905,"byte_end":9158912,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158913,"byte_end":9158945,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158946,"byte_end":9158949,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158950,"byte_end":9158965,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158966,"byte_end":9158990,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9158991,"byte_end":9159040,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/         .worker_threads(4)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9159041,"byte_end":9159071,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9159072,"byte_end":9159114,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9159115,"byte_end":9159162,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9159163,"byte_end":9159183,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9159184,"byte_end":9159206,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9159207,"byte_end":9159210,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9159211,"byte_end":9159237,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9159238,"byte_end":9159243,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9159244,"byte_end":9159251,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4843},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9160552,"byte_end":9160570,"line_start":86,"line_end":86,"column_start":12,"column_end":30},"name":"new_current_thread","qualname":"<Builder>::new_current_thread","value":"pub fn new_current_thread() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with the current thread scheduler selected.","sig":null,"attributes":[{"value":"/ Returns a new builder with the current thread scheduler selected.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9160397,"byte_end":9160466,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9160471,"byte_end":9160474,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9160479,"byte_end":9160540,"line_start":85,"line_end":85,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4844},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9160895,"byte_end":9160911,"line_start":95,"line_end":95,"column_start":12,"column_end":28},"name":"new_multi_thread","qualname":"<Builder>::new_multi_thread","value":"pub fn new_multi_thread() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with the multi thread scheduler selected.","sig":null,"attributes":[{"value":"/ Returns a new builder with the multi thread scheduler selected.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9160639,"byte_end":9160706,"line_start":90,"line_end":90,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9160711,"byte_end":9160714,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9160719,"byte_end":9160780,"line_start":92,"line_end":92,"column_start":5,"column_end":66}},{"value":"cfg(feature = \"rt-multi-thread\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9160785,"byte_end":9160820,"line_start":93,"line_end":93,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4847},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162364,"byte_end":9162374,"line_start":148,"line_end":148,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9161871,"byte_end":9161909,"line_start":132,"line_end":132,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9161914,"byte_end":9161917,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9161922,"byte_end":9161993,"line_start":134,"line_end":134,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9161998,"byte_end":9162074,"line_start":135,"line_end":135,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162079,"byte_end":9162133,"line_start":136,"line_end":136,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162138,"byte_end":9162141,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162146,"byte_end":9162160,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162165,"byte_end":9162168,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162173,"byte_end":9162180,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162185,"byte_end":9162208,"line_start":141,"line_end":141,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162213,"byte_end":9162216,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162221,"byte_end":9162270,"line_start":143,"line_end":143,"column_start":5,"column_end":54}},{"value":"/     .enable_all()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162275,"byte_end":9162296,"line_start":144,"line_end":144,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162301,"byte_end":9162317,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162322,"byte_end":9162340,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162345,"byte_end":9162352,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4848},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9164065,"byte_end":9164079,"line_start":206,"line_end":206,"column_start":12,"column_end":26},"name":"worker_threads","qualname":"<Builder>::worker_threads","value":"pub fn worker_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of worker threads the `Runtime` will use.","sig":null,"attributes":[{"value":"/ Sets the number of worker threads the `Runtime` will use.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162602,"byte_end":9162663,"line_start":157,"line_end":157,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162668,"byte_end":9162671,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 0 and 32,768 though it is advised to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162676,"byte_end":9162748,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"/ keep this value on the smaller side.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162753,"byte_end":9162793,"line_start":160,"line_end":160,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162798,"byte_end":9162801,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162806,"byte_end":9162819,"line_start":162,"line_end":162,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162824,"byte_end":9162827,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162832,"byte_end":9162901,"line_start":164,"line_end":164,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162906,"byte_end":9162909,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162914,"byte_end":9162925,"line_start":166,"line_end":166,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162930,"byte_end":9162933,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ When using the `current_thread` runtime this method will panic, since","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9162938,"byte_end":9163011,"line_start":168,"line_end":168,"column_start":5,"column_end":78}},{"value":"/ those variants do not allow setting worker thread counts.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163016,"byte_end":9163077,"line_start":169,"line_end":169,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163082,"byte_end":9163085,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163090,"byte_end":9163093,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163098,"byte_end":9163112,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163117,"byte_end":9163120,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ## Multi threaded runtime with 4 threads","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163125,"byte_end":9163169,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163174,"byte_end":9163177,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163182,"byte_end":9163189,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163194,"byte_end":9163217,"line_start":177,"line_end":177,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163222,"byte_end":9163225,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ // This will spawn a work-stealing runtime with 4 worker threads.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163230,"byte_end":9163299,"line_start":179,"line_end":179,"column_start":5,"column_end":74}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163304,"byte_end":9163353,"line_start":180,"line_end":180,"column_start":5,"column_end":54}},{"value":"/     .worker_threads(4)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163358,"byte_end":9163384,"line_start":181,"line_end":181,"column_start":5,"column_end":31}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163389,"byte_end":9163405,"line_start":182,"line_end":182,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163410,"byte_end":9163428,"line_start":183,"line_end":183,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163433,"byte_end":9163436,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ rt.spawn(async move {});","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163441,"byte_end":9163469,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163474,"byte_end":9163481,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163486,"byte_end":9163489,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ## Current thread runtime (will only run on the current thread via `Runtime::block_on`)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163494,"byte_end":9163585,"line_start":188,"line_end":188,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163590,"byte_end":9163593,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163598,"byte_end":9163605,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163610,"byte_end":9163633,"line_start":191,"line_end":191,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163638,"byte_end":9163641,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ // Create a runtime that _must_ be driven from a call","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163646,"byte_end":9163703,"line_start":193,"line_end":193,"column_start":5,"column_end":62}},{"value":"/ // to `Runtime::block_on`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163708,"byte_end":9163738,"line_start":194,"line_end":194,"column_start":5,"column_end":35}},{"value":"/ let rt = runtime::Builder::new_current_thread()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163743,"byte_end":9163794,"line_start":195,"line_end":195,"column_start":5,"column_end":56}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163799,"byte_end":9163815,"line_start":196,"line_end":196,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163820,"byte_end":9163838,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163843,"byte_end":9163846,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ // This will run the runtime and future on the current thread","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163851,"byte_end":9163916,"line_start":199,"line_end":199,"column_start":5,"column_end":70}},{"value":"/ rt.block_on(async move {});","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163921,"byte_end":9163952,"line_start":200,"line_end":200,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163957,"byte_end":9163964,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163969,"byte_end":9163972,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163977,"byte_end":9163988,"line_start":203,"line_end":203,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9163993,"byte_end":9163996,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9164001,"byte_end":9164053,"line_start":205,"line_end":205,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4849},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9164711,"byte_end":9164731,"line_start":225,"line_end":225,"column_start":12,"column_end":32},"name":"max_blocking_threads","qualname":"<Builder>::max_blocking_threads","value":"pub fn max_blocking_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads spawned by the Runtime used for blocking operations.","sig":null,"attributes":[{"value":"/ Specifies limit for threads spawned by the Runtime used for blocking operations.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9164246,"byte_end":9164330,"line_start":212,"line_end":212,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9164335,"byte_end":9164338,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9164343,"byte_end":9164346,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `worker_threads`, this number should be between 1 and 32,768.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9164351,"byte_end":9164433,"line_start":215,"line_end":215,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9164438,"byte_end":9164441,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9164446,"byte_end":9164475,"line_start":217,"line_end":217,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9164480,"byte_end":9164483,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `worker_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9164488,"byte_end":9164579,"line_start":219,"line_end":219,"column_start":5,"column_end":96}},{"value":"/ blocking annotations).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9164584,"byte_end":9164610,"line_start":220,"line_end":220,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9164615,"byte_end":9164618,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9164623,"byte_end":9164634,"line_start":222,"line_end":222,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9164639,"byte_end":9164642,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9164647,"byte_end":9164699,"line_start":224,"line_end":224,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4850},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165287,"byte_end":9165298,"line_start":246,"line_end":246,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9164904,"byte_end":9164968,"line_start":231,"line_end":231,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9164973,"byte_end":9164976,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9164981,"byte_end":9165028,"line_start":233,"line_end":233,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165033,"byte_end":9165036,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165041,"byte_end":9165055,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165060,"byte_end":9165063,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165068,"byte_end":9165075,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165080,"byte_end":9165105,"line_start":238,"line_end":238,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165110,"byte_end":9165113,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165118,"byte_end":9165139,"line_start":240,"line_end":240,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165144,"byte_end":9165193,"line_start":241,"line_end":241,"column_start":5,"column_end":54}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165198,"byte_end":9165229,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165234,"byte_end":9165251,"line_start":243,"line_end":243,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165256,"byte_end":9165263,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165268,"byte_end":9165275,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4853},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166147,"byte_end":9166161,"line_start":272,"line_end":272,"column_start":12,"column_end":26},"name":"thread_name_fn","qualname":"<Builder>::thread_name_fn","value":"pub fn thread_name_fn<F>(&mut Self, F) -> &mut Self where F: Fn() -> String +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165472,"byte_end":9165568,"line_start":252,"line_end":252,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165573,"byte_end":9165576,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ The default name fn is `|| \"tokio-runtime-worker\".into()`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165581,"byte_end":9165643,"line_start":254,"line_end":254,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165648,"byte_end":9165651,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165656,"byte_end":9165670,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165675,"byte_end":9165678,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165683,"byte_end":9165690,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165695,"byte_end":9165720,"line_start":259,"line_end":259,"column_start":5,"column_end":30}},{"value":"/ # use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165725,"byte_end":9165778,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165783,"byte_end":9165786,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165791,"byte_end":9165812,"line_start":262,"line_end":262,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165817,"byte_end":9165866,"line_start":263,"line_end":263,"column_start":5,"column_end":54}},{"value":"/     .thread_name_fn(|| {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165871,"byte_end":9165899,"line_start":264,"line_end":264,"column_start":5,"column_end":33}},{"value":"/        static ATOMIC_ID: AtomicUsize = AtomicUsize::new(0);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165904,"byte_end":9165967,"line_start":265,"line_end":265,"column_start":5,"column_end":68}},{"value":"/        let id = ATOMIC_ID.fetch_add(1, Ordering::SeqCst);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9165972,"byte_end":9166033,"line_start":266,"line_end":266,"column_start":5,"column_end":66}},{"value":"/        format!(\"my-pool-{}\", id)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166038,"byte_end":9166074,"line_start":267,"line_end":267,"column_start":5,"column_end":41}},{"value":"/     })","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166079,"byte_end":9166089,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166094,"byte_end":9166111,"line_start":269,"line_end":269,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166116,"byte_end":9166123,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166128,"byte_end":9166135,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4855},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166926,"byte_end":9166943,"line_start":299,"line_end":299,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166337,"byte_end":9166391,"line_start":280,"line_end":280,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166396,"byte_end":9166399,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166404,"byte_end":9166476,"line_start":282,"line_end":282,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166481,"byte_end":9166514,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166519,"byte_end":9166522,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166527,"byte_end":9166595,"line_start":285,"line_end":285,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166600,"byte_end":9166661,"line_start":286,"line_end":286,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166666,"byte_end":9166669,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166674,"byte_end":9166688,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166693,"byte_end":9166696,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166701,"byte_end":9166708,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166713,"byte_end":9166738,"line_start":291,"line_end":291,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166743,"byte_end":9166746,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166751,"byte_end":9166772,"line_start":293,"line_end":293,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166777,"byte_end":9166826,"line_start":294,"line_end":294,"column_start":5,"column_end":54}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166831,"byte_end":9166868,"line_start":295,"line_end":295,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166873,"byte_end":9166890,"line_start":296,"line_end":296,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166895,"byte_end":9166902,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9166907,"byte_end":9166914,"line_start":298,"line_end":298,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4856},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167563,"byte_end":9167578,"line_start":323,"line_end":323,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167050,"byte_end":9167125,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167130,"byte_end":9167145,"line_start":305,"line_end":305,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167150,"byte_end":9167153,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167158,"byte_end":9167220,"line_start":307,"line_end":307,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167225,"byte_end":9167228,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167233,"byte_end":9167247,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167252,"byte_end":9167255,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167260,"byte_end":9167267,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167272,"byte_end":9167297,"line_start":312,"line_end":312,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167302,"byte_end":9167305,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167310,"byte_end":9167331,"line_start":314,"line_end":314,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167336,"byte_end":9167390,"line_start":315,"line_end":315,"column_start":5,"column_end":59}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167395,"byte_end":9167424,"line_start":316,"line_end":316,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167429,"byte_end":9167468,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167473,"byte_end":9167483,"line_start":318,"line_end":318,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167488,"byte_end":9167505,"line_start":319,"line_end":319,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167510,"byte_end":9167517,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167522,"byte_end":9167529,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167534,"byte_end":9167551,"line_start":322,"line_end":322,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4858},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168219,"byte_end":9168233,"line_start":349,"line_end":349,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167750,"byte_end":9167801,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167806,"byte_end":9167809,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167814,"byte_end":9167876,"line_start":333,"line_end":333,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167881,"byte_end":9167884,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167889,"byte_end":9167903,"line_start":335,"line_end":335,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167908,"byte_end":9167911,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167916,"byte_end":9167923,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167928,"byte_end":9167953,"line_start":338,"line_end":338,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167958,"byte_end":9167961,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167966,"byte_end":9167987,"line_start":340,"line_end":340,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9167992,"byte_end":9168046,"line_start":341,"line_end":341,"column_start":5,"column_end":59}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168051,"byte_end":9168079,"line_start":342,"line_end":342,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168084,"byte_end":9168124,"line_start":343,"line_end":343,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168129,"byte_end":9168139,"line_start":344,"line_end":344,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168144,"byte_end":9168161,"line_start":345,"line_end":345,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168166,"byte_end":9168173,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168178,"byte_end":9168185,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168190,"byte_end":9168207,"line_start":348,"line_end":348,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4860},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168797,"byte_end":9168802,"line_start":372,"line_end":372,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168405,"byte_end":9168442,"line_start":357,"line_end":357,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168447,"byte_end":9168450,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The returned `Runtime` instance is ready to spawn tasks.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168455,"byte_end":9168515,"line_start":359,"line_end":359,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168520,"byte_end":9168523,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168528,"byte_end":9168542,"line_start":361,"line_end":361,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168547,"byte_end":9168550,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168555,"byte_end":9168562,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168567,"byte_end":9168599,"line_start":364,"line_end":364,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168604,"byte_end":9168607,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ let rt  = Builder::new_multi_thread().build().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168612,"byte_end":9168671,"line_start":366,"line_end":366,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168676,"byte_end":9168679,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168684,"byte_end":9168707,"line_start":368,"line_end":368,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168712,"byte_end":9168761,"line_start":369,"line_end":369,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168766,"byte_end":9168773,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9168778,"byte_end":9168785,"line_start":371,"line_end":371,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4862},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9169936,"byte_end":9169953,"line_start":409,"line_end":409,"column_start":12,"column_end":29},"name":"thread_keep_alive","qualname":"<Builder>::thread_keep_alive","value":"pub fn thread_keep_alive(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom timeout for a thread in the blocking pool.","sig":null,"attributes":[{"value":"/ Sets a custom timeout for a thread in the blocking pool.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9169427,"byte_end":9169487,"line_start":392,"line_end":392,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9169492,"byte_end":9169495,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ By default, the timeout for a thread is set to 10 seconds. This can","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9169500,"byte_end":9169571,"line_start":394,"line_end":394,"column_start":5,"column_end":76}},{"value":"/ be overriden using .thread_keep_alive().","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9169576,"byte_end":9169620,"line_start":395,"line_end":395,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9169625,"byte_end":9169628,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9169633,"byte_end":9169646,"line_start":397,"line_end":397,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9169651,"byte_end":9169654,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9169659,"byte_end":9169666,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9169671,"byte_end":9169696,"line_start":400,"line_end":400,"column_start":5,"column_end":30}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9169701,"byte_end":9169731,"line_start":401,"line_end":401,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9169736,"byte_end":9169739,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9169744,"byte_end":9169765,"line_start":403,"line_end":403,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9169770,"byte_end":9169819,"line_start":404,"line_end":404,"column_start":5,"column_end":54}},{"value":"/     .thread_keep_alive(Duration::from_millis(100))","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9169824,"byte_end":9169878,"line_start":405,"line_end":405,"column_start":5,"column_end":59}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9169883,"byte_end":9169900,"line_start":406,"line_end":406,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9169905,"byte_end":9169912,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9169917,"byte_end":9169924,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4969},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9171700,"byte_end":9171709,"line_start":462,"line_end":462,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4971},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9172233,"byte_end":9172244,"line_start":485,"line_end":485,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5014},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9182263,"byte_end":9182269,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":5015},{"krate":0,"index":5016},{"krate":0,"index":5017},{"krate":0,"index":5018},{"krate":0,"index":5019},{"krate":0,"index":5020}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9181994,"byte_end":9182020,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9182021,"byte_end":9182024,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9182025,"byte_end":9182113,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9182114,"byte_end":9182164,"line_start":11,"line_end":11,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9182165,"byte_end":9182168,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9182169,"byte_end":9182227,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":5025},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9182956,"byte_end":9182966,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"EnterGuard","qualname":"::runtime::handle::EnterGuard","value":"EnterGuard {  }","parent":null,"children":[{"krate":0,"index":5027},{"krate":0,"index":5028}],"decl_id":null,"docs":" Runtime context guard.","sig":null,"attributes":[{"value":"/ Runtime context guard.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9182720,"byte_end":9182746,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9182747,"byte_end":9182750,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Returned by [`Runtime::enter`] and [`Handle::enter`], the context guard exits","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9182751,"byte_end":9182832,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/ the runtime context on drop.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9182833,"byte_end":9182865,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9182866,"byte_end":9182869,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9182870,"byte_end":9182927,"line_start":39,"line_end":39,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4922},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183440,"byte_end":9183445,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Sleep`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183050,"byte_end":9183125,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Sleep`] or [`TcpStream`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183130,"byte_end":9183208,"line_start":48,"line_end":48,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183213,"byte_end":9183281,"line_start":49,"line_end":49,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183286,"byte_end":9183289,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ [`Sleep`]: struct@crate::time::Sleep","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183294,"byte_end":9183334,"line_start":51,"line_end":51,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183339,"byte_end":9183386,"line_start":52,"line_end":52,"column_start":5,"column_end":52}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183391,"byte_end":9183428,"line_start":53,"line_end":53,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4923},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184939,"byte_end":9184946,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183590,"byte_end":9183654,"line_start":61,"line_end":61,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183659,"byte_end":9183662,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183667,"byte_end":9183678,"line_start":63,"line_end":63,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183683,"byte_end":9183686,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183691,"byte_end":9183785,"line_start":65,"line_end":65,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183790,"byte_end":9183882,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183887,"byte_end":9183963,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183968,"byte_end":9183971,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183976,"byte_end":9183990,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183995,"byte_end":9183998,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184003,"byte_end":9184085,"line_start":71,"line_end":71,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184090,"byte_end":9184136,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184141,"byte_end":9184144,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184149,"byte_end":9184156,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184161,"byte_end":9184183,"line_start":75,"line_end":75,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184188,"byte_end":9184222,"line_start":76,"line_end":76,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184227,"byte_end":9184243,"line_start":77,"line_end":77,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184248,"byte_end":9184287,"line_start":78,"line_end":78,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184292,"byte_end":9184314,"line_start":79,"line_end":79,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184319,"byte_end":9184350,"line_start":80,"line_end":80,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184355,"byte_end":9184358,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184363,"byte_end":9184404,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184409,"byte_end":9184444,"line_start":83,"line_end":83,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184449,"byte_end":9184473,"line_start":84,"line_end":84,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184478,"byte_end":9184534,"line_start":85,"line_end":85,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184539,"byte_end":9184546,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184551,"byte_end":9184554,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184559,"byte_end":9184577,"line_start":88,"line_end":88,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184582,"byte_end":9184609,"line_start":89,"line_end":89,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184614,"byte_end":9184699,"line_start":90,"line_end":90,"column_start":5,"column_end":90}},{"value":"/     handle.spawn(async { /* ... */ })","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184704,"byte_end":9184745,"line_start":91,"line_end":91,"column_start":5,"column_end":46}},{"value":"/     // This next line would cause a panic","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184750,"byte_end":9184795,"line_start":92,"line_end":92,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184800,"byte_end":9184843,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184848,"byte_end":9184855,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184860,"byte_end":9184889,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184894,"byte_end":9184903,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184908,"byte_end":9184915,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9184920,"byte_end":9184927,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4924},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185244,"byte_end":9185255,"line_start":108,"line_end":108,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185051,"byte_end":9185111,"line_start":103,"line_end":103,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185116,"byte_end":9185119,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185124,"byte_end":9185175,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185180,"byte_end":9185183,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185188,"byte_end":9185232,"line_start":107,"line_end":107,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4925},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186210,"byte_end":9186215,"line_start":140,"line_end":140,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185358,"byte_end":9185400,"line_start":112,"line_end":112,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185405,"byte_end":9185408,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185413,"byte_end":9185484,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185489,"byte_end":9185564,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185569,"byte_end":9185592,"line_start":116,"line_end":116,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185597,"byte_end":9185600,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185605,"byte_end":9185664,"line_start":118,"line_end":118,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185669,"byte_end":9185672,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185677,"byte_end":9185698,"line_start":120,"line_end":120,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185703,"byte_end":9185706,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185711,"byte_end":9185725,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185730,"byte_end":9185733,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185738,"byte_end":9185745,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185750,"byte_end":9185782,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185787,"byte_end":9185790,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185795,"byte_end":9185811,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185816,"byte_end":9185841,"line_start":128,"line_end":128,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185846,"byte_end":9185883,"line_start":129,"line_end":129,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185888,"byte_end":9185925,"line_start":130,"line_end":130,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185930,"byte_end":9185959,"line_start":131,"line_end":131,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185964,"byte_end":9185967,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime using the handle","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9185972,"byte_end":9186027,"line_start":133,"line_end":133,"column_start":5,"column_end":60}},{"value":"/ handle.spawn(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186032,"byte_end":9186056,"line_start":134,"line_end":134,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186061,"byte_end":9186112,"line_start":135,"line_end":135,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186117,"byte_end":9186124,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186129,"byte_end":9186136,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186141,"byte_end":9186148,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186184,"byte_end":9186196,"line_start":139,"line_end":139,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4927},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9187118,"byte_end":9187132,"line_start":170,"line_end":170,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking\n operations.","sig":null,"attributes":[{"value":"/ Run the provided function on an executor dedicated to blocking","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186515,"byte_end":9186581,"line_start":150,"line_end":150,"column_start":5,"column_end":71}},{"value":"/ operations.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186586,"byte_end":9186601,"line_start":151,"line_end":151,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186606,"byte_end":9186609,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186614,"byte_end":9186628,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186633,"byte_end":9186636,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186641,"byte_end":9186648,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186653,"byte_end":9186685,"line_start":156,"line_end":156,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186690,"byte_end":9186693,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186698,"byte_end":9186714,"line_start":158,"line_end":158,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186719,"byte_end":9186744,"line_start":159,"line_end":159,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186749,"byte_end":9186786,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186791,"byte_end":9186828,"line_start":161,"line_end":161,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186833,"byte_end":9186862,"line_start":162,"line_end":162,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186867,"byte_end":9186870,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ // Spawn a blocking function onto the runtime using the handle","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186875,"byte_end":9186941,"line_start":164,"line_end":164,"column_start":5,"column_end":71}},{"value":"/ handle.spawn_blocking(|| {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186946,"byte_end":9186976,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9186981,"byte_end":9187032,"line_start":166,"line_end":166,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9187037,"byte_end":9187044,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9187049,"byte_end":9187056,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9187092,"byte_end":9187104,"line_start":169,"line_end":169,"column_start":36,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":4930},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9188401,"byte_end":9188416,"line_start":206,"line_end":206,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9188321,"byte_end":9188389,"line_start":205,"line_end":205,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":5456},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9051126,"byte_end":9051133,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":5457},{"krate":0,"index":5458},{"krate":0,"index":5459}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":23448,"byte_end":23470,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5444},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9053116,"byte_end":9053119,"line_start":321,"line_end":321,"column_start":16,"column_end":19},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> std::io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-multi-thread\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9052998,"byte_end":9053033,"line_start":319,"line_end":319,"column_start":9,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5445},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9053757,"byte_end":9053763,"line_start":342,"line_end":342,"column_start":16,"column_end":22},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5446},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9054687,"byte_end":9054692,"line_start":372,"line_end":372,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9054657,"byte_end":9054669,"line_start":371,"line_end":371,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5448},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9055465,"byte_end":9055479,"line_start":397,"line_end":397,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Runtime>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking operations.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9055435,"byte_end":9055447,"line_start":396,"line_end":396,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5451},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9057404,"byte_end":9057412,"line_start":446,"line_end":446,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the\n runtime's entry point.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5453},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9058900,"byte_end":9058905,"line_start":488,"line_end":488,"column_start":16,"column_end":21},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5454},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9060475,"byte_end":9060491,"line_start":527,"line_end":527,"column_start":16,"column_end":32},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5455},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9061920,"byte_end":9061939,"line_start":559,"line_end":559,"column_start":16,"column_end":35},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5508},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::signal","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","parent":null,"children":[{"krate":0,"index":5509},{"krate":0,"index":5516},{"krate":0,"index":5517},{"krate":0,"index":5566},{"krate":0,"index":5570}],"decl_id":null,"docs":" Asynchronous signal handling for Tokio","sig":null,"attributes":[{"value":"cfg(feature = \"signal\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":22478,"byte_end":22504,"line_start":217,"line_end":217,"column_start":13,"column_end":39}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":22579,"byte_end":22596,"line_start":219,"line_end":219,"column_start":13,"column_end":30}},{"value":"/ Asynchronous signal handling for Tokio","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254171,"byte_end":9254213,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254214,"byte_end":9254217,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Note that signal handling is in general a very tricky topic and should be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254218,"byte_end":9254295,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ used with great care. This crate attempts to implement 'best practice' for","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254296,"byte_end":9254374,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ signal handling, but it should be evaluated for your own applications' needs","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254375,"byte_end":9254455,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ to see if it's suitable.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254456,"byte_end":9254484,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254485,"byte_end":9254488,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ There are some fundamental limitations of this crate documented on the OS","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254489,"byte_end":9254566,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ specific structures, as well.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254567,"byte_end":9254600,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254601,"byte_end":9254604,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254605,"byte_end":9254619,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254620,"byte_end":9254623,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Print on \"ctrl-c\" notification.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254624,"byte_end":9254659,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254660,"byte_end":9254663,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254664,"byte_end":9254682,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254683,"byte_end":9254705,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254706,"byte_end":9254709,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254710,"byte_end":9254728,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254729,"byte_end":9254792,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/     signal::ctrl_c().await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254793,"byte_end":9254825,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/     println!(\"ctrl-c received!\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254826,"byte_end":9254863,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254864,"byte_end":9254878,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254879,"byte_end":9254884,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254885,"byte_end":9254892,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254893,"byte_end":9254896,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP on Unix","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254897,"byte_end":9254924,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254925,"byte_end":9254928,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254929,"byte_end":9254947,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # #[cfg(unix)] {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254948,"byte_end":9254968,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9254969,"byte_end":9255019,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9255020,"byte_end":9255023,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9255024,"byte_end":9255042,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9255043,"byte_end":9255106,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9255107,"byte_end":9255155,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9255156,"byte_end":9255211,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9255212,"byte_end":9255215,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9255216,"byte_end":9255266,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9255267,"byte_end":9255281,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9255282,"byte_end":9255314,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9255315,"byte_end":9255354,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9255355,"byte_end":9255364,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9255365,"byte_end":9255370,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9255371,"byte_end":9255378,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9255379,"byte_end":9255386,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5513},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9257462,"byte_end":9257468,"line_start":50,"line_end":50,"column_start":14,"column_end":20},"name":"ctrl_c","qualname":"::signal::ctrl_c::ctrl_c","value":"pub async fn ctrl_c() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when a \"ctrl-c\" notification is sent to the process.","sig":null,"attributes":[{"value":"/ Completes when a \"ctrl-c\" notification is sent to the process.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9255760,"byte_end":9255826,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9255827,"byte_end":9255830,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While signals are handled very differently between Unix and Windows, both","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9255831,"byte_end":9255908,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ platforms support receiving a signal on \"ctrl-c\". This function provides a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9255909,"byte_end":9255987,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ portable API for receiving this notification.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9255988,"byte_end":9256037,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9256038,"byte_end":9256041,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once the returned future is polled, a listener is registered. The future","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9256042,"byte_end":9256118,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ will complete on the first received `ctrl-c` **after** the initial call to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9256119,"byte_end":9256197,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ either `Future::poll` or `.await`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9256198,"byte_end":9256236,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9256237,"byte_end":9256240,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9256241,"byte_end":9256254,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9256255,"byte_end":9256258,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms, the first time that a `Signal` instance is registered for a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9256259,"byte_end":9256341,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ particular signal kind, an OS signal-handler is installed which replaces the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9256342,"byte_end":9256422,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ default platform behavior when that signal is received, **for the duration of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9256423,"byte_end":9256504,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ the entire process**.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9256505,"byte_end":9256530,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9256531,"byte_end":9256534,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9256535,"byte_end":9256608,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ receives a signal generated by \"CTRL+C\" on the terminal. But, when a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9256609,"byte_end":9256681,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `ctrl_c` stream is created to listen for this signal, the time it arrives,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9256682,"byte_end":9256760,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ it will be translated to a stream event, and the process will continue to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9256761,"byte_end":9256838,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ execute.  **Even if this `Signal` instance is dropped, subsequent SIGINT","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9256839,"byte_end":9256915,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ deliveries will end up captured by Tokio, and the default platform behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9256916,"byte_end":9256995,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ will NOT be reset**.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9256996,"byte_end":9257020,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9257021,"byte_end":9257024,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9257025,"byte_end":9257103,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9257104,"byte_end":9257164,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9257165,"byte_end":9257168,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9257169,"byte_end":9257183,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9257184,"byte_end":9257187,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9257188,"byte_end":9257206,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9257207,"byte_end":9257229,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9257230,"byte_end":9257233,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9257234,"byte_end":9257252,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9257253,"byte_end":9257274,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/     println!(\"waiting for ctrl-c\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9257275,"byte_end":9257314,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9257315,"byte_end":9257318,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     signal::ctrl_c().await.expect(\"failed to listen for event\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9257319,"byte_end":9257387,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9257388,"byte_end":9257391,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     println!(\"received ctrl-c event\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9257392,"byte_end":9257434,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9257435,"byte_end":9257440,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\ctrl_c.rs","byte_start":9257441,"byte_end":9257448,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5570},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"windows","qualname":"::signal::windows","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","parent":null,"children":[{"krate":0,"index":5571},{"krate":0,"index":5572},{"krate":0,"index":5573},{"krate":0,"index":5574},{"krate":0,"index":5575},{"krate":0,"index":5576},{"krate":0,"index":5577},{"krate":0,"index":5578},{"krate":0,"index":5579},{"krate":0,"index":5580},{"krate":0,"index":5581},{"krate":0,"index":5582},{"krate":0,"index":5583},{"krate":0,"index":5584},{"krate":0,"index":5585},{"krate":0,"index":5586},{"krate":0,"index":5587},{"krate":0,"index":5588},{"krate":0,"index":5589},{"krate":0,"index":5590},{"krate":0,"index":5591},{"krate":0,"index":5592},{"krate":0,"index":5593},{"krate":0,"index":5594},{"krate":0,"index":5643},{"krate":0,"index":5646},{"krate":0,"index":5595},{"krate":0,"index":5597},{"krate":0,"index":5648},{"krate":0,"index":5649},{"krate":0,"index":5602},{"krate":0,"index":5651},{"krate":0,"index":5653},{"krate":0,"index":5604},{"krate":0,"index":5611},{"krate":0,"index":5615},{"krate":0,"index":5616},{"krate":0,"index":5655},{"krate":0,"index":5657},{"krate":0,"index":5618},{"krate":0,"index":5659},{"krate":0,"index":5661},{"krate":0,"index":5623},{"krate":0,"index":5628}],"decl_id":null,"docs":" Windows-specific types for signal handling.","sig":null,"attributes":[{"value":"/ Windows-specific types for signal handling.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9281061,"byte_end":9281108,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9281109,"byte_end":9281112,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only defined on Windows and allows receiving \"ctrl-c\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9281113,"byte_end":9281185,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ and \"ctrl-break\" notifications. These events are listened for via the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9281186,"byte_end":9281259,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ `SetConsoleCtrlHandler` function which receives events of the type","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9281260,"byte_end":9281330,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ `CTRL_C_EVENT` and `CTRL_BREAK_EVENT`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9281331,"byte_end":9281373,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9281375,"byte_end":9281391,"line_start":8,"line_end":8,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":5616},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285386,"byte_end":9285392,"line_start":156,"line_end":156,"column_start":8,"column_end":14},"name":"ctrl_c","qualname":"::signal::windows::ctrl_c","value":"pub fn ctrl_c() -> io::Result<CtrlC>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which receives \"ctrl-c\" notifications sent to the\n process.","sig":null,"attributes":[{"value":"/ Creates a new stream which receives \"ctrl-c\" notifications sent to the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9284800,"byte_end":9284874,"line_start":134,"line_end":134,"column_start":1,"column_end":75}},{"value":"/ process.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9284875,"byte_end":9284887,"line_start":135,"line_end":135,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9284888,"byte_end":9284891,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9284892,"byte_end":9284906,"line_start":137,"line_end":137,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9284907,"byte_end":9284910,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9284911,"byte_end":9284929,"line_start":139,"line_end":139,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::windows::ctrl_c;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9284930,"byte_end":9284969,"line_start":140,"line_end":140,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9284970,"byte_end":9284973,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9284974,"byte_end":9284992,"line_start":142,"line_end":142,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9284993,"byte_end":9285056,"line_start":143,"line_end":143,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of CTRL-C events.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285057,"byte_end":9285104,"line_start":144,"line_end":144,"column_start":1,"column_end":48}},{"value":"/     let mut stream = ctrl_c()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285105,"byte_end":9285140,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285141,"byte_end":9285144,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a CTRL-C event is received.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285145,"byte_end":9285198,"line_start":147,"line_end":147,"column_start":1,"column_end":54}},{"value":"/     for countdown in (0..3).rev() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285199,"byte_end":9285238,"line_start":148,"line_end":148,"column_start":1,"column_end":40}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285239,"byte_end":9285271,"line_start":149,"line_end":149,"column_start":1,"column_end":33}},{"value":"/         println!(\"got CTRL-C. {} more to exit\", countdown);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285272,"byte_end":9285335,"line_start":150,"line_end":150,"column_start":1,"column_end":64}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285336,"byte_end":9285345,"line_start":151,"line_end":151,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285346,"byte_end":9285349,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285350,"byte_end":9285364,"line_start":153,"line_end":153,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285365,"byte_end":9285370,"line_start":154,"line_end":154,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285371,"byte_end":9285378,"line_start":155,"line_end":155,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5655},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285993,"byte_end":9285998,"line_start":169,"line_end":169,"column_start":12,"column_end":17},"name":"CtrlC","qualname":"::signal::windows::CtrlC","value":"CtrlC {  }","parent":null,"children":[{"krate":0,"index":5656}],"decl_id":null,"docs":" Represents a stream which receives \"ctrl-c\" notifications sent to the process\n via `SetConsoleCtrlHandler`.","sig":null,"attributes":[{"value":"/ Represents a stream which receives \"ctrl-c\" notifications sent to the process","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285479,"byte_end":9285560,"line_start":160,"line_end":160,"column_start":1,"column_end":82}},{"value":"/ via `SetConsoleCtrlHandler`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285561,"byte_end":9285593,"line_start":161,"line_end":161,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285594,"byte_end":9285597,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ A notification to this process notifies *all* streams listening for","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285598,"byte_end":9285669,"line_start":163,"line_end":163,"column_start":1,"column_end":72}},{"value":"/ this event. Moreover, the notifications **are coalesced** if they aren't processed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285670,"byte_end":9285756,"line_start":164,"line_end":164,"column_start":1,"column_end":87}},{"value":"/ quickly enough. This means that if two notifications are received back-to-back,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285757,"byte_end":9285840,"line_start":165,"line_end":165,"column_start":1,"column_end":84}},{"value":"/ then the stream may only receive one item about the two notifications.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285841,"byte_end":9285915,"line_start":166,"line_end":166,"column_start":1,"column_end":75}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9285916,"byte_end":9285964,"line_start":167,"line_end":167,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5619},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286761,"byte_end":9286765,"line_start":197,"line_end":197,"column_start":18,"column_end":22},"name":"recv","qualname":"<CtrlC>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286039,"byte_end":9286087,"line_start":174,"line_end":174,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286092,"byte_end":9286095,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286100,"byte_end":9286172,"line_start":176,"line_end":176,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286177,"byte_end":9286180,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286185,"byte_end":9286199,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286204,"byte_end":9286207,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286212,"byte_end":9286230,"line_start":180,"line_end":180,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::windows::ctrl_c;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286235,"byte_end":9286274,"line_start":181,"line_end":181,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286279,"byte_end":9286282,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286287,"byte_end":9286305,"line_start":183,"line_end":183,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286310,"byte_end":9286373,"line_start":184,"line_end":184,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of CTRL-C events.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286378,"byte_end":9286425,"line_start":185,"line_end":185,"column_start":5,"column_end":52}},{"value":"/     let mut stream = ctrl_c()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286430,"byte_end":9286465,"line_start":186,"line_end":186,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286470,"byte_end":9286473,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a CTRL-C event is received.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286478,"byte_end":9286531,"line_start":188,"line_end":188,"column_start":5,"column_end":58}},{"value":"/     for countdown in (0..3).rev() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286536,"byte_end":9286575,"line_start":189,"line_end":189,"column_start":5,"column_end":44}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286580,"byte_end":9286612,"line_start":190,"line_end":190,"column_start":5,"column_end":37}},{"value":"/         println!(\"got CTRL-C. {} more to exit\", countdown);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286617,"byte_end":9286680,"line_start":191,"line_end":191,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286685,"byte_end":9286694,"line_start":192,"line_end":192,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286699,"byte_end":9286702,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286707,"byte_end":9286721,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286726,"byte_end":9286731,"line_start":195,"line_end":195,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286736,"byte_end":9286743,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5622},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287664,"byte_end":9287673,"line_start":229,"line_end":229,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<CtrlC>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286836,"byte_end":9286906,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286911,"byte_end":9286931,"line_start":202,"line_end":202,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286936,"byte_end":9286939,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286944,"byte_end":9287016,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287021,"byte_end":9287024,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287029,"byte_end":9287043,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287048,"byte_end":9287051,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287056,"byte_end":9287102,"line_start":208,"line_end":208,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287107,"byte_end":9287110,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287115,"byte_end":9287133,"line_start":210,"line_end":210,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287138,"byte_end":9287160,"line_start":211,"line_end":211,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287165,"byte_end":9287193,"line_start":212,"line_end":212,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287198,"byte_end":9287233,"line_start":213,"line_end":213,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::windows::CtrlC;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287238,"byte_end":9287276,"line_start":214,"line_end":214,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287281,"byte_end":9287284,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287289,"byte_end":9287310,"line_start":216,"line_end":216,"column_start":5,"column_end":26}},{"value":"/     ctrl_c: CtrlC,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287315,"byte_end":9287337,"line_start":217,"line_end":217,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287342,"byte_end":9287347,"line_start":218,"line_end":218,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287352,"byte_end":9287355,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287360,"byte_end":9287390,"line_start":220,"line_end":220,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287395,"byte_end":9287428,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287433,"byte_end":9287436,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287441,"byte_end":9287528,"line_start":223,"line_end":223,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287533,"byte_end":9287574,"line_start":224,"line_end":224,"column_start":5,"column_end":46}},{"value":"/         self.ctrl_c.poll_recv(cx)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287579,"byte_end":9287616,"line_start":225,"line_end":225,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287621,"byte_end":9287630,"line_start":226,"line_end":226,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287635,"byte_end":9287640,"line_start":227,"line_end":227,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287645,"byte_end":9287652,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5659},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288292,"byte_end":9288301,"line_start":243,"line_end":243,"column_start":12,"column_end":21},"name":"CtrlBreak","qualname":"::signal::windows::CtrlBreak","value":"CtrlBreak {  }","parent":null,"children":[{"krate":0,"index":5660}],"decl_id":null,"docs":" Represents a stream which receives \"ctrl-break\" notifications sent to the process\n via `SetConsoleCtrlHandler`.","sig":null,"attributes":[{"value":"/ Represents a stream which receives \"ctrl-break\" notifications sent to the process","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287774,"byte_end":9287859,"line_start":234,"line_end":234,"column_start":1,"column_end":86}},{"value":"/ via `SetConsoleCtrlHandler`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287860,"byte_end":9287892,"line_start":235,"line_end":235,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287893,"byte_end":9287896,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ A notification to this process notifies *all* streams listening for","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287897,"byte_end":9287968,"line_start":237,"line_end":237,"column_start":1,"column_end":72}},{"value":"/ this event. Moreover, the notifications **are coalesced** if they aren't processed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9287969,"byte_end":9288055,"line_start":238,"line_end":238,"column_start":1,"column_end":87}},{"value":"/ quickly enough. This means that if two notifications are received back-to-back,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288056,"byte_end":9288139,"line_start":239,"line_end":239,"column_start":1,"column_end":84}},{"value":"/ then the stream may only receive one item about the two notifications.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288140,"byte_end":9288214,"line_start":240,"line_end":240,"column_start":1,"column_end":75}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288215,"byte_end":9288263,"line_start":241,"line_end":241,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5624},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289015,"byte_end":9289019,"line_start":269,"line_end":269,"column_start":18,"column_end":22},"name":"recv","qualname":"<CtrlBreak>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288346,"byte_end":9288394,"line_start":248,"line_end":248,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288399,"byte_end":9288402,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288407,"byte_end":9288479,"line_start":250,"line_end":250,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288484,"byte_end":9288487,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288492,"byte_end":9288506,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288511,"byte_end":9288514,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288519,"byte_end":9288537,"line_start":254,"line_end":254,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::windows::ctrl_break;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288542,"byte_end":9288585,"line_start":255,"line_end":255,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288590,"byte_end":9288593,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288598,"byte_end":9288616,"line_start":257,"line_end":257,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288621,"byte_end":9288684,"line_start":258,"line_end":258,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of CTRL-BREAK events.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288689,"byte_end":9288740,"line_start":259,"line_end":259,"column_start":5,"column_end":56}},{"value":"/     let mut stream = ctrl_break()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288745,"byte_end":9288784,"line_start":260,"line_end":260,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288789,"byte_end":9288792,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a CTRL-BREAK event is received.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288797,"byte_end":9288854,"line_start":262,"line_end":262,"column_start":5,"column_end":62}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288859,"byte_end":9288873,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288878,"byte_end":9288910,"line_start":264,"line_end":264,"column_start":5,"column_end":37}},{"value":"/         println!(\"got signal CTRL-BREAK\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288915,"byte_end":9288961,"line_start":265,"line_end":265,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288966,"byte_end":9288975,"line_start":266,"line_end":266,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288980,"byte_end":9288985,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288990,"byte_end":9288997,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5627},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289934,"byte_end":9289943,"line_start":301,"line_end":301,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<CtrlBreak>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289090,"byte_end":9289160,"line_start":273,"line_end":273,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289165,"byte_end":9289185,"line_start":274,"line_end":274,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289190,"byte_end":9289193,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289198,"byte_end":9289270,"line_start":276,"line_end":276,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289275,"byte_end":9289278,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289283,"byte_end":9289297,"line_start":278,"line_end":278,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289302,"byte_end":9289305,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289310,"byte_end":9289356,"line_start":280,"line_end":280,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289361,"byte_end":9289364,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289369,"byte_end":9289387,"line_start":282,"line_end":282,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289392,"byte_end":9289414,"line_start":283,"line_end":283,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289419,"byte_end":9289447,"line_start":284,"line_end":284,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289452,"byte_end":9289487,"line_start":285,"line_end":285,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::windows::CtrlBreak;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289492,"byte_end":9289534,"line_start":286,"line_end":286,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289539,"byte_end":9289542,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289547,"byte_end":9289568,"line_start":288,"line_end":288,"column_start":5,"column_end":26}},{"value":"/     ctrl_break: CtrlBreak,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289573,"byte_end":9289603,"line_start":289,"line_end":289,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289608,"byte_end":9289613,"line_start":290,"line_end":290,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289618,"byte_end":9289621,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289626,"byte_end":9289656,"line_start":292,"line_end":292,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289661,"byte_end":9289694,"line_start":293,"line_end":293,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289699,"byte_end":9289702,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289707,"byte_end":9289794,"line_start":295,"line_end":295,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289799,"byte_end":9289840,"line_start":296,"line_end":296,"column_start":5,"column_end":46}},{"value":"/         self.ctrl_break.poll_recv(cx)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289845,"byte_end":9289886,"line_start":297,"line_end":297,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289891,"byte_end":9289900,"line_start":298,"line_end":298,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289905,"byte_end":9289910,"line_start":299,"line_end":299,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9289915,"byte_end":9289922,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5628},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290589,"byte_end":9290599,"line_start":326,"line_end":326,"column_start":8,"column_end":18},"name":"ctrl_break","qualname":"::signal::windows::ctrl_break","value":"pub fn ctrl_break() -> io::Result<CtrlBreak>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which receives \"ctrl-break\" notifications sent to the\n process.","sig":null,"attributes":[{"value":"/ Creates a new stream which receives \"ctrl-break\" notifications sent to the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290044,"byte_end":9290122,"line_start":306,"line_end":306,"column_start":1,"column_end":79}},{"value":"/ process.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290123,"byte_end":9290135,"line_start":307,"line_end":307,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290136,"byte_end":9290139,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290140,"byte_end":9290154,"line_start":309,"line_end":309,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290155,"byte_end":9290158,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290159,"byte_end":9290177,"line_start":311,"line_end":311,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::windows::ctrl_break;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290178,"byte_end":9290221,"line_start":312,"line_end":312,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290222,"byte_end":9290225,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290226,"byte_end":9290244,"line_start":314,"line_end":314,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290245,"byte_end":9290308,"line_start":315,"line_end":315,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of CTRL-BREAK events.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290309,"byte_end":9290360,"line_start":316,"line_end":316,"column_start":1,"column_end":52}},{"value":"/     let mut stream = ctrl_break()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290361,"byte_end":9290400,"line_start":317,"line_end":317,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290401,"byte_end":9290404,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a CTRL-BREAK event is received.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290405,"byte_end":9290462,"line_start":319,"line_end":319,"column_start":1,"column_end":58}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290463,"byte_end":9290477,"line_start":320,"line_end":320,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290478,"byte_end":9290510,"line_start":321,"line_end":321,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal CTRL-BREAK\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290511,"byte_end":9290557,"line_start":322,"line_end":322,"column_start":1,"column_end":47}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290558,"byte_end":9290567,"line_start":323,"line_end":323,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290568,"byte_end":9290573,"line_start":324,"line_end":324,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9290574,"byte_end":9290581,"line_start":325,"line_end":325,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5663},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":5664},{"krate":0,"index":5674},{"krate":0,"index":5675},{"krate":0,"index":5676},{"krate":0,"index":5677},{"krate":0,"index":5852},{"krate":0,"index":6255},{"krate":0,"index":6345},{"krate":0,"index":6346},{"krate":0,"index":6347},{"krate":0,"index":6348},{"krate":0,"index":6349},{"krate":0,"index":6350},{"krate":0,"index":6409},{"krate":0,"index":6410},{"krate":0,"index":6529},{"krate":0,"index":6622},{"krate":0,"index":6623},{"krate":0,"index":6624},{"krate":0,"index":6625},{"krate":0,"index":6659},{"krate":0,"index":6660},{"krate":0,"index":6661},{"krate":0,"index":6662},{"krate":0,"index":6663},{"krate":0,"index":6769},{"krate":0,"index":6770},{"krate":0,"index":6771},{"krate":0,"index":6772},{"krate":0,"index":6773},{"krate":0,"index":6817},{"krate":0,"index":6818}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":23141,"byte_end":23165,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9292100,"byte_end":9292164,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9292165,"byte_end":9292168,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9292169,"byte_end":9292244,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9292245,"byte_end":9292325,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9292326,"byte_end":9292405,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9292406,"byte_end":9292440,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9292441,"byte_end":9292444,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9292445,"byte_end":9292469,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9292470,"byte_end":9292473,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9292474,"byte_end":9292495,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9292496,"byte_end":9292499,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9292500,"byte_end":9292573,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9292574,"byte_end":9292653,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9292654,"byte_end":9292723,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9292724,"byte_end":9292727,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9292728,"byte_end":9292807,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9292808,"byte_end":9292885,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9292886,"byte_end":9292961,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9292962,"byte_end":9293034,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293035,"byte_end":9293107,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports multiple consumers, many different separate tasks may **receive**","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293108,"byte_end":9293186,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ messages.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293187,"byte_end":9293200,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293201,"byte_end":9293204,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293205,"byte_end":9293283,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293284,"byte_end":9293345,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293346,"byte_end":9293349,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293350,"byte_end":9293374,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293375,"byte_end":9293378,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293379,"byte_end":9293458,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293459,"byte_end":9293537,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293538,"byte_end":9293582,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293583,"byte_end":9293586,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293587,"byte_end":9293667,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293668,"byte_end":9293684,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293685,"byte_end":9293688,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293689,"byte_end":9293696,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293697,"byte_end":9293726,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293727,"byte_end":9293730,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293731,"byte_end":9293774,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293775,"byte_end":9293837,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293838,"byte_end":9293843,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293844,"byte_end":9293847,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293848,"byte_end":9293866,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293867,"byte_end":9293888,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293889,"byte_end":9293931,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293932,"byte_end":9293935,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293936,"byte_end":9293969,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9293970,"byte_end":9294017,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294018,"byte_end":9294052,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294053,"byte_end":9294064,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294065,"byte_end":9294068,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294069,"byte_end":9294146,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294147,"byte_end":9294150,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294151,"byte_end":9294193,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294194,"byte_end":9294230,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294231,"byte_end":9294236,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294237,"byte_end":9294244,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294245,"byte_end":9294248,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294249,"byte_end":9294313,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294314,"byte_end":9294378,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294379,"byte_end":9294441,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294442,"byte_end":9294512,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294513,"byte_end":9294578,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294579,"byte_end":9294589,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294590,"byte_end":9294593,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294594,"byte_end":9294610,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294611,"byte_end":9294614,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294615,"byte_end":9294622,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294623,"byte_end":9294666,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294667,"byte_end":9294718,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294719,"byte_end":9294724,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294725,"byte_end":9294728,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294729,"byte_end":9294747,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294748,"byte_end":9294769,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294770,"byte_end":9294821,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294822,"byte_end":9294858,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294859,"byte_end":9294870,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294871,"byte_end":9294874,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294875,"byte_end":9294952,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294953,"byte_end":9294956,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9294957,"byte_end":9294999,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295000,"byte_end":9295045,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295046,"byte_end":9295051,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295052,"byte_end":9295059,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295060,"byte_end":9295063,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295064,"byte_end":9295086,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295087,"byte_end":9295130,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295131,"byte_end":9295134,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295135,"byte_end":9295156,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295157,"byte_end":9295160,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295161,"byte_end":9295238,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295239,"byte_end":9295319,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295320,"byte_end":9295375,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295376,"byte_end":9295379,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295380,"byte_end":9295458,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295459,"byte_end":9295479,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295480,"byte_end":9295483,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295484,"byte_end":9295491,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295492,"byte_end":9295518,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295519,"byte_end":9295522,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295523,"byte_end":9295576,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295577,"byte_end":9295631,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295632,"byte_end":9295637,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295638,"byte_end":9295641,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295642,"byte_end":9295660,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295661,"byte_end":9295682,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295683,"byte_end":9295729,"line_start":109,"line_end":109,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295730,"byte_end":9295733,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295734,"byte_end":9295767,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295768,"byte_end":9295796,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295797,"byte_end":9295849,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295850,"byte_end":9295894,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295895,"byte_end":9295908,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295909,"byte_end":9295920,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295921,"byte_end":9295924,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295925,"byte_end":9295972,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9295973,"byte_end":9296011,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296012,"byte_end":9296021,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296022,"byte_end":9296027,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296028,"byte_end":9296035,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296036,"byte_end":9296039,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296040,"byte_end":9296120,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296121,"byte_end":9296198,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296199,"byte_end":9296272,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296273,"byte_end":9296348,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296349,"byte_end":9296362,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296363,"byte_end":9296366,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296367,"byte_end":9296442,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296443,"byte_end":9296522,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296523,"byte_end":9296601,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296602,"byte_end":9296681,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296682,"byte_end":9296762,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296763,"byte_end":9296828,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296829,"byte_end":9296832,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296833,"byte_end":9296913,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296914,"byte_end":9296926,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296927,"byte_end":9296930,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296931,"byte_end":9296944,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296945,"byte_end":9296986,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9296987,"byte_end":9297017,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297018,"byte_end":9297044,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297045,"byte_end":9297048,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297049,"byte_end":9297067,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297068,"byte_end":9297107,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297108,"byte_end":9297183,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297184,"byte_end":9297230,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297231,"byte_end":9297234,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297235,"byte_end":9297259,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297260,"byte_end":9297339,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297340,"byte_end":9297371,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let tx = tx.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297372,"byte_end":9297404,"line_start":153,"line_end":153,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297405,"byte_end":9297408,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297409,"byte_end":9297446,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297447,"byte_end":9297509,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297510,"byte_end":9297525,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297526,"byte_end":9297535,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297536,"byte_end":9297539,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297540,"byte_end":9297619,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297620,"byte_end":9297695,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297696,"byte_end":9297774,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297775,"byte_end":9297822,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297823,"byte_end":9297840,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297841,"byte_end":9297844,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297845,"byte_end":9297892,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297893,"byte_end":9297934,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297935,"byte_end":9297944,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297945,"byte_end":9297948,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297949,"byte_end":9297963,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297964,"byte_end":9297969,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297970,"byte_end":9297977,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297978,"byte_end":9297981,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9297982,"byte_end":9298057,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298058,"byte_end":9298133,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298134,"byte_end":9298213,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298214,"byte_end":9298279,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298280,"byte_end":9298357,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298358,"byte_end":9298361,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298362,"byte_end":9298440,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298441,"byte_end":9298521,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298522,"byte_end":9298567,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298568,"byte_end":9298571,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298572,"byte_end":9298579,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298580,"byte_end":9298617,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298618,"byte_end":9298645,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298646,"byte_end":9298649,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298650,"byte_end":9298668,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298669,"byte_end":9298687,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298688,"byte_end":9298731,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298732,"byte_end":9298737,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298738,"byte_end":9298741,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298742,"byte_end":9298760,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298761,"byte_end":9298782,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298783,"byte_end":9298872,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298873,"byte_end":9298876,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298877,"byte_end":9298922,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298923,"byte_end":9298956,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298957,"byte_end":9298994,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298995,"byte_end":9298998,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9298999,"byte_end":9299066,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299067,"byte_end":9299094,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299095,"byte_end":9299129,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299130,"byte_end":9299173,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299174,"byte_end":9299211,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299212,"byte_end":9299265,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299266,"byte_end":9299287,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299288,"byte_end":9299305,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299306,"byte_end":9299319,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299320,"byte_end":9299331,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299332,"byte_end":9299335,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299336,"byte_end":9299374,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299375,"byte_end":9299378,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299379,"byte_end":9299439,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299440,"byte_end":9299464,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let cmd_tx = cmd_tx.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299465,"byte_end":9299505,"line_start":216,"line_end":216,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299506,"byte_end":9299509,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299510,"byte_end":9299565,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299566,"byte_end":9299626,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299627,"byte_end":9299630,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299631,"byte_end":9299701,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299702,"byte_end":9299751,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299752,"byte_end":9299755,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299756,"byte_end":9299809,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299810,"byte_end":9299826,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299827,"byte_end":9299836,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299837,"byte_end":9299840,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299841,"byte_end":9299882,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299883,"byte_end":9299934,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299935,"byte_end":9299974,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299975,"byte_end":9299984,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299985,"byte_end":9299990,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299991,"byte_end":9299998,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9299999,"byte_end":9300002,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300003,"byte_end":9300019,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300020,"byte_end":9300023,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300024,"byte_end":9300050,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300051,"byte_end":9300054,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300055,"byte_end":9300122,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300123,"byte_end":9300195,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300196,"byte_end":9300269,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300270,"byte_end":9300323,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300324,"byte_end":9300327,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300328,"byte_end":9300408,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300409,"byte_end":9300431,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300432,"byte_end":9300435,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300436,"byte_end":9300451,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300452,"byte_end":9300455,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300456,"byte_end":9300463,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300464,"byte_end":9300495,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300496,"byte_end":9300499,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300500,"byte_end":9300518,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300519,"byte_end":9300540,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300541,"byte_end":9300592,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300593,"byte_end":9300630,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300631,"byte_end":9300634,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300635,"byte_end":9300668,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300669,"byte_end":9300723,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300724,"byte_end":9300778,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300779,"byte_end":9300790,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300791,"byte_end":9300794,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300795,"byte_end":9300828,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300829,"byte_end":9300883,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300884,"byte_end":9300938,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300939,"byte_end":9300950,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300951,"byte_end":9300954,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300955,"byte_end":9300984,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9300985,"byte_end":9301014,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301015,"byte_end":9301020,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301021,"byte_end":9301028,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301029,"byte_end":9301032,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301033,"byte_end":9301082,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301083,"byte_end":9301086,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301087,"byte_end":9301109,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301110,"byte_end":9301113,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301114,"byte_end":9301190,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301191,"byte_end":9301269,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301270,"byte_end":9301349,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301350,"byte_end":9301415,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301416,"byte_end":9301419,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301420,"byte_end":9301500,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301501,"byte_end":9301504,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301505,"byte_end":9301579,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301580,"byte_end":9301653,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301654,"byte_end":9301667,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301668,"byte_end":9301671,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301672,"byte_end":9301745,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301746,"byte_end":9301826,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301827,"byte_end":9301902,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301903,"byte_end":9301906,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301907,"byte_end":9301914,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301915,"byte_end":9301942,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301943,"byte_end":9301990,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301991,"byte_end":9301994,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9301995,"byte_end":9302011,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302012,"byte_end":9302015,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302016,"byte_end":9302058,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302059,"byte_end":9302078,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302079,"byte_end":9302105,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302106,"byte_end":9302111,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302112,"byte_end":9302115,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302116,"byte_end":9302133,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302134,"byte_end":9302191,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302192,"byte_end":9302250,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302251,"byte_end":9302303,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302304,"byte_end":9302313,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302314,"byte_end":9302319,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302320,"byte_end":9302323,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302324,"byte_end":9302359,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302360,"byte_end":9302388,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302389,"byte_end":9302394,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302395,"byte_end":9302398,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302399,"byte_end":9302417,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302418,"byte_end":9302439,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302440,"byte_end":9302483,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302484,"byte_end":9302549,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302550,"byte_end":9302553,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302554,"byte_end":9302632,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302633,"byte_end":9302687,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302688,"byte_end":9302691,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302692,"byte_end":9302736,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302737,"byte_end":9302770,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302771,"byte_end":9302789,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302790,"byte_end":9302839,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::sleep(Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302840,"byte_end":9302899,"line_start":325,"line_end":325,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302900,"byte_end":9302903,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302904,"byte_end":9302950,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9302951,"byte_end":9303024,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303025,"byte_end":9303028,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303029,"byte_end":9303103,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303104,"byte_end":9303144,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303145,"byte_end":9303186,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.send(new_config.clone()).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303187,"byte_end":9303244,"line_start":333,"line_end":333,"column_start":1,"column_end":58}},{"value":"/                 config = new_config;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303245,"byte_end":9303285,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303286,"byte_end":9303303,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303304,"byte_end":9303317,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303318,"byte_end":9303329,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303330,"byte_end":9303333,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303334,"byte_end":9303367,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303368,"byte_end":9303371,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303372,"byte_end":9303450,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303451,"byte_end":9303505,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303506,"byte_end":9303516,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303517,"byte_end":9303594,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303595,"byte_end":9303673,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303674,"byte_end":9303709,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303710,"byte_end":9303733,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303734,"byte_end":9303797,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303798,"byte_end":9303834,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303835,"byte_end":9303838,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303839,"byte_end":9303889,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303890,"byte_end":9303969,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9303970,"byte_end":9304045,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304046,"byte_end":9304099,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304100,"byte_end":9304146,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304147,"byte_end":9304179,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304180,"byte_end":9304183,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Get the initial config value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304184,"byte_end":9304231,"line_start":358,"line_end":358,"column_start":1,"column_end":48}},{"value":"/             let mut conf = rx.borrow().clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304232,"byte_end":9304283,"line_start":359,"line_end":359,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304284,"byte_end":9304287,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304288,"byte_end":9304338,"line_start":361,"line_end":361,"column_start":1,"column_end":51}},{"value":"/             let sleep = time::sleep_until(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304339,"byte_end":9304410,"line_start":362,"line_end":362,"column_start":1,"column_end":72}},{"value":"/             tokio::pin!(sleep);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304411,"byte_end":9304446,"line_start":363,"line_end":363,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304447,"byte_end":9304450,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304451,"byte_end":9304473,"line_start":365,"line_end":365,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304474,"byte_end":9304510,"line_start":366,"line_end":366,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut sleep => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304511,"byte_end":9304554,"line_start":367,"line_end":367,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304555,"byte_end":9304619,"line_start":368,"line_end":368,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304620,"byte_end":9304677,"line_start":369,"line_end":369,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304678,"byte_end":9304681,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304682,"byte_end":9304737,"line_start":371,"line_end":371,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304738,"byte_end":9304792,"line_start":372,"line_end":372,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304793,"byte_end":9304796,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304797,"byte_end":9304847,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/                         sleep.set(time::sleep_until(op_start + conf.timeout));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304848,"byte_end":9304930,"line_start":375,"line_end":375,"column_start":1,"column_end":83}},{"value":"/                     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304931,"byte_end":9304956,"line_start":376,"line_end":376,"column_start":1,"column_end":26}},{"value":"/                     _ = rx.changed() => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9304957,"byte_end":9305002,"line_start":377,"line_end":377,"column_start":1,"column_end":46}},{"value":"/                         conf = rx.borrow().clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305003,"byte_end":9305058,"line_start":378,"line_end":378,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305059,"byte_end":9305062,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305063,"byte_end":9305140,"line_start":380,"line_end":380,"column_start":1,"column_end":78}},{"value":"/                         // `sleep` using the new `timeout` value.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305141,"byte_end":9305210,"line_start":381,"line_end":381,"column_start":1,"column_end":70}},{"value":"/                         sleep.as_mut().reset(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305211,"byte_end":9305285,"line_start":382,"line_end":382,"column_start":1,"column_end":75}},{"value":"/                     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305286,"byte_end":9305311,"line_start":383,"line_end":383,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305312,"byte_end":9305352,"line_start":384,"line_end":384,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305353,"byte_end":9305408,"line_start":385,"line_end":385,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305409,"byte_end":9305443,"line_start":386,"line_end":386,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305444,"byte_end":9305469,"line_start":387,"line_end":387,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305470,"byte_end":9305491,"line_start":388,"line_end":388,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305492,"byte_end":9305509,"line_start":389,"line_end":389,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305510,"byte_end":9305525,"line_start":390,"line_end":390,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305526,"byte_end":9305529,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305530,"byte_end":9305563,"line_start":392,"line_end":392,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305564,"byte_end":9305573,"line_start":393,"line_end":393,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305574,"byte_end":9305577,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305578,"byte_end":9305619,"line_start":395,"line_end":395,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305620,"byte_end":9305654,"line_start":396,"line_end":396,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305655,"byte_end":9305664,"line_start":397,"line_end":397,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305665,"byte_end":9305670,"line_start":398,"line_end":398,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305671,"byte_end":9305678,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305679,"byte_end":9305682,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305683,"byte_end":9305728,"line_start":401,"line_end":401,"column_start":1,"column_end":46}},{"value":"/ [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305729,"byte_end":9305782,"line_start":402,"line_end":402,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305783,"byte_end":9305786,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305787,"byte_end":9305814,"line_start":404,"line_end":404,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305815,"byte_end":9305818,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305819,"byte_end":9305893,"line_start":406,"line_end":406,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305894,"byte_end":9305968,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts but will wait","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9305969,"byte_end":9306039,"line_start":408,"line_end":408,"column_start":1,"column_end":71}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9306040,"byte_end":9306090,"line_start":409,"line_end":409,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9306091,"byte_end":9306094,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9306095,"byte_end":9306172,"line_start":411,"line_end":411,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9306173,"byte_end":9306250,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9306251,"byte_end":9306254,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9306255,"byte_end":9306332,"line_start":414,"line_end":414,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9306333,"byte_end":9306388,"line_start":415,"line_end":415,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9306389,"byte_end":9306392,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9306393,"byte_end":9306472,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9306473,"byte_end":9306551,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9306552,"byte_end":9306577,"line_start":419,"line_end":419,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9306578,"byte_end":9306581,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9306582,"byte_end":9306657,"line_start":421,"line_end":421,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9306658,"byte_end":9306734,"line_start":422,"line_end":422,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9306735,"byte_end":9306802,"line_start":423,"line_end":423,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9306803,"byte_end":9306806,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9306807,"byte_end":9306883,"line_start":425,"line_end":425,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9306884,"byte_end":9306960,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9306961,"byte_end":9307035,"line_start":427,"line_end":427,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307036,"byte_end":9307063,"line_start":428,"line_end":428,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6871},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9309372,"byte_end":9309379,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":6872},{"krate":0,"index":6873},{"krate":0,"index":6874}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9308419,"byte_end":9308507,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9308508,"byte_end":9308511,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9308512,"byte_end":9308519,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9308520,"byte_end":9308540,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9308541,"byte_end":9308564,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9308565,"byte_end":9308594,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9308595,"byte_end":9308598,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9308599,"byte_end":9308633,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9308634,"byte_end":9308657,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9308658,"byte_end":9308661,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9308662,"byte_end":9308707,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9308708,"byte_end":9308753,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9308754,"byte_end":9308774,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9308775,"byte_end":9308807,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9308808,"byte_end":9308862,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9308863,"byte_end":9308908,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9308909,"byte_end":9308942,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9308943,"byte_end":9308979,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9308980,"byte_end":9309016,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9309017,"byte_end":9309052,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9309053,"byte_end":9309067,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9309068,"byte_end":9309079,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9309080,"byte_end":9309085,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9309086,"byte_end":9309160,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9309161,"byte_end":9309199,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9309200,"byte_end":9309255,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9309256,"byte_end":9309327,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9309328,"byte_end":9309335,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9309336,"byte_end":9309343,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5668},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9309842,"byte_end":9309845,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9309602,"byte_end":9309669,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9309674,"byte_end":9309677,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9309682,"byte_end":9309770,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9309775,"byte_end":9309830,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5669},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9310918,"byte_end":9310922,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9310444,"byte_end":9310504,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9310509,"byte_end":9310512,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9310517,"byte_end":9310593,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9310598,"byte_end":9310623,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9310628,"byte_end":9310631,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9310636,"byte_end":9310729,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9310734,"byte_end":9310827,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9310832,"byte_end":9310900,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":6883},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9312843,"byte_end":9312860,"line_start":128,"line_end":128,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9312707,"byte_end":9312807,"line_start":126,"line_end":126,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":5673},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9313108,"byte_end":9313117,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9312898,"byte_end":9312965,"line_start":131,"line_end":131,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9312970,"byte_end":9312973,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9312978,"byte_end":9313070,"line_start":133,"line_end":133,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9313075,"byte_end":9313096,"line_start":134,"line_end":134,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":5677},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","parent":null,"children":[{"krate":0,"index":5678},{"krate":0,"index":5679},{"krate":0,"index":5680},{"krate":0,"index":5681},{"krate":0,"index":5682},{"krate":0,"index":5683},{"krate":0,"index":5684},{"krate":0,"index":5685},{"krate":0,"index":5686},{"krate":0,"index":5687},{"krate":0,"index":5688},{"krate":0,"index":5689},{"krate":0,"index":5690},{"krate":0,"index":13741},{"krate":0,"index":5691},{"krate":0,"index":5692},{"krate":0,"index":5693},{"krate":0,"index":13747},{"krate":0,"index":5694},{"krate":0,"index":5695},{"krate":0,"index":5696},{"krate":0,"index":5697},{"krate":0,"index":5698},{"krate":0,"index":5699},{"krate":0,"index":5702},{"krate":0,"index":5706},{"krate":0,"index":5719},{"krate":0,"index":5720},{"krate":0,"index":5726},{"krate":0,"index":5731},{"krate":0,"index":5737},{"krate":0,"index":5742},{"krate":0,"index":5746},{"krate":0,"index":5752},{"krate":0,"index":5756},{"krate":0,"index":5759},{"krate":0,"index":5763},{"krate":0,"index":5766},{"krate":0,"index":5769},{"krate":0,"index":5770},{"krate":0,"index":5772},{"krate":0,"index":5774},{"krate":0,"index":5776},{"krate":0,"index":5778},{"krate":0,"index":5780},{"krate":0,"index":5789},{"krate":0,"index":5791},{"krate":0,"index":5793},{"krate":0,"index":5796},{"krate":0,"index":5799},{"krate":0,"index":5803},{"krate":0,"index":5809},{"krate":0,"index":5812},{"krate":0,"index":5817},{"krate":0,"index":5822},{"krate":0,"index":5828},{"krate":0,"index":5834},{"krate":0,"index":5837},{"krate":0,"index":5840},{"krate":0,"index":5845},{"krate":0,"index":5850}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":23141,"byte_end":23165,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9313159,"byte_end":9313239,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9313240,"byte_end":9313258,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9313259,"byte_end":9313262,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9313263,"byte_end":9313341,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9313342,"byte_end":9313417,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9313418,"byte_end":9313496,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9313497,"byte_end":9313551,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9313552,"byte_end":9313555,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9313556,"byte_end":9313632,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9313633,"byte_end":9313713,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9313714,"byte_end":9313791,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9313792,"byte_end":9313842,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9313843,"byte_end":9313846,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9313847,"byte_end":9313925,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9313926,"byte_end":9313983,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9313984,"byte_end":9313987,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9313988,"byte_end":9314066,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9314067,"byte_end":9314139,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9314140,"byte_end":9314156,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9314157,"byte_end":9314160,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9314161,"byte_end":9314175,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9314176,"byte_end":9314179,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9314180,"byte_end":9314260,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9314261,"byte_end":9314340,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9314341,"byte_end":9314418,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9314419,"byte_end":9314497,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9314498,"byte_end":9314505,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9314506,"byte_end":9314509,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9314510,"byte_end":9314587,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9314588,"byte_end":9314663,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9314664,"byte_end":9314744,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9314745,"byte_end":9314748,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9314749,"byte_end":9314821,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9314822,"byte_end":9314900,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9314901,"byte_end":9314977,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9314978,"byte_end":9315037,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315038,"byte_end":9315041,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315042,"byte_end":9315120,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315121,"byte_end":9315195,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315196,"byte_end":9315232,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315233,"byte_end":9315236,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315237,"byte_end":9315316,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315317,"byte_end":9315394,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315395,"byte_end":9315470,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315471,"byte_end":9315502,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315503,"byte_end":9315506,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315507,"byte_end":9315521,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315522,"byte_end":9315525,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315526,"byte_end":9315601,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315602,"byte_end":9315680,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315681,"byte_end":9315758,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315759,"byte_end":9315790,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315791,"byte_end":9315794,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315795,"byte_end":9315841,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315842,"byte_end":9315910,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315911,"byte_end":9315961,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9315962,"byte_end":9316010,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::error::RecvError::Lagged","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316011,"byte_end":9316086,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::error::RecvError::Closed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316087,"byte_end":9316162,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316163,"byte_end":9316215,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316216,"byte_end":9316219,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316220,"byte_end":9316234,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316235,"byte_end":9316238,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316239,"byte_end":9316254,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316255,"byte_end":9316258,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316259,"byte_end":9316266,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316267,"byte_end":9316298,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316299,"byte_end":9316302,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316303,"byte_end":9316321,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316322,"byte_end":9316343,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316344,"byte_end":9316395,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316396,"byte_end":9316433,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316434,"byte_end":9316437,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316438,"byte_end":9316471,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316472,"byte_end":9316526,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316527,"byte_end":9316581,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316582,"byte_end":9316593,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316594,"byte_end":9316597,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316598,"byte_end":9316631,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316632,"byte_end":9316686,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316687,"byte_end":9316741,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316742,"byte_end":9316753,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316754,"byte_end":9316757,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316758,"byte_end":9316787,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316788,"byte_end":9316817,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316818,"byte_end":9316823,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316824,"byte_end":9316831,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316832,"byte_end":9316835,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316836,"byte_end":9316852,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316853,"byte_end":9316856,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316857,"byte_end":9316864,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316865,"byte_end":9316896,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316897,"byte_end":9316900,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316901,"byte_end":9316919,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316920,"byte_end":9316941,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316942,"byte_end":9316991,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316992,"byte_end":9316995,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9316996,"byte_end":9317025,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317026,"byte_end":9317055,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317056,"byte_end":9317085,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317086,"byte_end":9317089,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317090,"byte_end":9317127,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317128,"byte_end":9317170,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317171,"byte_end":9317174,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317175,"byte_end":9317244,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317245,"byte_end":9317248,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317249,"byte_end":9317298,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317299,"byte_end":9317348,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317349,"byte_end":9317354,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317355,"byte_end":9317362,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5699},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318559,"byte_end":9318565,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5701}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317766,"byte_end":9317812,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317813,"byte_end":9317816,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317817,"byte_end":9317877,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317878,"byte_end":9317905,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317906,"byte_end":9317909,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317910,"byte_end":9317924,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317925,"byte_end":9317928,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317929,"byte_end":9317936,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317937,"byte_end":9317968,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317969,"byte_end":9317972,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317973,"byte_end":9317991,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9317992,"byte_end":9318013,"line_start":137,"line_end":137,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318014,"byte_end":9318065,"line_start":138,"line_end":138,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318066,"byte_end":9318103,"line_start":139,"line_end":139,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318104,"byte_end":9318107,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318108,"byte_end":9318141,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318142,"byte_end":9318196,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318197,"byte_end":9318251,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318252,"byte_end":9318263,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318264,"byte_end":9318267,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318268,"byte_end":9318301,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318302,"byte_end":9318356,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318357,"byte_end":9318411,"line_start":148,"line_end":148,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318412,"byte_end":9318423,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318424,"byte_end":9318427,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318428,"byte_end":9318457,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318458,"byte_end":9318487,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318488,"byte_end":9318493,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318494,"byte_end":9318501,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318502,"byte_end":9318505,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318506,"byte_end":9318547,"line_start":156,"line_end":156,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5702},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319405,"byte_end":9319413,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5704},{"krate":0,"index":5705}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318602,"byte_end":9318650,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318651,"byte_end":9318654,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318655,"byte_end":9318721,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318722,"byte_end":9318751,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318752,"byte_end":9318755,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318756,"byte_end":9318770,"line_start":166,"line_end":166,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318771,"byte_end":9318774,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318775,"byte_end":9318782,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318783,"byte_end":9318814,"line_start":169,"line_end":169,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318815,"byte_end":9318818,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318819,"byte_end":9318837,"line_start":171,"line_end":171,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318838,"byte_end":9318859,"line_start":172,"line_end":172,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318860,"byte_end":9318911,"line_start":173,"line_end":173,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318912,"byte_end":9318949,"line_start":174,"line_end":174,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318950,"byte_end":9318953,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318954,"byte_end":9318987,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9318988,"byte_end":9319042,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319043,"byte_end":9319097,"line_start":178,"line_end":178,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319098,"byte_end":9319109,"line_start":179,"line_end":179,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319110,"byte_end":9319113,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319114,"byte_end":9319147,"line_start":181,"line_end":181,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319148,"byte_end":9319202,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319203,"byte_end":9319257,"line_start":183,"line_end":183,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319258,"byte_end":9319269,"line_start":184,"line_end":184,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319270,"byte_end":9319273,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319274,"byte_end":9319303,"line_start":186,"line_end":186,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319304,"byte_end":9319333,"line_start":187,"line_end":187,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319334,"byte_end":9319339,"line_start":188,"line_end":188,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319340,"byte_end":9319347,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319348,"byte_end":9319351,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319352,"byte_end":9319393,"line_start":191,"line_end":191,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":5706},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319562,"byte_end":9319567,"line_start":200,"line_end":200,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::broadcast::error","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","parent":null,"children":[{"krate":0,"index":5707},{"krate":0,"index":6890},{"krate":0,"index":6894},{"krate":0,"index":5708},{"krate":0,"index":5711},{"krate":0,"index":6897},{"krate":0,"index":6907},{"krate":0,"index":6903},{"krate":0,"index":6904},{"krate":0,"index":5713},{"krate":0,"index":5715},{"krate":0,"index":6909},{"krate":0,"index":6921},{"krate":0,"index":6917},{"krate":0,"index":6918},{"krate":0,"index":5716},{"krate":0,"index":5718}],"decl_id":null,"docs":" Broadcast error types\n","sig":null,"attributes":[{"value":"/ Broadcast error types","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319574,"byte_end":9319599,"line_start":201,"line_end":201,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":6890},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320071,"byte_end":9320080,"line_start":214,"line_end":214,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::broadcast::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by from the [`send`] function on a [`Sender`].","sig":null,"attributes":[{"value":"/ Error returned by from the [`send`] function on a [`Sender`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319624,"byte_end":9319689,"line_start":205,"line_end":205,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319694,"byte_end":9319697,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319702,"byte_end":9319774,"line_start":207,"line_end":207,"column_start":5,"column_end":77}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319779,"byte_end":9319856,"line_start":208,"line_end":208,"column_start":5,"column_end":82}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319861,"byte_end":9319920,"line_start":209,"line_end":209,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319925,"byte_end":9319928,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ [`send`]: crate::sync::broadcast::Sender::send","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319933,"byte_end":9319983,"line_start":211,"line_end":211,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9319988,"byte_end":9320034,"line_start":212,"line_end":212,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":6893},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320084,"byte_end":9320089,"line_start":214,"line_end":214,"column_start":29,"column_end":34},"name":"0","qualname":"::sync::broadcast::error::SendError::0","value":"T","parent":{"krate":0,"index":6890},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6898},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320686,"byte_end":9320692,"line_start":232,"line_end":232,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320581,"byte_end":9320656,"line_start":230,"line_end":230,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320665,"byte_end":9320677,"line_start":231,"line_end":231,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6900},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320918,"byte_end":9320924,"line_start":238,"line_end":238,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320703,"byte_end":9320775,"line_start":234,"line_end":234,"column_start":9,"column_end":81}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320784,"byte_end":9320844,"line_start":235,"line_end":235,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320853,"byte_end":9320856,"line_start":236,"line_end":236,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320865,"byte_end":9320909,"line_start":237,"line_end":237,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":6897},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320561,"byte_end":9320570,"line_start":229,"line_end":229,"column_start":14,"column_end":23},"name":"RecvError","qualname":"::sync::broadcast::error::RecvError","value":"pub enum RecvError {\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind. Attempting to receive again will\n    /// return the oldest message still retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":6898},{"krate":0,"index":6900}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320328,"byte_end":9320395,"line_start":224,"line_end":224,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320400,"byte_end":9320403,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320408,"byte_end":9320460,"line_start":226,"line_end":226,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320465,"byte_end":9320515,"line_start":227,"line_end":227,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6910},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9321764,"byte_end":9321769,"line_start":262,"line_end":262,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::broadcast::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6909},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`] handles, so data may yet become available.","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9321564,"byte_end":9321622,"line_start":258,"line_end":258,"column_start":9,"column_end":67}},{"value":"/ [`Sender`] handles, so data may yet become available.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9321631,"byte_end":9321688,"line_start":259,"line_end":259,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9321697,"byte_end":9321700,"line_start":260,"line_end":260,"column_start":9,"column_end":12}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9321709,"byte_end":9321755,"line_start":261,"line_end":261,"column_start":9,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6912},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9321885,"byte_end":9321891,"line_start":266,"line_end":266,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6909},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9321780,"byte_end":9321855,"line_start":264,"line_end":264,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9321864,"byte_end":9321876,"line_start":265,"line_end":265,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6914},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9322164,"byte_end":9322170,"line_start":273,"line_end":273,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":6909},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9321902,"byte_end":9321976,"line_start":268,"line_end":268,"column_start":9,"column_end":83}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9321985,"byte_end":9322053,"line_start":269,"line_end":269,"column_start":9,"column_end":77}},{"value":"/ retained by the channel.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9322062,"byte_end":9322090,"line_start":270,"line_end":270,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9322099,"byte_end":9322102,"line_start":271,"line_end":271,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9322111,"byte_end":9322155,"line_start":272,"line_end":272,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":6909},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9321541,"byte_end":9321553,"line_start":257,"line_end":257,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::broadcast::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The channel is currently empty. There are still active\n    /// [`Sender`] handles, so data may yet become available.\n    ///\n    /// [`Sender`]: crate::sync::broadcast::Sender\n    Empty,\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind and has been forcibly disconnected.\n    /// Attempting to receive again will return the oldest message still\n    /// retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":6910},{"krate":0,"index":6912},{"krate":0,"index":6914}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9321296,"byte_end":9321367,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9321372,"byte_end":9321375,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9321380,"byte_end":9321440,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9321445,"byte_end":9321495,"line_start":255,"line_end":255,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":5770},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326984,"byte_end":9326991,"line_start":445,"line_end":445,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T: Clone>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9325358,"byte_end":9325434,"line_start":400,"line_end":400,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9325435,"byte_end":9325484,"line_start":401,"line_end":401,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9325485,"byte_end":9325488,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9325489,"byte_end":9325558,"line_start":403,"line_end":403,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9325559,"byte_end":9325609,"line_start":404,"line_end":404,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9325610,"byte_end":9325613,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9325614,"byte_end":9325688,"line_start":406,"line_end":406,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9325689,"byte_end":9325764,"line_start":407,"line_end":407,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9325765,"byte_end":9325833,"line_start":408,"line_end":408,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9325834,"byte_end":9325837,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9325838,"byte_end":9325914,"line_start":410,"line_end":410,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9325915,"byte_end":9325996,"line_start":411,"line_end":411,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9325997,"byte_end":9326036,"line_start":412,"line_end":412,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326037,"byte_end":9326040,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326041,"byte_end":9326087,"line_start":414,"line_end":414,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326088,"byte_end":9326156,"line_start":415,"line_end":415,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326157,"byte_end":9326207,"line_start":416,"line_end":416,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326208,"byte_end":9326260,"line_start":417,"line_end":417,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::error::SendError","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326261,"byte_end":9326320,"line_start":418,"line_end":418,"column_start":1,"column_end":60}},{"value":"/ [`RecvError`]: crate::sync::broadcast::error::RecvError","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326321,"byte_end":9326380,"line_start":419,"line_end":419,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326381,"byte_end":9326384,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326385,"byte_end":9326399,"line_start":421,"line_end":421,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326400,"byte_end":9326403,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326404,"byte_end":9326411,"line_start":423,"line_end":423,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326412,"byte_end":9326443,"line_start":424,"line_end":424,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326444,"byte_end":9326447,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326448,"byte_end":9326466,"line_start":426,"line_end":426,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326467,"byte_end":9326488,"line_start":427,"line_end":427,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326489,"byte_end":9326540,"line_start":428,"line_end":428,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326541,"byte_end":9326578,"line_start":429,"line_end":429,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326579,"byte_end":9326582,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326583,"byte_end":9326616,"line_start":431,"line_end":431,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326617,"byte_end":9326671,"line_start":432,"line_end":432,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326672,"byte_end":9326726,"line_start":433,"line_end":433,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326727,"byte_end":9326738,"line_start":434,"line_end":434,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326739,"byte_end":9326742,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326743,"byte_end":9326776,"line_start":436,"line_end":436,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326777,"byte_end":9326831,"line_start":437,"line_end":437,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326832,"byte_end":9326886,"line_start":438,"line_end":438,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326887,"byte_end":9326898,"line_start":439,"line_end":439,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326899,"byte_end":9326902,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326903,"byte_end":9326932,"line_start":441,"line_end":441,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326933,"byte_end":9326962,"line_start":442,"line_end":442,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326963,"byte_end":9326968,"line_start":443,"line_end":443,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9326969,"byte_end":9326976,"line_start":444,"line_end":444,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5782},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330043,"byte_end":9330047,"line_start":542,"line_end":542,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328193,"byte_end":9328267,"line_start":492,"line_end":492,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328272,"byte_end":9328308,"line_start":493,"line_end":493,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328313,"byte_end":9328316,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328321,"byte_end":9328396,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328401,"byte_end":9328467,"line_start":496,"line_end":496,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328472,"byte_end":9328523,"line_start":497,"line_end":497,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328528,"byte_end":9328531,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328536,"byte_end":9328548,"line_start":499,"line_end":499,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328553,"byte_end":9328556,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328561,"byte_end":9328635,"line_start":501,"line_end":501,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328640,"byte_end":9328716,"line_start":502,"line_end":502,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328721,"byte_end":9328774,"line_start":503,"line_end":503,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328779,"byte_end":9328782,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328787,"byte_end":9328797,"line_start":505,"line_end":505,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328802,"byte_end":9328805,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328810,"byte_end":9328882,"line_start":507,"line_end":507,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328887,"byte_end":9328962,"line_start":508,"line_end":508,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328967,"byte_end":9329028,"line_start":509,"line_end":509,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329033,"byte_end":9329036,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329041,"byte_end":9329114,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329119,"byte_end":9329184,"line_start":512,"line_end":512,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329189,"byte_end":9329207,"line_start":513,"line_end":513,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329212,"byte_end":9329215,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329220,"byte_end":9329270,"line_start":515,"line_end":515,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329275,"byte_end":9329335,"line_start":516,"line_end":516,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329340,"byte_end":9329343,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329348,"byte_end":9329362,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329367,"byte_end":9329370,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329375,"byte_end":9329382,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329387,"byte_end":9329418,"line_start":521,"line_end":521,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329423,"byte_end":9329426,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329431,"byte_end":9329449,"line_start":523,"line_end":523,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329454,"byte_end":9329475,"line_start":524,"line_end":524,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329480,"byte_end":9329531,"line_start":525,"line_end":525,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329536,"byte_end":9329573,"line_start":526,"line_end":526,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329578,"byte_end":9329581,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329586,"byte_end":9329619,"line_start":528,"line_end":528,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329624,"byte_end":9329678,"line_start":529,"line_end":529,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329683,"byte_end":9329737,"line_start":530,"line_end":530,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329742,"byte_end":9329753,"line_start":531,"line_end":531,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329758,"byte_end":9329761,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329766,"byte_end":9329799,"line_start":533,"line_end":533,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329804,"byte_end":9329858,"line_start":534,"line_end":534,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329863,"byte_end":9329917,"line_start":535,"line_end":535,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329922,"byte_end":9329933,"line_start":536,"line_end":536,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329938,"byte_end":9329941,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329946,"byte_end":9329975,"line_start":538,"line_end":538,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9329980,"byte_end":9330009,"line_start":539,"line_end":539,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330014,"byte_end":9330019,"line_start":540,"line_end":540,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330024,"byte_end":9330031,"line_start":541,"line_end":541,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5784},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330807,"byte_end":9330816,"line_start":570,"line_end":570,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330212,"byte_end":9330289,"line_start":547,"line_end":547,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330294,"byte_end":9330323,"line_start":548,"line_end":548,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330328,"byte_end":9330331,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330336,"byte_end":9330350,"line_start":550,"line_end":550,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330355,"byte_end":9330358,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330363,"byte_end":9330370,"line_start":552,"line_end":552,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330375,"byte_end":9330406,"line_start":553,"line_end":553,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330411,"byte_end":9330414,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330419,"byte_end":9330437,"line_start":555,"line_end":555,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330442,"byte_end":9330463,"line_start":556,"line_end":556,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330468,"byte_end":9330515,"line_start":557,"line_end":557,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330520,"byte_end":9330523,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330528,"byte_end":9330555,"line_start":559,"line_end":559,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330560,"byte_end":9330589,"line_start":560,"line_end":560,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330594,"byte_end":9330597,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330602,"byte_end":9330638,"line_start":562,"line_end":562,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330643,"byte_end":9330646,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330651,"byte_end":9330680,"line_start":564,"line_end":564,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330685,"byte_end":9330688,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330693,"byte_end":9330738,"line_start":566,"line_end":566,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330743,"byte_end":9330773,"line_start":567,"line_end":567,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330778,"byte_end":9330783,"line_start":568,"line_end":568,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330788,"byte_end":9330795,"line_start":569,"line_end":569,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5785},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9332075,"byte_end":9332089,"line_start":611,"line_end":611,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330923,"byte_end":9330965,"line_start":575,"line_end":575,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330970,"byte_end":9330973,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9330978,"byte_end":9331054,"line_start":577,"line_end":577,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331059,"byte_end":9331132,"line_start":578,"line_end":578,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331137,"byte_end":9331157,"line_start":579,"line_end":579,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331162,"byte_end":9331165,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331170,"byte_end":9331180,"line_start":581,"line_end":581,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331185,"byte_end":9331188,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331193,"byte_end":9331263,"line_start":583,"line_end":583,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331268,"byte_end":9331336,"line_start":584,"line_end":584,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331341,"byte_end":9331354,"line_start":585,"line_end":585,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331359,"byte_end":9331362,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331367,"byte_end":9331419,"line_start":587,"line_end":587,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331424,"byte_end":9331474,"line_start":588,"line_end":588,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331479,"byte_end":9331525,"line_start":589,"line_end":589,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331530,"byte_end":9331590,"line_start":590,"line_end":590,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331595,"byte_end":9331643,"line_start":591,"line_end":591,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331648,"byte_end":9331651,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331656,"byte_end":9331670,"line_start":593,"line_end":593,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331675,"byte_end":9331678,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331683,"byte_end":9331690,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331695,"byte_end":9331726,"line_start":596,"line_end":596,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331731,"byte_end":9331734,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331739,"byte_end":9331757,"line_start":598,"line_end":598,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331762,"byte_end":9331783,"line_start":599,"line_end":599,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331788,"byte_end":9331836,"line_start":600,"line_end":600,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331841,"byte_end":9331844,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331849,"byte_end":9331892,"line_start":602,"line_end":602,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331897,"byte_end":9331900,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331905,"byte_end":9331943,"line_start":604,"line_end":604,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331948,"byte_end":9331951,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9331956,"byte_end":9331999,"line_start":606,"line_end":606,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9332004,"byte_end":9332007,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9332012,"byte_end":9332041,"line_start":608,"line_end":608,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9332046,"byte_end":9332051,"line_start":609,"line_end":609,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9332056,"byte_end":9332063,"line_start":610,"line_end":610,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5805},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341652,"byte_end":9341656,"line_start":894,"line_end":894,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9339424,"byte_end":9339470,"line_start":829,"line_end":829,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9339475,"byte_end":9339478,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9339483,"byte_end":9339551,"line_start":831,"line_end":831,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9339556,"byte_end":9339588,"line_start":832,"line_end":832,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9339593,"byte_end":9339596,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9339601,"byte_end":9339671,"line_start":834,"line_end":834,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9339676,"byte_end":9339750,"line_start":835,"line_end":835,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9339755,"byte_end":9339758,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9339763,"byte_end":9339839,"line_start":837,"line_end":837,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9339844,"byte_end":9339920,"line_start":838,"line_end":838,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9339925,"byte_end":9339993,"line_start":839,"line_end":839,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9339998,"byte_end":9340071,"line_start":840,"line_end":840,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340076,"byte_end":9340145,"line_start":841,"line_end":841,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340150,"byte_end":9340195,"line_start":842,"line_end":842,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340200,"byte_end":9340203,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340208,"byte_end":9340258,"line_start":844,"line_end":844,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340263,"byte_end":9340315,"line_start":845,"line_end":845,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340320,"byte_end":9340323,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340328,"byte_end":9340342,"line_start":847,"line_end":847,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340347,"byte_end":9340350,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340355,"byte_end":9340362,"line_start":849,"line_end":849,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340367,"byte_end":9340398,"line_start":850,"line_end":850,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340403,"byte_end":9340406,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340411,"byte_end":9340429,"line_start":852,"line_end":852,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340434,"byte_end":9340455,"line_start":853,"line_end":853,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340460,"byte_end":9340511,"line_start":854,"line_end":854,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340516,"byte_end":9340553,"line_start":855,"line_end":855,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340558,"byte_end":9340561,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340566,"byte_end":9340599,"line_start":857,"line_end":857,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340604,"byte_end":9340658,"line_start":858,"line_end":858,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340663,"byte_end":9340717,"line_start":859,"line_end":859,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340722,"byte_end":9340733,"line_start":860,"line_end":860,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340738,"byte_end":9340741,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340746,"byte_end":9340779,"line_start":862,"line_end":862,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340784,"byte_end":9340838,"line_start":863,"line_end":863,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340843,"byte_end":9340897,"line_start":864,"line_end":864,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340902,"byte_end":9340913,"line_start":865,"line_end":865,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340918,"byte_end":9340921,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340926,"byte_end":9340955,"line_start":867,"line_end":867,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340960,"byte_end":9340989,"line_start":868,"line_end":868,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9340994,"byte_end":9340999,"line_start":869,"line_end":869,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341004,"byte_end":9341011,"line_start":870,"line_end":870,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341016,"byte_end":9341019,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341024,"byte_end":9341040,"line_start":872,"line_end":872,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341045,"byte_end":9341048,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341053,"byte_end":9341060,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341065,"byte_end":9341096,"line_start":875,"line_end":875,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341101,"byte_end":9341104,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341109,"byte_end":9341127,"line_start":877,"line_end":877,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341132,"byte_end":9341153,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341158,"byte_end":9341207,"line_start":879,"line_end":879,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341212,"byte_end":9341215,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341220,"byte_end":9341249,"line_start":881,"line_end":881,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341254,"byte_end":9341283,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341288,"byte_end":9341317,"line_start":883,"line_end":883,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341322,"byte_end":9341325,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341330,"byte_end":9341367,"line_start":885,"line_end":885,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341372,"byte_end":9341414,"line_start":886,"line_end":886,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341419,"byte_end":9341422,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341427,"byte_end":9341496,"line_start":888,"line_end":888,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341501,"byte_end":9341504,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341509,"byte_end":9341558,"line_start":890,"line_end":890,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341563,"byte_end":9341612,"line_start":891,"line_end":891,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341617,"byte_end":9341622,"line_start":892,"line_end":892,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341627,"byte_end":9341634,"line_start":893,"line_end":893,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5808},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343433,"byte_end":9343441,"line_start":939,"line_end":939,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341774,"byte_end":9341847,"line_start":899,"line_end":899,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341852,"byte_end":9341855,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341860,"byte_end":9341932,"line_start":901,"line_end":901,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341937,"byte_end":9341961,"line_start":902,"line_end":902,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341966,"byte_end":9341969,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of two","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9341974,"byte_end":9342054,"line_start":904,"line_end":904,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9342059,"byte_end":9342133,"line_start":905,"line_end":905,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9342138,"byte_end":9342141,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9342146,"byte_end":9342219,"line_start":907,"line_end":907,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9342224,"byte_end":9342298,"line_start":908,"line_end":908,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9342303,"byte_end":9342306,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9342311,"byte_end":9342387,"line_start":910,"line_end":910,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9342392,"byte_end":9342468,"line_start":911,"line_end":911,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9342473,"byte_end":9342544,"line_start":912,"line_end":912,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9342549,"byte_end":9342622,"line_start":913,"line_end":913,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9342627,"byte_end":9342700,"line_start":914,"line_end":914,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9342705,"byte_end":9342776,"line_start":915,"line_end":915,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9342781,"byte_end":9342833,"line_start":916,"line_end":916,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9342838,"byte_end":9342841,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9342846,"byte_end":9342898,"line_start":918,"line_end":918,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9342903,"byte_end":9342963,"line_start":919,"line_end":919,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9342968,"byte_end":9343018,"line_start":920,"line_end":920,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343023,"byte_end":9343026,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343031,"byte_end":9343045,"line_start":922,"line_end":922,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343050,"byte_end":9343053,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343058,"byte_end":9343065,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343070,"byte_end":9343101,"line_start":925,"line_end":925,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343106,"byte_end":9343109,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343114,"byte_end":9343132,"line_start":927,"line_end":927,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343137,"byte_end":9343158,"line_start":928,"line_end":928,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343163,"byte_end":9343213,"line_start":929,"line_end":929,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343218,"byte_end":9343221,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343226,"byte_end":9343266,"line_start":931,"line_end":931,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343271,"byte_end":9343274,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343279,"byte_end":9343308,"line_start":933,"line_end":933,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343313,"byte_end":9343316,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343321,"byte_end":9343364,"line_start":935,"line_end":935,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343369,"byte_end":9343399,"line_start":936,"line_end":936,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343404,"byte_end":9343409,"line_start":937,"line_end":937,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343414,"byte_end":9343421,"line_start":938,"line_end":938,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5852},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","parent":null,"children":[{"krate":0,"index":5853},{"krate":0,"index":5925},{"krate":0,"index":6001},{"krate":0,"index":6002},{"krate":0,"index":6003},{"krate":0,"index":6004},{"krate":0,"index":6005},{"krate":0,"index":6006},{"krate":0,"index":6136},{"krate":0,"index":6181},{"krate":0,"index":6231},{"krate":0,"index":6232},{"krate":0,"index":6233},{"krate":0,"index":6234},{"krate":0,"index":6235},{"krate":0,"index":6254}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values between\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":23141,"byte_end":23165,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values between","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9347843,"byte_end":9347913,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ asynchronous tasks.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9347914,"byte_end":9347937,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9347938,"byte_end":9347941,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9347942,"byte_end":9348022,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9348023,"byte_end":9348101,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9348102,"byte_end":9348178,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9348179,"byte_end":9348258,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method will always complete immediately.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9348259,"byte_end":9348339,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9348340,"byte_end":9348411,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9348412,"byte_end":9348434,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9348435,"byte_end":9348438,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Similar to the `mpsc` channels provided by `std`, the channel constructor","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9348439,"byte_end":9348516,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ functions provide separate send and receive handles, [`Sender`] and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9348517,"byte_end":9348588,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [`Receiver`] for the bounded channel, [`UnboundedSender`] and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9348589,"byte_end":9348654,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedReceiver`] for the unbounded channel. If there is no message to read,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9348655,"byte_end":9348739,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ the current task will be notified when a new value is sent. [`Sender`] and","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9348740,"byte_end":9348818,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ [`UnboundedSender`] allow sending values into the channel. If the bounded","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9348819,"byte_end":9348896,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ channel is at capacity, the send is rejected and the task will be notified","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9348897,"byte_end":9348975,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ when additional capacity is available. In other words, the channel provides","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9348976,"byte_end":9349055,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ backpressure.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349056,"byte_end":9349073,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349074,"byte_end":9349077,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349078,"byte_end":9349081,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349082,"byte_end":9349101,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349102,"byte_end":9349105,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349106,"byte_end":9349172,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349173,"byte_end":9349253,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349254,"byte_end":9349331,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349332,"byte_end":9349335,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349336,"byte_end":9349406,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349407,"byte_end":9349486,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349487,"byte_end":9349510,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349511,"byte_end":9349514,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349515,"byte_end":9349535,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349536,"byte_end":9349539,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349540,"byte_end":9349620,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349621,"byte_end":9349701,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349702,"byte_end":9349780,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349781,"byte_end":9349853,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349854,"byte_end":9349928,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349929,"byte_end":9349941,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349942,"byte_end":9349945,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349946,"byte_end":9349993,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349994,"byte_end":9349997,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9349998,"byte_end":9350079,"line_start":46,"line_end":46,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9350080,"byte_end":9350115,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9350116,"byte_end":9350119,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9350120,"byte_end":9350200,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. Instead of calling","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9350201,"byte_end":9350282,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ the async [`send`][bounded-send] or [`recv`][bounded-recv] methods, in","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9350283,"byte_end":9350357,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ synchronous code you will need to use the [`blocking_send`][blocking-send] or","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9350358,"byte_end":9350439,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/ [`blocking_recv`][blocking-recv] methods.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9350440,"byte_end":9350485,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9350486,"byte_end":9350489,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9350490,"byte_end":9350570,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9350571,"byte_end":9350649,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9350650,"byte_end":9350716,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9350717,"byte_end":9350799,"line_start":58,"line_end":58,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9350800,"byte_end":9350864,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9350865,"byte_end":9350868,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9350869,"byte_end":9350910,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9350911,"byte_end":9350956,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9350957,"byte_end":9351010,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9351011,"byte_end":9351066,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/ [blocking-send]: crate::sync::mpsc::Sender::blocking_send()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9351067,"byte_end":9351130,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/ [blocking-recv]: crate::sync::mpsc::Receiver::blocking_recv()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9351131,"byte_end":9351196,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9351197,"byte_end":9351256,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9351257,"byte_end":9351320,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9351321,"byte_end":9351381,"line_start":69,"line_end":69,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9351382,"byte_end":9351427,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9351428,"byte_end":9351518,"line_start":71,"line_end":71,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":5937},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9365519,"byte_end":9365525,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5939}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9365394,"byte_end":9365439,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9365440,"byte_end":9365443,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9365444,"byte_end":9365507,"line_start":18,"line_end":18,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5940},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9365819,"byte_end":9365825,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Permit","qualname":"::sync::mpsc::bounded::Permit","value":"Permit {  }","parent":null,"children":[{"krate":0,"index":5943}],"decl_id":null,"docs":" Permit to send one value into the channel.","sig":null,"attributes":[{"value":"/ Permit to send one value into the channel.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9365568,"byte_end":9365614,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9365615,"byte_end":9365618,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ `Permit` values are returned by [`Sender::reserve()`] and are used to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9365619,"byte_end":9365692,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ guarantee channel capacity before generating a message to send.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9365693,"byte_end":9365760,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9365761,"byte_end":9365764,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`Sender::reserve()`]: Sender::reserve","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9365765,"byte_end":9365807,"line_start":28,"line_end":28,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5944},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366004,"byte_end":9366012,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5946}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9365876,"byte_end":9365924,"line_start":33,"line_end":33,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9365925,"byte_end":9365928,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9365929,"byte_end":9365992,"line_start":35,"line_end":35,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":5947},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367470,"byte_end":9367477,"line_start":85,"line_end":85,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks\n with backpressure.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366084,"byte_end":9366163,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ with backpressure.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366164,"byte_end":9366186,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366187,"byte_end":9366190,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The channel will buffer up to the provided number of messages.  Once the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366191,"byte_end":9366267,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ buffer is full, attempts to `send` new messages will wait until a message is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366268,"byte_end":9366348,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ received from the channel. The provided buffer capacity must be at least 1.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366349,"byte_end":9366428,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366429,"byte_end":9366432,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366433,"byte_end":9366510,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366511,"byte_end":9366536,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366537,"byte_end":9366540,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366541,"byte_end":9366620,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366621,"byte_end":9366669,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366670,"byte_end":9366673,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366674,"byte_end":9366753,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366754,"byte_end":9366829,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366830,"byte_end":9366896,"line_start":56,"line_end":56,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366897,"byte_end":9366900,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366901,"byte_end":9366913,"line_start":58,"line_end":58,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366914,"byte_end":9366917,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Panics if the buffer capacity is 0.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366918,"byte_end":9366957,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366958,"byte_end":9366961,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366962,"byte_end":9366976,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366977,"byte_end":9366980,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366981,"byte_end":9366992,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9366993,"byte_end":9367019,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367020,"byte_end":9367023,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367024,"byte_end":9367042,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367043,"byte_end":9367064,"line_start":68,"line_end":68,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367065,"byte_end":9367111,"line_start":69,"line_end":69,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367112,"byte_end":9367115,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367116,"byte_end":9367149,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367150,"byte_end":9367178,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367179,"byte_end":9367229,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367230,"byte_end":9367279,"line_start":74,"line_end":74,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367280,"byte_end":9367307,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367308,"byte_end":9367325,"line_start":76,"line_end":76,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367326,"byte_end":9367339,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367340,"byte_end":9367351,"line_start":78,"line_end":78,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367352,"byte_end":9367355,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367356,"byte_end":9367401,"line_start":80,"line_end":80,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367402,"byte_end":9367438,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367439,"byte_end":9367448,"line_start":82,"line_end":82,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367449,"byte_end":9367454,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367455,"byte_end":9367462,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5953},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369151,"byte_end":9369155,"line_start":144,"line_end":144,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368077,"byte_end":9368123,"line_start":105,"line_end":105,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368128,"byte_end":9368131,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368136,"byte_end":9368208,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368213,"byte_end":9368267,"line_start":108,"line_end":108,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368272,"byte_end":9368275,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368280,"byte_end":9368294,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368299,"byte_end":9368302,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368307,"byte_end":9368314,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368319,"byte_end":9368345,"line_start":113,"line_end":113,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368350,"byte_end":9368353,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368358,"byte_end":9368376,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368381,"byte_end":9368402,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368407,"byte_end":9368453,"line_start":117,"line_end":117,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368458,"byte_end":9368461,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368466,"byte_end":9368499,"line_start":119,"line_end":119,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368504,"byte_end":9368548,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368553,"byte_end":9368564,"line_start":121,"line_end":121,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368569,"byte_end":9368572,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368577,"byte_end":9368628,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368633,"byte_end":9368675,"line_start":124,"line_end":124,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368680,"byte_end":9368685,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368690,"byte_end":9368697,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368702,"byte_end":9368705,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368710,"byte_end":9368734,"line_start":128,"line_end":128,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368739,"byte_end":9368742,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368747,"byte_end":9368754,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368759,"byte_end":9368785,"line_start":131,"line_end":131,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368790,"byte_end":9368793,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368798,"byte_end":9368816,"line_start":133,"line_end":133,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368821,"byte_end":9368842,"line_start":134,"line_end":134,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368847,"byte_end":9368893,"line_start":135,"line_end":135,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368898,"byte_end":9368901,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368906,"byte_end":9368946,"line_start":137,"line_end":137,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368951,"byte_end":9368991,"line_start":138,"line_end":138,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9368996,"byte_end":9368999,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369004,"byte_end":9369055,"line_start":140,"line_end":140,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369060,"byte_end":9369111,"line_start":141,"line_end":141,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369116,"byte_end":9369121,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369126,"byte_end":9369133,"line_start":143,"line_end":143,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5958},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9370086,"byte_end":9370099,"line_start":179,"line_end":179,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<Receiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369276,"byte_end":9369338,"line_start":149,"line_end":149,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369343,"byte_end":9369346,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369351,"byte_end":9369363,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369368,"byte_end":9369371,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369376,"byte_end":9369443,"line_start":153,"line_end":153,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369448,"byte_end":9369460,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369465,"byte_end":9369468,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369473,"byte_end":9369487,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369492,"byte_end":9369495,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369500,"byte_end":9369507,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369512,"byte_end":9369532,"line_start":159,"line_end":159,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369537,"byte_end":9369569,"line_start":160,"line_end":160,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369574,"byte_end":9369600,"line_start":161,"line_end":161,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369605,"byte_end":9369608,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369613,"byte_end":9369628,"line_start":163,"line_end":163,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(10);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369633,"byte_end":9369684,"line_start":164,"line_end":164,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369689,"byte_end":9369692,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369697,"byte_end":9369744,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369749,"byte_end":9369802,"line_start":167,"line_end":167,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369807,"byte_end":9369818,"line_start":168,"line_end":168,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369823,"byte_end":9369826,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/     Runtime::new()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369831,"byte_end":9369853,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"/         .unwrap()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369858,"byte_end":9369879,"line_start":171,"line_end":171,"column_start":5,"column_end":26}},{"value":"/         .block_on(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369884,"byte_end":9369918,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/             let _ = tx.send(10).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369923,"byte_end":9369965,"line_start":173,"line_end":173,"column_start":5,"column_end":47}},{"value":"/         });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369970,"byte_end":9369985,"line_start":174,"line_end":174,"column_start":5,"column_end":20}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9369990,"byte_end":9370023,"line_start":175,"line_end":175,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9370028,"byte_end":9370033,"line_start":176,"line_end":176,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9370038,"byte_end":9370045,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9370050,"byte_end":9370074,"line_start":178,"line_end":178,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5959},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9372065,"byte_end":9372070,"line_start":237,"line_end":237,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9370915,"byte_end":9370979,"line_start":200,"line_end":200,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9370984,"byte_end":9370987,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9370992,"byte_end":9371067,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered. Any","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371072,"byte_end":9371144,"line_start":203,"line_end":203,"column_start":5,"column_end":77}},{"value":"/ outstanding [`Permit`] values will still be able to send messages.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371149,"byte_end":9371219,"line_start":204,"line_end":204,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371224,"byte_end":9371227,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ In order to guarantee no messages are dropped, after calling `close()`,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371232,"byte_end":9371307,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ `recv()` must be called until `None` is returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371312,"byte_end":9371365,"line_start":207,"line_end":207,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371370,"byte_end":9371373,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371378,"byte_end":9371400,"line_start":209,"line_end":209,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371405,"byte_end":9371408,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371413,"byte_end":9371427,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371432,"byte_end":9371435,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371440,"byte_end":9371447,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371452,"byte_end":9371478,"line_start":214,"line_end":214,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371483,"byte_end":9371486,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371491,"byte_end":9371509,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371514,"byte_end":9371535,"line_start":217,"line_end":217,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(20);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371540,"byte_end":9371585,"line_start":218,"line_end":218,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371590,"byte_end":9371593,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371598,"byte_end":9371631,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/         let mut i = 0;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371636,"byte_end":9371662,"line_start":221,"line_end":221,"column_start":5,"column_end":31}},{"value":"/         while let Ok(permit) = tx.reserve().await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371667,"byte_end":9371722,"line_start":222,"line_end":222,"column_start":5,"column_end":60}},{"value":"/             permit.send(i);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371727,"byte_end":9371758,"line_start":223,"line_end":223,"column_start":5,"column_end":36}},{"value":"/             i += 1;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371763,"byte_end":9371786,"line_start":224,"line_end":224,"column_start":5,"column_end":28}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371791,"byte_end":9371804,"line_start":225,"line_end":225,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371809,"byte_end":9371820,"line_start":226,"line_end":226,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371825,"byte_end":9371828,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371833,"byte_end":9371852,"line_start":228,"line_end":228,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371857,"byte_end":9371860,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     while let Some(msg) = rx.recv().await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371865,"byte_end":9371912,"line_start":230,"line_end":230,"column_start":5,"column_end":52}},{"value":"/         println!(\"got {}\", msg);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371917,"byte_end":9371953,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371958,"byte_end":9371967,"line_start":232,"line_end":232,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371972,"byte_end":9371975,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/     // Channel closed and no messages are lost.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9371980,"byte_end":9372031,"line_start":234,"line_end":234,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9372036,"byte_end":9372041,"line_start":235,"line_end":235,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9372046,"byte_end":9372053,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5960},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9372911,"byte_end":9372920,"line_start":256,"line_end":256,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9372122,"byte_end":9372176,"line_start":241,"line_end":241,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9372181,"byte_end":9372184,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9372189,"byte_end":9372213,"line_start":243,"line_end":243,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9372218,"byte_end":9372221,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9372226,"byte_end":9372300,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9372305,"byte_end":9372319,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9372324,"byte_end":9372386,"line_start":247,"line_end":247,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9372391,"byte_end":9372465,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9372470,"byte_end":9372522,"line_start":249,"line_end":249,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9372527,"byte_end":9372530,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9372535,"byte_end":9372607,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9372612,"byte_end":9372688,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9372693,"byte_end":9372769,"line_start":253,"line_end":253,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9372774,"byte_end":9372845,"line_start":254,"line_end":254,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9372850,"byte_end":9372899,"line_start":255,"line_end":255,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5969},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375016,"byte_end":9375020,"line_start":321,"line_end":321,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9373376,"byte_end":9373427,"line_start":276,"line_end":276,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9373432,"byte_end":9373435,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9373440,"byte_end":9373516,"line_start":278,"line_end":278,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9373521,"byte_end":9373597,"line_start":279,"line_end":279,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9373602,"byte_end":9373676,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9373681,"byte_end":9373756,"line_start":281,"line_end":281,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9373761,"byte_end":9373830,"line_start":282,"line_end":282,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9373835,"byte_end":9373907,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9373912,"byte_end":9373943,"line_start":284,"line_end":284,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9373948,"byte_end":9373951,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9373956,"byte_end":9373968,"line_start":286,"line_end":286,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9373973,"byte_end":9373976,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9373981,"byte_end":9374054,"line_start":288,"line_end":288,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374059,"byte_end":9374133,"line_start":289,"line_end":289,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374138,"byte_end":9374198,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374203,"byte_end":9374206,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374211,"byte_end":9374241,"line_start":292,"line_end":292,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374246,"byte_end":9374272,"line_start":293,"line_end":293,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374277,"byte_end":9374280,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374285,"byte_end":9374299,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374304,"byte_end":9374307,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374312,"byte_end":9374382,"line_start":297,"line_end":297,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374387,"byte_end":9374426,"line_start":298,"line_end":298,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374431,"byte_end":9374434,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374439,"byte_end":9374450,"line_start":300,"line_end":300,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374455,"byte_end":9374481,"line_start":301,"line_end":301,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374486,"byte_end":9374489,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374494,"byte_end":9374512,"line_start":303,"line_end":303,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374517,"byte_end":9374538,"line_start":304,"line_end":304,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374543,"byte_end":9374587,"line_start":305,"line_end":305,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374592,"byte_end":9374595,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374600,"byte_end":9374633,"line_start":307,"line_end":307,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374638,"byte_end":9374666,"line_start":308,"line_end":308,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374671,"byte_end":9374721,"line_start":309,"line_end":309,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374726,"byte_end":9374775,"line_start":310,"line_end":310,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374780,"byte_end":9374807,"line_start":311,"line_end":311,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374812,"byte_end":9374829,"line_start":312,"line_end":312,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374834,"byte_end":9374847,"line_start":313,"line_end":313,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374852,"byte_end":9374863,"line_start":314,"line_end":314,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374868,"byte_end":9374871,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374876,"byte_end":9374921,"line_start":316,"line_end":316,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374926,"byte_end":9374962,"line_start":317,"line_end":317,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374967,"byte_end":9374976,"line_start":318,"line_end":318,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374981,"byte_end":9374986,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9374991,"byte_end":9374998,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5972},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376154,"byte_end":9376160,"line_start":362,"line_end":362,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375272,"byte_end":9375316,"line_start":331,"line_end":331,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375321,"byte_end":9375324,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375329,"byte_end":9375404,"line_start":333,"line_end":333,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375409,"byte_end":9375464,"line_start":334,"line_end":334,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375469,"byte_end":9375472,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375477,"byte_end":9375491,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375496,"byte_end":9375499,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375504,"byte_end":9375511,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375516,"byte_end":9375542,"line_start":339,"line_end":339,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375547,"byte_end":9375550,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375555,"byte_end":9375573,"line_start":341,"line_end":341,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375578,"byte_end":9375599,"line_start":342,"line_end":342,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::channel::<()>(1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375604,"byte_end":9375651,"line_start":343,"line_end":343,"column_start":5,"column_end":52}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375656,"byte_end":9375686,"line_start":344,"line_end":344,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375691,"byte_end":9375721,"line_start":345,"line_end":345,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375726,"byte_end":9375756,"line_start":346,"line_end":346,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375761,"byte_end":9375791,"line_start":347,"line_end":347,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375796,"byte_end":9375829,"line_start":348,"line_end":348,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375834,"byte_end":9375855,"line_start":349,"line_end":349,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375860,"byte_end":9375871,"line_start":350,"line_end":350,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375876,"byte_end":9375879,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375884,"byte_end":9375907,"line_start":352,"line_end":352,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375912,"byte_end":9375937,"line_start":353,"line_end":353,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375942,"byte_end":9375967,"line_start":354,"line_end":354,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9375972,"byte_end":9375997,"line_start":355,"line_end":355,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376002,"byte_end":9376027,"line_start":356,"line_end":356,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376032,"byte_end":9376056,"line_start":357,"line_end":357,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376061,"byte_end":9376071,"line_start":358,"line_end":358,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376119,"byte_end":9376124,"line_start":360,"line_end":360,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376129,"byte_end":9376136,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5975},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9378334,"byte_end":9378342,"line_start":424,"line_end":424,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376214,"byte_end":9376273,"line_start":366,"line_end":366,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376278,"byte_end":9376281,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376286,"byte_end":9376365,"line_start":368,"line_end":368,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376370,"byte_end":9376445,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376450,"byte_end":9376528,"line_start":370,"line_end":370,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376533,"byte_end":9376575,"line_start":371,"line_end":371,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376580,"byte_end":9376583,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376588,"byte_end":9376600,"line_start":373,"line_end":373,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376605,"byte_end":9376608,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376613,"byte_end":9376684,"line_start":375,"line_end":375,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376689,"byte_end":9376765,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376770,"byte_end":9376792,"line_start":377,"line_end":377,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376797,"byte_end":9376800,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376805,"byte_end":9376878,"line_start":379,"line_end":379,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376883,"byte_end":9376957,"line_start":380,"line_end":380,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9376962,"byte_end":9377022,"line_start":381,"line_end":381,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377027,"byte_end":9377030,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377035,"byte_end":9377061,"line_start":383,"line_end":383,"column_start":5,"column_end":31}},{"value":"/ [`channel`]: channel","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377066,"byte_end":9377090,"line_start":384,"line_end":384,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377095,"byte_end":9377125,"line_start":385,"line_end":385,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377130,"byte_end":9377133,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377138,"byte_end":9377152,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377157,"byte_end":9377160,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377165,"byte_end":9377172,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377177,"byte_end":9377203,"line_start":390,"line_end":390,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377208,"byte_end":9377211,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377216,"byte_end":9377234,"line_start":392,"line_end":392,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377239,"byte_end":9377260,"line_start":393,"line_end":393,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377265,"byte_end":9377311,"line_start":394,"line_end":394,"column_start":5,"column_end":51}},{"value":"/     let (tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377316,"byte_end":9377361,"line_start":395,"line_end":395,"column_start":5,"column_end":50}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377366,"byte_end":9377396,"line_start":396,"line_end":396,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377401,"byte_end":9377404,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377409,"byte_end":9377442,"line_start":398,"line_end":398,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377447,"byte_end":9377486,"line_start":399,"line_end":399,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377491,"byte_end":9377530,"line_start":400,"line_end":400,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377535,"byte_end":9377597,"line_start":401,"line_end":401,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377602,"byte_end":9377613,"line_start":402,"line_end":402,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377618,"byte_end":9377621,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377626,"byte_end":9377659,"line_start":404,"line_end":404,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377664,"byte_end":9377713,"line_start":405,"line_end":405,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377718,"byte_end":9377765,"line_start":406,"line_end":406,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377770,"byte_end":9377806,"line_start":407,"line_end":407,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377811,"byte_end":9377822,"line_start":408,"line_end":408,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377827,"byte_end":9377830,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377835,"byte_end":9377855,"line_start":410,"line_end":410,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377860,"byte_end":9377899,"line_start":411,"line_end":411,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377904,"byte_end":9377949,"line_start":412,"line_end":412,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377954,"byte_end":9377957,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9377962,"byte_end":9378001,"line_start":414,"line_end":414,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9378006,"byte_end":9378051,"line_start":415,"line_end":415,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9378056,"byte_end":9378059,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9378064,"byte_end":9378113,"line_start":417,"line_end":417,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9378118,"byte_end":9378149,"line_start":418,"line_end":418,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9378154,"byte_end":9378216,"line_start":419,"line_end":419,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9378221,"byte_end":9378286,"line_start":420,"line_end":420,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9378291,"byte_end":9378300,"line_start":421,"line_end":421,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9378305,"byte_end":9378310,"line_start":422,"line_end":422,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9378315,"byte_end":9378322,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5976},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9380431,"byte_end":9380443,"line_start":483,"line_end":483,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9378747,"byte_end":9378827,"line_start":436,"line_end":436,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9378832,"byte_end":9378835,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9378840,"byte_end":9378917,"line_start":438,"line_end":438,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9378922,"byte_end":9379000,"line_start":439,"line_end":439,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379005,"byte_end":9379053,"line_start":440,"line_end":440,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379058,"byte_end":9379061,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379066,"byte_end":9379092,"line_start":442,"line_end":442,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379097,"byte_end":9379100,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379105,"byte_end":9379117,"line_start":444,"line_end":444,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379122,"byte_end":9379125,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379130,"byte_end":9379203,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379208,"byte_end":9379265,"line_start":447,"line_end":447,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379270,"byte_end":9379351,"line_start":448,"line_end":448,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379356,"byte_end":9379359,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379364,"byte_end":9379394,"line_start":450,"line_end":450,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379399,"byte_end":9379425,"line_start":451,"line_end":451,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379430,"byte_end":9379433,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379438,"byte_end":9379452,"line_start":453,"line_end":453,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379457,"byte_end":9379460,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379465,"byte_end":9379543,"line_start":455,"line_end":455,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379548,"byte_end":9379619,"line_start":456,"line_end":456,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379624,"byte_end":9379627,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379632,"byte_end":9379643,"line_start":458,"line_end":458,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379648,"byte_end":9379674,"line_start":459,"line_end":459,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379679,"byte_end":9379718,"line_start":460,"line_end":460,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379723,"byte_end":9379726,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379731,"byte_end":9379749,"line_start":462,"line_end":462,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379754,"byte_end":9379775,"line_start":463,"line_end":463,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379780,"byte_end":9379824,"line_start":464,"line_end":464,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379829,"byte_end":9379832,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379837,"byte_end":9379870,"line_start":466,"line_end":466,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379875,"byte_end":9379903,"line_start":467,"line_end":467,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379908,"byte_end":9379994,"line_start":468,"line_end":468,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9379999,"byte_end":9380052,"line_start":469,"line_end":469,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9380057,"byte_end":9380084,"line_start":470,"line_end":470,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9380089,"byte_end":9380106,"line_start":471,"line_end":471,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9380111,"byte_end":9380124,"line_start":472,"line_end":472,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9380129,"byte_end":9380140,"line_start":473,"line_end":473,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9380145,"byte_end":9380148,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9380153,"byte_end":9380198,"line_start":475,"line_end":475,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9380203,"byte_end":9380239,"line_start":476,"line_end":476,"column_start":5,"column_end":41}},{"value":"/         sleep(Duration::from_millis(200)).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9380244,"byte_end":9380296,"line_start":477,"line_end":477,"column_start":5,"column_end":57}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9380301,"byte_end":9380310,"line_start":478,"line_end":478,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9380315,"byte_end":9380320,"line_start":479,"line_end":479,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9380325,"byte_end":9380332,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9380337,"byte_end":9380361,"line_start":481,"line_end":481,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5979},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381701,"byte_end":9381714,"line_start":530,"line_end":530,"column_start":12,"column_end":25},"name":"blocking_send","qualname":"<Sender<T>>::blocking_send","value":"pub fn blocking_send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Blocking send to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking send to call outside of asynchronous contexts.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9380936,"byte_end":9380995,"line_start":502,"line_end":502,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381000,"byte_end":9381003,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381008,"byte_end":9381020,"line_start":504,"line_end":504,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381025,"byte_end":9381028,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381033,"byte_end":9381100,"line_start":506,"line_end":506,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381105,"byte_end":9381117,"line_start":507,"line_end":507,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381122,"byte_end":9381125,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381130,"byte_end":9381144,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381149,"byte_end":9381152,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381157,"byte_end":9381164,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381169,"byte_end":9381189,"line_start":512,"line_end":512,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381194,"byte_end":9381226,"line_start":513,"line_end":513,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381231,"byte_end":9381257,"line_start":514,"line_end":514,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381262,"byte_end":9381265,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381270,"byte_end":9381285,"line_start":516,"line_end":516,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381290,"byte_end":9381340,"line_start":517,"line_end":517,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381345,"byte_end":9381348,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381353,"byte_end":9381400,"line_start":519,"line_end":519,"column_start":5,"column_end":52}},{"value":"/         tx.blocking_send(10).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381405,"byte_end":9381447,"line_start":520,"line_end":520,"column_start":5,"column_end":47}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381452,"byte_end":9381463,"line_start":521,"line_end":521,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381468,"byte_end":9381471,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/     Runtime::new().unwrap().block_on(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381476,"byte_end":9381529,"line_start":523,"line_end":523,"column_start":5,"column_end":58}},{"value":"/         assert_eq!(Some(10), rx.recv().await);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381534,"byte_end":9381584,"line_start":524,"line_end":524,"column_start":5,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381589,"byte_end":9381600,"line_start":525,"line_end":525,"column_start":5,"column_end":16}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381605,"byte_end":9381638,"line_start":526,"line_end":526,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381643,"byte_end":9381648,"line_start":527,"line_end":527,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381653,"byte_end":9381660,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381665,"byte_end":9381689,"line_start":529,"line_end":529,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5980},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382405,"byte_end":9382414,"line_start":552,"line_end":552,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`Receiver`] is dropped, or when the [`Receiver::close`] method is\n called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381823,"byte_end":9381887,"line_start":534,"line_end":534,"column_start":5,"column_end":69}},{"value":"/ [`Receiver`] is dropped, or when the [`Receiver::close`] method is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381892,"byte_end":9381962,"line_start":535,"line_end":535,"column_start":5,"column_end":75}},{"value":"/ called.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381967,"byte_end":9381978,"line_start":536,"line_end":536,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381983,"byte_end":9381986,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9381991,"byte_end":9382036,"line_start":538,"line_end":538,"column_start":5,"column_end":50}},{"value":"/ [`Receiver::close`]: crate::sync::mpsc::Receiver::close","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382041,"byte_end":9382100,"line_start":539,"line_end":539,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382105,"byte_end":9382108,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382113,"byte_end":9382120,"line_start":541,"line_end":541,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(42);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382125,"byte_end":9382181,"line_start":542,"line_end":542,"column_start":5,"column_end":61}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382186,"byte_end":9382215,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382220,"byte_end":9382223,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382228,"byte_end":9382253,"line_start":545,"line_end":545,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382258,"byte_end":9382288,"line_start":546,"line_end":546,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382293,"byte_end":9382296,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382301,"byte_end":9382314,"line_start":548,"line_end":548,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382319,"byte_end":9382347,"line_start":549,"line_end":549,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382352,"byte_end":9382381,"line_start":550,"line_end":550,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382386,"byte_end":9382393,"line_start":551,"line_end":551,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5981},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383805,"byte_end":9383812,"line_start":594,"line_end":594,"column_start":18,"column_end":25},"name":"reserve","qualname":"<Sender<T>>::reserve","value":"pub async fn reserve<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for channel capacity. Once capacity to send one message is\n available, it is reserved for the caller.","sig":null,"attributes":[{"value":"/ Wait for channel capacity. Once capacity to send one message is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382473,"byte_end":9382540,"line_start":556,"line_end":556,"column_start":5,"column_end":72}},{"value":"/ available, it is reserved for the caller.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382545,"byte_end":9382590,"line_start":557,"line_end":557,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382595,"byte_end":9382598,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382603,"byte_end":9382678,"line_start":559,"line_end":559,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382683,"byte_end":9382758,"line_start":560,"line_end":560,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. A [`Permit`] is returned to track","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382763,"byte_end":9382836,"line_start":561,"line_end":561,"column_start":5,"column_end":78}},{"value":"/ the reserved capacity. The [`send`] function on [`Permit`] consumes the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382841,"byte_end":9382916,"line_start":562,"line_end":562,"column_start":5,"column_end":80}},{"value":"/ reserved capacity.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382921,"byte_end":9382943,"line_start":563,"line_end":563,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382948,"byte_end":9382951,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9382956,"byte_end":9383032,"line_start":565,"line_end":565,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383037,"byte_end":9383056,"line_start":566,"line_end":566,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383061,"byte_end":9383064,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383069,"byte_end":9383091,"line_start":568,"line_end":568,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383096,"byte_end":9383122,"line_start":569,"line_end":569,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383127,"byte_end":9383130,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383135,"byte_end":9383149,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383154,"byte_end":9383157,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383162,"byte_end":9383169,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383174,"byte_end":9383200,"line_start":574,"line_end":574,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383205,"byte_end":9383208,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383213,"byte_end":9383231,"line_start":576,"line_end":576,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383236,"byte_end":9383257,"line_start":577,"line_end":577,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383262,"byte_end":9383306,"line_start":578,"line_end":578,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383311,"byte_end":9383314,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383319,"byte_end":9383346,"line_start":580,"line_end":580,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383351,"byte_end":9383400,"line_start":581,"line_end":581,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383405,"byte_end":9383408,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383413,"byte_end":9383479,"line_start":583,"line_end":583,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383484,"byte_end":9383514,"line_start":584,"line_end":584,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383519,"byte_end":9383562,"line_start":585,"line_end":585,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383567,"byte_end":9383570,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383575,"byte_end":9383616,"line_start":587,"line_end":587,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383621,"byte_end":9383646,"line_start":588,"line_end":588,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383651,"byte_end":9383654,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383659,"byte_end":9383710,"line_start":590,"line_end":590,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383715,"byte_end":9383765,"line_start":591,"line_end":591,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383770,"byte_end":9383775,"line_start":592,"line_end":592,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9383780,"byte_end":9383787,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5992},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9385519,"byte_end":9385523,"line_start":655,"line_end":655,"column_start":12,"column_end":16},"name":"send","qualname":"<Permit>::send","value":"pub fn send(Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384446,"byte_end":9384492,"line_start":623,"line_end":623,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384497,"byte_end":9384500,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384505,"byte_end":9384580,"line_start":625,"line_end":625,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384585,"byte_end":9384659,"line_start":626,"line_end":626,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384664,"byte_end":9384738,"line_start":627,"line_end":627,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384743,"byte_end":9384791,"line_start":628,"line_end":628,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384796,"byte_end":9384799,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384804,"byte_end":9384844,"line_start":630,"line_end":630,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384849,"byte_end":9384852,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384857,"byte_end":9384871,"line_start":632,"line_end":632,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384876,"byte_end":9384879,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384884,"byte_end":9384891,"line_start":634,"line_end":634,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384896,"byte_end":9384922,"line_start":635,"line_end":635,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384927,"byte_end":9384930,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384935,"byte_end":9384953,"line_start":637,"line_end":637,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384958,"byte_end":9384979,"line_start":638,"line_end":638,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384984,"byte_end":9385028,"line_start":639,"line_end":639,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9385033,"byte_end":9385036,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9385041,"byte_end":9385068,"line_start":641,"line_end":641,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9385073,"byte_end":9385122,"line_start":642,"line_end":642,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9385127,"byte_end":9385130,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9385135,"byte_end":9385201,"line_start":644,"line_end":644,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9385206,"byte_end":9385236,"line_start":645,"line_end":645,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9385241,"byte_end":9385284,"line_start":646,"line_end":646,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9385289,"byte_end":9385292,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9385297,"byte_end":9385336,"line_start":648,"line_end":648,"column_start":5,"column_end":44}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9385341,"byte_end":9385366,"line_start":649,"line_end":649,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9385371,"byte_end":9385374,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9385379,"byte_end":9385430,"line_start":651,"line_end":651,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9385435,"byte_end":9385485,"line_start":652,"line_end":652,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9385490,"byte_end":9385495,"line_start":653,"line_end":653,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9385500,"byte_end":9385507,"line_start":654,"line_end":654,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6189},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9407766,"byte_end":9407781,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":6191}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9407608,"byte_end":9407662,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9407663,"byte_end":9407666,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9407667,"byte_end":9407699,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9407700,"byte_end":9407754,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":6198},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9408359,"byte_end":9408376,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":6200}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9408198,"byte_end":9408255,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9408256,"byte_end":9408259,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9408260,"byte_end":9408292,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9408293,"byte_end":9408347,"line_start":35,"line_end":35,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":6204},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9409208,"byte_end":9409225,"line_start":59,"line_end":59,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks without backpressure.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9408675,"byte_end":9408751,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ tasks without backpressure.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9408752,"byte_end":9408783,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9408784,"byte_end":9408787,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9408788,"byte_end":9408868,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9408869,"byte_end":9408948,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9408949,"byte_end":9408962,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9408963,"byte_end":9408966,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9408967,"byte_end":9409046,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9409047,"byte_end":9409123,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9409124,"byte_end":9409200,"line_start":58,"line_end":58,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":6210},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410704,"byte_end":9410708,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9409634,"byte_end":9409680,"line_start":76,"line_end":76,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9409685,"byte_end":9409688,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9409693,"byte_end":9409765,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9409770,"byte_end":9409824,"line_start":79,"line_end":79,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9409829,"byte_end":9409832,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9409837,"byte_end":9409851,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9409856,"byte_end":9409859,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9409864,"byte_end":9409871,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9409876,"byte_end":9409902,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9409907,"byte_end":9409910,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9409915,"byte_end":9409933,"line_start":86,"line_end":86,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9409938,"byte_end":9409959,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9409964,"byte_end":9410017,"line_start":88,"line_end":88,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410022,"byte_end":9410025,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410030,"byte_end":9410063,"line_start":90,"line_end":90,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410068,"byte_end":9410106,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410111,"byte_end":9410122,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410127,"byte_end":9410130,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410135,"byte_end":9410186,"line_start":94,"line_end":94,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410191,"byte_end":9410233,"line_start":95,"line_end":95,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410238,"byte_end":9410243,"line_start":96,"line_end":96,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410248,"byte_end":9410255,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410260,"byte_end":9410263,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410268,"byte_end":9410292,"line_start":99,"line_end":99,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410297,"byte_end":9410300,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410305,"byte_end":9410312,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410317,"byte_end":9410343,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410348,"byte_end":9410351,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410356,"byte_end":9410374,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410379,"byte_end":9410400,"line_start":105,"line_end":105,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410405,"byte_end":9410458,"line_start":106,"line_end":106,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410463,"byte_end":9410466,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410471,"byte_end":9410505,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410510,"byte_end":9410544,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410549,"byte_end":9410552,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410557,"byte_end":9410608,"line_start":111,"line_end":111,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410613,"byte_end":9410664,"line_start":112,"line_end":112,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410669,"byte_end":9410674,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410679,"byte_end":9410686,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6215},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411515,"byte_end":9411528,"line_start":147,"line_end":147,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<UnboundedReceiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410830,"byte_end":9410892,"line_start":121,"line_end":121,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410897,"byte_end":9410900,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410905,"byte_end":9410917,"line_start":123,"line_end":123,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410922,"byte_end":9410925,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9410930,"byte_end":9410997,"line_start":125,"line_end":125,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411002,"byte_end":9411014,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411019,"byte_end":9411022,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411027,"byte_end":9411041,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411046,"byte_end":9411049,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411054,"byte_end":9411061,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411066,"byte_end":9411086,"line_start":131,"line_end":131,"column_start":5,"column_end":25}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411091,"byte_end":9411117,"line_start":132,"line_end":132,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411122,"byte_end":9411125,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411130,"byte_end":9411148,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411153,"byte_end":9411174,"line_start":135,"line_end":135,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel::<u8>();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411179,"byte_end":9411238,"line_start":136,"line_end":136,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411243,"byte_end":9411246,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411251,"byte_end":9411298,"line_start":138,"line_end":138,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411303,"byte_end":9411356,"line_start":139,"line_end":139,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411361,"byte_end":9411372,"line_start":140,"line_end":140,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411377,"byte_end":9411380,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     let _ = tx.send(10);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411385,"byte_end":9411413,"line_start":142,"line_end":142,"column_start":5,"column_end":33}},{"value":"/     sync_code.join().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411418,"byte_end":9411452,"line_start":143,"line_end":143,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411457,"byte_end":9411462,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411467,"byte_end":9411474,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411479,"byte_end":9411503,"line_start":146,"line_end":146,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":6216},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411848,"byte_end":9411853,"line_start":155,"line_end":155,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411611,"byte_end":9411675,"line_start":151,"line_end":151,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411680,"byte_end":9411683,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411688,"byte_end":9411763,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411768,"byte_end":9411836,"line_start":154,"line_end":154,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":6217},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9412694,"byte_end":9412703,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411905,"byte_end":9411959,"line_start":159,"line_end":159,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411964,"byte_end":9411967,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9411972,"byte_end":9411996,"line_start":161,"line_end":161,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9412001,"byte_end":9412004,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9412009,"byte_end":9412083,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9412088,"byte_end":9412102,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9412107,"byte_end":9412169,"line_start":165,"line_end":165,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9412174,"byte_end":9412248,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9412253,"byte_end":9412305,"line_start":167,"line_end":167,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9412310,"byte_end":9412313,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9412318,"byte_end":9412390,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9412395,"byte_end":9412471,"line_start":170,"line_end":170,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9412476,"byte_end":9412552,"line_start":171,"line_end":171,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9412557,"byte_end":9412628,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9412633,"byte_end":9412682,"line_start":173,"line_end":173,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6221},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9413631,"byte_end":9413635,"line_start":196,"line_end":196,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9412943,"byte_end":9413017,"line_start":184,"line_end":184,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9413022,"byte_end":9413025,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9413030,"byte_end":9413115,"line_start":186,"line_end":186,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9413120,"byte_end":9413201,"line_start":187,"line_end":187,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9413206,"byte_end":9413274,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9413279,"byte_end":9413282,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9413287,"byte_end":9413360,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9413365,"byte_end":9413436,"line_start":191,"line_end":191,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9413441,"byte_end":9413518,"line_start":192,"line_end":192,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9413523,"byte_end":9413526,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9413531,"byte_end":9413570,"line_start":194,"line_end":194,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9413575,"byte_end":9413619,"line_start":195,"line_end":195,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6227},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415564,"byte_end":9415570,"line_start":266,"line_end":266,"column_start":18,"column_end":24},"name":"closed","qualname":"<UnboundedSender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9414673,"byte_end":9414717,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9414722,"byte_end":9414725,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9414730,"byte_end":9414805,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9414810,"byte_end":9414865,"line_start":238,"line_end":238,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9414870,"byte_end":9414873,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9414878,"byte_end":9414892,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9414897,"byte_end":9414900,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9414905,"byte_end":9414912,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9414917,"byte_end":9414943,"line_start":243,"line_end":243,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9414948,"byte_end":9414951,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9414956,"byte_end":9414974,"line_start":245,"line_end":245,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9414979,"byte_end":9415000,"line_start":246,"line_end":246,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::unbounded_channel::<()>();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415005,"byte_end":9415061,"line_start":247,"line_end":247,"column_start":5,"column_end":61}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415066,"byte_end":9415096,"line_start":248,"line_end":248,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415101,"byte_end":9415131,"line_start":249,"line_end":249,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415136,"byte_end":9415166,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415171,"byte_end":9415201,"line_start":251,"line_end":251,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415206,"byte_end":9415239,"line_start":252,"line_end":252,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415244,"byte_end":9415265,"line_start":253,"line_end":253,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415270,"byte_end":9415281,"line_start":254,"line_end":254,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415286,"byte_end":9415289,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415294,"byte_end":9415317,"line_start":256,"line_end":256,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415322,"byte_end":9415347,"line_start":257,"line_end":257,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415352,"byte_end":9415377,"line_start":258,"line_end":258,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415382,"byte_end":9415407,"line_start":259,"line_end":259,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415412,"byte_end":9415437,"line_start":260,"line_end":260,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415442,"byte_end":9415466,"line_start":261,"line_end":261,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415471,"byte_end":9415481,"line_start":262,"line_end":262,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415529,"byte_end":9415534,"line_start":264,"line_end":264,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415539,"byte_end":9415546,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6230},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9416267,"byte_end":9416276,"line_start":287,"line_end":287,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`UnboundedReceiver`] is dropped, or when the\n [`UnboundedReceiver::close`] method is called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415623,"byte_end":9415687,"line_start":269,"line_end":269,"column_start":5,"column_end":69}},{"value":"/ [`UnboundedReceiver`] is dropped, or when the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415692,"byte_end":9415741,"line_start":270,"line_end":270,"column_start":5,"column_end":54}},{"value":"/ [`UnboundedReceiver::close`] method is called.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415746,"byte_end":9415796,"line_start":271,"line_end":271,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415801,"byte_end":9415804,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415809,"byte_end":9415872,"line_start":273,"line_end":273,"column_start":5,"column_end":68}},{"value":"/ [`UnboundedReceiver::close`]: crate::sync::mpsc::UnboundedReceiver::close","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415877,"byte_end":9415954,"line_start":274,"line_end":274,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415959,"byte_end":9415962,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415967,"byte_end":9415974,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9415979,"byte_end":9416043,"line_start":277,"line_end":277,"column_start":5,"column_end":69}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9416048,"byte_end":9416077,"line_start":278,"line_end":278,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9416082,"byte_end":9416085,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9416090,"byte_end":9416115,"line_start":280,"line_end":280,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9416120,"byte_end":9416150,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9416155,"byte_end":9416158,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9416163,"byte_end":9416176,"line_start":283,"line_end":283,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9416181,"byte_end":9416209,"line_start":284,"line_end":284,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9416214,"byte_end":9416243,"line_start":285,"line_end":285,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9416248,"byte_end":9416255,"line_start":286,"line_end":286,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":6235},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","parent":null,"children":[{"krate":0,"index":6236},{"krate":0,"index":6237},{"krate":0,"index":6927},{"krate":0,"index":6931},{"krate":0,"index":6238},{"krate":0,"index":6241},{"krate":0,"index":6934},{"krate":0,"index":6942},{"krate":0,"index":6243},{"krate":0,"index":6245},{"krate":0,"index":6248},{"krate":0,"index":6945},{"krate":0,"index":6948},{"krate":0,"index":6251},{"krate":0,"index":6253},{"krate":0,"index":6955},{"krate":0,"index":6963},{"krate":0,"index":6950},{"krate":0,"index":6952}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"/ Channel error types","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9416333,"byte_end":9416356,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6927},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9416460,"byte_end":9416469,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9416396,"byte_end":9416431,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6930},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9416473,"byte_end":9416478,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":6927},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6936},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9417022,"byte_end":9417026,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":6934},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9416890,"byte_end":9416958,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9416963,"byte_end":9417017,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6939},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9417127,"byte_end":9417133,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":6934},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9417036,"byte_end":9417105,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9417110,"byte_end":9417122,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":6934},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9416868,"byte_end":9416880,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> {\n\n    /// The data could not be sent on the channel because the channel is\n    /// currently full and sending would require blocking.\n    Full(T),\n\n    /// The receive half of the channel was explicitly closed or has been\n    /// dropped.\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":6936},{"krate":0,"index":6939}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9416722,"byte_end":9416793,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9416794,"byte_end":9416841,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6945},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9417771,"byte_end":9417780,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9417709,"byte_end":9417742,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6957},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9419286,"byte_end":9419293,"line_start":109,"line_end":109,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":6955},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6960},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9419406,"byte_end":9419412,"line_start":113,"line_end":113,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":6955},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6955},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9419124,"byte_end":9419140,"line_start":106,"line_end":106,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> {\n\n    #[doc =\n      r\" The data could not be sent on the channel because the channel is\"]\n    #[doc = r\" full, and the timeout to send has elapsed.\"]\n    Timeout(T),\n\n    #[doc =\n      r\" The receive half of the channel was explicitly closed or has been\"]\n    #[doc = r\" dropped.\"]\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":6957},{"krate":0,"index":6960}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":24447,"byte_end":24471,"line_start":311,"line_end":311,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":6264},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424398,"byte_end":9424403,"line_start":120,"line_end":120,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":6266},{"krate":0,"index":6267}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9420145,"byte_end":9420183,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9420184,"byte_end":9420187,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to an asynchronous [`std::sync::Mutex`], with one","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9420188,"byte_end":9420266,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ major difference: [`lock`] does not block and the lock guard can be held","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9420267,"byte_end":9420343,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ across await points.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9420344,"byte_end":9420368,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9420369,"byte_end":9420372,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9420373,"byte_end":9420414,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9420415,"byte_end":9420418,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9420419,"byte_end":9420499,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code. This section","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9420500,"byte_end":9420579,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will help you decide on which kind of mutex you should use.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9420580,"byte_end":9420643,"line_start":21,"line_end":21,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9420644,"byte_end":9420647,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The primary use case of the async mutex is to provide shared mutable access","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9420648,"byte_end":9420727,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ to IO resources such as a database connection. If the data stored behind the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9420728,"byte_end":9420808,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ mutex is just data, it is often better to use a blocking mutex such as the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9420809,"byte_end":9420887,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ one in the standard library or [`parking_lot`]. This is because the feature","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9420888,"byte_end":9420967,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ that the async mutex offers over the blocking mutex is that it is possible","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9420968,"byte_end":9421046,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ to keep the mutex locked across an `.await` point, which is rarely necessary","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421047,"byte_end":9421127,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ for data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421128,"byte_end":9421141,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421142,"byte_end":9421145,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421146,"byte_end":9421225,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421226,"byte_end":9421302,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421303,"byte_end":9421380,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421381,"byte_end":9421414,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421415,"byte_end":9421418,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421419,"byte_end":9421494,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421495,"byte_end":9421573,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421574,"byte_end":9421616,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421617,"byte_end":9421620,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421621,"byte_end":9421648,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421649,"byte_end":9421697,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421698,"byte_end":9421776,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421777,"byte_end":9421780,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421781,"byte_end":9421796,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421797,"byte_end":9421800,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421801,"byte_end":9421819,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421820,"byte_end":9421847,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421848,"byte_end":9421871,"line_start":48,"line_end":48,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421872,"byte_end":9421875,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421876,"byte_end":9421894,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421895,"byte_end":9421916,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421917,"byte_end":9421961,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9421962,"byte_end":9422001,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422002,"byte_end":9422005,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422006,"byte_end":9422039,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422040,"byte_end":9422086,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422087,"byte_end":9422110,"line_start":57,"line_end":57,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422111,"byte_end":9422122,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422123,"byte_end":9422126,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422127,"byte_end":9422169,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422170,"byte_end":9422189,"line_start":61,"line_end":61,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422190,"byte_end":9422195,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422196,"byte_end":9422203,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422204,"byte_end":9422207,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422208,"byte_end":9422211,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422212,"byte_end":9422230,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422231,"byte_end":9422258,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422259,"byte_end":9422282,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422283,"byte_end":9422286,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422287,"byte_end":9422305,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422306,"byte_end":9422327,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422328,"byte_end":9422372,"line_start":72,"line_end":72,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422373,"byte_end":9422376,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422377,"byte_end":9422400,"line_start":74,"line_end":74,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422401,"byte_end":9422447,"line_start":75,"line_end":75,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422448,"byte_end":9422485,"line_start":76,"line_end":76,"column_start":1,"column_end":38}},{"value":"/             for _ in 0..10 {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422486,"byte_end":9422518,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422519,"byte_end":9422576,"line_start":78,"line_end":78,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422577,"byte_end":9422608,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{}\", lock);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422609,"byte_end":9422650,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422651,"byte_end":9422668,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422669,"byte_end":9422684,"line_start":82,"line_end":82,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422685,"byte_end":9422694,"line_start":83,"line_end":83,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422695,"byte_end":9422698,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422699,"byte_end":9422713,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422714,"byte_end":9422756,"line_start":86,"line_end":86,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422757,"byte_end":9422779,"line_start":87,"line_end":87,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422780,"byte_end":9422793,"line_start":88,"line_end":88,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422794,"byte_end":9422803,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422804,"byte_end":9422838,"line_start":90,"line_end":90,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422839,"byte_end":9422844,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422845,"byte_end":9422852,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422853,"byte_end":9422929,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9422930,"byte_end":9423003,"line_start":94,"line_end":94,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9423004,"byte_end":9423019,"line_start":95,"line_end":95,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9423020,"byte_end":9423095,"line_start":96,"line_end":96,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9423096,"byte_end":9423172,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9423173,"byte_end":9423225,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9423226,"byte_end":9423229,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9423230,"byte_end":9423308,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9423309,"byte_end":9423389,"line_start":101,"line_end":101,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9423390,"byte_end":9423466,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/ data. This is why the output of the program above is an in-order count to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9423467,"byte_end":9423544,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ 50. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9423545,"byte_end":9423623,"line_start":104,"line_end":104,"column_start":1,"column_end":79}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9423624,"byte_end":9423704,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9423705,"byte_end":9423785,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9423786,"byte_end":9423855,"line_start":107,"line_end":107,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9423856,"byte_end":9423859,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9423860,"byte_end":9423939,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9423940,"byte_end":9424019,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424020,"byte_end":9424098,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424099,"byte_end":9424160,"line_start":112,"line_end":112,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424161,"byte_end":9424164,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424165,"byte_end":9424192,"line_start":114,"line_end":114,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424193,"byte_end":9424230,"line_start":115,"line_end":115,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424231,"byte_end":9424265,"line_start":116,"line_end":116,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424266,"byte_end":9424315,"line_start":117,"line_end":117,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424316,"byte_end":9424353,"line_start":118,"line_end":118,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424354,"byte_end":9424386,"line_start":119,"line_end":119,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":6268},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424832,"byte_end":9424842,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":6271}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424471,"byte_end":9424502,"line_start":125,"line_end":125,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424503,"byte_end":9424506,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424507,"byte_end":9424586,"line_start":127,"line_end":127,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424587,"byte_end":9424662,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424663,"byte_end":9424696,"line_start":129,"line_end":129,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424697,"byte_end":9424700,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424701,"byte_end":9424779,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424780,"byte_end":9424820,"line_start":132,"line_end":132,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6272},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9425629,"byte_end":9425644,"line_start":152,"line_end":152,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":6274}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424887,"byte_end":9424925,"line_start":137,"line_end":137,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424926,"byte_end":9424929,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9424930,"byte_end":9425011,"line_start":139,"line_end":139,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9425012,"byte_end":9425092,"line_start":140,"line_end":140,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9425093,"byte_end":9425167,"line_start":141,"line_end":141,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9425168,"byte_end":9425229,"line_start":142,"line_end":142,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9425230,"byte_end":9425233,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9425234,"byte_end":9425313,"line_start":144,"line_end":144,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-couned pointer to the original","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9425314,"byte_end":9425392,"line_start":145,"line_end":145,"column_start":1,"column_end":79}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9425393,"byte_end":9425461,"line_start":146,"line_end":146,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9425462,"byte_end":9425465,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9425466,"byte_end":9425544,"line_start":148,"line_end":148,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9425545,"byte_end":9425585,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9425586,"byte_end":9425589,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9425590,"byte_end":9425617,"line_start":151,"line_end":151,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6966},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9426352,"byte_end":9426364,"line_start":170,"line_end":170,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`] function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9426144,"byte_end":9426201,"line_start":164,"line_end":164,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9426202,"byte_end":9426205,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ A `try_lock` operation can only fail if the mutex is already locked.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9426206,"byte_end":9426278,"line_start":166,"line_end":166,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9426279,"byte_end":9426282,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9426283,"byte_end":9426323,"line_start":168,"line_end":168,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6288},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427580,"byte_end":9427583,"line_start":214,"line_end":214,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427377,"byte_end":9427435,"line_start":205,"line_end":205,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427440,"byte_end":9427443,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427448,"byte_end":9427462,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427467,"byte_end":9427470,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427475,"byte_end":9427482,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427487,"byte_end":9427514,"line_start":210,"line_end":210,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427519,"byte_end":9427522,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427527,"byte_end":9427556,"line_start":212,"line_end":212,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427561,"byte_end":9427568,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6289},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428101,"byte_end":9428110,"line_start":235,"line_end":235,"column_start":18,"column_end":27},"name":"const_new","qualname":"<Mutex<T>>::const_new","value":"pub const fn const_new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427748,"byte_end":9427806,"line_start":224,"line_end":224,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427811,"byte_end":9427814,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427819,"byte_end":9427833,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427838,"byte_end":9427841,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427846,"byte_end":9427853,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427858,"byte_end":9427885,"line_start":229,"line_end":229,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427890,"byte_end":9427893,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ static LOCK: Mutex<i32> = Mutex::const_new(5);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427898,"byte_end":9427948,"line_start":231,"line_end":231,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427953,"byte_end":9427960,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"parking_lot\", not(all(loom, test)),))","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427965,"byte_end":9428024,"line_start":233,"line_end":233,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":6290},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428741,"byte_end":9428745,"line_start":262,"line_end":262,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428281,"byte_end":9428327,"line_start":245,"line_end":245,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428332,"byte_end":9428378,"line_start":246,"line_end":246,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428383,"byte_end":9428454,"line_start":247,"line_end":247,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428459,"byte_end":9428462,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428467,"byte_end":9428481,"line_start":249,"line_end":249,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428486,"byte_end":9428489,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428494,"byte_end":9428501,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428506,"byte_end":9428533,"line_start":252,"line_end":252,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428538,"byte_end":9428541,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428546,"byte_end":9428564,"line_start":254,"line_end":254,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428569,"byte_end":9428590,"line_start":255,"line_end":255,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428595,"byte_end":9428629,"line_start":256,"line_end":256,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428634,"byte_end":9428637,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428642,"byte_end":9428681,"line_start":258,"line_end":258,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428686,"byte_end":9428701,"line_start":259,"line_end":259,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428706,"byte_end":9428711,"line_start":260,"line_end":260,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428716,"byte_end":9428723,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6293},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429772,"byte_end":9429782,"line_start":293,"line_end":293,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428851,"byte_end":9428925,"line_start":267,"line_end":267,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9428930,"byte_end":9428997,"line_start":268,"line_end":268,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429002,"byte_end":9429026,"line_start":269,"line_end":269,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429031,"byte_end":9429034,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429039,"byte_end":9429112,"line_start":271,"line_end":271,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429117,"byte_end":9429190,"line_start":272,"line_end":272,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429195,"byte_end":9429266,"line_start":273,"line_end":273,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429271,"byte_end":9429346,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429351,"byte_end":9429393,"line_start":275,"line_end":275,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429398,"byte_end":9429401,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429406,"byte_end":9429420,"line_start":277,"line_end":277,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429425,"byte_end":9429428,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429433,"byte_end":9429440,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429445,"byte_end":9429472,"line_start":280,"line_end":280,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429477,"byte_end":9429500,"line_start":281,"line_end":281,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429505,"byte_end":9429508,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429513,"byte_end":9429531,"line_start":283,"line_end":283,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429536,"byte_end":9429557,"line_start":284,"line_end":284,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429562,"byte_end":9429606,"line_start":285,"line_end":285,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429611,"byte_end":9429614,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429619,"byte_end":9429672,"line_start":287,"line_end":287,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429677,"byte_end":9429692,"line_start":288,"line_end":288,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429697,"byte_end":9429702,"line_start":289,"line_end":289,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429707,"byte_end":9429714,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429719,"byte_end":9429722,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9429727,"byte_end":9429754,"line_start":292,"line_end":292,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6300},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430659,"byte_end":9430667,"line_start":323,"line_end":323,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430191,"byte_end":9430260,"line_start":306,"line_end":306,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430265,"byte_end":9430307,"line_start":307,"line_end":307,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430312,"byte_end":9430315,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430320,"byte_end":9430354,"line_start":309,"line_end":309,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430359,"byte_end":9430373,"line_start":310,"line_end":310,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430378,"byte_end":9430381,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430386,"byte_end":9430393,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430398,"byte_end":9430425,"line_start":313,"line_end":313,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430430,"byte_end":9430493,"line_start":314,"line_end":314,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430498,"byte_end":9430501,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430506,"byte_end":9430536,"line_start":316,"line_end":316,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430541,"byte_end":9430544,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430549,"byte_end":9430579,"line_start":318,"line_end":318,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430584,"byte_end":9430606,"line_start":319,"line_end":319,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430611,"byte_end":9430623,"line_start":320,"line_end":320,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430628,"byte_end":9430635,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430640,"byte_end":9430647,"line_start":322,"line_end":322,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6301},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431347,"byte_end":9431354,"line_start":347,"line_end":347,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430876,"byte_end":9430931,"line_start":330,"line_end":330,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430936,"byte_end":9430939,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9430944,"byte_end":9431019,"line_start":332,"line_end":332,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431024,"byte_end":9431098,"line_start":333,"line_end":333,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431103,"byte_end":9431106,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431111,"byte_end":9431125,"line_start":335,"line_end":335,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431130,"byte_end":9431133,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431138,"byte_end":9431145,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431150,"byte_end":9431177,"line_start":338,"line_end":338,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431182,"byte_end":9431185,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431190,"byte_end":9431205,"line_start":340,"line_end":340,"column_start":5,"column_end":20}},{"value":"/     let mut mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431210,"byte_end":9431248,"line_start":341,"line_end":341,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431253,"byte_end":9431256,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.get_mut();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431261,"byte_end":9431293,"line_start":343,"line_end":343,"column_start":5,"column_end":37}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431298,"byte_end":9431313,"line_start":344,"line_end":344,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431318,"byte_end":9431323,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431328,"byte_end":9431335,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6302},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432435,"byte_end":9432449,"line_start":378,"line_end":378,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431523,"byte_end":9431597,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431602,"byte_end":9431639,"line_start":355,"line_end":355,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431644,"byte_end":9431647,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431652,"byte_end":9431720,"line_start":357,"line_end":357,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431725,"byte_end":9431798,"line_start":358,"line_end":358,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431803,"byte_end":9431879,"line_start":359,"line_end":359,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431884,"byte_end":9431958,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9431963,"byte_end":9432011,"line_start":361,"line_end":361,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432016,"byte_end":9432019,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432024,"byte_end":9432058,"line_start":363,"line_end":363,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432063,"byte_end":9432090,"line_start":364,"line_end":364,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432095,"byte_end":9432109,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432114,"byte_end":9432117,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432122,"byte_end":9432129,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432134,"byte_end":9432161,"line_start":368,"line_end":368,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432166,"byte_end":9432189,"line_start":369,"line_end":369,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432194,"byte_end":9432257,"line_start":370,"line_end":370,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432262,"byte_end":9432265,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432270,"byte_end":9432310,"line_start":372,"line_end":372,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432315,"byte_end":9432318,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432323,"byte_end":9432367,"line_start":374,"line_end":374,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432372,"byte_end":9432394,"line_start":375,"line_end":375,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432399,"byte_end":9432411,"line_start":376,"line_end":376,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432416,"byte_end":9432423,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6303},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9433007,"byte_end":9433017,"line_start":399,"line_end":399,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432674,"byte_end":9432728,"line_start":385,"line_end":385,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432733,"byte_end":9432747,"line_start":386,"line_end":386,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432752,"byte_end":9432755,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432760,"byte_end":9432767,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432772,"byte_end":9432799,"line_start":389,"line_end":389,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432804,"byte_end":9432807,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432812,"byte_end":9432830,"line_start":391,"line_end":391,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432835,"byte_end":9432856,"line_start":392,"line_end":392,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432861,"byte_end":9432895,"line_start":393,"line_end":393,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432900,"byte_end":9432903,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432908,"byte_end":9432943,"line_start":395,"line_end":395,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432948,"byte_end":9432973,"line_start":396,"line_end":396,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432978,"byte_end":9432983,"line_start":397,"line_end":397,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9432988,"byte_end":9432995,"line_start":398,"line_end":398,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6971},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438921,"byte_end":9438927,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":6972},{"krate":0,"index":6973}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9436078,"byte_end":9436114,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9436115,"byte_end":9436118,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9436119,"byte_end":9436195,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9436196,"byte_end":9436276,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9436277,"byte_end":9436318,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9436319,"byte_end":9436322,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9436323,"byte_end":9436397,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify_one()`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9436398,"byte_end":9436483,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9436484,"byte_end":9436550,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9436551,"byte_end":9436554,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9436555,"byte_end":9436613,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9436614,"byte_end":9436694,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9436695,"byte_end":9436775,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify_one()`] sets the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9436776,"byte_end":9436859,"line_start":35,"line_end":35,"column_start":1,"column_end":84}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9436860,"byte_end":9436910,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9436911,"byte_end":9436914,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **before** `notified().await`, then the next call to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9436915,"byte_end":9436999,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437000,"byte_end":9437075,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437076,"byte_end":9437146,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437147,"byte_end":9437150,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437151,"byte_end":9437235,"line_start":42,"line_end":42,"column_start":1,"column_end":85}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437236,"byte_end":9437309,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437310,"byte_end":9437381,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437382,"byte_end":9437385,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437386,"byte_end":9437400,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437401,"byte_end":9437404,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437405,"byte_end":9437421,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437422,"byte_end":9437425,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437426,"byte_end":9437433,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437434,"byte_end":9437462,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437463,"byte_end":9437486,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437487,"byte_end":9437490,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437491,"byte_end":9437509,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437510,"byte_end":9437531,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437532,"byte_end":9437577,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437578,"byte_end":9437615,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437616,"byte_end":9437619,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437620,"byte_end":9437653,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437654,"byte_end":9437691,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437692,"byte_end":9437738,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437739,"byte_end":9437750,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437751,"byte_end":9437754,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437755,"byte_end":9437796,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"/     notify.notify_one();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437797,"byte_end":9437825,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437826,"byte_end":9437831,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437832,"byte_end":9437839,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437840,"byte_end":9437843,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437844,"byte_end":9437869,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437870,"byte_end":9437873,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437874,"byte_end":9437881,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437882,"byte_end":9437910,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437911,"byte_end":9437914,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437915,"byte_end":9437950,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437951,"byte_end":9437976,"line_start":75,"line_end":75,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437977,"byte_end":9437980,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9437981,"byte_end":9438004,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438005,"byte_end":9438040,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438041,"byte_end":9438064,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438065,"byte_end":9438070,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438071,"byte_end":9438074,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438075,"byte_end":9438099,"line_start":82,"line_end":82,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438100,"byte_end":9438138,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438139,"byte_end":9438178,"line_start":84,"line_end":84,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438179,"byte_end":9438213,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438214,"byte_end":9438217,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438218,"byte_end":9438273,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify_one();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438274,"byte_end":9438311,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438312,"byte_end":9438321,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438322,"byte_end":9438325,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438326,"byte_end":9438365,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438366,"byte_end":9438384,"line_start":92,"line_end":92,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438385,"byte_end":9438416,"line_start":93,"line_end":93,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438417,"byte_end":9438495,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438496,"byte_end":9438529,"line_start":95,"line_end":95,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438530,"byte_end":9438547,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438548,"byte_end":9438551,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438552,"byte_end":9438602,"line_start":98,"line_end":98,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438603,"byte_end":9438648,"line_start":99,"line_end":99,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438649,"byte_end":9438662,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438663,"byte_end":9438672,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438673,"byte_end":9438678,"line_start":102,"line_end":102,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438679,"byte_end":9438686,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438687,"byte_end":9438690,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438691,"byte_end":9438720,"line_start":105,"line_end":105,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438721,"byte_end":9438762,"line_start":106,"line_end":106,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438763,"byte_end":9438807,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/ [`notify_one()`]: Notify::notify_one()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438808,"byte_end":9438850,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9438851,"byte_end":9438892,"line_start":109,"line_end":109,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6993},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9439777,"byte_end":9439785,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"Notified","qualname":"::sync::notify::Notified","value":"Notified {  }","parent":null,"children":[{"krate":0,"index":6995},{"krate":0,"index":6996},{"krate":0,"index":6997}],"decl_id":null,"docs":" Future returned from `notified()`\n","sig":null,"attributes":[{"value":"/ Future returned from `notified()`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9439711,"byte_end":9439748,"line_start":143,"line_end":143,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6382},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441126,"byte_end":9441129,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9440922,"byte_end":9440978,"line_start":196,"line_end":196,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9440983,"byte_end":9440986,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9440991,"byte_end":9441005,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441010,"byte_end":9441013,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441018,"byte_end":9441025,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441030,"byte_end":9441058,"line_start":201,"line_end":201,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441063,"byte_end":9441066,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441071,"byte_end":9441102,"line_start":203,"line_end":203,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441107,"byte_end":9441114,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6383},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441623,"byte_end":9441632,"line_start":223,"line_end":223,"column_start":18,"column_end":27},"name":"const_new","qualname":"<Notify>::const_new","value":"pub const fn const_new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441274,"byte_end":9441330,"line_start":212,"line_end":212,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441335,"byte_end":9441338,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441343,"byte_end":9441357,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441362,"byte_end":9441365,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441370,"byte_end":9441377,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441382,"byte_end":9441410,"line_start":217,"line_end":217,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441415,"byte_end":9441418,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ static NOTIFY: Notify = Notify::const_new();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441423,"byte_end":9441471,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441476,"byte_end":9441483,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"parking_lot\", not(all(loom, test))))","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441488,"byte_end":9441546,"line_start":221,"line_end":221,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6384},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442830,"byte_end":9442838,"line_start":265,"line_end":265,"column_start":12,"column_end":20},"name":"notified","qualname":"<Notify>::notified","value":"pub fn notified(&Self) -> Notified","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441783,"byte_end":9441811,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441816,"byte_end":9441819,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441824,"byte_end":9441842,"line_start":232,"line_end":232,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441847,"byte_end":9441850,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441855,"byte_end":9441868,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/ async fn notified(&self);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441873,"byte_end":9441902,"line_start":235,"line_end":235,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441907,"byte_end":9441914,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441919,"byte_end":9441922,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9441927,"byte_end":9442003,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify_one()`], then `notified().await` will complete","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442008,"byte_end":9442086,"line_start":239,"line_end":239,"column_start":5,"column_end":83}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442091,"byte_end":9442166,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify_one()`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442171,"byte_end":9442244,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442249,"byte_end":9442252,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ [`notify_one()`]: Notify::notify_one","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442257,"byte_end":9442297,"line_start":243,"line_end":243,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442302,"byte_end":9442305,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442310,"byte_end":9442324,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442329,"byte_end":9442332,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442337,"byte_end":9442344,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442349,"byte_end":9442377,"line_start":248,"line_end":248,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442382,"byte_end":9442405,"line_start":249,"line_end":249,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442410,"byte_end":9442413,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442418,"byte_end":9442436,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442441,"byte_end":9442462,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442467,"byte_end":9442512,"line_start":253,"line_end":253,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442517,"byte_end":9442554,"line_start":254,"line_end":254,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442559,"byte_end":9442562,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442567,"byte_end":9442600,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442605,"byte_end":9442642,"line_start":257,"line_end":257,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442647,"byte_end":9442693,"line_start":258,"line_end":258,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442698,"byte_end":9442709,"line_start":259,"line_end":259,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442714,"byte_end":9442717,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442722,"byte_end":9442763,"line_start":261,"line_end":261,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442768,"byte_end":9442796,"line_start":262,"line_end":262,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442801,"byte_end":9442806,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9442811,"byte_end":9442818,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6385},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444534,"byte_end":9444544,"line_start":315,"line_end":315,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Notify>::notify_one","value":"pub fn notify_one(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9443363,"byte_end":9443390,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9443395,"byte_end":9443398,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9443403,"byte_end":9443474,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9443479,"byte_end":9443547,"line_start":284,"line_end":284,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9443552,"byte_end":9443628,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify_one()`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9443633,"byte_end":9443678,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9443683,"byte_end":9443686,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9443691,"byte_end":9443765,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ `notify_one` will result in a single permit being stored. The next call to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9443770,"byte_end":9443848,"line_start":289,"line_end":289,"column_start":5,"column_end":83}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9443853,"byte_end":9443925,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9443930,"byte_end":9443944,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9443949,"byte_end":9443952,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9443957,"byte_end":9444001,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444006,"byte_end":9444009,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444014,"byte_end":9444028,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444033,"byte_end":9444036,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444041,"byte_end":9444048,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444053,"byte_end":9444081,"line_start":298,"line_end":298,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444086,"byte_end":9444109,"line_start":299,"line_end":299,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444114,"byte_end":9444117,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444122,"byte_end":9444140,"line_start":301,"line_end":301,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444145,"byte_end":9444166,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444171,"byte_end":9444216,"line_start":303,"line_end":303,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444221,"byte_end":9444258,"line_start":304,"line_end":304,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444263,"byte_end":9444266,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444271,"byte_end":9444304,"line_start":306,"line_end":306,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444309,"byte_end":9444346,"line_start":307,"line_end":307,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444351,"byte_end":9444397,"line_start":308,"line_end":308,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444402,"byte_end":9444413,"line_start":309,"line_end":309,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444418,"byte_end":9444421,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444426,"byte_end":9444467,"line_start":311,"line_end":311,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444472,"byte_end":9444500,"line_start":312,"line_end":312,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444505,"byte_end":9444510,"line_start":313,"line_end":313,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9444515,"byte_end":9444522,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6386},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446877,"byte_end":9446891,"line_start":381,"line_end":381,"column_start":12,"column_end":26},"name":"notify_waiters","qualname":"<Notify>::notify_waiters","value":"pub fn notify_waiters(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies all waiting tasks","sig":null,"attributes":[{"value":"/ Notifies all waiting tasks","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9445787,"byte_end":9445817,"line_start":349,"line_end":349,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9445822,"byte_end":9445825,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Unlike with","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9445830,"byte_end":9445900,"line_start":351,"line_end":351,"column_start":5,"column_end":75}},{"value":"/ `notify()`, no permit is stored to be used by the next call to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9445905,"byte_end":9445971,"line_start":352,"line_end":352,"column_start":5,"column_end":71}},{"value":"/ [`notified().await`]. The purpose of this method is to notify all","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9445976,"byte_end":9446045,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ already registered waiters. Registering for notification is done by","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446050,"byte_end":9446121,"line_start":354,"line_end":354,"column_start":5,"column_end":76}},{"value":"/ acquiring an instance of the `Notified` future via calling `notified()`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446126,"byte_end":9446202,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446207,"byte_end":9446210,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446215,"byte_end":9446229,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446234,"byte_end":9446237,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446242,"byte_end":9446249,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446254,"byte_end":9446282,"line_start":360,"line_end":360,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446287,"byte_end":9446310,"line_start":361,"line_end":361,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446315,"byte_end":9446318,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446323,"byte_end":9446341,"line_start":363,"line_end":363,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446346,"byte_end":9446367,"line_start":364,"line_end":364,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446372,"byte_end":9446417,"line_start":365,"line_end":365,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446422,"byte_end":9446459,"line_start":366,"line_end":366,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446464,"byte_end":9446467,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/     let notified1 = notify.notified();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446472,"byte_end":9446514,"line_start":368,"line_end":368,"column_start":5,"column_end":47}},{"value":"/     let notified2 = notify.notified();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446519,"byte_end":9446561,"line_start":369,"line_end":369,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446566,"byte_end":9446569,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/     let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446574,"byte_end":9446620,"line_start":371,"line_end":371,"column_start":5,"column_end":51}},{"value":"/         println!(\"sending notifications\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446625,"byte_end":9446671,"line_start":372,"line_end":372,"column_start":5,"column_end":51}},{"value":"/         notify2.notify_waiters();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446676,"byte_end":9446713,"line_start":373,"line_end":373,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446718,"byte_end":9446729,"line_start":374,"line_end":374,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446734,"byte_end":9446737,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/     notified1.await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446742,"byte_end":9446766,"line_start":376,"line_end":376,"column_start":5,"column_end":29}},{"value":"/     notified2.await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446771,"byte_end":9446795,"line_start":377,"line_end":377,"column_start":5,"column_end":29}},{"value":"/     println!(\"received notifications\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446800,"byte_end":9446843,"line_start":378,"line_end":378,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446848,"byte_end":9446853,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9446858,"byte_end":9446865,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":6410},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":6411},{"krate":0,"index":6412},{"krate":0,"index":6413},{"krate":0,"index":6414},{"krate":0,"index":6415},{"krate":0,"index":6416},{"krate":0,"index":6417},{"krate":0,"index":6418},{"krate":0,"index":6419},{"krate":0,"index":6420},{"krate":0,"index":13975},{"krate":0,"index":6421},{"krate":0,"index":13977},{"krate":0,"index":6422},{"krate":0,"index":6423},{"krate":0,"index":13979},{"krate":0,"index":6424},{"krate":0,"index":13981},{"krate":0,"index":6425},{"krate":0,"index":6426},{"krate":0,"index":6427},{"krate":0,"index":6428},{"krate":0,"index":7011},{"krate":0,"index":7014},{"krate":0,"index":7017},{"krate":0,"index":7020},{"krate":0,"index":6429},{"krate":0,"index":6437},{"krate":0,"index":6438},{"krate":0,"index":7048},{"krate":0,"index":7052},{"krate":0,"index":7051},{"krate":0,"index":6444},{"krate":0,"index":6446},{"krate":0,"index":6459},{"krate":0,"index":6462},{"krate":0,"index":6466},{"krate":0,"index":6469},{"krate":0,"index":6473},{"krate":0,"index":6497},{"krate":0,"index":6499},{"krate":0,"index":6501},{"krate":0,"index":6505},{"krate":0,"index":6509},{"krate":0,"index":6510},{"krate":0,"index":6511},{"krate":0,"index":6512},{"krate":0,"index":6513},{"krate":0,"index":6527}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":23141,"byte_end":23165,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9461193,"byte_end":9461263,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":7011},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9461742,"byte_end":9461748,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":7013}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9461595,"byte_end":9461642,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9461643,"byte_end":9461646,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9461647,"byte_end":9461713,"line_start":19,"line_end":19,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":7017},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9461940,"byte_end":9461948,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":7019}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9461791,"byte_end":9461840,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9461841,"byte_end":9461844,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9461845,"byte_end":9461911,"line_start":27,"line_end":27,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":6429},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9461999,"byte_end":9462004,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":6430},{"krate":0,"index":7023},{"krate":0,"index":7033},{"krate":0,"index":7030},{"krate":0,"index":7031},{"krate":0,"index":7026},{"krate":0,"index":7027},{"krate":0,"index":7035},{"krate":0,"index":7046},{"krate":0,"index":7043},{"krate":0,"index":7044},{"krate":0,"index":7040},{"krate":0,"index":7041},{"krate":0,"index":6431},{"krate":0,"index":6433},{"krate":0,"index":6434},{"krate":0,"index":6436}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"/ Oneshot error types","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9462011,"byte_end":9462034,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":7023},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9462176,"byte_end":9462185,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9462059,"byte_end":9462124,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7036},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9462407,"byte_end":9462412,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":7035},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9462340,"byte_end":9462398,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7038},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9462501,"byte_end":9462507,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":7035},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9462423,"byte_end":9462492,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":7035},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9462317,"byte_end":9462329,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The send half of the channel has not yet sent a value.\n    Empty,\n\n    /// The send half of the channel was dropped without sending a value.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":7036},{"krate":0,"index":7038}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9462207,"byte_end":9462267,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":6444},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464504,"byte_end":9464511,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9463689,"byte_end":9463768,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9463769,"byte_end":9463779,"line_start":97,"line_end":97,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9463780,"byte_end":9463783,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9463784,"byte_end":9463860,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9463861,"byte_end":9463939,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9463940,"byte_end":9463986,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9463987,"byte_end":9463990,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9463991,"byte_end":9464037,"line_start":103,"line_end":103,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464038,"byte_end":9464041,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464042,"byte_end":9464056,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464057,"byte_end":9464060,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464061,"byte_end":9464068,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464069,"byte_end":9464098,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464099,"byte_end":9464102,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464103,"byte_end":9464121,"line_start":110,"line_end":110,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464122,"byte_end":9464143,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464144,"byte_end":9464186,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464187,"byte_end":9464190,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464191,"byte_end":9464224,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464225,"byte_end":9464265,"line_start":115,"line_end":115,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464266,"byte_end":9464315,"line_start":116,"line_end":116,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464316,"byte_end":9464329,"line_start":117,"line_end":117,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464330,"byte_end":9464341,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464342,"byte_end":9464345,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464346,"byte_end":9464370,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464371,"byte_end":9464418,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464419,"byte_end":9464472,"line_start":122,"line_end":122,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464473,"byte_end":9464482,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464483,"byte_end":9464488,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464489,"byte_end":9464496,"line_start":125,"line_end":125,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6448},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466522,"byte_end":9466526,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464951,"byte_end":9465026,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465031,"byte_end":9465047,"line_start":144,"line_end":144,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465052,"byte_end":9465055,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465060,"byte_end":9465139,"line_start":146,"line_end":146,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465144,"byte_end":9465219,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465224,"byte_end":9465300,"line_start":148,"line_end":148,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465305,"byte_end":9465377,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465382,"byte_end":9465395,"line_start":150,"line_end":150,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465400,"byte_end":9465403,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465408,"byte_end":9465484,"line_start":152,"line_end":152,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465489,"byte_end":9465565,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465570,"byte_end":9465642,"line_start":154,"line_end":154,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465647,"byte_end":9465720,"line_start":155,"line_end":155,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465725,"byte_end":9465799,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465804,"byte_end":9465876,"line_start":157,"line_end":157,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465881,"byte_end":9465918,"line_start":158,"line_end":158,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465923,"byte_end":9465926,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465931,"byte_end":9465945,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465950,"byte_end":9465953,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465958,"byte_end":9465990,"line_start":162,"line_end":162,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9465995,"byte_end":9465998,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466003,"byte_end":9466010,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466015,"byte_end":9466044,"line_start":165,"line_end":165,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466049,"byte_end":9466052,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466057,"byte_end":9466075,"line_start":167,"line_end":167,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466080,"byte_end":9466101,"line_start":168,"line_end":168,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466106,"byte_end":9466148,"line_start":169,"line_end":169,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466153,"byte_end":9466156,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466161,"byte_end":9466194,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466199,"byte_end":9466239,"line_start":172,"line_end":172,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466244,"byte_end":9466293,"line_start":173,"line_end":173,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466298,"byte_end":9466311,"line_start":174,"line_end":174,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466316,"byte_end":9466327,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466332,"byte_end":9466335,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466340,"byte_end":9466364,"line_start":177,"line_end":177,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466369,"byte_end":9466416,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466421,"byte_end":9466474,"line_start":179,"line_end":179,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466479,"byte_end":9466488,"line_start":180,"line_end":180,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466493,"byte_end":9466498,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466503,"byte_end":9466510,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6451},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468890,"byte_end":9468896,"line_start":266,"line_end":266,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466885,"byte_end":9466943,"line_start":199,"line_end":199,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466948,"byte_end":9466951,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9466956,"byte_end":9467030,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467035,"byte_end":9467069,"line_start":202,"line_end":202,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467074,"byte_end":9467077,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467082,"byte_end":9467147,"line_start":204,"line_end":204,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467152,"byte_end":9467224,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467229,"byte_end":9467232,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467237,"byte_end":9467249,"line_start":207,"line_end":207,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467254,"byte_end":9467257,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467262,"byte_end":9467310,"line_start":209,"line_end":209,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467315,"byte_end":9467318,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467323,"byte_end":9467349,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467354,"byte_end":9467384,"line_start":212,"line_end":212,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467389,"byte_end":9467392,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467397,"byte_end":9467411,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467416,"byte_end":9467419,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467424,"byte_end":9467439,"line_start":216,"line_end":216,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467444,"byte_end":9467447,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467452,"byte_end":9467459,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467464,"byte_end":9467493,"line_start":219,"line_end":219,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467498,"byte_end":9467501,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467506,"byte_end":9467524,"line_start":221,"line_end":221,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467529,"byte_end":9467550,"line_start":222,"line_end":222,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467555,"byte_end":9467607,"line_start":223,"line_end":223,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467612,"byte_end":9467615,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467620,"byte_end":9467653,"line_start":225,"line_end":225,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467658,"byte_end":9467679,"line_start":226,"line_end":226,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467684,"byte_end":9467695,"line_start":227,"line_end":227,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467700,"byte_end":9467703,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467708,"byte_end":9467734,"line_start":229,"line_end":229,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467739,"byte_end":9467780,"line_start":230,"line_end":230,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467785,"byte_end":9467790,"line_start":231,"line_end":231,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467795,"byte_end":9467802,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467807,"byte_end":9467810,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467815,"byte_end":9467837,"line_start":234,"line_end":234,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467842,"byte_end":9467845,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467850,"byte_end":9467857,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467862,"byte_end":9467891,"line_start":237,"line_end":237,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467896,"byte_end":9467934,"line_start":238,"line_end":238,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467939,"byte_end":9467942,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467947,"byte_end":9467981,"line_start":240,"line_end":240,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9467986,"byte_end":9468037,"line_start":241,"line_end":241,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468042,"byte_end":9468067,"line_start":242,"line_end":242,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468072,"byte_end":9468077,"line_start":243,"line_end":243,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468082,"byte_end":9468085,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468090,"byte_end":9468108,"line_start":245,"line_end":245,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468113,"byte_end":9468134,"line_start":246,"line_end":246,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468139,"byte_end":9468185,"line_start":247,"line_end":247,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468190,"byte_end":9468193,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468198,"byte_end":9468231,"line_start":249,"line_end":249,"column_start":5,"column_end":38}},{"value":"/         tokio::select! {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468236,"byte_end":9468264,"line_start":250,"line_end":250,"column_start":5,"column_end":33}},{"value":"/             _ = tx.closed() => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468269,"byte_end":9468305,"line_start":251,"line_end":251,"column_start":5,"column_end":41}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468310,"byte_end":9468385,"line_start":252,"line_end":252,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468390,"byte_end":9468407,"line_start":253,"line_end":253,"column_start":5,"column_end":22}},{"value":"/             value = compute() => {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468412,"byte_end":9468450,"line_start":254,"line_end":254,"column_start":5,"column_end":43}},{"value":"/                 // The send can fail if the channel was closed at the exact same","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468455,"byte_end":9468539,"line_start":255,"line_end":255,"column_start":5,"column_end":89}},{"value":"/                 // time as when compute() finished, so just ignore the failure.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468544,"byte_end":9468627,"line_start":256,"line_end":256,"column_start":5,"column_end":88}},{"value":"/                 let _ = tx.send(value);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468632,"byte_end":9468675,"line_start":257,"line_end":257,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468680,"byte_end":9468697,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468702,"byte_end":9468715,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468720,"byte_end":9468731,"line_start":260,"line_end":260,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468736,"byte_end":9468739,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468744,"byte_end":9468780,"line_start":262,"line_end":262,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468785,"byte_end":9468850,"line_start":263,"line_end":263,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468855,"byte_end":9468860,"line_start":264,"line_end":264,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9468865,"byte_end":9468872,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6456},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469766,"byte_end":9469775,"line_start":299,"line_end":299,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469007,"byte_end":9469081,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469086,"byte_end":9469089,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469094,"byte_end":9469168,"line_start":274,"line_end":274,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469173,"byte_end":9469207,"line_start":275,"line_end":275,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469212,"byte_end":9469215,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469220,"byte_end":9469295,"line_start":277,"line_end":277,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469300,"byte_end":9469303,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469308,"byte_end":9469334,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469339,"byte_end":9469369,"line_start":280,"line_end":280,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469374,"byte_end":9469377,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469382,"byte_end":9469396,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469401,"byte_end":9469404,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469409,"byte_end":9469416,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469421,"byte_end":9469450,"line_start":285,"line_end":285,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469455,"byte_end":9469458,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469463,"byte_end":9469481,"line_start":287,"line_end":287,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469486,"byte_end":9469507,"line_start":288,"line_end":288,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469512,"byte_end":9469554,"line_start":289,"line_end":289,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469559,"byte_end":9469562,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469567,"byte_end":9469600,"line_start":291,"line_end":291,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469605,"byte_end":9469608,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469613,"byte_end":9469630,"line_start":293,"line_end":293,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469635,"byte_end":9469638,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469643,"byte_end":9469675,"line_start":295,"line_end":295,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469680,"byte_end":9469732,"line_start":296,"line_end":296,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469737,"byte_end":9469742,"line_start":297,"line_end":297,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469747,"byte_end":9469754,"line_start":298,"line_end":298,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6457},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9471221,"byte_end":9471232,"line_start":346,"line_end":346,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Check whether the oneshot channel has been closed, and if not, schedules the\n `Waker` in the provided `Context` to receive a notification when the channel is\n closed.","sig":null,"attributes":[{"value":"/ Check whether the oneshot channel has been closed, and if not, schedules the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9469937,"byte_end":9470017,"line_start":306,"line_end":306,"column_start":5,"column_end":85}},{"value":"/ `Waker` in the provided `Context` to receive a notification when the channel is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470022,"byte_end":9470105,"line_start":307,"line_end":307,"column_start":5,"column_end":88}},{"value":"/ closed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470110,"byte_end":9470121,"line_start":308,"line_end":308,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470126,"byte_end":9470129,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly, or when the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470134,"byte_end":9470214,"line_start":310,"line_end":310,"column_start":5,"column_end":85}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470219,"byte_end":9470253,"line_start":311,"line_end":311,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470258,"byte_end":9470261,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to poll, only the `Waker` from the `Context` passed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470266,"byte_end":9470349,"line_start":313,"line_end":313,"column_start":5,"column_end":88}},{"value":"/ to the most recent call will be scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470354,"byte_end":9470420,"line_start":314,"line_end":314,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470425,"byte_end":9470428,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: struct@crate::sync::oneshot::Receiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470433,"byte_end":9470488,"line_start":316,"line_end":316,"column_start":5,"column_end":60}},{"value":"/ [`close`]: fn@crate::sync::oneshot::Receiver::close","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470493,"byte_end":9470548,"line_start":317,"line_end":317,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470553,"byte_end":9470556,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470561,"byte_end":9470579,"line_start":319,"line_end":319,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470584,"byte_end":9470587,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470592,"byte_end":9470618,"line_start":321,"line_end":321,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470623,"byte_end":9470626,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the channel is still open.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470631,"byte_end":9470683,"line_start":323,"line_end":323,"column_start":5,"column_end":57}},{"value":"/  * `Poll::Ready(())` if the channel is closed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470688,"byte_end":9470738,"line_start":324,"line_end":324,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470743,"byte_end":9470746,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470751,"byte_end":9470765,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470770,"byte_end":9470773,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470778,"byte_end":9470785,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470790,"byte_end":9470819,"line_start":329,"line_end":329,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470824,"byte_end":9470827,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470832,"byte_end":9470865,"line_start":331,"line_end":331,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470870,"byte_end":9470873,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470878,"byte_end":9470896,"line_start":333,"line_end":333,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470901,"byte_end":9470922,"line_start":334,"line_end":334,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470927,"byte_end":9470983,"line_start":335,"line_end":335,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470988,"byte_end":9470991,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9470996,"byte_end":9471029,"line_start":337,"line_end":337,"column_start":5,"column_end":38}},{"value":"/         rx.close();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9471034,"byte_end":9471057,"line_start":338,"line_end":338,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9471062,"byte_end":9471073,"line_start":339,"line_end":339,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9471078,"byte_end":9471081,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| tx.poll_closed(cx)).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9471086,"byte_end":9471133,"line_start":341,"line_end":341,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9471138,"byte_end":9471141,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9471146,"byte_end":9471187,"line_start":343,"line_end":343,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9471192,"byte_end":9471197,"line_start":344,"line_end":344,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9471202,"byte_end":9471209,"line_start":345,"line_end":345,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6464},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474405,"byte_end":9474410,"line_start":460,"line_end":460,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9472767,"byte_end":9472834,"line_start":404,"line_end":404,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9472839,"byte_end":9472842,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9472847,"byte_end":9472921,"line_start":406,"line_end":406,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9472926,"byte_end":9472994,"line_start":407,"line_end":407,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9472999,"byte_end":9473065,"line_start":408,"line_end":408,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473070,"byte_end":9473084,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473089,"byte_end":9473092,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473097,"byte_end":9473173,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473178,"byte_end":9473241,"line_start":412,"line_end":412,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473246,"byte_end":9473249,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473254,"byte_end":9473276,"line_start":414,"line_end":414,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473281,"byte_end":9473317,"line_start":415,"line_end":415,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473322,"byte_end":9473325,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473330,"byte_end":9473344,"line_start":417,"line_end":417,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473349,"byte_end":9473352,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473357,"byte_end":9473392,"line_start":419,"line_end":419,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473397,"byte_end":9473400,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473405,"byte_end":9473412,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473417,"byte_end":9473446,"line_start":422,"line_end":422,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473451,"byte_end":9473501,"line_start":423,"line_end":423,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473506,"byte_end":9473509,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473514,"byte_end":9473532,"line_start":425,"line_end":425,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473537,"byte_end":9473558,"line_start":426,"line_end":426,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473563,"byte_end":9473609,"line_start":427,"line_end":427,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473614,"byte_end":9473617,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473622,"byte_end":9473655,"line_start":429,"line_end":429,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473660,"byte_end":9473663,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473668,"byte_end":9473687,"line_start":431,"line_end":431,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473692,"byte_end":9473695,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473700,"byte_end":9473732,"line_start":433,"line_end":433,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473737,"byte_end":9473789,"line_start":434,"line_end":434,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473794,"byte_end":9473797,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473802,"byte_end":9473831,"line_start":436,"line_end":436,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473836,"byte_end":9473879,"line_start":437,"line_end":437,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473884,"byte_end":9473916,"line_start":438,"line_end":438,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473921,"byte_end":9473930,"line_start":439,"line_end":439,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473935,"byte_end":9473940,"line_start":440,"line_end":440,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473945,"byte_end":9473952,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473957,"byte_end":9473960,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9473965,"byte_end":9474016,"line_start":443,"line_end":443,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474021,"byte_end":9474024,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474029,"byte_end":9474036,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474041,"byte_end":9474070,"line_start":446,"line_end":446,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474075,"byte_end":9474078,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474083,"byte_end":9474101,"line_start":448,"line_end":448,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474106,"byte_end":9474127,"line_start":449,"line_end":449,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474132,"byte_end":9474178,"line_start":450,"line_end":450,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474183,"byte_end":9474186,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474191,"byte_end":9474240,"line_start":452,"line_end":452,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474245,"byte_end":9474248,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474253,"byte_end":9474272,"line_start":454,"line_end":454,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474277,"byte_end":9474280,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474285,"byte_end":9474326,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474331,"byte_end":9474371,"line_start":457,"line_end":457,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474376,"byte_end":9474381,"line_start":458,"line_end":458,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474386,"byte_end":9474393,"line_start":459,"line_end":459,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6465},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9476393,"byte_end":9476401,"line_start":528,"line_end":528,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474508,"byte_end":9474540,"line_start":465,"line_end":465,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474545,"byte_end":9474548,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474553,"byte_end":9474626,"line_start":467,"line_end":467,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474631,"byte_end":9474697,"line_start":468,"line_end":468,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474702,"byte_end":9474726,"line_start":469,"line_end":469,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474731,"byte_end":9474734,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474739,"byte_end":9474805,"line_start":471,"line_end":471,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474810,"byte_end":9474832,"line_start":472,"line_end":472,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474837,"byte_end":9474840,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474845,"byte_end":9474857,"line_start":474,"line_end":474,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474862,"byte_end":9474865,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474870,"byte_end":9474921,"line_start":476,"line_end":476,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474926,"byte_end":9474989,"line_start":477,"line_end":477,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9474994,"byte_end":9475069,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475074,"byte_end":9475088,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475093,"byte_end":9475096,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475101,"byte_end":9475115,"line_start":481,"line_end":481,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475120,"byte_end":9475123,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475128,"byte_end":9475178,"line_start":483,"line_end":483,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475183,"byte_end":9475186,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475191,"byte_end":9475198,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475203,"byte_end":9475232,"line_start":486,"line_end":486,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475237,"byte_end":9475287,"line_start":487,"line_end":487,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475292,"byte_end":9475295,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475300,"byte_end":9475318,"line_start":489,"line_end":489,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475323,"byte_end":9475344,"line_start":490,"line_end":490,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475349,"byte_end":9475395,"line_start":491,"line_end":491,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475400,"byte_end":9475403,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475408,"byte_end":9475437,"line_start":493,"line_end":493,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475442,"byte_end":9475487,"line_start":494,"line_end":494,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475492,"byte_end":9475534,"line_start":495,"line_end":495,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475539,"byte_end":9475571,"line_start":496,"line_end":496,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475576,"byte_end":9475585,"line_start":497,"line_end":497,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475590,"byte_end":9475593,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475598,"byte_end":9475621,"line_start":499,"line_end":499,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475626,"byte_end":9475660,"line_start":500,"line_end":500,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475665,"byte_end":9475668,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475673,"byte_end":9475702,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475707,"byte_end":9475759,"line_start":503,"line_end":503,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475764,"byte_end":9475796,"line_start":504,"line_end":504,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475801,"byte_end":9475810,"line_start":505,"line_end":505,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475815,"byte_end":9475820,"line_start":506,"line_end":506,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475825,"byte_end":9475832,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475837,"byte_end":9475840,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475845,"byte_end":9475906,"line_start":509,"line_end":509,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475911,"byte_end":9475914,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475919,"byte_end":9475926,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475931,"byte_end":9475960,"line_start":512,"line_end":512,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9475965,"byte_end":9476015,"line_start":513,"line_end":513,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9476020,"byte_end":9476023,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9476028,"byte_end":9476046,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9476051,"byte_end":9476072,"line_start":516,"line_end":516,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9476077,"byte_end":9476129,"line_start":517,"line_end":517,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9476134,"byte_end":9476137,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9476142,"byte_end":9476159,"line_start":519,"line_end":519,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9476164,"byte_end":9476167,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9476172,"byte_end":9476201,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9476206,"byte_end":9476260,"line_start":522,"line_end":522,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9476265,"byte_end":9476308,"line_start":523,"line_end":523,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9476313,"byte_end":9476345,"line_start":524,"line_end":524,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9476350,"byte_end":9476359,"line_start":525,"line_end":525,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9476364,"byte_end":9476369,"line_start":526,"line_end":526,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9476374,"byte_end":9476381,"line_start":527,"line_end":527,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7055},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9487157,"byte_end":9487163,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::batch_semaphore::TryAcquireError::Closed","value":"TryAcquireError::Closed","parent":{"krate":0,"index":7054},"children":[],"decl_id":null,"docs":" The semaphore has been [closed] and cannot issue new permits.","sig":null,"attributes":[{"value":"/ The semaphore has been [closed] and cannot issue new permits.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9487031,"byte_end":9487096,"line_start":49,"line_end":49,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9487101,"byte_end":9487104,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9487109,"byte_end":9487152,"line_start":51,"line_end":51,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7057},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9487218,"byte_end":9487227,"line_start":55,"line_end":55,"column_start":5,"column_end":14},"name":"NoPermits","qualname":"::sync::batch_semaphore::TryAcquireError::NoPermits","value":"TryAcquireError::NoPermits","parent":{"krate":0,"index":7054},"children":[],"decl_id":null,"docs":" The semaphore has no available permits.\n","sig":null,"attributes":[{"value":"/ The semaphore has no available permits.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9487170,"byte_end":9487213,"line_start":54,"line_end":54,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":7054},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9487009,"byte_end":9487024,"line_start":48,"line_end":48,"column_start":10,"column_end":25},"name":"TryAcquireError","qualname":"::sync::batch_semaphore::TryAcquireError","value":"pub enum TryAcquireError {\n\n    /// The semaphore has been [closed] and cannot issue new permits.\n    ///\n    /// [closed]: crate::sync::Semaphore::close\n    Closed,\n\n    /// The semaphore has no available permits.\n    NoPermits,\n}","parent":null,"children":[{"krate":0,"index":7055},{"krate":0,"index":7057}],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9486835,"byte_end":9486899,"line_start":44,"line_end":44,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9486900,"byte_end":9486903,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: crate::sync::Semaphore::try_acquire","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9486904,"byte_end":9486971,"line_start":46,"line_end":46,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7064},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9487513,"byte_end":9487525,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"AcquireError","qualname":"::sync::batch_semaphore::AcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::acquire`] function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9487231,"byte_end":9487291,"line_start":57,"line_end":57,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9487292,"byte_end":9487295,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ An `acquire` operation can only fail if the semaphore has been","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9487296,"byte_end":9487362,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"/ [closed].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9487363,"byte_end":9487376,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9487377,"byte_end":9487380,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9487381,"byte_end":9487424,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ [`Semaphore::acquire`]: crate::sync::Semaphore::acquire","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9487425,"byte_end":9487484,"line_start":63,"line_end":63,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":7069},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9506574,"byte_end":9506583,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":7070}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit acquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit acquisition.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9505922,"byte_end":9505988,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9505989,"byte_end":9505992,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9505993,"byte_end":9506068,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9506069,"byte_end":9506145,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9506146,"byte_end":9506226,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9506227,"byte_end":9506236,"line_start":10,"line_end":10,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9506237,"byte_end":9506240,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9506241,"byte_end":9506314,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9506315,"byte_end":9506394,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9506395,"byte_end":9506473,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9506474,"byte_end":9506545,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":7073},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9506832,"byte_end":9506847,"line_start":29,"line_end":29,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":7075},{"krate":0,"index":7076}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9506648,"byte_end":9506680,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9506681,"byte_end":9506684,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9506685,"byte_end":9506736,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9506737,"byte_end":9506740,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9506741,"byte_end":9506791,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9506792,"byte_end":9506803,"line_start":27,"line_end":27,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7080},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9507108,"byte_end":9507128,"line_start":41,"line_end":41,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":7081},{"krate":0,"index":7082}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9506899,"byte_end":9506938,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9506939,"byte_end":9506942,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9506943,"byte_end":9507000,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9507001,"byte_end":9507004,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9507005,"byte_end":9507067,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9507068,"byte_end":9507079,"line_start":39,"line_end":39,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6632},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9507724,"byte_end":9507727,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9507649,"byte_end":9507712,"line_start":62,"line_end":62,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6633},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9508042,"byte_end":9508051,"line_start":72,"line_end":72,"column_start":18,"column_end":27},"name":"const_new","qualname":"<Semaphore>::const_new","value":"pub const fn const_new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9507839,"byte_end":9507902,"line_start":69,"line_end":69,"column_start":5,"column_end":68}},{"value":"cfg(all(feature = \"parking_lot\", not(all(loom, test))))","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9507907,"byte_end":9507965,"line_start":70,"line_end":70,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6634},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9508233,"byte_end":9508250,"line_start":79,"line_end":79,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9508169,"byte_end":9508221,"line_start":78,"line_end":78,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6635},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9508497,"byte_end":9508508,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9508320,"byte_end":9508362,"line_start":83,"line_end":83,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9508367,"byte_end":9508370,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9508375,"byte_end":9508485,"line_start":85,"line_end":85,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":6636},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9508928,"byte_end":9508935,"line_start":98,"line_end":98,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9508571,"byte_end":9508612,"line_start":90,"line_end":90,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9508617,"byte_end":9508620,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9508625,"byte_end":9508696,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9508701,"byte_end":9508767,"line_start":93,"line_end":93,"column_start":5,"column_end":71}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9508772,"byte_end":9508792,"line_start":94,"line_end":94,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9508797,"byte_end":9508800,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9508805,"byte_end":9508852,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9508857,"byte_end":9508910,"line_start":97,"line_end":97,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6639},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9509489,"byte_end":9509501,"line_start":114,"line_end":114,"column_start":18,"column_end":30},"name":"acquire_many","qualname":"<Semaphore>::acquire_many","value":"pub async fn acquire_many<'_, '_>(&'_ Self, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9509128,"byte_end":9509172,"line_start":106,"line_end":106,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9509177,"byte_end":9509180,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9509185,"byte_end":9509256,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9509261,"byte_end":9509327,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ acquired permits.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9509332,"byte_end":9509353,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9509358,"byte_end":9509361,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9509366,"byte_end":9509413,"line_start":112,"line_end":112,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9509418,"byte_end":9509471,"line_start":113,"line_end":113,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6642},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9510240,"byte_end":9510251,"line_start":131,"line_end":131,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9509702,"byte_end":9509751,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9509756,"byte_end":9509759,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9509764,"byte_end":9509844,"line_start":124,"line_end":124,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9509849,"byte_end":9509930,"line_start":125,"line_end":125,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9509935,"byte_end":9510008,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9510013,"byte_end":9510016,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9510021,"byte_end":9510090,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9510095,"byte_end":9510170,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9510175,"byte_end":9510228,"line_start":130,"line_end":130,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6643},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9511055,"byte_end":9511071,"line_start":150,"line_end":150,"column_start":12,"column_end":28},"name":"try_acquire_many","qualname":"<Semaphore>::try_acquire_many","value":"pub fn try_acquire_many(&Self, u32)\n-> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire n permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire n permits from the semaphore.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9510516,"byte_end":9510566,"line_start":141,"line_end":141,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9510571,"byte_end":9510574,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9510579,"byte_end":9510659,"line_start":143,"line_end":143,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9510664,"byte_end":9510745,"line_start":144,"line_end":144,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9510750,"byte_end":9510823,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9510828,"byte_end":9510831,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9510836,"byte_end":9510905,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9510910,"byte_end":9510985,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9510990,"byte_end":9511043,"line_start":149,"line_end":149,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6644},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9511821,"byte_end":9511834,"line_start":170,"line_end":170,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9511344,"byte_end":9511385,"line_start":160,"line_end":160,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9511390,"byte_end":9511393,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9511398,"byte_end":9511466,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9511471,"byte_end":9511542,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9511547,"byte_end":9511618,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9511623,"byte_end":9511643,"line_start":165,"line_end":165,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9511648,"byte_end":9511651,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9511656,"byte_end":9511683,"line_start":167,"line_end":167,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9511688,"byte_end":9511735,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9511740,"byte_end":9511803,"line_start":169,"line_end":169,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6647},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9512707,"byte_end":9512724,"line_start":190,"line_end":190,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9512042,"byte_end":9512091,"line_start":178,"line_end":178,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9512096,"byte_end":9512099,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9512104,"byte_end":9512175,"line_start":180,"line_end":180,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9512180,"byte_end":9512257,"line_start":181,"line_end":181,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9512262,"byte_end":9512332,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9512337,"byte_end":9512408,"line_start":183,"line_end":183,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9512413,"byte_end":9512433,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9512438,"byte_end":9512441,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9512446,"byte_end":9512473,"line_start":186,"line_end":186,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9512478,"byte_end":9512547,"line_start":187,"line_end":187,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9512552,"byte_end":9512627,"line_start":188,"line_end":188,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9512632,"byte_end":9512695,"line_start":189,"line_end":189,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6648},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513918,"byte_end":9513923,"line_start":229,"line_end":229,"column_start":12,"column_end":17},"name":"close","qualname":"<Semaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513005,"byte_end":9513030,"line_start":200,"line_end":200,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513035,"byte_end":9513038,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This prevents the semaphore from issuing new permits and notifies all pending waiters.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513043,"byte_end":9513133,"line_start":202,"line_end":202,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513138,"byte_end":9513141,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513146,"byte_end":9513160,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513165,"byte_end":9513168,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513173,"byte_end":9513180,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513185,"byte_end":9513216,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513221,"byte_end":9513244,"line_start":208,"line_end":208,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::TryAcquireError;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513249,"byte_end":9513286,"line_start":209,"line_end":209,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513291,"byte_end":9513294,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513299,"byte_end":9513317,"line_start":211,"line_end":211,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513322,"byte_end":9513343,"line_start":212,"line_end":212,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(1));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513348,"byte_end":9513400,"line_start":213,"line_end":213,"column_start":5,"column_end":57}},{"value":"/     let semaphore2 = semaphore.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513405,"byte_end":9513448,"line_start":214,"line_end":214,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513453,"byte_end":9513456,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513461,"byte_end":9513494,"line_start":216,"line_end":216,"column_start":5,"column_end":38}},{"value":"/         let permit = semaphore.acquire_many(2).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513499,"byte_end":9513556,"line_start":217,"line_end":217,"column_start":5,"column_end":62}},{"value":"/         assert!(permit.is_err());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513561,"byte_end":9513598,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/         println!(\"waiter received error\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513603,"byte_end":9513649,"line_start":219,"line_end":219,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513654,"byte_end":9513665,"line_start":220,"line_end":220,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513670,"byte_end":9513673,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/     println!(\"closing semaphore\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513678,"byte_end":9513716,"line_start":222,"line_end":222,"column_start":5,"column_end":43}},{"value":"/     semaphore2.close();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513721,"byte_end":9513748,"line_start":223,"line_end":223,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513753,"byte_end":9513756,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/     // Cannot obtain more permits","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513761,"byte_end":9513798,"line_start":225,"line_end":225,"column_start":5,"column_end":42}},{"value":"/     assert_eq!(semaphore2.try_acquire().err(), Some(TryAcquireError::Closed))","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513803,"byte_end":9513884,"line_start":226,"line_end":226,"column_start":5,"column_end":86}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513889,"byte_end":9513894,"line_start":227,"line_end":227,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513899,"byte_end":9513906,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6651},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9514181,"byte_end":9514187,"line_start":238,"line_end":238,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9514006,"byte_end":9514076,"line_start":235,"line_end":235,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9514081,"byte_end":9514150,"line_start":236,"line_end":236,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9514155,"byte_end":9514169,"line_start":237,"line_end":237,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":6653},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9514442,"byte_end":9514448,"line_start":247,"line_end":247,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9514267,"byte_end":9514337,"line_start":244,"line_end":244,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9514342,"byte_end":9514411,"line_start":245,"line_end":245,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9514416,"byte_end":9514430,"line_start":246,"line_end":246,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":7085},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517501,"byte_end":9517507,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":7087},{"krate":0,"index":7088}],"decl_id":null,"docs":" An asynchronous reader-writer lock.","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9514970,"byte_end":9515009,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9515010,"byte_end":9515013,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9515014,"byte_end":9515091,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9515092,"byte_end":9515171,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9515172,"byte_end":9515251,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9515252,"byte_end":9515310,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9515311,"byte_end":9515314,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9515315,"byte_end":9515393,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9515394,"byte_end":9515472,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9515473,"byte_end":9515551,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9515552,"byte_end":9515617,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9515618,"byte_end":9515621,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9515622,"byte_end":9515686,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9515687,"byte_end":9515759,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9515760,"byte_end":9515840,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9515841,"byte_end":9515921,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9515922,"byte_end":9516002,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516003,"byte_end":9516072,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516073,"byte_end":9516143,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516144,"byte_end":9516182,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516183,"byte_end":9516186,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516187,"byte_end":9516264,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516265,"byte_end":9516350,"line_start":36,"line_end":36,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516351,"byte_end":9516431,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516432,"byte_end":9516479,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516480,"byte_end":9516552,"line_start":39,"line_end":39,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516553,"byte_end":9516556,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516557,"byte_end":9516571,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516572,"byte_end":9516575,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516576,"byte_end":9516583,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516584,"byte_end":9516612,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516613,"byte_end":9516616,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516617,"byte_end":9516635,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516636,"byte_end":9516657,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516658,"byte_end":9516692,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516693,"byte_end":9516696,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516697,"byte_end":9516745,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516746,"byte_end":9516755,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516756,"byte_end":9516795,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516796,"byte_end":9516835,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516836,"byte_end":9516867,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516868,"byte_end":9516899,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516900,"byte_end":9516949,"line_start":56,"line_end":56,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516950,"byte_end":9516953,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9516954,"byte_end":9517005,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517006,"byte_end":9517015,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517016,"byte_end":9517059,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517060,"byte_end":9517080,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517081,"byte_end":9517111,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517112,"byte_end":9517151,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517152,"byte_end":9517157,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517158,"byte_end":9517165,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517166,"byte_end":9517169,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517170,"byte_end":9517204,"line_start":67,"line_end":67,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517205,"byte_end":9517234,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517235,"byte_end":9517282,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517283,"byte_end":9517332,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517333,"byte_end":9517370,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517371,"byte_end":9517472,"line_start":72,"line_end":72,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":6671},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517882,"byte_end":9517897,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":6674},{"krate":0,"index":6675},{"krate":0,"index":6676}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517641,"byte_end":9517713,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517714,"byte_end":9517726,"line_start":83,"line_end":83,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517727,"byte_end":9517730,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517731,"byte_end":9517786,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517787,"byte_end":9517802,"line_start":86,"line_end":86,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517803,"byte_end":9517806,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@RwLock::read","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517807,"byte_end":9517840,"line_start":88,"line_end":88,"column_start":1,"column_end":34}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9517841,"byte_end":9517870,"line_start":89,"line_end":89,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6680},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9519215,"byte_end":9519218,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockReadGuard where F: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518041,"byte_end":9518109,"line_start":97,"line_end":97,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518114,"byte_end":9518117,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518122,"byte_end":9518195,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518200,"byte_end":9518220,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518225,"byte_end":9518228,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518233,"byte_end":9518284,"line_start":102,"line_end":102,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518289,"byte_end":9518359,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518364,"byte_end":9518428,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518433,"byte_end":9518436,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518441,"byte_end":9518513,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518518,"byte_end":9518544,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518549,"byte_end":9518552,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518557,"byte_end":9518666,"line_start":109,"line_end":109,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518671,"byte_end":9518734,"line_start":110,"line_end":110,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518739,"byte_end":9518742,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518747,"byte_end":9518761,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518766,"byte_end":9518769,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518774,"byte_end":9518781,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518786,"byte_end":9518833,"line_start":115,"line_end":115,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518838,"byte_end":9518841,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518846,"byte_end":9518894,"line_start":117,"line_end":117,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518899,"byte_end":9518919,"line_start":118,"line_end":118,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518924,"byte_end":9518927,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518932,"byte_end":9518952,"line_start":120,"line_end":120,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518957,"byte_end":9518980,"line_start":121,"line_end":121,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518985,"byte_end":9519020,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9519025,"byte_end":9519028,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9519033,"byte_end":9519067,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9519072,"byte_end":9519126,"line_start":125,"line_end":125,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9519131,"byte_end":9519134,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9519139,"byte_end":9519165,"line_start":127,"line_end":127,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9519170,"byte_end":9519177,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9519182,"byte_end":9519189,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9519194,"byte_end":9519203,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6683},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520913,"byte_end":9520920,"line_start":182,"line_end":182,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockReadGuard, Self> where\nF: FnOnce(&T) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9519596,"byte_end":9519665,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9519670,"byte_end":9519740,"line_start":147,"line_end":147,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9519745,"byte_end":9519756,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9519761,"byte_end":9519764,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9519769,"byte_end":9519842,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9519847,"byte_end":9519867,"line_start":151,"line_end":151,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9519872,"byte_end":9519875,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9519880,"byte_end":9519939,"line_start":153,"line_end":153,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9519944,"byte_end":9520024,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520029,"byte_end":9520078,"line_start":155,"line_end":155,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520083,"byte_end":9520086,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520091,"byte_end":9520167,"line_start":157,"line_end":157,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520172,"byte_end":9520198,"line_start":158,"line_end":158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520203,"byte_end":9520206,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520211,"byte_end":9520328,"line_start":160,"line_end":160,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520333,"byte_end":9520396,"line_start":161,"line_end":161,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520401,"byte_end":9520404,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520409,"byte_end":9520423,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520428,"byte_end":9520431,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520436,"byte_end":9520443,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520448,"byte_end":9520495,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520500,"byte_end":9520503,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520508,"byte_end":9520556,"line_start":168,"line_end":168,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520561,"byte_end":9520581,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520586,"byte_end":9520589,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520594,"byte_end":9520614,"line_start":171,"line_end":171,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520619,"byte_end":9520642,"line_start":172,"line_end":172,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520647,"byte_end":9520682,"line_start":173,"line_end":173,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520687,"byte_end":9520690,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520695,"byte_end":9520729,"line_start":175,"line_end":175,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520734,"byte_end":9520824,"line_start":176,"line_end":176,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520829,"byte_end":9520832,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520837,"byte_end":9520863,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520868,"byte_end":9520875,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520880,"byte_end":9520887,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9520892,"byte_end":9520901,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6698},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522169,"byte_end":9522185,"line_start":233,"line_end":233,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":6701},{"krate":0,"index":6702},{"krate":0,"index":6703}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9521917,"byte_end":9521993,"line_start":225,"line_end":225,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9521994,"byte_end":9522006,"line_start":226,"line_end":226,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522007,"byte_end":9522010,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and method","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522011,"byte_end":9522068,"line_start":228,"line_end":228,"column_start":1,"column_end":58}},{"value":"/ on [`RwLock`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522069,"byte_end":9522087,"line_start":229,"line_end":229,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522088,"byte_end":9522091,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@RwLock::write","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522092,"byte_end":9522127,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522128,"byte_end":9522157,"line_start":232,"line_end":232,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6707},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523570,"byte_end":9523573,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockWriteGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockWriteGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockWriteGuard` for a component of the locked data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522340,"byte_end":9522409,"line_start":240,"line_end":240,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522414,"byte_end":9522417,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522422,"byte_end":9522496,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522501,"byte_end":9522521,"line_start":243,"line_end":243,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522526,"byte_end":9522529,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522534,"byte_end":9522593,"line_start":245,"line_end":245,"column_start":5,"column_end":64}},{"value":"/ `RwLockWriteGuard::map(..)`. A method would interfere with methods of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522598,"byte_end":9522671,"line_start":246,"line_end":246,"column_start":5,"column_end":78}},{"value":"/ the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522676,"byte_end":9522729,"line_start":247,"line_end":247,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522734,"byte_end":9522737,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522742,"byte_end":9522815,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522820,"byte_end":9522846,"line_start":250,"line_end":250,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522851,"byte_end":9522854,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522859,"byte_end":9522970,"line_start":252,"line_end":252,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522975,"byte_end":9523038,"line_start":253,"line_end":253,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523043,"byte_end":9523046,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523051,"byte_end":9523065,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523070,"byte_end":9523073,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523078,"byte_end":9523085,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523090,"byte_end":9523138,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523143,"byte_end":9523146,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523151,"byte_end":9523199,"line_start":260,"line_end":260,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523204,"byte_end":9523224,"line_start":261,"line_end":261,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523229,"byte_end":9523232,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523237,"byte_end":9523257,"line_start":263,"line_end":263,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523262,"byte_end":9523285,"line_start":264,"line_end":264,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523290,"byte_end":9523325,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523330,"byte_end":9523333,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523338,"byte_end":9523343,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523348,"byte_end":9523429,"line_start":268,"line_end":268,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523434,"byte_end":9523454,"line_start":269,"line_end":269,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523459,"byte_end":9523464,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523469,"byte_end":9523472,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523477,"byte_end":9523520,"line_start":272,"line_end":272,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523525,"byte_end":9523532,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523537,"byte_end":9523544,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523549,"byte_end":9523558,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6710},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9525372,"byte_end":9525379,"line_start":330,"line_end":330,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockWriteGuard, Self> where\nF: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`RwLockWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`RwLockWriteGuard`] for a component of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9523967,"byte_end":9524034,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524039,"byte_end":9524113,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524118,"byte_end":9524129,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524134,"byte_end":9524137,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524142,"byte_end":9524216,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524221,"byte_end":9524241,"line_start":296,"line_end":296,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524246,"byte_end":9524249,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524254,"byte_end":9524305,"line_start":298,"line_end":298,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524310,"byte_end":9524385,"line_start":299,"line_end":299,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524390,"byte_end":9524454,"line_start":300,"line_end":300,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524459,"byte_end":9524462,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524467,"byte_end":9524540,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524545,"byte_end":9524575,"line_start":303,"line_end":303,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524580,"byte_end":9524583,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524588,"byte_end":9524707,"line_start":305,"line_end":305,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524712,"byte_end":9524775,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524780,"byte_end":9524783,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524788,"byte_end":9524802,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524807,"byte_end":9524810,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524815,"byte_end":9524822,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524827,"byte_end":9524875,"line_start":311,"line_end":311,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524880,"byte_end":9524883,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524888,"byte_end":9524936,"line_start":313,"line_end":313,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524941,"byte_end":9524961,"line_start":314,"line_end":314,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524966,"byte_end":9524969,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524974,"byte_end":9524994,"line_start":316,"line_end":316,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9524999,"byte_end":9525022,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9525027,"byte_end":9525062,"line_start":318,"line_end":318,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9525067,"byte_end":9525070,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9525075,"byte_end":9525080,"line_start":320,"line_end":320,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9525085,"byte_end":9525124,"line_start":321,"line_end":321,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9525129,"byte_end":9525232,"line_start":322,"line_end":322,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9525237,"byte_end":9525256,"line_start":323,"line_end":323,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9525261,"byte_end":9525266,"line_start":324,"line_end":324,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9525271,"byte_end":9525274,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9525279,"byte_end":9525322,"line_start":326,"line_end":326,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9525327,"byte_end":9525334,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9525339,"byte_end":9525346,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9525351,"byte_end":9525360,"line_start":329,"line_end":329,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6713},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9527050,"byte_end":9527059,"line_start":385,"line_end":385,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard>::downgrade","value":"pub fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9525887,"byte_end":9525959,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9525964,"byte_end":9526033,"line_start":349,"line_end":349,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526038,"byte_end":9526041,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526046,"byte_end":9526124,"line_start":351,"line_end":351,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526129,"byte_end":9526205,"line_start":352,"line_end":352,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526210,"byte_end":9526222,"line_start":353,"line_end":353,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526227,"byte_end":9526230,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the read access of this rwlock","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526235,"byte_end":9526307,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526312,"byte_end":9526329,"line_start":356,"line_end":356,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526334,"byte_end":9526337,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526342,"byte_end":9526356,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526361,"byte_end":9526364,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526369,"byte_end":9526376,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526381,"byte_end":9526411,"line_start":361,"line_end":361,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526416,"byte_end":9526441,"line_start":362,"line_end":362,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526446,"byte_end":9526451,"line_start":363,"line_end":363,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526456,"byte_end":9526476,"line_start":364,"line_end":364,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526481,"byte_end":9526504,"line_start":365,"line_end":365,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526509,"byte_end":9526549,"line_start":366,"line_end":366,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526554,"byte_end":9526557,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let n = lock.write().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526562,"byte_end":9526593,"line_start":368,"line_end":368,"column_start":5,"column_end":36}},{"value":"/   ","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526598,"byte_end":9526604,"line_start":369,"line_end":369,"column_start":5,"column_end":11}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526609,"byte_end":9526644,"line_start":370,"line_end":370,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526649,"byte_end":9526691,"line_start":371,"line_end":371,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write().await = 2;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526696,"byte_end":9526735,"line_start":372,"line_end":372,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526740,"byte_end":9526747,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526752,"byte_end":9526755,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526760,"byte_end":9526786,"line_start":375,"line_end":375,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526791,"byte_end":9526836,"line_start":376,"line_end":376,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526841,"byte_end":9526844,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526849,"byte_end":9526861,"line_start":378,"line_end":378,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526866,"byte_end":9526892,"line_start":379,"line_end":379,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526897,"byte_end":9526972,"line_start":380,"line_end":380,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526977,"byte_end":9526984,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9526989,"byte_end":9526996,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9527001,"byte_end":9527004,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9527009,"byte_end":9527038,"line_start":384,"line_end":384,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":6740},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9530055,"byte_end":9530058,"line_start":477,"line_end":477,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9529845,"byte_end":9529908,"line_start":468,"line_end":468,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9529913,"byte_end":9529916,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9529921,"byte_end":9529935,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9529940,"byte_end":9529943,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9529948,"byte_end":9529955,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9529960,"byte_end":9529988,"line_start":473,"line_end":473,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9529993,"byte_end":9529996,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9530001,"byte_end":9530031,"line_start":475,"line_end":475,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9530036,"byte_end":9530043,"line_start":476,"line_end":476,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6741},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9530595,"byte_end":9530604,"line_start":498,"line_end":498,"column_start":18,"column_end":27},"name":"const_new","qualname":"<RwLock<T>>::const_new","value":"pub const fn const_new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9530235,"byte_end":9530298,"line_start":487,"line_end":487,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9530303,"byte_end":9530306,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9530311,"byte_end":9530325,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9530330,"byte_end":9530333,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9530338,"byte_end":9530345,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9530350,"byte_end":9530378,"line_start":492,"line_end":492,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9530383,"byte_end":9530386,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ static LOCK: RwLock<i32> = RwLock::const_new(5);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9530391,"byte_end":9530443,"line_start":494,"line_end":494,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9530448,"byte_end":9530455,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"parking_lot\", not(all(loom, test))))","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9530460,"byte_end":9530518,"line_start":496,"line_end":496,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6742},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531825,"byte_end":9531829,"line_start":539,"line_end":539,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with shared read access, causing the current task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9530787,"byte_end":9530858,"line_start":508,"line_end":508,"column_start":5,"column_end":76}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9530863,"byte_end":9530909,"line_start":509,"line_end":509,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9530914,"byte_end":9530917,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no more writers which","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9530922,"byte_end":9530991,"line_start":511,"line_end":511,"column_start":5,"column_end":74}},{"value":"/ hold the lock. There may be other readers currently inside the lock when","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9530996,"byte_end":9531072,"line_start":512,"line_end":512,"column_start":5,"column_end":81}},{"value":"/ this method returns.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531077,"byte_end":9531101,"line_start":513,"line_end":513,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531106,"byte_end":9531109,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531114,"byte_end":9531128,"line_start":515,"line_end":515,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531133,"byte_end":9531136,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531141,"byte_end":9531148,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531153,"byte_end":9531176,"line_start":518,"line_end":518,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531181,"byte_end":9531209,"line_start":519,"line_end":519,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531214,"byte_end":9531217,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531222,"byte_end":9531240,"line_start":521,"line_end":521,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531245,"byte_end":9531266,"line_start":522,"line_end":522,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531271,"byte_end":9531315,"line_start":523,"line_end":523,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531320,"byte_end":9531354,"line_start":524,"line_end":524,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531359,"byte_end":9531362,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531367,"byte_end":9531401,"line_start":526,"line_end":526,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531406,"byte_end":9531432,"line_start":527,"line_end":527,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531437,"byte_end":9531440,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531445,"byte_end":9531478,"line_start":529,"line_end":529,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531483,"byte_end":9531553,"line_start":530,"line_end":530,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531558,"byte_end":9531598,"line_start":531,"line_end":531,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531603,"byte_end":9531633,"line_start":532,"line_end":532,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has paniced\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531638,"byte_end":9531694,"line_start":533,"line_end":533,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531699,"byte_end":9531702,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531707,"byte_end":9531765,"line_start":535,"line_end":535,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531770,"byte_end":9531786,"line_start":536,"line_end":536,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531791,"byte_end":9531795,"line_start":537,"line_end":537,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9531800,"byte_end":9531807,"line_start":538,"line_end":538,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6746},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532917,"byte_end":9532922,"line_start":574,"line_end":574,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with exclusive write access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with exclusive write access, causing the current task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532276,"byte_end":9532351,"line_start":552,"line_end":552,"column_start":5,"column_end":80}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532356,"byte_end":9532402,"line_start":553,"line_end":553,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532407,"byte_end":9532410,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ This function will not return while other writers or other readers","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532415,"byte_end":9532485,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/ currently have access to the lock.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532490,"byte_end":9532528,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532533,"byte_end":9532536,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this rwlock","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532541,"byte_end":9532614,"line_start":558,"line_end":558,"column_start":5,"column_end":78}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532619,"byte_end":9532636,"line_start":559,"line_end":559,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532641,"byte_end":9532644,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532649,"byte_end":9532663,"line_start":561,"line_end":561,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532668,"byte_end":9532671,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532676,"byte_end":9532683,"line_start":563,"line_end":563,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532688,"byte_end":9532716,"line_start":564,"line_end":564,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532721,"byte_end":9532724,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532729,"byte_end":9532747,"line_start":566,"line_end":566,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532752,"byte_end":9532773,"line_start":567,"line_end":567,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532778,"byte_end":9532810,"line_start":568,"line_end":568,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532815,"byte_end":9532818,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532823,"byte_end":9532860,"line_start":570,"line_end":570,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532865,"byte_end":9532878,"line_start":571,"line_end":571,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532883,"byte_end":9532887,"line_start":572,"line_end":572,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9532892,"byte_end":9532899,"line_start":573,"line_end":573,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6750},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9533858,"byte_end":9533865,"line_start":604,"line_end":604,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9533386,"byte_end":9533441,"line_start":587,"line_end":587,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9533446,"byte_end":9533449,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `RwLock` mutably, no actual locking needs to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9533454,"byte_end":9533530,"line_start":589,"line_end":589,"column_start":5,"column_end":81}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9533535,"byte_end":9533609,"line_start":590,"line_end":590,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9533614,"byte_end":9533617,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9533622,"byte_end":9533636,"line_start":592,"line_end":592,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9533641,"byte_end":9533644,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9533649,"byte_end":9533656,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9533661,"byte_end":9533689,"line_start":595,"line_end":595,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9533694,"byte_end":9533697,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9533702,"byte_end":9533717,"line_start":597,"line_end":597,"column_start":5,"column_end":20}},{"value":"/     let mut lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9533722,"byte_end":9533760,"line_start":598,"line_end":598,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9533765,"byte_end":9533768,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/     let n = lock.get_mut();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9533773,"byte_end":9533804,"line_start":600,"line_end":600,"column_start":5,"column_end":36}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9533809,"byte_end":9533824,"line_start":601,"line_end":601,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9533829,"byte_end":9533834,"line_start":602,"line_end":602,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9533839,"byte_end":9533846,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6751},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9534099,"byte_end":9534109,"line_start":612,"line_end":612,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9534034,"byte_end":9534087,"line_start":611,"line_end":611,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":6818},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":6819},{"krate":0,"index":6820},{"krate":0,"index":6821},{"krate":0,"index":6822},{"krate":0,"index":14085},{"krate":0,"index":6823},{"krate":0,"index":14087},{"krate":0,"index":6824},{"krate":0,"index":6825},{"krate":0,"index":6826},{"krate":0,"index":6827},{"krate":0,"index":6828},{"krate":0,"index":7092},{"krate":0,"index":7096},{"krate":0,"index":7099},{"krate":0,"index":7102},{"krate":0,"index":7105},{"krate":0,"index":7109},{"krate":0,"index":7113},{"krate":0,"index":7120},{"krate":0,"index":6829},{"krate":0,"index":6839},{"krate":0,"index":6840},{"krate":0,"index":6842},{"krate":0,"index":6848},{"krate":0,"index":6850},{"krate":0,"index":6853},{"krate":0,"index":6856},{"krate":0,"index":6864},{"krate":0,"index":6867}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":23141,"byte_end":23165,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9547504,"byte_end":9547583,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9547584,"byte_end":9547594,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9547595,"byte_end":9547598,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9547599,"byte_end":9547675,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9547676,"byte_end":9547750,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9547751,"byte_end":9547754,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9547755,"byte_end":9547766,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9547767,"byte_end":9547770,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are the producer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9547771,"byte_end":9547851,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ and sender halves of the channel. The channel is created with an initial","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9547852,"byte_end":9547928,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ value. The **latest** value stored in the channel is accessed with","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9547929,"byte_end":9547999,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ [`Receiver::borrow()`]. Awaiting [`Receiver::changed()`] waits for a new","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548000,"byte_end":9548076,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ value to sent by the [`Sender`] half.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548077,"byte_end":9548118,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548119,"byte_end":9548122,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548123,"byte_end":9548137,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548138,"byte_end":9548141,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548142,"byte_end":9548149,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548150,"byte_end":9548177,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548178,"byte_end":9548181,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548182,"byte_end":9548246,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548247,"byte_end":9548298,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548299,"byte_end":9548302,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548303,"byte_end":9548336,"line_start":23,"line_end":23,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548337,"byte_end":9548383,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548384,"byte_end":9548442,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548443,"byte_end":9548456,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548457,"byte_end":9548468,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548469,"byte_end":9548472,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548473,"byte_end":9548499,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548500,"byte_end":9548512,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548513,"byte_end":9548520,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548521,"byte_end":9548528,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548529,"byte_end":9548532,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548533,"byte_end":9548546,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548547,"byte_end":9548550,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`Sender::is_closed`] and [`Sender::closed`] allow the producer to detect","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548551,"byte_end":9548628,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ when all [`Receiver`] handles have been dropped. This indicates that there","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548629,"byte_end":9548707,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ is no further interest in the values being produced and work can be stopped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548708,"byte_end":9548788,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548789,"byte_end":9548792,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548793,"byte_end":9548812,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548813,"byte_end":9548816,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548817,"byte_end":9548897,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548898,"byte_end":9548977,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9548978,"byte_end":9549050,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9549051,"byte_end":9549054,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9549055,"byte_end":9549097,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9549098,"byte_end":9549144,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::changed()`]: crate::sync::watch::Receiver::changed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9549145,"byte_end":9549211,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/ [`Receiver::borrow()`]: crate::sync::watch::Receiver::borrow","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9549212,"byte_end":9549276,"line_start":49,"line_end":49,"column_start":1,"column_end":65}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9549277,"byte_end":9549321,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/ [`Sender::is_closed`]: crate::sync::watch::Sender::is_closed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9549322,"byte_end":9549386,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9549387,"byte_end":9549445,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":7092},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9549813,"byte_end":9549821,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":7094},{"krate":0,"index":7095}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9549647,"byte_end":9549713,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9549714,"byte_end":9549717,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9549718,"byte_end":9549784,"line_start":63,"line_end":63,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":7099},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9550110,"byte_end":9550116,"line_start":77,"line_end":77,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":7101}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9549945,"byte_end":9550010,"line_start":73,"line_end":73,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9550011,"byte_end":9550014,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9550015,"byte_end":9550081,"line_start":75,"line_end":75,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":7105},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9550436,"byte_end":9550439,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":7108}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9550153,"byte_end":9550195,"line_start":81,"line_end":81,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9550196,"byte_end":9550199,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9550200,"byte_end":9550276,"line_start":83,"line_end":83,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9550277,"byte_end":9550356,"line_start":84,"line_end":84,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9550357,"byte_end":9550407,"line_start":85,"line_end":85,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":6829},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9551016,"byte_end":9551021,"line_start":112,"line_end":112,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":6830},{"krate":0,"index":7123},{"krate":0,"index":7126},{"krate":0,"index":6831},{"krate":0,"index":6834},{"krate":0,"index":7129},{"krate":0,"index":7132},{"krate":0,"index":6836},{"krate":0,"index":6838}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"/ Watch error types","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9551028,"byte_end":9551049,"line_start":113,"line_end":113,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":7123},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9551157,"byte_end":9551166,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":7125}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9551074,"byte_end":9551120,"line_start":117,"line_end":117,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":7129},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9551587,"byte_end":9551596,"line_start":135,"line_end":135,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::watch::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error produced when receiving a change notification.\n","sig":null,"attributes":[{"value":"/ Error produced when receiving a change notification.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9551494,"byte_end":9551550,"line_start":133,"line_end":133,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":6840},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552651,"byte_end":9552658,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9551888,"byte_end":9551964,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9551965,"byte_end":9551968,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9551969,"byte_end":9552051,"line_start":152,"line_end":152,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552052,"byte_end":9552128,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552129,"byte_end":9552165,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552166,"byte_end":9552169,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552170,"byte_end":9552184,"line_start":156,"line_end":156,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552185,"byte_end":9552188,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552189,"byte_end":9552196,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552197,"byte_end":9552224,"line_start":159,"line_end":159,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552225,"byte_end":9552228,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552229,"byte_end":9552293,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552294,"byte_end":9552345,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552346,"byte_end":9552349,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552350,"byte_end":9552383,"line_start":164,"line_end":164,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552384,"byte_end":9552430,"line_start":165,"line_end":165,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552431,"byte_end":9552489,"line_start":166,"line_end":166,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552490,"byte_end":9552503,"line_start":167,"line_end":167,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552504,"byte_end":9552515,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552516,"byte_end":9552519,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552520,"byte_end":9552546,"line_start":170,"line_end":170,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552547,"byte_end":9552559,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552560,"byte_end":9552567,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552568,"byte_end":9552575,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552576,"byte_end":9552579,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552580,"byte_end":9552609,"line_start":175,"line_end":175,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9552610,"byte_end":9552643,"line_start":176,"line_end":176,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":6844},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553541,"byte_end":9553547,"line_start":210,"line_end":210,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553079,"byte_end":9553134,"line_start":196,"line_end":196,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553139,"byte_end":9553142,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553147,"byte_end":9553223,"line_start":198,"line_end":198,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553228,"byte_end":9553304,"line_start":199,"line_end":199,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553309,"byte_end":9553340,"line_start":200,"line_end":200,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553345,"byte_end":9553348,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553353,"byte_end":9553367,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553372,"byte_end":9553375,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553380,"byte_end":9553387,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553392,"byte_end":9553419,"line_start":205,"line_end":205,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553424,"byte_end":9553427,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553432,"byte_end":9553474,"line_start":207,"line_end":207,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553479,"byte_end":9553517,"line_start":208,"line_end":208,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553522,"byte_end":9553529,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6845},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9554473,"byte_end":9554480,"line_start":243,"line_end":243,"column_start":18,"column_end":25},"name":"changed","qualname":"<Receiver<T>>::changed","value":"pub async fn changed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for a change notification","sig":null,"attributes":[{"value":"/ Wait for a change notification","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553659,"byte_end":9553693,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553698,"byte_end":9553701,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Returns when a new value has been sent by the [`Sender`] since the last","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553706,"byte_end":9553781,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ time `changed()` was called. When the `Sender` half is dropped, `Err` is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553786,"byte_end":9553862,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553867,"byte_end":9553880,"line_start":219,"line_end":219,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553885,"byte_end":9553888,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553893,"byte_end":9553922,"line_start":221,"line_end":221,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553927,"byte_end":9553930,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553935,"byte_end":9553949,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553954,"byte_end":9553957,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553962,"byte_end":9553969,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553974,"byte_end":9554001,"line_start":226,"line_end":226,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9554006,"byte_end":9554009,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9554014,"byte_end":9554032,"line_start":228,"line_end":228,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9554037,"byte_end":9554058,"line_start":229,"line_end":229,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9554063,"byte_end":9554114,"line_start":230,"line_end":230,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9554119,"byte_end":9554122,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9554127,"byte_end":9554160,"line_start":232,"line_end":232,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"goodbye\").unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9554165,"byte_end":9554205,"line_start":233,"line_end":233,"column_start":5,"column_end":45}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9554210,"byte_end":9554221,"line_start":234,"line_end":234,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9554226,"byte_end":9554229,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.changed().await.is_ok());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9554234,"byte_end":9554278,"line_start":236,"line_end":236,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*rx.borrow(), \"goodbye\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9554283,"byte_end":9554327,"line_start":237,"line_end":237,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9554332,"byte_end":9554335,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     // The `tx` handle has been dropped","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9554340,"byte_end":9554383,"line_start":239,"line_end":239,"column_start":5,"column_end":48}},{"value":"/     assert!(rx.changed().await.is_err());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9554388,"byte_end":9554433,"line_start":240,"line_end":240,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9554438,"byte_end":9554443,"line_start":241,"line_end":241,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9554448,"byte_end":9554455,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6858},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9556417,"byte_end":9556421,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Sends a new value via the channel, notifying all receivers.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9556342,"byte_end":9556405,"line_start":307,"line_end":307,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6859},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557448,"byte_end":9557454,"line_start":339,"line_end":339,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Sender<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9556986,"byte_end":9557041,"line_start":325,"line_end":325,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557046,"byte_end":9557049,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557054,"byte_end":9557130,"line_start":327,"line_end":327,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557135,"byte_end":9557211,"line_start":328,"line_end":328,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557216,"byte_end":9557247,"line_start":329,"line_end":329,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557252,"byte_end":9557255,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557260,"byte_end":9557274,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557279,"byte_end":9557282,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557287,"byte_end":9557294,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557299,"byte_end":9557326,"line_start":334,"line_end":334,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557331,"byte_end":9557334,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let (tx, _) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557339,"byte_end":9557381,"line_start":336,"line_end":336,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*tx.borrow(), \"hello\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557386,"byte_end":9557424,"line_start":337,"line_end":337,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557429,"byte_end":9557436,"line_start":338,"line_end":338,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6860},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557882,"byte_end":9557891,"line_start":356,"line_end":356,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when all receivers\n have dropped.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when all receivers","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557566,"byte_end":9557640,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/ have dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557645,"byte_end":9557662,"line_start":345,"line_end":345,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557667,"byte_end":9557670,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557675,"byte_end":9557689,"line_start":347,"line_end":347,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557694,"byte_end":9557697,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557702,"byte_end":9557709,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::watch::channel(());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557714,"byte_end":9557765,"line_start":350,"line_end":350,"column_start":5,"column_end":56}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557770,"byte_end":9557799,"line_start":351,"line_end":351,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557804,"byte_end":9557807,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557812,"byte_end":9557825,"line_start":353,"line_end":353,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557830,"byte_end":9557858,"line_start":354,"line_end":354,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557863,"byte_end":9557870,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6861},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558635,"byte_end":9558641,"line_start":384,"line_end":384,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9557972,"byte_end":9558018,"line_start":360,"line_end":360,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558023,"byte_end":9558026,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558031,"byte_end":9558105,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558110,"byte_end":9558165,"line_start":363,"line_end":363,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558170,"byte_end":9558173,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558178,"byte_end":9558192,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558197,"byte_end":9558200,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558205,"byte_end":9558212,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558217,"byte_end":9558244,"line_start":368,"line_end":368,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558249,"byte_end":9558252,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558257,"byte_end":9558275,"line_start":370,"line_end":370,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558280,"byte_end":9558301,"line_start":371,"line_end":371,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558306,"byte_end":9558353,"line_start":372,"line_end":372,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558358,"byte_end":9558361,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558366,"byte_end":9558399,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         // use `rx`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558404,"byte_end":9558427,"line_start":375,"line_end":375,"column_start":5,"column_end":28}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558432,"byte_end":9558453,"line_start":376,"line_end":376,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558458,"byte_end":9558469,"line_start":377,"line_end":377,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558474,"byte_end":9558477,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/     // Waits for `rx` to drop","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558482,"byte_end":9558515,"line_start":379,"line_end":379,"column_start":5,"column_end":38}},{"value":"/     tx.closed().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558520,"byte_end":9558546,"line_start":380,"line_end":380,"column_start":5,"column_end":31}},{"value":"/     println!(\"the `rx` handles dropped\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558551,"byte_end":9558595,"line_start":381,"line_end":381,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558600,"byte_end":9558605,"line_start":382,"line_end":382,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558610,"byte_end":9558617,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":7134},{"krate":0,"index":7135},{"krate":0,"index":7136},{"krate":0,"index":7137},{"krate":0,"index":7139},{"krate":0,"index":7140},{"krate":0,"index":7144},{"krate":0,"index":7305},{"krate":0,"index":7145},{"krate":0,"index":7151},{"krate":0,"index":7152},{"krate":0,"index":7232},{"krate":0,"index":7233},{"krate":0,"index":7234},{"krate":0,"index":7235},{"krate":0,"index":7296}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"/ Asynchronous green-threads.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":130251,"byte_end":130282,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":130283,"byte_end":130286,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":130287,"byte_end":130309,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":130310,"byte_end":130313,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":130314,"byte_end":130395,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":130396,"byte_end":130476,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":130477,"byte_end":130557,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":130558,"byte_end":130632,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":130633,"byte_end":130708,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":130709,"byte_end":130731,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":130732,"byte_end":130735,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":130736,"byte_end":130771,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":130772,"byte_end":130775,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":130776,"byte_end":130850,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":130851,"byte_end":130930,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":130931,"byte_end":131003,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":131004,"byte_end":131079,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":131080,"byte_end":131133,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":131134,"byte_end":131137,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":131138,"byte_end":131215,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":131216,"byte_end":131289,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":131290,"byte_end":131369,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":131370,"byte_end":131448,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":131449,"byte_end":131521,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":131522,"byte_end":131597,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":131598,"byte_end":131672,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":131673,"byte_end":131748,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":131749,"byte_end":131779,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":131780,"byte_end":131783,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":131784,"byte_end":131862,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":131863,"byte_end":131938,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":131939,"byte_end":132016,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132017,"byte_end":132096,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132097,"byte_end":132175,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132176,"byte_end":132251,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132252,"byte_end":132327,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132328,"byte_end":132389,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132390,"byte_end":132393,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132394,"byte_end":132418,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132419,"byte_end":132483,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132484,"byte_end":132544,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132545,"byte_end":132634,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132635,"byte_end":132723,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132724,"byte_end":132727,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132728,"byte_end":132753,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132754,"byte_end":132757,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132758,"byte_end":132825,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132826,"byte_end":132829,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132830,"byte_end":132846,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132847,"byte_end":132850,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132851,"byte_end":132930,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":132931,"byte_end":133010,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133011,"byte_end":133090,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133091,"byte_end":133158,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133159,"byte_end":133162,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133163,"byte_end":133170,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133171,"byte_end":133191,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133192,"byte_end":133195,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133196,"byte_end":133218,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133219,"byte_end":133242,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133243,"byte_end":133279,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133280,"byte_end":133287,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133288,"byte_end":133295,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133296,"byte_end":133303,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133304,"byte_end":133307,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133308,"byte_end":133387,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133388,"byte_end":133466,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133467,"byte_end":133501,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133502,"byte_end":133505,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133506,"byte_end":133513,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133514,"byte_end":133534,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133535,"byte_end":133538,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133539,"byte_end":133619,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133620,"byte_end":133654,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133655,"byte_end":133669,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133670,"byte_end":133692,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133693,"byte_end":133700,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133701,"byte_end":133704,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133705,"byte_end":133715,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133716,"byte_end":133719,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133720,"byte_end":133764,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133765,"byte_end":133794,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133795,"byte_end":133834,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133835,"byte_end":133847,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133848,"byte_end":133855,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133856,"byte_end":133863,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133864,"byte_end":133867,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133868,"byte_end":133948,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":133949,"byte_end":134025,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134026,"byte_end":134038,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134039,"byte_end":134042,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134043,"byte_end":134050,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134051,"byte_end":134071,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134072,"byte_end":134075,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134076,"byte_end":134114,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134115,"byte_end":134149,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134150,"byte_end":134191,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134192,"byte_end":134199,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134200,"byte_end":134203,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134204,"byte_end":134262,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134263,"byte_end":134296,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134297,"byte_end":134304,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134305,"byte_end":134312,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134313,"byte_end":134316,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134317,"byte_end":134385,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ feature flag is enabled.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134386,"byte_end":134414,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134415,"byte_end":134418,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134419,"byte_end":134460,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134461,"byte_end":134494,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134495,"byte_end":134541,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134542,"byte_end":134585,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134586,"byte_end":134628,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134629,"byte_end":134670,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134671,"byte_end":134674,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134675,"byte_end":134704,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134705,"byte_end":134708,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134709,"byte_end":134789,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134790,"byte_end":134869,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134870,"byte_end":134949,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134950,"byte_end":134990,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134991,"byte_end":134994,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":134995,"byte_end":135069,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135070,"byte_end":135150,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135151,"byte_end":135154,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135155,"byte_end":135178,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135179,"byte_end":135182,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135183,"byte_end":135263,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135264,"byte_end":135330,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135331,"byte_end":135398,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135399,"byte_end":135473,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135474,"byte_end":135486,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135487,"byte_end":135490,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135491,"byte_end":135498,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135499,"byte_end":135519,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135520,"byte_end":135523,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135524,"byte_end":135547,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135548,"byte_end":135577,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135578,"byte_end":135640,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135641,"byte_end":135648,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135649,"byte_end":135656,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135657,"byte_end":135664,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135665,"byte_end":135668,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135669,"byte_end":135743,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135744,"byte_end":135811,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135812,"byte_end":135815,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135816,"byte_end":135827,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135828,"byte_end":135850,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135851,"byte_end":135915,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135916,"byte_end":135956,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":135957,"byte_end":136019,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136020,"byte_end":136048,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136049,"byte_end":136056,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136057,"byte_end":136060,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136061,"byte_end":136090,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136091,"byte_end":136136,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136137,"byte_end":136149,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136150,"byte_end":136157,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136158,"byte_end":136165,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136166,"byte_end":136169,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136170,"byte_end":136193,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136194,"byte_end":136197,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ When using the [multi-threaded runtime][rt-multi-thread], the [`task::block_in_place`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136198,"byte_end":136288,"line_start":162,"line_end":162,"column_start":1,"column_end":91}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136289,"byte_end":136363,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136364,"byte_end":136440,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136441,"byte_end":136515,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136516,"byte_end":136595,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136596,"byte_end":136678,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136679,"byte_end":136700,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136701,"byte_end":136704,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136705,"byte_end":136721,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136722,"byte_end":136725,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136726,"byte_end":136733,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136734,"byte_end":136754,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136755,"byte_end":136758,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136759,"byte_end":136782,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136783,"byte_end":136825,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136826,"byte_end":136888,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136889,"byte_end":136917,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136918,"byte_end":136925,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136926,"byte_end":136929,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136930,"byte_end":136975,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136976,"byte_end":136983,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136984,"byte_end":136991,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136992,"byte_end":136995,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":136996,"byte_end":137014,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137015,"byte_end":137018,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137019,"byte_end":137093,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137094,"byte_end":137172,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137173,"byte_end":137249,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137250,"byte_end":137307,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137308,"byte_end":137386,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137387,"byte_end":137415,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137416,"byte_end":137419,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137420,"byte_end":137431,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137432,"byte_end":137452,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137453,"byte_end":137456,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137457,"byte_end":137495,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137496,"byte_end":137507,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137508,"byte_end":137535,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137536,"byte_end":137554,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137555,"byte_end":137597,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137598,"byte_end":137609,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137610,"byte_end":137613,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137614,"byte_end":137681,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137682,"byte_end":137714,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137715,"byte_end":137751,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137752,"byte_end":137757,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137758,"byte_end":137771,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137772,"byte_end":137779,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137780,"byte_end":137787,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137788,"byte_end":137791,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137792,"byte_end":137849,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137850,"byte_end":137907,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"/ [rt-multi-thread]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137908,"byte_end":137971,"line_start":214,"line_end":214,"column_start":1,"column_end":64}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":137972,"byte_end":138021,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\mod.rs","byte_start":138022,"byte_end":138071,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":7297},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\blocking.rs","byte_start":9563377,"byte_end":9563391,"line_start":46,"line_end":46,"column_start":12,"column_end":26},"name":"block_in_place","qualname":"::task::blocking::block_in_place","value":"pub fn block_in_place<F, R>(F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided blocking function on the current thread without\n blocking the executor.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-multi-thread\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":23760,"byte_end":23795,"line_start":279,"line_end":279,"column_start":13,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":7300},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\blocking.rs","byte_start":9566325,"byte_end":9566339,"line_start":109,"line_end":109,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"pub fn spawn_blocking<F, R>(F) -> JoinHandle<R> where F: FnOnce() -> R +\nSend + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":23448,"byte_end":23470,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\blocking.rs","byte_start":9566299,"byte_end":9566311,"line_start":108,"line_end":108,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":7303},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\spawn.rs","byte_start":9570179,"byte_end":9570184,"line_start":126,"line_end":126,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":23448,"byte_end":23470,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\spawn.rs","byte_start":9570153,"byte_end":9570165,"line_start":125,"line_end":125,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":7306},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\yield_now.rs","byte_start":9571252,"byte_end":9571261,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":23448,"byte_end":23470,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\yield_now.rs","byte_start":9571171,"byte_end":9571234,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7314},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9575658,"byte_end":9575666,"line_start":112,"line_end":112,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":7315},{"krate":0,"index":7316},{"krate":0,"index":7317}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":23448,"byte_end":23470,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":7323},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9577760,"byte_end":9577771,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":23448,"byte_end":23470,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9577734,"byte_end":9577746,"line_start":193,"line_end":193,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":7187},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9578668,"byte_end":9578671,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9578623,"byte_end":9578656,"line_start":223,"line_end":223,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":7188},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9580426,"byte_end":9580437,"line_start":278,"line_end":278,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579213,"byte_end":9579263,"line_start":241,"line_end":241,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579268,"byte_end":9579271,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579276,"byte_end":9579336,"line_start":243,"line_end":243,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579341,"byte_end":9579344,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579349,"byte_end":9579421,"line_start":245,"line_end":245,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579426,"byte_end":9579496,"line_start":246,"line_end":246,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579501,"byte_end":9579512,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579517,"byte_end":9579537,"line_start":248,"line_end":248,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579542,"byte_end":9579545,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579550,"byte_end":9579568,"line_start":250,"line_end":250,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579573,"byte_end":9579594,"line_start":251,"line_end":251,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579599,"byte_end":9579641,"line_start":252,"line_end":252,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579646,"byte_end":9579649,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579654,"byte_end":9579726,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579731,"byte_end":9579784,"line_start":255,"line_end":255,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579789,"byte_end":9579822,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579827,"byte_end":9579844,"line_start":257,"line_end":257,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579849,"byte_end":9579860,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579865,"byte_end":9579868,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579873,"byte_end":9579907,"line_start":260,"line_end":260,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579912,"byte_end":9579948,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579953,"byte_end":9579971,"line_start":262,"line_end":262,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579976,"byte_end":9579993,"line_start":263,"line_end":263,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9579998,"byte_end":9580001,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9580006,"byte_end":9580077,"line_start":265,"line_end":265,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9580082,"byte_end":9580132,"line_start":266,"line_end":266,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9580137,"byte_end":9580170,"line_start":267,"line_end":267,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9580175,"byte_end":9580192,"line_start":268,"line_end":268,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9580197,"byte_end":9580208,"line_start":269,"line_end":269,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9580213,"byte_end":9580216,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9580221,"byte_end":9580257,"line_start":271,"line_end":271,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9580262,"byte_end":9580280,"line_start":272,"line_end":272,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9580285,"byte_end":9580302,"line_start":273,"line_end":273,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9580307,"byte_end":9580312,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9580317,"byte_end":9580324,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9580329,"byte_end":9580364,"line_start":276,"line_end":276,"column_start":5,"column_end":40}},{"value":"track_caller","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9580400,"byte_end":9580412,"line_start":277,"line_end":277,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":7190},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9583235,"byte_end":9583243,"line_start":353,"line_end":353,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9580780,"byte_end":9580854,"line_start":289,"line_end":289,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9580859,"byte_end":9580918,"line_start":290,"line_end":290,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9580923,"byte_end":9580926,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9580931,"byte_end":9580998,"line_start":292,"line_end":292,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581003,"byte_end":9581076,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581081,"byte_end":9581157,"line_start":294,"line_end":294,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581162,"byte_end":9581242,"line_start":295,"line_end":295,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581247,"byte_end":9581266,"line_start":296,"line_end":296,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581271,"byte_end":9581274,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581279,"byte_end":9581345,"line_start":298,"line_end":298,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581350,"byte_end":9581353,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581358,"byte_end":9581370,"line_start":300,"line_end":300,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581375,"byte_end":9581378,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581383,"byte_end":9581455,"line_start":302,"line_end":302,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581460,"byte_end":9581533,"line_start":303,"line_end":303,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581538,"byte_end":9581541,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581546,"byte_end":9581557,"line_start":305,"line_end":305,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581562,"byte_end":9581565,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581570,"byte_end":9581644,"line_start":307,"line_end":307,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581649,"byte_end":9581724,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581729,"byte_end":9581804,"line_start":309,"line_end":309,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581809,"byte_end":9581886,"line_start":310,"line_end":310,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581891,"byte_end":9581894,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581899,"byte_end":9581932,"line_start":312,"line_end":312,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581937,"byte_end":9581956,"line_start":313,"line_end":313,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581961,"byte_end":9581993,"line_start":314,"line_end":314,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9581998,"byte_end":9582018,"line_start":315,"line_end":315,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582023,"byte_end":9582026,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582031,"byte_end":9582069,"line_start":317,"line_end":317,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582074,"byte_end":9582112,"line_start":318,"line_end":318,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582117,"byte_end":9582148,"line_start":319,"line_end":319,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582153,"byte_end":9582197,"line_start":320,"line_end":320,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582202,"byte_end":9582261,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582266,"byte_end":9582288,"line_start":322,"line_end":322,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582293,"byte_end":9582308,"line_start":323,"line_end":323,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582313,"byte_end":9582331,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582336,"byte_end":9582347,"line_start":325,"line_end":325,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582352,"byte_end":9582380,"line_start":326,"line_end":326,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582385,"byte_end":9582391,"line_start":327,"line_end":327,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582396,"byte_end":9582403,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582408,"byte_end":9582442,"line_start":329,"line_end":329,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582447,"byte_end":9582454,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582459,"byte_end":9582491,"line_start":331,"line_end":331,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582496,"byte_end":9582516,"line_start":332,"line_end":332,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582521,"byte_end":9582524,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582529,"byte_end":9582567,"line_start":334,"line_end":334,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582572,"byte_end":9582610,"line_start":335,"line_end":335,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582615,"byte_end":9582646,"line_start":336,"line_end":336,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582651,"byte_end":9582695,"line_start":337,"line_end":337,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582700,"byte_end":9582759,"line_start":338,"line_end":338,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582764,"byte_end":9582786,"line_start":339,"line_end":339,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582791,"byte_end":9582812,"line_start":340,"line_end":340,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582817,"byte_end":9582835,"line_start":341,"line_end":341,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582840,"byte_end":9582851,"line_start":342,"line_end":342,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582856,"byte_end":9582884,"line_start":343,"line_end":343,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582889,"byte_end":9582895,"line_start":344,"line_end":344,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582900,"byte_end":9582907,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582912,"byte_end":9582915,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582920,"byte_end":9582955,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9582960,"byte_end":9583027,"line_start":348,"line_end":348,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9583032,"byte_end":9583087,"line_start":349,"line_end":349,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9583092,"byte_end":9583146,"line_start":350,"line_end":350,"column_start":5,"column_end":59}},{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9583151,"byte_end":9583173,"line_start":351,"line_end":351,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":7192},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584490,"byte_end":9584499,"line_start":388,"line_end":388,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9583398,"byte_end":9583468,"line_start":360,"line_end":360,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9583473,"byte_end":9583476,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9583481,"byte_end":9583551,"line_start":362,"line_end":362,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9583556,"byte_end":9583632,"line_start":363,"line_end":363,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9583637,"byte_end":9583705,"line_start":364,"line_end":364,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9583710,"byte_end":9583790,"line_start":365,"line_end":365,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9583795,"byte_end":9583867,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9583872,"byte_end":9583947,"line_start":367,"line_end":367,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9583952,"byte_end":9584008,"line_start":368,"line_end":368,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584013,"byte_end":9584016,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584021,"byte_end":9584035,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584040,"byte_end":9584043,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584048,"byte_end":9584059,"line_start":372,"line_end":372,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584064,"byte_end":9584084,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584089,"byte_end":9584092,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584097,"byte_end":9584115,"line_start":375,"line_end":375,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584120,"byte_end":9584141,"line_start":376,"line_end":376,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584146,"byte_end":9584193,"line_start":377,"line_end":377,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584198,"byte_end":9584240,"line_start":378,"line_end":378,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584245,"byte_end":9584267,"line_start":379,"line_end":379,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584272,"byte_end":9584302,"line_start":380,"line_end":380,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584307,"byte_end":9584325,"line_start":381,"line_end":381,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584330,"byte_end":9584347,"line_start":382,"line_end":382,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584352,"byte_end":9584357,"line_start":383,"line_end":383,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584362,"byte_end":9584369,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584374,"byte_end":9584377,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584382,"byte_end":9584417,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9584422,"byte_end":9584472,"line_start":387,"line_end":387,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":7249},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593508,"byte_end":9593516,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":7251}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9592629,"byte_end":9592659,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9592660,"byte_end":9592663,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9592664,"byte_end":9592718,"line_start":65,"line_end":65,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9592719,"byte_end":9592722,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9592723,"byte_end":9592789,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9592790,"byte_end":9592857,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9592858,"byte_end":9592915,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9592916,"byte_end":9592985,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9592986,"byte_end":9592989,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9592990,"byte_end":9593004,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593005,"byte_end":9593008,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593009,"byte_end":9593016,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593017,"byte_end":9593039,"line_start":75,"line_end":75,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593040,"byte_end":9593064,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593065,"byte_end":9593092,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593093,"byte_end":9593098,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593099,"byte_end":9593102,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593103,"byte_end":9593135,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593136,"byte_end":9593172,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593173,"byte_end":9593186,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593187,"byte_end":9593190,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593191,"byte_end":9593223,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593224,"byte_end":9593260,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593261,"byte_end":9593264,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593265,"byte_end":9593301,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593302,"byte_end":9593342,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593343,"byte_end":9593360,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593361,"byte_end":9593374,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593375,"byte_end":9593382,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593383,"byte_end":9593390,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593391,"byte_end":9593450,"line_start":93,"line_end":93,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":7251},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593558,"byte_end":9593563,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":7249},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7254},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9594091,"byte_end":9594096,"line_start":118,"line_end":118,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593641,"byte_end":9593705,"line_start":101,"line_end":101,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593710,"byte_end":9593713,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593718,"byte_end":9593779,"line_start":103,"line_end":103,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593784,"byte_end":9593787,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593792,"byte_end":9593808,"line_start":105,"line_end":105,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593813,"byte_end":9593816,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593821,"byte_end":9593828,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593833,"byte_end":9593855,"line_start":108,"line_end":108,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593860,"byte_end":9593884,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593889,"byte_end":9593916,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593921,"byte_end":9593926,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593931,"byte_end":9593934,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593939,"byte_end":9593971,"line_start":113,"line_end":113,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593976,"byte_end":9594031,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9594036,"byte_end":9594049,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9594054,"byte_end":9594061,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9594066,"byte_end":9594073,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7258},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9594570,"byte_end":9594574,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9594321,"byte_end":9594387,"line_start":130,"line_end":130,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9594392,"byte_end":9594395,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9594400,"byte_end":9594412,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9594417,"byte_end":9594420,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9594425,"byte_end":9594486,"line_start":134,"line_end":134,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9594491,"byte_end":9594558,"line_start":135,"line_end":135,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7261},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9595062,"byte_end":9595070,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9594815,"byte_end":9594881,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9594886,"byte_end":9594889,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9594894,"byte_end":9594960,"line_start":148,"line_end":148,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9594965,"byte_end":9595030,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9595035,"byte_end":9595050,"line_start":150,"line_end":150,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7267},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9595530,"byte_end":9595533,"line_start":168,"line_end":168,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9595425,"byte_end":9595467,"line_start":166,"line_end":166,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9595472,"byte_end":9595518,"line_start":167,"line_end":167,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":7326},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9597022,"byte_end":9597033,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":7327}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9596897,"byte_end":9596972,"line_start":224,"line_end":224,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":7339},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","parent":null,"children":[{"krate":0,"index":7340},{"krate":0,"index":7341},{"krate":0,"index":7342},{"krate":0,"index":7593},{"krate":0,"index":7594},{"krate":0,"index":7595},{"krate":0,"index":7596},{"krate":0,"index":7597},{"krate":0,"index":7621},{"krate":0,"index":7657},{"krate":0,"index":7658},{"krate":0,"index":7678},{"krate":0,"index":7679},{"krate":0,"index":7680},{"krate":0,"index":7681},{"krate":0,"index":7682},{"krate":0,"index":7709},{"krate":0,"index":7710},{"krate":0,"index":7711},{"krate":0,"index":7712},{"krate":0,"index":7713}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\cfg.rs","byte_start":24447,"byte_end":24471,"line_start":311,"line_end":311,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9597406,"byte_end":9597438,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9597439,"byte_end":9597442,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9597443,"byte_end":9597523,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9597524,"byte_end":9597536,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9597537,"byte_end":9597540,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Sleep` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9597541,"byte_end":9597622,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9597623,"byte_end":9597637,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9597638,"byte_end":9597641,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9597642,"byte_end":9597712,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9597713,"byte_end":9597793,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9597794,"byte_end":9597808,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9597809,"byte_end":9597812,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9597813,"byte_end":9597892,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9597893,"byte_end":9597965,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9597966,"byte_end":9598035,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598036,"byte_end":9598039,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598040,"byte_end":9598111,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598112,"byte_end":9598131,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598132,"byte_end":9598135,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598136,"byte_end":9598206,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598207,"byte_end":9598210,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598211,"byte_end":9598225,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598226,"byte_end":9598229,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598230,"byte_end":9598276,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598277,"byte_end":9598280,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598281,"byte_end":9598288,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::sleep;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598289,"byte_end":9598316,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598317,"byte_end":9598320,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598321,"byte_end":9598349,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598350,"byte_end":9598353,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598354,"byte_end":9598357,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598358,"byte_end":9598376,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598377,"byte_end":9598398,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598399,"byte_end":9598447,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598448,"byte_end":9598488,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598489,"byte_end":9598494,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598495,"byte_end":9598502,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598503,"byte_end":9598506,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 300ms.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598507,"byte_end":9598562,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598563,"byte_end":9598566,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598567,"byte_end":9598574,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598575,"byte_end":9598616,"line_start":42,"line_end":42,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598617,"byte_end":9598620,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598621,"byte_end":9598649,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598650,"byte_end":9598673,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598674,"byte_end":9598679,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598680,"byte_end":9598683,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598684,"byte_end":9598706,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598707,"byte_end":9598774,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598775,"byte_end":9598778,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598779,"byte_end":9598800,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598801,"byte_end":9598841,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598842,"byte_end":9598847,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598848,"byte_end":9598855,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598856,"byte_end":9598863,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598864,"byte_end":9598867,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598868,"byte_end":9598944,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598945,"byte_end":9598948,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`sleep`] is that an","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9598949,"byte_end":9599013,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/ [`interval`] measures the time since the last tick, which means that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599014,"byte_end":9599086,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/ `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599087,"byte_end":9599162,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599163,"byte_end":9599241,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599242,"byte_end":9599245,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599246,"byte_end":9599320,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599321,"byte_end":9599391,"line_start":65,"line_end":65,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599392,"byte_end":9599404,"line_start":66,"line_end":66,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599405,"byte_end":9599408,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599409,"byte_end":9599416,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599417,"byte_end":9599437,"line_start":69,"line_end":69,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599438,"byte_end":9599441,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599442,"byte_end":9599483,"line_start":71,"line_end":71,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599484,"byte_end":9599510,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599511,"byte_end":9599566,"line_start":73,"line_end":73,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599567,"byte_end":9599572,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599573,"byte_end":9599576,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599577,"byte_end":9599595,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599596,"byte_end":9599617,"line_start":77,"line_end":77,"column_start":1,"column_end":22}},{"value":"/     let interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599618,"byte_end":9599686,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/     tokio::pin!(interval);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599687,"byte_end":9599717,"line_start":79,"line_end":79,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599718,"byte_end":9599721,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     for _i in 0..5 {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599722,"byte_end":9599746,"line_start":81,"line_end":81,"column_start":1,"column_end":25}},{"value":"/         interval.as_mut().tick().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599747,"byte_end":9599790,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599791,"byte_end":9599836,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599837,"byte_end":9599846,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599847,"byte_end":9599852,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599853,"byte_end":9599860,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599861,"byte_end":9599864,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599865,"byte_end":9599900,"line_start":88,"line_end":88,"column_start":1,"column_end":36}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9599901,"byte_end":9599942,"line_start":89,"line_end":89,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":7519},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669080,"byte_end":9669091,"line_start":19,"line_end":19,"column_start":8,"column_end":19},"name":"sleep_until","qualname":"::time::driver::sleep::sleep_until","value":"pub fn sleep_until(Instant) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9668692,"byte_end":9668730,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9668731,"byte_end":9668734,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9668735,"byte_end":9668815,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9668816,"byte_end":9668893,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9668894,"byte_end":9668929,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9668930,"byte_end":9668933,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9668934,"byte_end":9668952,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9668953,"byte_end":9668956,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9668957,"byte_end":9669042,"line_start":17,"line_end":17,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669043,"byte_end":9669072,"line_start":18,"line_end":18,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":7520},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9670145,"byte_end":9670150,"line_start":56,"line_end":56,"column_start":8,"column_end":13},"name":"sleep","qualname":"::time::driver::sleep::sleep","value":"pub fn sleep(Duration) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669158,"byte_end":9669197,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669198,"byte_end":9669201,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `sleep_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669202,"byte_end":9669277,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669278,"byte_end":9669313,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669314,"byte_end":9669317,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669318,"byte_end":9669398,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669399,"byte_end":9669476,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669477,"byte_end":9669512,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669513,"byte_end":9669516,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669517,"byte_end":9669580,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669581,"byte_end":9669584,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The maximum duration for a sleep is 68719476734 milliseconds (approximately 2.2 years).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669585,"byte_end":9669676,"line_start":34,"line_end":34,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669677,"byte_end":9669680,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669681,"byte_end":9669699,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669700,"byte_end":9669703,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669704,"byte_end":9669789,"line_start":38,"line_end":38,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669790,"byte_end":9669819,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669820,"byte_end":9669823,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669824,"byte_end":9669838,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669839,"byte_end":9669842,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669843,"byte_end":9669890,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669891,"byte_end":9669894,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669895,"byte_end":9669902,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669903,"byte_end":9669942,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669943,"byte_end":9669946,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669947,"byte_end":9669965,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669966,"byte_end":9669987,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9669988,"byte_end":9670036,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9670037,"byte_end":9670077,"line_start":51,"line_end":51,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9670078,"byte_end":9670083,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9670084,"byte_end":9670091,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9670092,"byte_end":9670095,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9670096,"byte_end":9670137,"line_start":55,"line_end":55,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":8200},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9670437,"byte_end":9670442,"line_start":65,"line_end":65,"column_start":16,"column_end":21},"name":"Sleep","qualname":"::time::driver::sleep::Sleep","value":"Sleep {  }","parent":null,"children":[{"krate":0,"index":8201},{"krate":0,"index":8202}],"decl_id":null,"docs":" Future returned by [`sleep`](sleep) and\n [`sleep_until`](sleep_until).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7523},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9670888,"byte_end":9670896,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Sleep>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9670818,"byte_end":9670876,"line_start":82,"line_end":82,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":7524},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9671091,"byte_end":9671101,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Sleep>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `Sleep` has elapsed.","sig":null,"attributes":[{"value":"/ Returns `true` if `Sleep` has elapsed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9670950,"byte_end":9670992,"line_start":87,"line_end":87,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9670997,"byte_end":9671000,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ A `Sleep` instance is elapsed when the requested duration has elapsed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9671005,"byte_end":9671079,"line_start":89,"line_end":89,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":7525},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9671483,"byte_end":9671488,"line_start":101,"line_end":101,"column_start":12,"column_end":17},"name":"reset","qualname":"<Sleep>::reset","value":"pub fn reset(Pin<&mut Self>, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Sleep` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Sleep` instance to a new deadline.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9671162,"byte_end":9671212,"line_start":94,"line_end":94,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9671217,"byte_end":9671220,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Sleep`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9671225,"byte_end":9671299,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9671304,"byte_end":9671371,"line_start":97,"line_end":97,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9671376,"byte_end":9671379,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9671384,"byte_end":9671452,"line_start":99,"line_end":99,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9671457,"byte_end":9671471,"line_start":100,"line_end":100,"column_start":5,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":7597},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::time::error","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","parent":null,"children":[{"krate":0,"index":7598},{"krate":0,"index":7599},{"krate":0,"index":7600},{"krate":0,"index":7790},{"krate":0,"index":7796},{"krate":0,"index":7795},{"krate":0,"index":7793},{"krate":0,"index":7798},{"krate":0,"index":7817},{"krate":0,"index":7815},{"krate":0,"index":7814},{"krate":0,"index":7811},{"krate":0,"index":7812},{"krate":0,"index":7808},{"krate":0,"index":7809},{"krate":0,"index":7601},{"krate":0,"index":7819},{"krate":0,"index":7826},{"krate":0,"index":7822},{"krate":0,"index":7823},{"krate":0,"index":7828},{"krate":0,"index":7831},{"krate":0,"index":7603},{"krate":0,"index":7610},{"krate":0,"index":7611},{"krate":0,"index":7614},{"krate":0,"index":7616},{"krate":0,"index":7618},{"krate":0,"index":7619}],"decl_id":null,"docs":" Time error types.\n","sig":null,"attributes":[{"value":"/ Time error types.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9672777,"byte_end":9672798,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":7790},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9673985,"byte_end":9673990,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9672850,"byte_end":9672901,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9672902,"byte_end":9672905,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9672906,"byte_end":9672967,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9672968,"byte_end":9672971,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9672972,"byte_end":9673046,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9673047,"byte_end":9673126,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9673127,"byte_end":9673202,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9673203,"byte_end":9673278,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9673279,"byte_end":9673307,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9673308,"byte_end":9673311,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9673312,"byte_end":9673389,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding sleep instances.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9673390,"byte_end":9673477,"line_start":18,"line_end":18,"column_start":1,"column_end":88}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9673478,"byte_end":9673554,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9673555,"byte_end":9673635,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9673636,"byte_end":9673713,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9673714,"byte_end":9673795,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9673796,"byte_end":9673878,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9673879,"byte_end":9673882,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9673883,"byte_end":9673943,"line_start":25,"line_end":25,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":7819},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9674294,"byte_end":9674301,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::error::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9674222,"byte_end":9674254,"line_start":43,"line_end":43,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":7604},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9674478,"byte_end":9674486,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9674415,"byte_end":9674466,"line_start":55,"line_end":55,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7605},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9674618,"byte_end":9674629,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9674535,"byte_end":9674606,"line_start":60,"line_end":60,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":7606},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9674765,"byte_end":9674776,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9674699,"byte_end":9674753,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7607},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9674913,"byte_end":9674927,"line_start":71,"line_end":71,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9674827,"byte_end":9674901,"line_start":70,"line_end":70,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":7608},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9675066,"byte_end":9675073,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Error>::invalid","value":"pub fn invalid() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an error representing a misconfigured timer.\n","sig":null,"attributes":[{"value":"/ Create an error representing a misconfigured timer.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9674999,"byte_end":9675054,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7609},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9675209,"byte_end":9675219,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Error>::is_invalid","value":"pub fn is_invalid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being misconfigured.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being misconfigured.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9675121,"byte_end":9675197,"line_start":80,"line_end":80,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":7833},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677597,"byte_end":9677604,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":7834}],"decl_id":null,"docs":" A measurement of a monotonically nondecreasing clock.\n Opaque and useful only with `Duration`.","sig":null,"attributes":[{"value":"/ A measurement of a monotonically nondecreasing clock.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9676306,"byte_end":9676363,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ Opaque and useful only with `Duration`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9676364,"byte_end":9676407,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9676408,"byte_end":9676411,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9676412,"byte_end":9676489,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ instant when created, and are often useful for tasks such as measuring","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9676490,"byte_end":9676564,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ benchmarks or timing how long an operation takes.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9676565,"byte_end":9676618,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9676619,"byte_end":9676622,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9676623,"byte_end":9676701,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ words, each tick of the underlying clock may not be the same length (e.g.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9676702,"byte_end":9676779,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ some seconds may be longer than others). An instant may jump forwards or","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9676780,"byte_end":9676856,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ experience time dilation (slow down or speed up), but it will never go","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9676857,"byte_end":9676931,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ backwards.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9676932,"byte_end":9676946,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9676947,"byte_end":9676950,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9676951,"byte_end":9677031,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ no method to get \"the number of seconds\" from an instant. Instead, it only","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677032,"byte_end":9677110,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ allows measuring the duration between two instants (or comparing two","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677111,"byte_end":9677183,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ instants).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677184,"byte_end":9677198,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677199,"byte_end":9677202,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The size of an `Instant` struct may vary depending on the target operating","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677203,"byte_end":9677281,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ system.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677282,"byte_end":9677293,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677294,"byte_end":9677297,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677298,"byte_end":9677308,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677309,"byte_end":9677312,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This type wraps the inner `std` variant and is used to align the Tokio","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677313,"byte_end":9677387,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ clock for uses of `now()`. This can be useful for testing where you can","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677388,"byte_end":9677463,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ take advantage of `time::pause()` and `time::advance()`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677464,"byte_end":9677524,"line_start":32,"line_end":32,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7626},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677851,"byte_end":9677854,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677658,"byte_end":9677704,"line_start":39,"line_end":39,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677709,"byte_end":9677712,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677717,"byte_end":9677731,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677736,"byte_end":9677739,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677744,"byte_end":9677751,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677756,"byte_end":9677785,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677790,"byte_end":9677793,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677798,"byte_end":9677827,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677832,"byte_end":9677839,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7627},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677980,"byte_end":9677988,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677904,"byte_end":9677968,"line_start":52,"line_end":52,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":7628},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678124,"byte_end":9678132,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678062,"byte_end":9678112,"line_start":57,"line_end":57,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7629},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678376,"byte_end":9678390,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678191,"byte_end":9678263,"line_start":62,"line_end":62,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678268,"byte_end":9678271,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678276,"byte_end":9678288,"line_start":64,"line_end":64,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678293,"byte_end":9678296,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678301,"byte_end":9678364,"line_start":66,"line_end":66,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7630},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679073,"byte_end":9679095,"line_start":88,"line_end":88,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678486,"byte_end":9678561,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678566,"byte_end":9678614,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678619,"byte_end":9678622,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678627,"byte_end":9678641,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678646,"byte_end":9678649,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678654,"byte_end":9678661,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678666,"byte_end":9678714,"line_start":77,"line_end":77,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678719,"byte_end":9678722,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678727,"byte_end":9678745,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678750,"byte_end":9678771,"line_start":80,"line_end":80,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678776,"byte_end":9678809,"line_start":81,"line_end":81,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678814,"byte_end":9678855,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678860,"byte_end":9678897,"line_start":83,"line_end":83,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678902,"byte_end":9678964,"line_start":84,"line_end":84,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9678969,"byte_end":9679039,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679044,"byte_end":9679049,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679054,"byte_end":9679061,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7631},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679810,"byte_end":9679835,"line_start":109,"line_end":109,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679207,"byte_end":9679282,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679287,"byte_end":9679346,"line_start":93,"line_end":93,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679351,"byte_end":9679354,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679359,"byte_end":9679373,"line_start":95,"line_end":95,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679378,"byte_end":9679381,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679386,"byte_end":9679393,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679398,"byte_end":9679446,"line_start":98,"line_end":98,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679451,"byte_end":9679454,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679459,"byte_end":9679477,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679482,"byte_end":9679503,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679508,"byte_end":9679541,"line_start":102,"line_end":102,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679546,"byte_end":9679587,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679592,"byte_end":9679629,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679634,"byte_end":9679699,"line_start":105,"line_end":105,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679704,"byte_end":9679776,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679781,"byte_end":9679786,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679791,"byte_end":9679798,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7632},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680598,"byte_end":9680605,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9679942,"byte_end":9680012,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680017,"byte_end":9680020,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680025,"byte_end":9680037,"line_start":115,"line_end":115,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680042,"byte_end":9680045,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680050,"byte_end":9680118,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680123,"byte_end":9680189,"line_start":118,"line_end":118,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680194,"byte_end":9680221,"line_start":119,"line_end":119,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680226,"byte_end":9680229,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680234,"byte_end":9680248,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680253,"byte_end":9680256,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680261,"byte_end":9680268,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680273,"byte_end":9680321,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680326,"byte_end":9680329,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680334,"byte_end":9680352,"line_start":126,"line_end":126,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680357,"byte_end":9680378,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680383,"byte_end":9680420,"line_start":128,"line_end":128,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680425,"byte_end":9680473,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/     sleep(three_secs).await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680478,"byte_end":9680510,"line_start":130,"line_end":130,"column_start":5,"column_end":37}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680515,"byte_end":9680564,"line_start":131,"line_end":131,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680569,"byte_end":9680574,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680579,"byte_end":9680586,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7633},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680886,"byte_end":9680897,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680669,"byte_end":9680744,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680749,"byte_end":9680820,"line_start":139,"line_end":139,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9680825,"byte_end":9680874,"line_start":140,"line_end":140,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7634},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9681236,"byte_end":9681247,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9681019,"byte_end":9681094,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9681099,"byte_end":9681170,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9681175,"byte_end":9681224,"line_start":147,"line_end":147,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":7670},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684691,"byte_end":9684699,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9682969,"byte_end":9683046,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683047,"byte_end":9683078,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683079,"byte_end":9683082,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683083,"byte_end":9683163,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683164,"byte_end":9683203,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683204,"byte_end":9683207,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683208,"byte_end":9683281,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683282,"byte_end":9683285,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683286,"byte_end":9683298,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683299,"byte_end":9683302,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683303,"byte_end":9683348,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683349,"byte_end":9683352,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683353,"byte_end":9683367,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683368,"byte_end":9683371,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683372,"byte_end":9683379,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683380,"byte_end":9683418,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683419,"byte_end":9683422,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683423,"byte_end":9683441,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683442,"byte_end":9683463,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683464,"byte_end":9683533,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683534,"byte_end":9683537,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683538,"byte_end":9683568,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683569,"byte_end":9683599,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683600,"byte_end":9683630,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683631,"byte_end":9683634,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683635,"byte_end":9683678,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683679,"byte_end":9683684,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683685,"byte_end":9683692,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683693,"byte_end":9683696,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683697,"byte_end":9683771,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683772,"byte_end":9683775,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`sleep`] is that an `interval`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683776,"byte_end":9683849,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683850,"byte_end":9683925,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9683926,"byte_end":9684002,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684003,"byte_end":9684064,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684065,"byte_end":9684068,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684069,"byte_end":9684143,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684144,"byte_end":9684214,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684215,"byte_end":9684227,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684228,"byte_end":9684231,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684232,"byte_end":9684239,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684240,"byte_end":9684260,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684261,"byte_end":9684264,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684265,"byte_end":9684306,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684307,"byte_end":9684333,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684334,"byte_end":9684389,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684390,"byte_end":9684395,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684396,"byte_end":9684399,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684400,"byte_end":9684418,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684419,"byte_end":9684440,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684441,"byte_end":9684513,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684514,"byte_end":9684538,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684539,"byte_end":9684573,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684574,"byte_end":9684619,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684620,"byte_end":9684629,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684630,"byte_end":9684635,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684636,"byte_end":9684643,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684644,"byte_end":9684647,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684648,"byte_end":9684683,"line_start":66,"line_end":66,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":7671},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685588,"byte_end":9685599,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `start`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684849,"byte_end":9684922,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `start`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684923,"byte_end":9684960,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684961,"byte_end":9684964,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9684965,"byte_end":9685045,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685046,"byte_end":9685085,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685086,"byte_end":9685089,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685090,"byte_end":9685102,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685103,"byte_end":9685106,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685107,"byte_end":9685152,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685153,"byte_end":9685156,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685157,"byte_end":9685171,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685172,"byte_end":9685175,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685176,"byte_end":9685183,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685184,"byte_end":9685238,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685239,"byte_end":9685242,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685243,"byte_end":9685261,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685262,"byte_end":9685283,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685284,"byte_end":9685347,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685348,"byte_end":9685421,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685422,"byte_end":9685425,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685426,"byte_end":9685456,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685457,"byte_end":9685487,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685488,"byte_end":9685518,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685519,"byte_end":9685522,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685523,"byte_end":9685566,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685567,"byte_end":9685572,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685573,"byte_end":9685580,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7856},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685915,"byte_end":9685923,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":7857},{"krate":0,"index":7858}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).\n","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9685807,"byte_end":9685886,"line_start":109,"line_end":109,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":7673},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686656,"byte_end":9686660,"line_start":140,"line_end":140,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686134,"byte_end":9686203,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686208,"byte_end":9686211,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686216,"byte_end":9686230,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686235,"byte_end":9686238,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686243,"byte_end":9686250,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686255,"byte_end":9686275,"line_start":125,"line_end":125,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686280,"byte_end":9686283,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686288,"byte_end":9686316,"line_start":127,"line_end":127,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686321,"byte_end":9686324,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686329,"byte_end":9686347,"line_start":129,"line_end":129,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686352,"byte_end":9686373,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686378,"byte_end":9686447,"line_start":131,"line_end":131,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686452,"byte_end":9686455,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686460,"byte_end":9686490,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686495,"byte_end":9686525,"line_start":134,"line_end":134,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686530,"byte_end":9686560,"line_start":135,"line_end":135,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686565,"byte_end":9686568,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686573,"byte_end":9686616,"line_start":137,"line_end":137,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686621,"byte_end":9686626,"line_start":138,"line_end":138,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686631,"byte_end":9686638,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7677},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9687336,"byte_end":9687345,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Poll for the next instant in the interval to be reached.","sig":null,"attributes":[{"value":"/ Poll for the next instant in the interval to be reached.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686743,"byte_end":9686803,"line_start":144,"line_end":144,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686808,"byte_end":9686811,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686816,"byte_end":9686864,"line_start":146,"line_end":146,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686869,"byte_end":9686872,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next instant has not yet been reached.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686877,"byte_end":9686945,"line_start":148,"line_end":148,"column_start":5,"column_end":73}},{"value":"/  * `Poll::Ready(instant)` if the next instant has been reached.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686950,"byte_end":9687017,"line_start":149,"line_end":149,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9687022,"byte_end":9687025,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9687030,"byte_end":9687105,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the instant has elapsed. Note that on multiple","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9687110,"byte_end":9687185,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ calls to `poll_tick`, only the `Waker` from the `Context` passed to the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9687190,"byte_end":9687265,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ most recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9687270,"byte_end":9687324,"line_start":154,"line_end":154,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":7695},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689192,"byte_end":9689199,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688177,"byte_end":9688254,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688255,"byte_end":9688258,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688259,"byte_end":9688338,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688339,"byte_end":9688411,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688412,"byte_end":9688425,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688426,"byte_end":9688429,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688430,"byte_end":9688447,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688448,"byte_end":9688451,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688452,"byte_end":9688530,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688531,"byte_end":9688561,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688562,"byte_end":9688565,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688566,"byte_end":9688646,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688647,"byte_end":9688674,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688675,"byte_end":9688678,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688679,"byte_end":9688693,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688694,"byte_end":9688697,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688698,"byte_end":9688758,"line_start":30,"line_end":30,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688759,"byte_end":9688762,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688763,"byte_end":9688774,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688775,"byte_end":9688804,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688805,"byte_end":9688834,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688835,"byte_end":9688838,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688839,"byte_end":9688867,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688868,"byte_end":9688871,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688872,"byte_end":9688894,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688895,"byte_end":9688933,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688934,"byte_end":9688961,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688962,"byte_end":9688965,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9688966,"byte_end":9689039,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689040,"byte_end":9689106,"line_start":43,"line_end":43,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689107,"byte_end":9689162,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689163,"byte_end":9689168,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689169,"byte_end":9689176,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689177,"byte_end":9689184,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7697},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9690411,"byte_end":9690421,"line_start":90,"line_end":90,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689380,"byte_end":9689452,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689453,"byte_end":9689456,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689457,"byte_end":9689534,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689535,"byte_end":9689590,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689591,"byte_end":9689594,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689595,"byte_end":9689612,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689613,"byte_end":9689616,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689617,"byte_end":9689695,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689696,"byte_end":9689726,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689727,"byte_end":9689730,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689731,"byte_end":9689811,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689812,"byte_end":9689839,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689840,"byte_end":9689843,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689844,"byte_end":9689858,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689859,"byte_end":9689862,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689863,"byte_end":9689923,"line_start":71,"line_end":71,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689924,"byte_end":9689927,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689928,"byte_end":9689939,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689940,"byte_end":9689983,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9689984,"byte_end":9690013,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9690014,"byte_end":9690017,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9690018,"byte_end":9690046,"line_start":77,"line_end":77,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9690047,"byte_end":9690050,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9690051,"byte_end":9690073,"line_start":79,"line_end":79,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9690074,"byte_end":9690112,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9690113,"byte_end":9690140,"line_start":81,"line_end":81,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9690141,"byte_end":9690144,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9690145,"byte_end":9690223,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9690224,"byte_end":9690238,"line_start":84,"line_end":84,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9690239,"byte_end":9690325,"line_start":85,"line_end":85,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9690326,"byte_end":9690381,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9690382,"byte_end":9690387,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9690388,"byte_end":9690395,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9690396,"byte_end":9690403,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8162},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9690796,"byte_end":9690803,"line_start":106,"line_end":106,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":8164},{"krate":0,"index":8165}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.0\\src\\lib.rs","byte_start":9735379,"byte_end":9735388,"line_start":369,"line_end":369,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7702},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9691099,"byte_end":9691106,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9691026,"byte_end":9691087,"line_start":119,"line_end":119,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7703},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9691234,"byte_end":9691241,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9691153,"byte_end":9691222,"line_start":124,"line_end":124,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":7704},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9691370,"byte_end":9691380,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9691300,"byte_end":9691358,"line_start":129,"line_end":129,"column_start":5,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":140678,"byte_end":140684,"line_start":46,"line_end":46,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":680},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":140587,"byte_end":140616,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":140621,"byte_end":140624,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":140629,"byte_end":140668,"line_start":45,"line_end":45,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":140714,"byte_end":140720,"line_start":49,"line_end":49,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":680},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":140691,"byte_end":140704,"line_start":48,"line_end":48,"column_start":5,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\rand.rs","byte_start":159142,"byte_end":159154,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"thread_rng_n","qualname":"::util::rand::thread_rng_n","value":"pub fn thread_rng_n(u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"macros\"))","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\rand.rs","byte_start":159027,"byte_end":159058,"line_start":55,"line_end":55,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16511,"byte_end":16517,"line_start":445,"line_end":445,"column_start":9,"column_end":15},"name":"stream","qualname":"::stream","value":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","parent":null,"children":[],"decl_id":null,"docs":" Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0\n release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]\n crate.","sig":null,"attributes":[{"value":"/ Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":15016,"byte_end":15097,"line_start":408,"line_end":408,"column_start":1,"column_end":82}},{"value":"/ release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":15098,"byte_end":15187,"line_start":409,"line_end":409,"column_start":1,"column_end":90}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":15188,"byte_end":15198,"line_start":410,"line_end":410,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":15199,"byte_end":15202,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ # Why was `Stream` not included in Tokio 1.0?","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":15203,"byte_end":15252,"line_start":412,"line_end":412,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":15253,"byte_end":15256,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ Originally, we had planned to ship Tokio 1.0 with a stable `Stream` type","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":15257,"byte_end":15333,"line_start":414,"line_end":414,"column_start":1,"column_end":77}},{"value":"/ but unfortunetly the [RFC] had not been merged in time for `Stream` to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":15334,"byte_end":15408,"line_start":415,"line_end":415,"column_start":1,"column_end":75}},{"value":"/ reach `std` on a stable compiler in time for the 1.0 release of Tokio. For","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":15409,"byte_end":15487,"line_start":416,"line_end":416,"column_start":1,"column_end":79}},{"value":"/ this reason, the team has decided to move all `Stream` based utilities to","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":15488,"byte_end":15565,"line_start":417,"line_end":417,"column_start":1,"column_end":78}},{"value":"/ the [`tokio-stream`] crate. While this is not ideal, once `Stream` has made","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":15566,"byte_end":15645,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ it into the standard library and the MSRV period has passed, we will implement","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":15646,"byte_end":15728,"line_start":419,"line_end":419,"column_start":1,"column_end":83}},{"value":"/ stream for our different types.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":15729,"byte_end":15764,"line_start":420,"line_end":420,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":15765,"byte_end":15768,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ While this may seem unfortunate, not all is lost as you can get much of the","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":15769,"byte_end":15848,"line_start":422,"line_end":422,"column_start":1,"column_end":80}},{"value":"/ `Stream` support with `async/await` and `while let` loops. It is also possible","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":15849,"byte_end":15931,"line_start":423,"line_end":423,"column_start":1,"column_end":83}},{"value":"/ to create a `impl Stream` from `async fn` using the [`async-stream`] crate.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":15932,"byte_end":16011,"line_start":424,"line_end":424,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16012,"byte_end":16015,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ [`tokio-stream`]: https://docs.rs/tokio-stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16016,"byte_end":16066,"line_start":426,"line_end":426,"column_start":1,"column_end":51}},{"value":"/ [`async-stream`]: https://docs.rs/async-stream","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16067,"byte_end":16117,"line_start":427,"line_end":427,"column_start":1,"column_end":51}},{"value":"/ [RFC]: https://github.com/rust-lang/rfcs/pull/2996","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16118,"byte_end":16172,"line_start":428,"line_end":428,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16173,"byte_end":16176,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16177,"byte_end":16190,"line_start":430,"line_end":430,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16191,"byte_end":16194,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ Convert a [`sync::mpsc::Receiver`] to an `impl Stream`.","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16195,"byte_end":16254,"line_start":432,"line_end":432,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16255,"byte_end":16258,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16259,"byte_end":16277,"line_start":434,"line_end":434,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16278,"byte_end":16304,"line_start":435,"line_end":435,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16305,"byte_end":16308,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ let (tx, mut rx) = mpsc::channel::<usize>(16);","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16309,"byte_end":16359,"line_start":437,"line_end":437,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16360,"byte_end":16363,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let stream = async_stream::stream! {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16364,"byte_end":16404,"line_start":439,"line_end":439,"column_start":1,"column_end":41}},{"value":"/     while let Some(item) = rx.recv().await {","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16405,"byte_end":16453,"line_start":440,"line_end":440,"column_start":1,"column_end":49}},{"value":"/         yield item;","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16454,"byte_end":16477,"line_start":441,"line_end":441,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16478,"byte_end":16487,"line_start":442,"line_end":442,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16488,"byte_end":16494,"line_start":443,"line_end":443,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":16495,"byte_end":16502,"line_start":444,"line_end":444,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\scoped_tls.rs","byte_start":30406,"byte_end":30415,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\scoped_tls.rs","byte_start":30431,"byte_end":30440,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\scoped_tls.rs","byte_start":30790,"byte_end":30795,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544527,"byte_end":8544537,"line_start":22,"line_end":22,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8550840,"byte_end":8550844,"line_start":109,"line_end":109,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":827},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":837},{"krate":0,"index":841},{"krate":0,"index":848},{"krate":0,"index":852},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8562454,"byte_end":8562458,"line_start":482,"line_end":482,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8564913,"byte_end":8564917,"line_start":550,"line_end":550,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8567054,"byte_end":8567058,"line_start":612,"line_end":612,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8569647,"byte_end":8569651,"line_start":688,"line_end":688,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8569749,"byte_end":8569753,"line_start":694,"line_end":694,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8570315,"byte_end":8570319,"line_start":717,"line_end":717,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8570490,"byte_end":8570494,"line_start":724,"line_end":724,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8570642,"byte_end":8570647,"line_start":730,"line_end":730,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576154,"byte_end":8576165,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8588959,"byte_end":8588970,"line_start":465,"line_end":465,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8596855,"byte_end":8596866,"line_start":648,"line_end":648,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8596984,"byte_end":8596995,"line_start":654,"line_end":654,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599929,"byte_end":8599936,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603233,"byte_end":8603241,"line_start":144,"line_end":144,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":32755,"byte_end":32764,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":32927,"byte_end":32936,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":34123,"byte_end":34132,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\poll_fn.rs","byte_start":34908,"byte_end":34914,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\poll_fn.rs","byte_start":35128,"byte_end":35134,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\poll_fn.rs","byte_start":35276,"byte_end":35282,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\ready.rs","byte_start":8613972,"byte_end":8613977,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\ready.rs","byte_start":8614004,"byte_end":8614009,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\try_join.rs","byte_start":8615218,"byte_end":8615226,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\blocking.rs","byte_start":8617754,"byte_end":8617762,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\blocking.rs","byte_start":8618035,"byte_end":8618043,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\blocking.rs","byte_start":8619638,"byte_end":8619646,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1294},{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\blocking.rs","byte_start":8622371,"byte_end":8622374,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1309}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\blocking.rs","byte_start":8624204,"byte_end":8624207,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":48119,"byte_end":48122,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1340},{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":48282,"byte_end":48285,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":48914,"byte_end":48920,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":51960,"byte_end":51963,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":52106,"byte_end":52109,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":52778,"byte_end":52784,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":55778,"byte_end":55781,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":55924,"byte_end":55927,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":56318,"byte_end":56324,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":65794,"byte_end":65797,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":65945,"byte_end":65948,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":66825,"byte_end":66828,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":67626,"byte_end":67632,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":68435,"byte_end":68441,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":69247,"byte_end":69253,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":70054,"byte_end":70060,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":72101,"byte_end":72108,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":80169,"byte_end":80176,"line_start":258,"line_end":258,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8634813,"byte_end":8634821,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8636962,"byte_end":8636970,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1374},{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8637113,"byte_end":8637121,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1377}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8637249,"byte_end":8637257,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8637842,"byte_end":8637847,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1403},{"krate":0,"index":1404}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8642264,"byte_end":8642269,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8643013,"byte_end":8643018,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1406},{"krate":0,"index":1407}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8643179,"byte_end":8643184,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8643312,"byte_end":8643317,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1411},{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8643471,"byte_end":8643476,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1414},{"krate":0,"index":1415}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8643623,"byte_end":8643628,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\registration.rs","byte_start":8646076,"byte_end":8646088,"line_start":50,"line_end":50,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\registration.rs","byte_start":8646113,"byte_end":8646125,"line_start":51,"line_end":51,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\registration.rs","byte_start":8646169,"byte_end":8646181,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1435},{"krate":0,"index":1437},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\registration.rs","byte_start":8651721,"byte_end":8651733,"line_start":213,"line_end":213,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1647},{"krate":0,"index":1653}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8655136,"byte_end":8655147,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1480}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8655407,"byte_end":8655418,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8655598,"byte_end":8655609,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8663636,"byte_end":8663647,"line_start":360,"line_end":360,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8663736,"byte_end":8663747,"line_start":366,"line_end":366,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8663772,"byte_end":8663783,"line_start":367,"line_end":367,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8663817,"byte_end":8663828,"line_start":370,"line_end":370,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1702},{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8664751,"byte_end":8664757,"line_start":395,"line_end":395,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8665252,"byte_end":8665261,"line_start":414,"line_end":414,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1713},{"krate":0,"index":1714}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8669935,"byte_end":8669944,"line_start":523,"line_end":523,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8670309,"byte_end":8670318,"line_start":536,"line_end":536,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8670351,"byte_end":8670360,"line_start":537,"line_end":537,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8627355,"byte_end":8627361,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8630167,"byte_end":8630173,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8630288,"byte_end":8630293,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8630737,"byte_end":8630743,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8631142,"byte_end":8631148,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8631298,"byte_end":8631304,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8632176,"byte_end":8632182,"line_start":282,"line_end":282,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1566},{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8632999,"byte_end":8633005,"line_start":303,"line_end":303,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8633083,"byte_end":8633089,"line_start":309,"line_end":309,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8633224,"byte_end":8633229,"line_start":317,"line_end":317,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1573},{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8634186,"byte_end":8634195,"line_start":347,"line_end":347,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\poll_evented.rs","byte_start":8673881,"byte_end":8673892,"line_start":76,"line_end":76,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\poll_evented.rs","byte_start":8676501,"byte_end":8676512,"line_start":143,"line_end":143,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1755},{"krate":0,"index":1758},{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\poll_evented.rs","byte_start":8678055,"byte_end":8678066,"line_start":190,"line_end":190,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1598},{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\poll_evented.rs","byte_start":8678209,"byte_end":8678220,"line_start":198,"line_end":198,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1602}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\poll_evented.rs","byte_start":8678392,"byte_end":8678403,"line_start":204,"line_end":204,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stdio_common.rs","byte_start":8679138,"byte_end":8679166,"line_start":16,"line_end":16,"column_start":9,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1775}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stdio_common.rs","byte_start":8679427,"byte_end":8679455,"line_start":28,"line_end":28,"column_start":35,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1780},{"krate":0,"index":1783},{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stderr.rs","byte_start":8688748,"byte_end":8688754,"line_start":84,"line_end":84,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stderr.rs","byte_start":8688893,"byte_end":8688899,"line_start":90,"line_end":90,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stdin.rs","byte_start":8691485,"byte_end":8691490,"line_start":59,"line_end":59,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1812}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stdin.rs","byte_start":8691627,"byte_end":8691632,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stdout.rs","byte_start":8694472,"byte_end":8694478,"line_start":83,"line_end":83,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stdout.rs","byte_start":8694617,"byte_end":8694623,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8696726,"byte_end":8696734,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1883},{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8697651,"byte_end":8697660,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1887}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8697910,"byte_end":8697918,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8698213,"byte_end":8698222,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8698901,"byte_end":8698906,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1898}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8699299,"byte_end":8699304,"line_start":147,"line_end":147,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1901}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8699557,"byte_end":8699562,"line_start":155,"line_end":155,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1904}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8699685,"byte_end":8699693,"line_start":161,"line_end":161,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8699730,"byte_end":8699739,"line_start":162,"line_end":162,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8699776,"byte_end":8699784,"line_start":163,"line_end":163,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8699821,"byte_end":8699830,"line_start":164,"line_end":164,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8699873,"byte_end":8699881,"line_start":166,"line_end":166,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1915}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8700049,"byte_end":8700058,"line_start":172,"line_end":172,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\seek.rs","byte_start":8701015,"byte_end":8701019,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1939},{"krate":0,"index":1940}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8712866,"byte_end":8712867,"line_start":257,"line_end":257,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8752194,"byte_end":8752195,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_seek_ext.rs","byte_start":8754304,"byte_end":8754305,"line_start":72,"line_end":72,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8789552,"byte_end":8789553,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8790921,"byte_end":8790930,"line_start":36,"line_end":36,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8792787,"byte_end":8792796,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2113}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8793606,"byte_end":8793615,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2116},{"krate":0,"index":2117}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8794528,"byte_end":8794537,"line_start":144,"line_end":144,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2122}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8795048,"byte_end":8795057,"line_start":162,"line_end":162,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2125}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8796546,"byte_end":8796555,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8798392,"byte_end":8798401,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2152}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8798543,"byte_end":8798552,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2155}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8799264,"byte_end":8799273,"line_start":117,"line_end":117,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8799803,"byte_end":8799812,"line_start":135,"line_end":135,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2163}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8800067,"byte_end":8800076,"line_start":145,"line_end":145,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2166},{"krate":0,"index":2167}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8802012,"byte_end":8802021,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8804299,"byte_end":8804308,"line_start":116,"line_end":116,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8805198,"byte_end":8805207,"line_start":145,"line_end":145,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2202}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8805461,"byte_end":8805470,"line_start":155,"line_end":155,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2205},{"krate":0,"index":2206}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8805757,"byte_end":8805766,"line_start":165,"line_end":165,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2209}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8806944,"byte_end":8806949,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8808089,"byte_end":8808094,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8808373,"byte_end":8808378,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8808964,"byte_end":8808969,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2244},{"krate":0,"index":2245}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\copy.rs","byte_start":8811804,"byte_end":8811808,"line_start":73,"line_end":73,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2260},{"krate":0,"index":2261}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\copy_buf.rs","byte_start":8815502,"byte_end":8815509,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2276},{"krate":0,"index":2277}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\empty.rs","byte_start":8817776,"byte_end":8817781,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2291}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\empty.rs","byte_start":8817995,"byte_end":8818000,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2293},{"krate":0,"index":2294}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\empty.rs","byte_start":8818233,"byte_end":8818238,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2296}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\flush.rs","byte_start":8819365,"byte_end":8819370,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2314},{"krate":0,"index":2315}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820366,"byte_end":8820371,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2330},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8821623,"byte_end":8821628,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2340}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8825906,"byte_end":8825918,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2360}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8826462,"byte_end":8826474,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2364}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8827172,"byte_end":8827184,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2366}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8827335,"byte_end":8827339,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2368},{"krate":0,"index":2369}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8827745,"byte_end":8827749,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2371}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8828615,"byte_end":8828619,"line_start":189,"line_end":189,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read.rs","byte_start":8830800,"byte_end":8830804,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2397},{"krate":0,"index":2398}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_buf.rs","byte_start":8831938,"byte_end":8831945,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2417},{"krate":0,"index":2418}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_exact.rs","byte_start":8834326,"byte_end":8834335,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2440},{"krate":0,"index":2441}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_line.rs","byte_start":8843425,"byte_end":8843433,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2481},{"krate":0,"index":2482}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_to_end.rs","byte_start":8846989,"byte_end":8846998,"line_start":105,"line_end":105,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2509},{"krate":0,"index":2510}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_to_string.rs","byte_start":8849608,"byte_end":8849620,"line_start":71,"line_end":71,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2532},{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_until.rs","byte_start":8852011,"byte_end":8852020,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2552},{"krate":0,"index":2553}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\repeat.rs","byte_start":8853598,"byte_end":8853604,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\shutdown.rs","byte_start":8854983,"byte_end":8854991,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2582},{"krate":0,"index":2583}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\sink.rs","byte_start":8856631,"byte_end":8856635,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\sink.rs","byte_start":8857145,"byte_end":8857149,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2597}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858114,"byte_end":8858119,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2615}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858858,"byte_end":8858863,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2622}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8861176,"byte_end":8861180,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2646}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8862808,"byte_end":8862812,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2649}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8863456,"byte_end":8863460,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2652},{"krate":0,"index":2653}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write.rs","byte_start":8865259,"byte_end":8865264,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_all.rs","byte_start":8866299,"byte_end":8866307,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2688},{"krate":0,"index":2689}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_buf.rs","byte_start":8867792,"byte_end":8867800,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2708},{"krate":0,"index":2709}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":83344,"byte_end":83354,"line_start":53,"line_end":53,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":83394,"byte_end":83404,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":83706,"byte_end":83718,"line_start":67,"line_end":67,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":83758,"byte_end":83770,"line_start":69,"line_end":69,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":84067,"byte_end":84079,"line_start":80,"line_end":80,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":84119,"byte_end":84131,"line_start":82,"line_end":82,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":88462,"byte_end":88468,"line_start":228,"line_end":228,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":88512,"byte_end":88518,"line_start":230,"line_end":230,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3212},{"krate":0,"index":3213},{"krate":0,"index":3214}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":90071,"byte_end":90081,"line_start":285,"line_end":285,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3223},{"krate":0,"index":3224}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":90720,"byte_end":90729,"line_start":303,"line_end":303,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":3228}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8875451,"byte_end":8875462,"line_start":53,"line_end":53,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3273},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3283},{"krate":0,"index":3284},{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3288}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883758,"byte_end":8883769,"line_start":304,"line_end":304,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3290},{"krate":0,"index":3291}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8884095,"byte_end":8884106,"line_start":316,"line_end":316,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3293}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8884534,"byte_end":8884545,"line_start":339,"line_end":339,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3298}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8887835,"byte_end":8887844,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3312},{"krate":0,"index":3313},{"krate":0,"index":3314},{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3318},{"krate":0,"index":3319},{"krate":0,"index":3320},{"krate":0,"index":3321},{"krate":0,"index":3322},{"krate":0,"index":3325}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8900485,"byte_end":8900494,"line_start":487,"line_end":487,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8901119,"byte_end":8901128,"line_start":515,"line_end":515,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3329}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8901258,"byte_end":8901267,"line_start":522,"line_end":522,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3331}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8901396,"byte_end":8901405,"line_start":529,"line_end":529,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3333}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903461,"byte_end":8903469,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3349},{"krate":0,"index":3350}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8906272,"byte_end":8906280,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3355}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8906496,"byte_end":8906505,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3357},{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3360},{"krate":0,"index":3361}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8907422,"byte_end":8907430,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3363}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8907524,"byte_end":8907533,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3365}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8910419,"byte_end":8910431,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3389}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8910634,"byte_end":8910646,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8910656,"byte_end":8910669,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3394}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913851,"byte_end":8913864,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3399}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8914065,"byte_end":8914079,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3401},{"krate":0,"index":3402}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8914762,"byte_end":8914776,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3404}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8914940,"byte_end":8914954,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3406},{"krate":0,"index":3407},{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3410}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8916001,"byte_end":8916014,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3412}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8916110,"byte_end":8916124,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3414}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8918649,"byte_end":8918658,"line_start":71,"line_end":71,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3455},{"krate":0,"index":3460},{"krate":0,"index":3463},{"krate":0,"index":3467},{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3475},{"krate":0,"index":3478},{"krate":0,"index":3481},{"krate":0,"index":3483},{"krate":0,"index":3486},{"krate":0,"index":3489},{"krate":0,"index":3491},{"krate":0,"index":3494},{"krate":0,"index":3498},{"krate":0,"index":3499},{"krate":0,"index":3500},{"krate":0,"index":3501},{"krate":0,"index":3502},{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3506},{"krate":0,"index":3508},{"krate":0,"index":3509},{"krate":0,"index":3510},{"krate":0,"index":3511}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8948903,"byte_end":8948912,"line_start":956,"line_end":956,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3513},{"krate":0,"index":3514}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8949270,"byte_end":8949279,"line_start":970,"line_end":970,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3516}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8949489,"byte_end":8949498,"line_start":980,"line_end":980,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3518},{"krate":0,"index":3519},{"krate":0,"index":3520},{"krate":0,"index":3521},{"krate":0,"index":3522}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8950324,"byte_end":8950333,"line_start":1013,"line_end":1013,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3524}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8950755,"byte_end":8950764,"line_start":1036,"line_end":1036,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3529}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955308,"byte_end":8955317,"line_start":115,"line_end":115,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3555},{"krate":0,"index":3560},{"krate":0,"index":3561},{"krate":0,"index":3562},{"krate":0,"index":3563},{"krate":0,"index":3564},{"krate":0,"index":3569},{"krate":0,"index":3572},{"krate":0,"index":3575},{"krate":0,"index":3579},{"krate":0,"index":3581},{"krate":0,"index":3583},{"krate":0,"index":3586},{"krate":0,"index":3590},{"krate":0,"index":3591},{"krate":0,"index":3593},{"krate":0,"index":3597},{"krate":0,"index":3599},{"krate":0,"index":3601},{"krate":0,"index":3605},{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3612},{"krate":0,"index":3616},{"krate":0,"index":3617},{"krate":0,"index":3618},{"krate":0,"index":3619},{"krate":0,"index":3620},{"krate":0,"index":3621},{"krate":0,"index":3622},{"krate":0,"index":3623},{"krate":0,"index":3624},{"krate":0,"index":3625},{"krate":0,"index":3626},{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992959,"byte_end":8992968,"line_start":1213,"line_end":1213,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3633},{"krate":0,"index":3634}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8993293,"byte_end":8993302,"line_start":1225,"line_end":1225,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3636}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8993729,"byte_end":8993738,"line_start":1248,"line_end":1248,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3641}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":94336,"byte_end":94345,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":94519,"byte_end":94528,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":94675,"byte_end":94684,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":94797,"byte_end":94806,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u16.rs","byte_start":95150,"byte_end":95159,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u16.rs","byte_start":95184,"byte_end":95193,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u16.rs","byte_start":95203,"byte_end":95212,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u16.rs","byte_start":95704,"byte_end":95713,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u16.rs","byte_start":95998,"byte_end":96007,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u32.rs","byte_start":96348,"byte_end":96357,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u32.rs","byte_start":96382,"byte_end":96391,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u32.rs","byte_start":96401,"byte_end":96410,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u32.rs","byte_start":96595,"byte_end":96604,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u32.rs","byte_start":96889,"byte_end":96898,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u8.rs","byte_start":99013,"byte_end":99021,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u8.rs","byte_start":99046,"byte_end":99054,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u8.rs","byte_start":99064,"byte_end":99072,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u8.rs","byte_start":99253,"byte_end":99261,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u8.rs","byte_start":99545,"byte_end":99553,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99893,"byte_end":99904,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99929,"byte_end":99940,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99950,"byte_end":99961,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_usize.rs","byte_start":100650,"byte_end":100661,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_usize.rs","byte_start":100951,"byte_end":100962,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_usize.rs","byte_start":101126,"byte_end":101137,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\mutex.rs","byte_start":101468,"byte_end":101473,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\parking_lot.rs","byte_start":102809,"byte_end":102814,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\parking_lot.rs","byte_start":103589,"byte_end":103595,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\parking_lot.rs","byte_start":103911,"byte_end":103918,"line_start":69,"line_end":69,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\unsafe_cell.rs","byte_start":104893,"byte_end":104903,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\either.rs","byte_start":8994046,"byte_end":8994052,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3744},{"krate":0,"index":3745},{"krate":0,"index":3746},{"krate":0,"index":3747},{"krate":0,"index":3748},{"krate":0,"index":3749}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\either.rs","byte_start":8995009,"byte_end":8995015,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3753}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\either.rs","byte_start":8995229,"byte_end":8995235,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3757}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\thread.rs","byte_start":110067,"byte_end":110077,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\thread.rs","byte_start":110342,"byte_end":110352,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\thread.rs","byte_start":110878,"byte_end":110883,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\thread.rs","byte_start":115648,"byte_end":115658,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\thread.rs","byte_start":115767,"byte_end":115779,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\thread.rs","byte_start":116134,"byte_end":116150,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\thread.rs","byte_start":117413,"byte_end":117429,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\thread.rs","byte_start":118024,"byte_end":118036,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\thread.rs","byte_start":118216,"byte_end":118221,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\mod.rs","byte_start":109114,"byte_end":109117,"line_start":106,"line_end":106,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\mod.rs","byte_start":109206,"byte_end":109209,"line_start":112,"line_end":112,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\windows.rs","byte_start":9038045,"byte_end":9038050,"line_start":44,"line_end":44,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3819}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\windows.rs","byte_start":9038438,"byte_end":9038445,"line_start":60,"line_end":60,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\windows.rs","byte_start":9038470,"byte_end":9038477,"line_start":61,"line_end":61,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\windows.rs","byte_start":9038892,"byte_end":9038897,"line_start":80,"line_end":80,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3828},{"krate":0,"index":3829}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\windows.rs","byte_start":9039095,"byte_end":9039100,"line_start":90,"line_end":90,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3831}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\windows.rs","byte_start":9039197,"byte_end":9039202,"line_start":96,"line_end":96,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3833},{"krate":0,"index":3834}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\windows.rs","byte_start":9040804,"byte_end":9040811,"line_start":142,"line_end":142,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3836}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9001674,"byte_end":9001681,"line_start":185,"line_end":185,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3874},{"krate":0,"index":3876},{"krate":0,"index":3878},{"krate":0,"index":3881},{"krate":0,"index":3884},{"krate":0,"index":3888},{"krate":0,"index":3890},{"krate":0,"index":3891},{"krate":0,"index":3893},{"krate":0,"index":3895},{"krate":0,"index":3897},{"krate":0,"index":3899},{"krate":0,"index":3900},{"krate":0,"index":3901},{"krate":0,"index":3906},{"krate":0,"index":3909}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9021246,"byte_end":9021253,"line_start":758,"line_end":758,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3913}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9021583,"byte_end":9021597,"line_start":774,"line_end":774,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3916}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9021803,"byte_end":9021817,"line_start":786,"line_end":786,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3919}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9021954,"byte_end":9021968,"line_start":794,"line_end":794,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3924},{"krate":0,"index":3925}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023779,"byte_end":9023784,"line_start":854,"line_end":854,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3927},{"krate":0,"index":3928},{"krate":0,"index":3929},{"krate":0,"index":3932},{"krate":0,"index":3935},{"krate":0,"index":3936}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9030846,"byte_end":9030856,"line_start":1039,"line_end":1039,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3947}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9031311,"byte_end":9031322,"line_start":1057,"line_end":1057,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3949}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9031610,"byte_end":9031621,"line_start":1068,"line_end":1068,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3951}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9032558,"byte_end":9032568,"line_start":1110,"line_end":1110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3961}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9032699,"byte_end":9032710,"line_start":1116,"line_end":1116,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3963}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9032841,"byte_end":9032852,"line_start":1122,"line_end":1122,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3965}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\enter.rs","byte_start":9062294,"byte_end":9062306,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4016}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\enter.rs","byte_start":9064057,"byte_end":9064062,"line_start":72,"line_end":72,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4483}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\enter.rs","byte_start":9065252,"byte_end":9065273,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4492}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\enter.rs","byte_start":9065989,"byte_end":9065994,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4497},{"krate":0,"index":4500}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\enter.rs","byte_start":9067634,"byte_end":9067639,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4020}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\enter.rs","byte_start":9067769,"byte_end":9067774,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4022}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\core.rs","byte_start":9075506,"byte_end":9075512,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\core.rs","byte_start":9075537,"byte_end":9075543,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\core.rs","byte_start":9075902,"byte_end":9075906,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4078}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\core.rs","byte_start":9076684,"byte_end":9076688,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4082},{"krate":0,"index":4084},{"krate":0,"index":4086},{"krate":0,"index":4088},{"krate":0,"index":4090},{"krate":0,"index":4092},{"krate":0,"index":4095},{"krate":0,"index":4097},{"krate":0,"index":4099}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\core.rs","byte_start":9082443,"byte_end":9082449,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4509}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083069,"byte_end":9083078,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4116},{"krate":0,"index":4117},{"krate":0,"index":4118},{"krate":0,"index":4119},{"krate":0,"index":4120},{"krate":0,"index":4121}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085804,"byte_end":9085813,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4123}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9086056,"byte_end":9086065,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4125}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9086342,"byte_end":9086351,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9086385,"byte_end":9086390,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4128}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\harness.rs","byte_start":9087068,"byte_end":9087075,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4156},{"krate":0,"index":4157},{"krate":0,"index":4158},{"krate":0,"index":4159}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\harness.rs","byte_start":9087552,"byte_end":9087559,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4163},{"krate":0,"index":4174},{"krate":0,"index":4178},{"krate":0,"index":4181},{"krate":0,"index":4184},{"krate":0,"index":4185},{"krate":0,"index":4186},{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4189},{"krate":0,"index":4191},{"krate":0,"index":4192},{"krate":0,"index":4193},{"krate":0,"index":4195}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\harness.rs","byte_start":9089730,"byte_end":9089735,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4173}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9103990,"byte_end":9104000,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104037,"byte_end":9104047,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104063,"byte_end":9104073,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4212},{"krate":0,"index":4213}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9105308,"byte_end":9105318,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9105345,"byte_end":9105355,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4218},{"krate":0,"index":4219}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9106581,"byte_end":9106591,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4222}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9106857,"byte_end":9106867,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4225}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\raw.rs","byte_start":9108114,"byte_end":9108121,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4251},{"krate":0,"index":4254},{"krate":0,"index":4255},{"krate":0,"index":4256},{"krate":0,"index":4257},{"krate":0,"index":4258},{"krate":0,"index":4259},{"krate":0,"index":4260}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\raw.rs","byte_start":9109652,"byte_end":9109659,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4262}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\raw.rs","byte_start":9109749,"byte_end":9109756,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\state.rs","byte_start":9112438,"byte_end":9112443,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4304},{"krate":0,"index":4305},{"krate":0,"index":4306},{"krate":0,"index":4308},{"krate":0,"index":4310},{"krate":0,"index":4312},{"krate":0,"index":4314},{"krate":0,"index":4315},{"krate":0,"index":4317},{"krate":0,"index":4321},{"krate":0,"index":4323},{"krate":0,"index":4325},{"krate":0,"index":4327},{"krate":0,"index":4330},{"krate":0,"index":4331}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\state.rs","byte_start":9121299,"byte_end":9121307,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4334},{"krate":0,"index":4335},{"krate":0,"index":4336},{"krate":0,"index":4337},{"krate":0,"index":4338},{"krate":0,"index":4339},{"krate":0,"index":4340},{"krate":0,"index":4341},{"krate":0,"index":4342},{"krate":0,"index":4343},{"krate":0,"index":4344},{"krate":0,"index":4345},{"krate":0,"index":4346},{"krate":0,"index":4347},{"krate":0,"index":4348},{"krate":0,"index":4349},{"krate":0,"index":4350},{"krate":0,"index":4351},{"krate":0,"index":4352}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\state.rs","byte_start":9123184,"byte_end":9123189,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4354}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\state.rs","byte_start":9123348,"byte_end":9123356,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4356}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\waker.rs","byte_start":9125174,"byte_end":9125182,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4382},{"krate":0,"index":4383}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\stack.rs","byte_start":9126930,"byte_end":9126943,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4542},{"krate":0,"index":4543},{"krate":0,"index":4545}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\stack.rs","byte_start":9128101,"byte_end":9128105,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4554},{"krate":0,"index":4555}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\stack.rs","byte_start":9128505,"byte_end":9128509,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4559}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9068769,"byte_end":9068773,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9068804,"byte_end":9068808,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9068945,"byte_end":9068953,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9068994,"byte_end":9069002,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9070989,"byte_end":9070993,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4431},{"krate":0,"index":4432}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9071294,"byte_end":9071302,"line_start":136,"line_end":136,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4570},{"krate":0,"index":4571}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9071553,"byte_end":9071557,"line_start":146,"line_end":146,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4574}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9071750,"byte_end":9071758,"line_start":154,"line_end":154,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4577}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9071889,"byte_end":9071893,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4435}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9072062,"byte_end":9072070,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4438},{"krate":0,"index":4439}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9072356,"byte_end":9072360,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4442}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9072600,"byte_end":9072604,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4445}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9072756,"byte_end":9072764,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4448}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9072980,"byte_end":9072984,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4451},{"krate":0,"index":4452},{"krate":0,"index":4453},{"krate":0,"index":4454},{"krate":0,"index":4455}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9131240,"byte_end":9131254,"line_start":96,"line_end":96,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4631},{"krate":0,"index":4632},{"krate":0,"index":4633},{"krate":0,"index":4636}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9133493,"byte_end":9133498,"line_start":173,"line_end":173,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4639}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9136121,"byte_end":9136126,"line_start":245,"line_end":245,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4657}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9136819,"byte_end":9136833,"line_start":269,"line_end":269,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4661}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9138052,"byte_end":9138066,"line_start":307,"line_end":307,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4665}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9138232,"byte_end":9138239,"line_start":315,"line_end":315,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4667},{"krate":0,"index":4669},{"krate":0,"index":4670}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9138769,"byte_end":9138776,"line_start":336,"line_end":336,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4672}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9138944,"byte_end":9138947,"line_start":344,"line_end":344,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4674},{"krate":0,"index":4676},{"krate":0,"index":4679}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9140036,"byte_end":9140042,"line_start":380,"line_end":380,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4682},{"krate":0,"index":4683}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9140504,"byte_end":9140514,"line_start":401,"line_end":401,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4691}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9140789,"byte_end":9140799,"line_start":409,"line_end":409,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4695}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\pool.rs","byte_start":9145283,"byte_end":9145295,"line_start":102,"line_end":102,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4752},{"krate":0,"index":4753},{"krate":0,"index":4754}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\pool.rs","byte_start":9147870,"byte_end":9147882,"line_start":172,"line_end":172,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4758}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\pool.rs","byte_start":9147968,"byte_end":9147980,"line_start":178,"line_end":178,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4760}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\pool.rs","byte_start":9148141,"byte_end":9148148,"line_start":186,"line_end":186,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4762},{"krate":0,"index":4763}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\pool.rs","byte_start":9150580,"byte_end":9150585,"line_start":264,"line_end":264,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4766}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\pool.rs","byte_start":9153824,"byte_end":9153831,"line_start":360,"line_end":360,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4768}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\schedule.rs","byte_start":9154334,"byte_end":9154346,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4780},{"krate":0,"index":4781},{"krate":0,"index":4782}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\shutdown.rs","byte_start":9155219,"byte_end":9155227,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4789}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\task.rs","byte_start":9156976,"byte_end":9156988,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4802}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\task.rs","byte_start":9157214,"byte_end":9157226,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\task.rs","byte_start":9157256,"byte_end":9157268,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4808},{"krate":0,"index":4809}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9160383,"byte_end":9160390,"line_start":82,"line_end":82,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4843},{"krate":0,"index":4844},{"krate":0,"index":4845},{"krate":0,"index":4847},{"krate":0,"index":4848},{"krate":0,"index":4849},{"krate":0,"index":4850},{"krate":0,"index":4853},{"krate":0,"index":4855},{"krate":0,"index":4856},{"krate":0,"index":4858},{"krate":0,"index":4860},{"krate":0,"index":4861},{"krate":0,"index":4862},{"krate":0,"index":4863}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9171259,"byte_end":9171266,"line_start":446,"line_end":446,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4969}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9171828,"byte_end":9171835,"line_start":470,"line_end":470,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4971}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9172376,"byte_end":9172383,"line_start":493,"line_end":493,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4973}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9173821,"byte_end":9173828,"line_start":533,"line_end":533,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4868}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\context.rs","byte_start":9176297,"byte_end":9176307,"line_start":73,"line_end":73,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4880}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\driver.rs","byte_start":9180759,"byte_end":9180765,"line_start":167,"line_end":167,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4898}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\driver.rs","byte_start":9181330,"byte_end":9181336,"line_start":187,"line_end":187,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4900},{"krate":0,"index":4901},{"krate":0,"index":4902},{"krate":0,"index":4903},{"krate":0,"index":4904},{"krate":0,"index":4905}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183037,"byte_end":9183043,"line_start":46,"line_end":46,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4922},{"krate":0,"index":4923},{"krate":0,"index":4924},{"krate":0,"index":4925},{"krate":0,"index":4927}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9188443,"byte_end":9188458,"line_start":208,"line_end":208,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4934}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9188606,"byte_end":9188621,"line_start":214,"line_end":214,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4936}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9188779,"byte_end":9188794,"line_start":220,"line_end":220,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\spawner.rs","byte_start":9189179,"byte_end":9189186,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4943}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\spawner.rs","byte_start":9189428,"byte_end":9189435,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5048}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\park.rs","byte_start":9191029,"byte_end":9191035,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5081}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\park.rs","byte_start":9191498,"byte_end":9191504,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5083}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\park.rs","byte_start":9191820,"byte_end":9191826,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5085},{"krate":0,"index":5086},{"krate":0,"index":5087},{"krate":0,"index":5088},{"krate":0,"index":5089},{"krate":0,"index":5091}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\park.rs","byte_start":9192545,"byte_end":9192553,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5093}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\park.rs","byte_start":9192622,"byte_end":9192627,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5095},{"krate":0,"index":5096},{"krate":0,"index":5097},{"krate":0,"index":5098},{"krate":0,"index":5099},{"krate":0,"index":5100},{"krate":0,"index":5101}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9199826,"byte_end":9199831,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9199862,"byte_end":9199867,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9199898,"byte_end":9199904,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9199935,"byte_end":9199941,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9200800,"byte_end":9200805,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5157},{"krate":0,"index":5158},{"krate":0,"index":5160},{"krate":0,"index":5166}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9207339,"byte_end":9207344,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5170},{"krate":0,"index":5171},{"krate":0,"index":5173}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9212512,"byte_end":9212517,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5178}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9212613,"byte_end":9212618,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5181}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9212777,"byte_end":9212782,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5184}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9212970,"byte_end":9212976,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5187},{"krate":0,"index":5188},{"krate":0,"index":5189},{"krate":0,"index":5190},{"krate":0,"index":5191},{"krate":0,"index":5192},{"krate":0,"index":5193},{"krate":0,"index":5194}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9216436,"byte_end":9216442,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5197}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":9220425,"byte_end":9220435,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":9220472,"byte_end":9220482,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":9220498,"byte_end":9220508,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5218},{"krate":0,"index":5219},{"krate":0,"index":5220},{"krate":0,"index":5221}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":9221262,"byte_end":9221272,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5228}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":9222078,"byte_end":9222082,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5245},{"krate":0,"index":5246},{"krate":0,"index":5247},{"krate":0,"index":5248},{"krate":0,"index":5249},{"krate":0,"index":5250},{"krate":0,"index":5251},{"krate":0,"index":5252}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":9225919,"byte_end":9225924,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5254},{"krate":0,"index":5255},{"krate":0,"index":5256},{"krate":0,"index":5257},{"krate":0,"index":5258},{"krate":0,"index":5259},{"krate":0,"index":5260},{"krate":0,"index":5261}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":9227402,"byte_end":9227407,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5263}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":9227580,"byte_end":9227585,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5267}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9233380,"byte_end":9233385,"line_start":184,"line_end":184,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5334}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9236716,"byte_end":9236722,"line_start":276,"line_end":276,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5340}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9237497,"byte_end":9237504,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5345},{"krate":0,"index":5346},{"krate":0,"index":5348},{"krate":0,"index":5349},{"krate":0,"index":5350}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9241791,"byte_end":9241795,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5352},{"krate":0,"index":5353},{"krate":0,"index":5356},{"krate":0,"index":5358},{"krate":0,"index":5359},{"krate":0,"index":5360},{"krate":0,"index":5361},{"krate":0,"index":5362},{"krate":0,"index":5363},{"krate":0,"index":5364},{"krate":0,"index":5365},{"krate":0,"index":5366}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9246906,"byte_end":9246912,"line_start":605,"line_end":605,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5369},{"krate":0,"index":5370},{"krate":0,"index":5371}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9247352,"byte_end":9247355,"line_start":621,"line_end":621,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5373},{"krate":0,"index":5375},{"krate":0,"index":5384},{"krate":0,"index":5385}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9250659,"byte_end":9250665,"line_start":720,"line_end":720,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5387},{"krate":0,"index":5389},{"krate":0,"index":5390},{"krate":0,"index":5391},{"krate":0,"index":5392},{"krate":0,"index":5393},{"krate":0,"index":5394},{"krate":0,"index":5395},{"krate":0,"index":5396}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":9218472,"byte_end":9218482,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5409},{"krate":0,"index":5410},{"krate":0,"index":5411}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":9219416,"byte_end":9219426,"line_start":75,"line_end":75,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5414}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":9219565,"byte_end":9219575,"line_start":81,"line_end":81,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5416}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":9219678,"byte_end":9219685,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5418},{"krate":0,"index":5420}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":9220106,"byte_end":9220113,"line_start":106,"line_end":106,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5422}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9051853,"byte_end":9051860,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5444},{"krate":0,"index":5445},{"krate":0,"index":5446},{"krate":0,"index":5448},{"krate":0,"index":5451},{"krate":0,"index":5453},{"krate":0,"index":5454},{"krate":0,"index":5455}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\coop.rs","byte_start":122987,"byte_end":122993,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\coop.rs","byte_start":123765,"byte_end":123771,"line_start":87,"line_end":87,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5484}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\coop.rs","byte_start":124353,"byte_end":124363,"line_start":108,"line_end":108,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\coop.rs","byte_start":125334,"byte_end":125350,"line_start":156,"line_end":156,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5499}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\coop.rs","byte_start":125482,"byte_end":125498,"line_start":162,"line_end":162,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5501}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\coop.rs","byte_start":127238,"byte_end":127244,"line_start":203,"line_end":203,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5506},{"krate":0,"index":5507}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\registry.rs","byte_start":9258444,"byte_end":9258447,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5536},{"krate":0,"index":5537}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\registry.rs","byte_start":9259169,"byte_end":9259177,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5544}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\registry.rs","byte_start":9259267,"byte_end":9259275,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5547},{"krate":0,"index":5549},{"krate":0,"index":5550}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\registry.rs","byte_start":9261428,"byte_end":9261435,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5557},{"krate":0,"index":5558}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\registry.rs","byte_start":9261543,"byte_end":9261550,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5560},{"krate":0,"index":5561},{"krate":0,"index":5562}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9281889,"byte_end":9281898,"line_start":27,"line_end":27,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5596}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9282064,"byte_end":9282073,"line_start":36,"line_end":36,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5598},{"krate":0,"index":5599}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9282546,"byte_end":9282557,"line_start":57,"line_end":57,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5603}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9283432,"byte_end":9283437,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5605},{"krate":0,"index":5606}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286027,"byte_end":9286032,"line_start":173,"line_end":173,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5619},{"krate":0,"index":5622}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288330,"byte_end":9288339,"line_start":247,"line_end":247,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5624},{"krate":0,"index":5627}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9309588,"byte_end":9309595,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5668},{"krate":0,"index":5669}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9312874,"byte_end":9312891,"line_start":130,"line_end":130,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5673}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320122,"byte_end":9320131,"line_start":216,"line_end":216,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5710}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320307,"byte_end":9320316,"line_start":222,"line_end":222,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320964,"byte_end":9320973,"line_start":241,"line_end":241,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5714}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9321278,"byte_end":9321287,"line_start":250,"line_end":250,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9322210,"byte_end":9322222,"line_start":276,"line_end":276,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5717}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9322600,"byte_end":9322612,"line_start":286,"line_end":286,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9324870,"byte_end":9324876,"line_start":382,"line_end":382,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5758}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9325003,"byte_end":9325009,"line_start":388,"line_end":388,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5762}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9325170,"byte_end":9325174,"line_start":394,"line_end":394,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9325244,"byte_end":9325248,"line_start":395,"line_end":395,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328021,"byte_end":9328027,"line_start":485,"line_end":485,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328064,"byte_end":9328070,"line_start":486,"line_end":486,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328108,"byte_end":9328116,"line_start":488,"line_end":488,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328153,"byte_end":9328161,"line_start":489,"line_end":489,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328177,"byte_end":9328183,"line_start":491,"line_end":491,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5782},{"krate":0,"index":5784},{"krate":0,"index":5785},{"krate":0,"index":5786}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9333793,"byte_end":9333797,"line_start":678,"line_end":678,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5792}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9334189,"byte_end":9334195,"line_start":693,"line_end":693,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5795}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9334375,"byte_end":9334381,"line_start":702,"line_end":702,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5798}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9334535,"byte_end":9334543,"line_start":710,"line_end":710,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5801}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9339406,"byte_end":9339414,"line_start":828,"line_end":828,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5805},{"krate":0,"index":5808}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343606,"byte_end":9343614,"line_start":945,"line_end":945,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5811}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9344240,"byte_end":9344244,"line_start":968,"line_end":968,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5815},{"krate":0,"index":5816}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9345086,"byte_end":9345090,"line_start":998,"line_end":998,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5820},{"krate":0,"index":5821}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9345776,"byte_end":9345780,"line_start":1019,"line_end":1019,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5825}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9346569,"byte_end":9346575,"line_start":1048,"line_end":1048,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5829},{"krate":0,"index":5830},{"krate":0,"index":5831},{"krate":0,"index":5832},{"krate":0,"index":5833}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9346990,"byte_end":9346996,"line_start":1065,"line_end":1065,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5836}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9347140,"byte_end":9347148,"line_start":1071,"line_end":1071,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5839}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9347283,"byte_end":9347292,"line_start":1077,"line_end":1077,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5843}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9347465,"byte_end":9347474,"line_start":1086,"line_end":1086,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5848}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\block.rs","byte_start":9354356,"byte_end":9354361,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5898},{"krate":0,"index":5899},{"krate":0,"index":5900},{"krate":0,"index":5901},{"krate":0,"index":5903},{"krate":0,"index":5905},{"krate":0,"index":5906},{"krate":0,"index":5907},{"krate":0,"index":5909},{"krate":0,"index":5910},{"krate":0,"index":5911},{"krate":0,"index":5913},{"krate":0,"index":5914},{"krate":0,"index":5915}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\block.rs","byte_start":9364343,"byte_end":9364349,"line_start":362,"line_end":362,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5920}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\block.rs","byte_start":9364831,"byte_end":9364837,"line_start":379,"line_end":379,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5923},{"krate":0,"index":5924}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367957,"byte_end":9367965,"line_start":100,"line_end":100,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5952},{"krate":0,"index":5953},{"krate":0,"index":5958},{"krate":0,"index":5959},{"krate":0,"index":5960}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9373034,"byte_end":9373042,"line_start":261,"line_end":261,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5963}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9373238,"byte_end":9373246,"line_start":269,"line_end":269,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9373262,"byte_end":9373268,"line_start":271,"line_end":271,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5968},{"krate":0,"index":5969},{"krate":0,"index":5972},{"krate":0,"index":5975},{"krate":0,"index":5976},{"krate":0,"index":5979},{"krate":0,"index":5980},{"krate":0,"index":5981}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384070,"byte_end":9384076,"line_start":604,"line_end":604,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5986}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384208,"byte_end":9384214,"line_start":612,"line_end":612,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5989}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384426,"byte_end":9384432,"line_start":622,"line_end":622,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5992}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9385682,"byte_end":9385688,"line_start":665,"line_end":665,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5996}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9386015,"byte_end":9386021,"line_start":680,"line_end":680,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6000}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9386682,"byte_end":9386684,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6031}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9386977,"byte_end":9386979,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6039}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9387916,"byte_end":9387920,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6057}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9388553,"byte_end":9388561,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6064}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9388827,"byte_end":9388831,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9388880,"byte_end":9388884,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9389391,"byte_end":9389393,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6077},{"krate":0,"index":6078},{"krate":0,"index":6079},{"krate":0,"index":6080}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9389825,"byte_end":9389827,"line_start":144,"line_end":144,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6084},{"krate":0,"index":6085}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9390377,"byte_end":9390379,"line_start":162,"line_end":162,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6091}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9390718,"byte_end":9390720,"line_start":174,"line_end":174,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6095}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9391043,"byte_end":9391045,"line_start":190,"line_end":190,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6099},{"krate":0,"index":6100},{"krate":0,"index":6102}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9394436,"byte_end":9394438,"line_start":287,"line_end":287,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6109}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9394850,"byte_end":9394854,"line_start":305,"line_end":305,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6115}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9395039,"byte_end":9395043,"line_start":315,"line_end":315,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6119}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9396044,"byte_end":9396055,"line_start":355,"line_end":355,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6132},{"krate":0,"index":6133},{"krate":0,"index":6134},{"krate":0,"index":6135}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\list.rs","byte_start":9397796,"byte_end":9397798,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6164},{"krate":0,"index":6165},{"krate":0,"index":6166},{"krate":0,"index":6168}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\list.rs","byte_start":9403502,"byte_end":9403504,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6171}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\list.rs","byte_start":9403781,"byte_end":9403783,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6174},{"krate":0,"index":6175},{"krate":0,"index":6176},{"krate":0,"index":6177}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\list.rs","byte_start":9407182,"byte_end":9407184,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6180}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9407842,"byte_end":9407857,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6194}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9407998,"byte_end":9408013,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6197}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9408471,"byte_end":9408488,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6203}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9409487,"byte_end":9409504,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6209},{"krate":0,"index":6210},{"krate":0,"index":6215},{"krate":0,"index":6216},{"krate":0,"index":6217}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9412802,"byte_end":9412817,"line_start":179,"line_end":179,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6220},{"krate":0,"index":6221},{"krate":0,"index":6222},{"krate":0,"index":6227},{"krate":0,"index":6230}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9416507,"byte_end":9416516,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6240}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9416676,"byte_end":9416685,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9417171,"byte_end":9417183,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9417216,"byte_end":9417228,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6247}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9417568,"byte_end":9417580,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6250}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9417809,"byte_end":9417818,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6252}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9417948,"byte_end":9417957,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9419458,"byte_end":9419474,"line_start":116,"line_end":116,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9419511,"byte_end":9419527,"line_start":118,"line_end":118,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6954}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9425898,"byte_end":9425903,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9425957,"byte_end":9425962,"line_start":160,"line_end":160,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9426016,"byte_end":9426026,"line_start":161,"line_end":161,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9426091,"byte_end":9426106,"line_start":162,"line_end":162,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9426393,"byte_end":9426405,"line_start":172,"line_end":172,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6284}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9426542,"byte_end":9426554,"line_start":178,"line_end":178,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427362,"byte_end":9427367,"line_start":204,"line_end":204,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6288},{"krate":0,"index":6289},{"krate":0,"index":6290},{"krate":0,"index":6293},{"krate":0,"index":6296},{"krate":0,"index":6300},{"krate":0,"index":6301},{"krate":0,"index":6302},{"krate":0,"index":6303}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9433120,"byte_end":9433125,"line_start":407,"line_end":407,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6306}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9433209,"byte_end":9433214,"line_start":413,"line_end":413,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6309}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9433338,"byte_end":9433343,"line_start":422,"line_end":422,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6312}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9433738,"byte_end":9433748,"line_start":438,"line_end":438,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6315}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9433849,"byte_end":9433859,"line_start":444,"line_end":444,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6318},{"krate":0,"index":6319}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9434006,"byte_end":9434016,"line_start":451,"line_end":451,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6322}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9434173,"byte_end":9434183,"line_start":457,"line_end":457,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6325}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9434349,"byte_end":9434359,"line_start":463,"line_end":463,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6328}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9434537,"byte_end":9434552,"line_start":471,"line_end":471,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6331}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9434649,"byte_end":9434664,"line_start":477,"line_end":477,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6334},{"krate":0,"index":6335}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9434807,"byte_end":9434822,"line_start":484,"line_end":484,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6338}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9434975,"byte_end":9434990,"line_start":490,"line_end":490,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6341}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9435152,"byte_end":9435167,"line_start":496,"line_end":496,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":6344}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9440030,"byte_end":9440038,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9440071,"byte_end":9440079,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9440909,"byte_end":9440915,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6382},{"krate":0,"index":6383},{"krate":0,"index":6384},{"krate":0,"index":6385},{"krate":0,"index":6386}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9449491,"byte_end":9449497,"line_start":455,"line_end":455,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6390}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9451407,"byte_end":9451415,"line_start":510,"line_end":510,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6393}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9451928,"byte_end":9451936,"line_start":526,"line_end":526,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6395},{"krate":0,"index":6396}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9457632,"byte_end":9457640,"line_start":668,"line_end":668,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6399}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9460695,"byte_end":9460701,"line_start":732,"line_end":732,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6402},{"krate":0,"index":6403},{"krate":0,"index":6404},{"krate":0,"index":6405},{"krate":0,"index":6406}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9462577,"byte_end":9462586,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6432}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9462748,"byte_end":9462757,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9462826,"byte_end":9462838,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6435}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9463137,"byte_end":9463149,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464935,"byte_end":9464941,"line_start":142,"line_end":142,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6448},{"krate":0,"index":6451},{"krate":0,"index":6456},{"krate":0,"index":6457}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9472604,"byte_end":9472610,"line_start":395,"line_end":395,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6461}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9472749,"byte_end":9472757,"line_start":403,"line_end":403,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6464},{"krate":0,"index":6465}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9477148,"byte_end":9477156,"line_start":552,"line_end":552,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6468}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9477303,"byte_end":9477311,"line_start":560,"line_end":560,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6471},{"krate":0,"index":6472}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9477774,"byte_end":9477779,"line_start":576,"line_end":576,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6475},{"krate":0,"index":6476},{"krate":0,"index":6478},{"krate":0,"index":6479},{"krate":0,"index":6481},{"krate":0,"index":6485},{"krate":0,"index":6489},{"krate":0,"index":6491},{"krate":0,"index":6493},{"krate":0,"index":6495}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9482151,"byte_end":9482156,"line_start":722,"line_end":722,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9482193,"byte_end":9482198,"line_start":723,"line_end":723,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9482223,"byte_end":9482228,"line_start":725,"line_end":725,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6503}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9482597,"byte_end":9482602,"line_start":743,"line_end":743,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6507}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9482997,"byte_end":9483002,"line_start":758,"line_end":758,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6514},{"krate":0,"index":6515},{"krate":0,"index":6516},{"krate":0,"index":6517},{"krate":0,"index":6518},{"krate":0,"index":6519},{"krate":0,"index":6520},{"krate":0,"index":6521},{"krate":0,"index":6522},{"krate":0,"index":6523},{"krate":0,"index":6524},{"krate":0,"index":6525},{"krate":0,"index":6526}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9484715,"byte_end":9484720,"line_start":824,"line_end":824,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6528}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9488779,"byte_end":9488788,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6569},{"krate":0,"index":6570},{"krate":0,"index":6571},{"krate":0,"index":6572},{"krate":0,"index":6573},{"krate":0,"index":6574},{"krate":0,"index":6575},{"krate":0,"index":6576},{"krate":0,"index":6578},{"krate":0,"index":6579},{"krate":0,"index":6580},{"krate":0,"index":6581},{"krate":0,"index":6585}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9499813,"byte_end":9499822,"line_start":397,"line_end":397,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6589}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9500021,"byte_end":9500027,"line_start":405,"line_end":405,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6591},{"krate":0,"index":6592}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9500893,"byte_end":9500900,"line_start":434,"line_end":434,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6594},{"krate":0,"index":6595}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9501578,"byte_end":9501585,"line_start":458,"line_end":458,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6598},{"krate":0,"index":6599}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9502384,"byte_end":9502391,"line_start":488,"line_end":488,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6603}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9503641,"byte_end":9503648,"line_start":518,"line_end":518,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9503695,"byte_end":9503707,"line_start":522,"line_end":522,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6606}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9503800,"byte_end":9503812,"line_start":528,"line_end":528,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6608}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9503956,"byte_end":9503968,"line_start":534,"line_end":534,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9504015,"byte_end":9504030,"line_start":538,"line_end":538,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6611},{"krate":0,"index":6612}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9504548,"byte_end":9504563,"line_start":553,"line_end":553,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6614}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9504849,"byte_end":9504864,"line_start":562,"line_end":562,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9504957,"byte_end":9504963,"line_start":567,"line_end":567,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6617},{"krate":0,"index":6618},{"krate":0,"index":6619},{"krate":0,"index":6620},{"krate":0,"index":6621}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9507633,"byte_end":9507642,"line_start":61,"line_end":61,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6632},{"krate":0,"index":6633},{"krate":0,"index":6634},{"krate":0,"index":6635},{"krate":0,"index":6636},{"krate":0,"index":6639},{"krate":0,"index":6642},{"krate":0,"index":6643},{"krate":0,"index":6644},{"krate":0,"index":6647},{"krate":0,"index":6648}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513980,"byte_end":9513995,"line_start":234,"line_end":234,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6651}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9514240,"byte_end":9514260,"line_start":243,"line_end":243,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6653}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9514514,"byte_end":9514529,"line_start":252,"line_end":252,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6656}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9514637,"byte_end":9514657,"line_start":258,"line_end":258,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6658}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518012,"byte_end":9518027,"line_start":96,"line_end":96,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6680},{"krate":0,"index":6683}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9521445,"byte_end":9521460,"line_start":201,"line_end":201,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6689}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9521640,"byte_end":9521655,"line_start":210,"line_end":210,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6693}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9521831,"byte_end":9521846,"line_start":219,"line_end":219,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6697}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522310,"byte_end":9522326,"line_start":239,"line_end":239,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6707},{"krate":0,"index":6710},{"krate":0,"index":6713}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9527493,"byte_end":9527509,"line_start":400,"line_end":400,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6717}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9527689,"byte_end":9527705,"line_start":409,"line_end":409,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6721}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9527881,"byte_end":9527897,"line_start":418,"line_end":418,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6725}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9528973,"byte_end":9528979,"line_start":453,"line_end":453,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9529033,"byte_end":9529039,"line_start":454,"line_end":454,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9529273,"byte_end":9529288,"line_start":458,"line_end":458,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9529346,"byte_end":9529361,"line_start":459,"line_end":459,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9529426,"byte_end":9529442,"line_start":460,"line_end":460,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9529755,"byte_end":9529771,"line_start":465,"line_end":465,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9529829,"byte_end":9529835,"line_start":467,"line_end":467,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6740},{"krate":0,"index":6741},{"krate":0,"index":6742},{"krate":0,"index":6746},{"krate":0,"index":6750},{"krate":0,"index":6751}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9534223,"byte_end":9534238,"line_start":620,"line_end":620,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6754},{"krate":0,"index":6755}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9534369,"byte_end":9534385,"line_start":628,"line_end":628,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6758},{"krate":0,"index":6759}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9534519,"byte_end":9534535,"line_start":636,"line_end":636,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6762}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9534649,"byte_end":9534655,"line_start":642,"line_end":642,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6765}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9534747,"byte_end":9534753,"line_start":648,"line_end":648,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6768}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9541028,"byte_end":9541039,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6792},{"krate":0,"index":6793},{"krate":0,"index":6794},{"krate":0,"index":6798},{"krate":0,"index":6799}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9546862,"byte_end":9546873,"line_start":279,"line_end":279,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6802}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9546959,"byte_end":9546970,"line_start":285,"line_end":285,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6804}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9547103,"byte_end":9547114,"line_start":291,"line_end":291,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9547139,"byte_end":9547150,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9547246,"byte_end":9547251,"line_start":299,"line_end":299,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6811},{"krate":0,"index":6812}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9551284,"byte_end":9551293,"line_start":125,"line_end":125,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6833}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9551473,"byte_end":9551482,"line_start":131,"line_end":131,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9551675,"byte_end":9551684,"line_start":139,"line_end":139,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6837}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9551846,"byte_end":9551855,"line_start":145,"line_end":145,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553061,"byte_end":9553069,"line_start":195,"line_end":195,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6844},{"krate":0,"index":6845}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9555602,"byte_end":9555610,"line_start":282,"line_end":282,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6852}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9555948,"byte_end":9555956,"line_start":295,"line_end":295,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6855}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9556326,"byte_end":9556332,"line_start":306,"line_end":306,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6858},{"krate":0,"index":6859},{"krate":0,"index":6860},{"krate":0,"index":6861}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558916,"byte_end":9558922,"line_start":396,"line_end":396,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6866}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9559112,"byte_end":9559115,"line_start":405,"line_end":405,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6869},{"krate":0,"index":6870}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\yield_now.rs","byte_start":9571387,"byte_end":9571395,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7312},{"krate":0,"index":7313}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9578608,"byte_end":9578616,"line_start":222,"line_end":222,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7187},{"krate":0,"index":7188},{"krate":0,"index":7190},{"krate":0,"index":7192},{"krate":0,"index":7196},{"krate":0,"index":7198},{"krate":0,"index":7201}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9586567,"byte_end":9586575,"line_start":450,"line_end":450,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7205}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9586714,"byte_end":9586722,"line_start":456,"line_end":456,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7207},{"krate":0,"index":7208}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9587687,"byte_end":9587695,"line_start":480,"line_end":480,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7211}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9587776,"byte_end":9587784,"line_start":486,"line_end":486,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7213}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9588651,"byte_end":9588659,"line_start":516,"line_end":516,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7217},{"krate":0,"index":7218}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9589544,"byte_end":9589550,"line_start":547,"line_end":547,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7222},{"krate":0,"index":7224}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9590113,"byte_end":9590116,"line_start":566,"line_end":566,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7226},{"krate":0,"index":7228},{"krate":0,"index":7231}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593623,"byte_end":9593631,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7254},{"krate":0,"index":7258},{"krate":0,"index":7261}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9595407,"byte_end":9595415,"line_start":165,"line_end":165,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7267}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9595623,"byte_end":9595631,"line_start":173,"line_end":173,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7271}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9595952,"byte_end":9595967,"line_start":188,"line_end":188,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7275},{"krate":0,"index":7276}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9596268,"byte_end":9596273,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7285}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9596891,"byte_end":9596892,"line_start":222,"line_end":222,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9597077,"byte_end":9597088,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7292}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9597232,"byte_end":9597243,"line_start":236,"line_end":236,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7294}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9597390,"byte_end":9597401,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\clock.rs","byte_start":9600968,"byte_end":9600973,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7719},{"krate":0,"index":7720},{"krate":0,"index":7721},{"krate":0,"index":7722}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9627156,"byte_end":9627165,"line_start":171,"line_end":171,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7369}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9627249,"byte_end":9627258,"line_start":177,"line_end":177,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7371}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9627404,"byte_end":9627413,"line_start":183,"line_end":183,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7373},{"krate":0,"index":7374},{"krate":0,"index":7375},{"krate":0,"index":7376},{"krate":0,"index":7377},{"krate":0,"index":7379},{"krate":0,"index":7380},{"krate":0,"index":7382},{"krate":0,"index":7383},{"krate":0,"index":7384}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9634435,"byte_end":9634445,"line_start":374,"line_end":374,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9634470,"byte_end":9634480,"line_start":375,"line_end":375,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9635921,"byte_end":9635932,"line_start":411,"line_end":411,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7389},{"krate":0,"index":7390},{"krate":0,"index":7391},{"krate":0,"index":7392},{"krate":0,"index":7393},{"krate":0,"index":7394},{"krate":0,"index":7395},{"krate":0,"index":7396},{"krate":0,"index":7397}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9639455,"byte_end":9639472,"line_start":509,"line_end":509,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7403}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9639773,"byte_end":9639790,"line_start":518,"line_end":518,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7405}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9640029,"byte_end":9640040,"line_start":528,"line_end":528,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9640065,"byte_end":9640076,"line_start":529,"line_end":529,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9640115,"byte_end":9640126,"line_start":531,"line_end":531,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7409},{"krate":0,"index":7410},{"krate":0,"index":7411},{"krate":0,"index":7412},{"krate":0,"index":7413}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9640644,"byte_end":9640654,"line_start":553,"line_end":553,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7415},{"krate":0,"index":7416},{"krate":0,"index":7417},{"krate":0,"index":7418},{"krate":0,"index":7419},{"krate":0,"index":7420}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9643530,"byte_end":9643541,"line_start":628,"line_end":628,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7422},{"krate":0,"index":7423},{"krate":0,"index":7424},{"krate":0,"index":7425},{"krate":0,"index":7426},{"krate":0,"index":7427}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9645932,"byte_end":9645942,"line_start":688,"line_end":688,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7429}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\handle.rs","byte_start":9646447,"byte_end":9646453,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7442},{"krate":0,"index":7443},{"krate":0,"index":7444}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\handle.rs","byte_start":9647024,"byte_end":9647030,"line_start":31,"line_end":31,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7761}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\handle.rs","byte_start":9649099,"byte_end":9649105,"line_start":80,"line_end":80,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7446}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\wheel\\level.rs","byte_start":9661403,"byte_end":9661408,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7468},{"krate":0,"index":7470},{"krate":0,"index":7471},{"krate":0,"index":7472},{"krate":0,"index":7473},{"krate":0,"index":7474}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\wheel\\level.rs","byte_start":9667476,"byte_end":9667481,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7476}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\wheel\\mod.rs","byte_start":9650726,"byte_end":9650731,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7488},{"krate":0,"index":7489},{"krate":0,"index":7490},{"krate":0,"index":7491},{"krate":0,"index":7492},{"krate":0,"index":7494},{"krate":0,"index":7496},{"krate":0,"index":7497},{"krate":0,"index":7499},{"krate":0,"index":7500},{"krate":0,"index":7501},{"krate":0,"index":7502},{"krate":0,"index":7503}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9670608,"byte_end":9670613,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7522},{"krate":0,"index":7523},{"krate":0,"index":7524},{"krate":0,"index":7525},{"krate":0,"index":7526}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9672001,"byte_end":9672006,"line_start":120,"line_end":120,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7529},{"krate":0,"index":7530}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\mod.rs","byte_start":9610128,"byte_end":9610137,"line_start":102,"line_end":102,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7549},{"krate":0,"index":7550},{"krate":0,"index":7551},{"krate":0,"index":7553},{"krate":0,"index":7554}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\mod.rs","byte_start":9611552,"byte_end":9611558,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7564},{"krate":0,"index":7565},{"krate":0,"index":7566}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\mod.rs","byte_start":9614564,"byte_end":9614570,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7570},{"krate":0,"index":7571},{"krate":0,"index":7575},{"krate":0,"index":7576}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\mod.rs","byte_start":9619264,"byte_end":9619270,"line_start":379,"line_end":379,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7580},{"krate":0,"index":7581},{"krate":0,"index":7582},{"krate":0,"index":7583},{"krate":0,"index":7584},{"krate":0,"index":7585}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\mod.rs","byte_start":9620001,"byte_end":9620007,"line_start":417,"line_end":417,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7588}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\mod.rs","byte_start":9620133,"byte_end":9620138,"line_start":428,"line_end":428,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7590}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\mod.rs","byte_start":9620446,"byte_end":9620451,"line_start":441,"line_end":441,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7592}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9674157,"byte_end":9674162,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7602}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9674403,"byte_end":9674408,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7604},{"krate":0,"index":7605},{"krate":0,"index":7606},{"krate":0,"index":7607},{"krate":0,"index":7608},{"krate":0,"index":7609}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9675308,"byte_end":9675313,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9675340,"byte_end":9675345,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7612}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9675807,"byte_end":9675814,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7615}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9675902,"byte_end":9675909,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7617}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9676053,"byte_end":9676060,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9676097,"byte_end":9676102,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7620}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677644,"byte_end":9677651,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7626},{"krate":0,"index":7627},{"krate":0,"index":7628},{"krate":0,"index":7629},{"krate":0,"index":7630},{"krate":0,"index":7631},{"krate":0,"index":7632},{"krate":0,"index":7633},{"krate":0,"index":7634}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9681401,"byte_end":9681408,"line_start":153,"line_end":153,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7636}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9681537,"byte_end":9681544,"line_start":159,"line_end":159,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7638}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9681659,"byte_end":9681666,"line_start":165,"line_end":165,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7640},{"krate":0,"index":7641}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9681831,"byte_end":9681838,"line_start":173,"line_end":173,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7643}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9681943,"byte_end":9681950,"line_start":179,"line_end":179,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7645},{"krate":0,"index":7646}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9682091,"byte_end":9682098,"line_start":187,"line_end":187,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7648},{"krate":0,"index":7649}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9682259,"byte_end":9682266,"line_start":195,"line_end":195,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7651}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9682373,"byte_end":9682380,"line_start":201,"line_end":201,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7653}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686119,"byte_end":9686127,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7673},{"krate":0,"index":7677}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9690896,"byte_end":9690903,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7701},{"krate":0,"index":7702},{"krate":0,"index":7703},{"krate":0,"index":7704}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9691441,"byte_end":9691448,"line_start":135,"line_end":135,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7707},{"krate":0,"index":7708}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\bit.rs","byte_start":9692093,"byte_end":9692097,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7864},{"krate":0,"index":7865},{"krate":0,"index":7866},{"krate":0,"index":7867},{"krate":0,"index":7868},{"krate":0,"index":7869},{"krate":0,"index":7870}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\bit.rs","byte_start":9693525,"byte_end":9693529,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7872}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9698679,"byte_end":9698683,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9698720,"byte_end":9698724,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9698761,"byte_end":9698771,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9698808,"byte_end":9698818,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9698855,"byte_end":9698858,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9698895,"byte_end":9698898,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9699514,"byte_end":9699518,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7946},{"krate":0,"index":7947},{"krate":0,"index":7948},{"krate":0,"index":7949},{"krate":0,"index":7951}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9705124,"byte_end":9705128,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7954}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9705267,"byte_end":9705276,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7957}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9705843,"byte_end":9705852,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7960}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9706010,"byte_end":9706013,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7963},{"krate":0,"index":7964}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9706275,"byte_end":9706278,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7967}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9706545,"byte_end":9706548,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7970}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9706669,"byte_end":9706673,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7973}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9709180,"byte_end":9709184,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7977},{"krate":0,"index":7978}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9709528,"byte_end":9709532,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7981}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9709880,"byte_end":9709884,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7984}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9710246,"byte_end":9710256,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7987},{"krate":0,"index":7988}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9711193,"byte_end":9711203,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7991}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9711346,"byte_end":9711351,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7994}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9712234,"byte_end":9712238,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7998}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9712798,"byte_end":9712803,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8001}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9713129,"byte_end":9713136,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8003},{"krate":0,"index":8004},{"krate":0,"index":8005}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":140014,"byte_end":140024,"line_start":29,"line_end":29,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":140094,"byte_end":140104,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":141404,"byte_end":141412,"line_start":70,"line_end":70,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":141449,"byte_end":141457,"line_start":71,"line_end":71,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":141508,"byte_end":141518,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":141753,"byte_end":141763,"line_start":86,"line_end":86,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":144612,"byte_end":144622,"line_start":176,"line_end":176,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":144979,"byte_end":144989,"line_start":191,"line_end":191,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":145176,"byte_end":145186,"line_start":198,"line_end":198,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":145463,"byte_end":145473,"line_start":212,"line_end":212,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8040}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":145706,"byte_end":145710,"line_start":221,"line_end":221,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8044},{"krate":0,"index":8045}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":146358,"byte_end":146368,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8055}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":146737,"byte_end":146748,"line_start":258,"line_end":258,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8061},{"krate":0,"index":8062}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":147422,"byte_end":147430,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":147629,"byte_end":147637,"line_start":293,"line_end":293,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\rand.rs","byte_start":158017,"byte_end":158025,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\wake.rs","byte_start":9720738,"byte_end":9720746,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8085},{"krate":0,"index":8086}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\try_lock.rs","byte_start":9722834,"byte_end":9722841,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\try_lock.rs","byte_start":9722878,"byte_end":9722885,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\try_lock.rs","byte_start":9722923,"byte_end":9722932,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Inherent","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\try_lock.rs","byte_start":9723118,"byte_end":9723125,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8139},{"krate":0,"index":8140}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\try_lock.rs","byte_start":9723759,"byte_end":9723768,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8143},{"krate":0,"index":8144}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\try_lock.rs","byte_start":9723900,"byte_end":9723909,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8147}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\try_lock.rs","byte_start":9724031,"byte_end":9724040,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8150}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":14402,"byte_end":14408,"line_start":352,"line_end":352,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\mod.rs","byte_start":18077,"byte_end":18084,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":75}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":14433,"byte_end":14435,"line_start":355,"line_end":355,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":741}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":14461,"byte_end":14463,"line_start":360,"line_end":360,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":123}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":14473,"byte_end":14476,"line_start":361,"line_end":361,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":299}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\mod.rs","byte_start":81516,"byte_end":81519,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3254}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":14527,"byte_end":14534,"line_start":367,"line_end":367,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":3782}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":14641,"byte_end":14648,"line_start":374,"line_end":374,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4008}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":14701,"byte_end":14707,"line_start":380,"line_end":380,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":5508}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\mod.rs","byte_start":9255631,"byte_end":9255638,"line_start":60,"line_end":60,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":5570}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":14879,"byte_end":14883,"line_start":391,"line_end":391,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5663}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307158,"byte_end":9307167,"line_start":434,"line_end":434,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":5677}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307182,"byte_end":9307186,"line_start":436,"line_end":436,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5852}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\mod.rs","byte_start":9351756,"byte_end":9351761,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6235}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307344,"byte_end":9307351,"line_start":444,"line_end":444,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":6410}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mod.rs","byte_start":9307695,"byte_end":9307700,"line_start":458,"line_end":458,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":6818}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":14928,"byte_end":14932,"line_start":397,"line_end":397,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":663}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\lib.rs","byte_start":14996,"byte_end":15000,"line_start":403,"line_end":403,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":7339}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\mod.rs","byte_start":9600162,"byte_end":9600167,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7597}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\scoped_tls.rs","byte_start":30406,"byte_end":30415,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\scoped_tls.rs","byte_start":30431,"byte_end":30440,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\macros\\scoped_tls.rs","byte_start":30790,"byte_end":30795,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":64},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\dir_builder.rs","byte_start":8544527,"byte_end":8544537,"line_start":22,"line_end":22,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8550840,"byte_end":8550844,"line_start":109,"line_end":109,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8562454,"byte_end":8562458,"line_start":482,"line_end":482,"column_start":20,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":814},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8564913,"byte_end":8564917,"line_start":550,"line_end":550,"column_start":20,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":814},"to":{"krate":0,"index":185}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8567054,"byte_end":8567058,"line_start":612,"line_end":612,"column_start":21,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":814},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8569647,"byte_end":8569651,"line_start":688,"line_end":688,"column_start":26,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":814},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8569749,"byte_end":8569753,"line_start":694,"line_end":694,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":814},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8570315,"byte_end":8570319,"line_start":717,"line_end":717,"column_start":44,"column_end":48},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":814},"to":{"krate":1,"index":9214}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8570490,"byte_end":8570494,"line_start":724,"line_end":724,"column_start":46,"column_end":50},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":814},"to":{"krate":1,"index":9216}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\file.rs","byte_start":8570642,"byte_end":8570647,"line_start":730,"line_end":730,"column_start":6,"column_end":11},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8576154,"byte_end":8576165,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8588959,"byte_end":8588970,"line_start":465,"line_end":465,"column_start":10,"column_end":21},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8596855,"byte_end":8596866,"line_start":648,"line_end":648,"column_start":37,"column_end":48},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1141},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\open_options.rs","byte_start":8596984,"byte_end":8596995,"line_start":654,"line_end":654,"column_start":18,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1141},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8599929,"byte_end":8599936,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\fs\\read_dir.rs","byte_start":8603233,"byte_end":8603241,"line_start":144,"line_end":144,"column_start":6,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":32755,"byte_end":32764,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2086}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":32927,"byte_end":32936,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\maybe_done.rs","byte_start":34123,"byte_end":34132,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\poll_fn.rs","byte_start":34908,"byte_end":34914,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":106},"to":{"krate":2,"index":2086}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\poll_fn.rs","byte_start":35128,"byte_end":35134,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":106},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\poll_fn.rs","byte_start":35276,"byte_end":35282,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":106},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\ready.rs","byte_start":8613972,"byte_end":8613977,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1227},"to":{"krate":2,"index":2086}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\ready.rs","byte_start":8614004,"byte_end":8614009,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1227},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\future\\try_join.rs","byte_start":8615218,"byte_end":8615226,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":11084},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\blocking.rs","byte_start":8617754,"byte_end":8617762,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\blocking.rs","byte_start":8618035,"byte_end":8618043,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1311},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\blocking.rs","byte_start":8619638,"byte_end":8619646,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1311},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\blocking.rs","byte_start":8622371,"byte_end":8622374,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\blocking.rs","byte_start":8624204,"byte_end":8624207,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":45660,"byte_end":45669,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":160},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":48119,"byte_end":48122,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":33}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":48282,"byte_end":48285,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":34}},"from":{"krate":2,"index":32457},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_buf_read.rs","byte_start":48914,"byte_end":48920,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":35}},"from":{"krate":1,"index":7051},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":51960,"byte_end":51963,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"kind":{"Impl":{"id":36}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":52106,"byte_end":52109,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"kind":{"Impl":{"id":37}},"from":{"krate":2,"index":32457},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_read.rs","byte_start":52778,"byte_end":52784,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"kind":{"Impl":{"id":38}},"from":{"krate":1,"index":7051},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":55778,"byte_end":55781,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"kind":{"Impl":{"id":39}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":185}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":55924,"byte_end":55927,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":2,"index":32457},"to":{"krate":0,"index":185}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_seek.rs","byte_start":56318,"byte_end":56324,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"kind":{"Impl":{"id":41}},"from":{"krate":1,"index":7051},"to":{"krate":0,"index":185}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":65794,"byte_end":65797,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"kind":{"Impl":{"id":42}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":65945,"byte_end":65948,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"kind":{"Impl":{"id":43}},"from":{"krate":2,"index":32457},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":66825,"byte_end":66828,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"kind":{"Impl":{"id":44}},"from":{"krate":5,"index":4754},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":67626,"byte_end":67632,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":1,"index":7051},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":68435,"byte_end":68441,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"kind":{"Impl":{"id":46}},"from":{"krate":1,"index":7051},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":69247,"byte_end":69253,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":1,"index":7051},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\async_write.rs","byte_start":70054,"byte_end":70060,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":1,"index":7051},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":72101,"byte_end":72108,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\read_buf.rs","byte_start":80169,"byte_end":80176,"line_start":258,"line_end":258,"column_start":21,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":267},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8634813,"byte_end":8634821,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8636962,"byte_end":8636970,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1607},"to":{"krate":2,"index":2171}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8637113,"byte_end":8637121,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1607},"to":{"krate":2,"index":2197}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\interest.rs","byte_start":8637249,"byte_end":8637257,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1607},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8637842,"byte_end":8637847,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8642264,"byte_end":8642269,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8643013,"byte_end":8643018,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1620},"to":{"krate":2,"index":2171}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8643179,"byte_end":8643184,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1620},"to":{"krate":2,"index":2197}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8643312,"byte_end":8643317,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1620},"to":{"krate":2,"index":2166}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8643471,"byte_end":8643476,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1620},"to":{"krate":2,"index":2115}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\ready.rs","byte_start":8643623,"byte_end":8643628,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1620},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\registration.rs","byte_start":8646076,"byte_end":8646088,"line_start":50,"line_end":50,"column_start":22,"column_end":34},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1641},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\registration.rs","byte_start":8646113,"byte_end":8646125,"line_start":51,"line_end":51,"column_start":22,"column_end":34},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1641},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\registration.rs","byte_start":8646169,"byte_end":8646181,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\registration.rs","byte_start":8651721,"byte_end":8651733,"line_start":213,"line_end":213,"column_start":10,"column_end":22},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8655136,"byte_end":8655147,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1666},"to":{"krate":0,"index":7900}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8655407,"byte_end":8655418,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1666},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8655598,"byte_end":8655609,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8663636,"byte_end":8663647,"line_start":360,"line_end":360,"column_start":15,"column_end":26},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1666},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8663736,"byte_end":8663747,"line_start":366,"line_end":366,"column_start":22,"column_end":33},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1666},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8663772,"byte_end":8663783,"line_start":367,"line_end":367,"column_start":22,"column_end":33},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1666},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8663817,"byte_end":8663828,"line_start":370,"line_end":370,"column_start":10,"column_end":21},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8664751,"byte_end":8664757,"line_start":395,"line_end":395,"column_start":39,"column_end":45},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1693},"to":{"krate":0,"index":680}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8665252,"byte_end":8665261,"line_start":414,"line_end":414,"column_start":21,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1681},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8669935,"byte_end":8669944,"line_start":523,"line_end":523,"column_start":19,"column_end":28},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1681},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8670309,"byte_end":8670318,"line_start":536,"line_end":536,"column_start":26,"column_end":35},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1681},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8670351,"byte_end":8670360,"line_start":537,"line_end":537,"column_start":26,"column_end":35},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1681},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8627355,"byte_end":8627361,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8630167,"byte_end":8630173,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1517},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8630288,"byte_end":8630293,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8630737,"byte_end":8630743,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1517},"to":{"krate":0,"index":630}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8631142,"byte_end":8631148,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1517},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8631298,"byte_end":8631304,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8632176,"byte_end":8632182,"line_start":282,"line_end":282,"column_start":6,"column_end":12},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8632999,"byte_end":8633005,"line_start":303,"line_end":303,"column_start":17,"column_end":23},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1720},"to":{"krate":0,"index":637}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8633083,"byte_end":8633089,"line_start":309,"line_end":309,"column_start":21,"column_end":27},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1720},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8633224,"byte_end":8633229,"line_start":317,"line_end":317,"column_start":6,"column_end":11},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\driver\\mod.rs","byte_start":8634186,"byte_end":8634195,"line_start":347,"line_end":347,"column_start":6,"column_end":15},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\poll_evented.rs","byte_start":8673881,"byte_end":8673892,"line_start":76,"line_end":76,"column_start":17,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\poll_evented.rs","byte_start":8676501,"byte_end":8676512,"line_start":143,"line_end":143,"column_start":21,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\poll_evented.rs","byte_start":8678055,"byte_end":8678066,"line_start":190,"line_end":190,"column_start":27,"column_end":38},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\poll_evented.rs","byte_start":8678209,"byte_end":8678220,"line_start":198,"line_end":198,"column_start":45,"column_end":56},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\poll_evented.rs","byte_start":8678392,"byte_end":8678403,"line_start":204,"line_end":204,"column_start":26,"column_end":37},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stdio_common.rs","byte_start":8679138,"byte_end":8679166,"line_start":16,"line_end":16,"column_start":9,"column_end":37},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stdio_common.rs","byte_start":8679427,"byte_end":8679455,"line_start":28,"line_end":28,"column_start":35,"column_end":63},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1835},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stderr.rs","byte_start":8688748,"byte_end":8688754,"line_start":84,"line_end":84,"column_start":44,"column_end":50},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1842},"to":{"krate":1,"index":9214}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stderr.rs","byte_start":8688893,"byte_end":8688899,"line_start":90,"line_end":90,"column_start":21,"column_end":27},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1842},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stdin.rs","byte_start":8691485,"byte_end":8691490,"line_start":59,"line_end":59,"column_start":44,"column_end":49},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1847},"to":{"krate":1,"index":9214}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stdin.rs","byte_start":8691627,"byte_end":8691632,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1847},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stdout.rs","byte_start":8694472,"byte_end":8694478,"line_start":83,"line_end":83,"column_start":44,"column_end":50},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1852},"to":{"krate":1,"index":9214}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\stdout.rs","byte_start":8694617,"byte_end":8694623,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1852},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8696726,"byte_end":8696734,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8697651,"byte_end":8697660,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8697910,"byte_end":8697918,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1963},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8698213,"byte_end":8698222,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1966},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8698901,"byte_end":8698906,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8699299,"byte_end":8699304,"line_start":147,"line_end":147,"column_start":9,"column_end":14},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1877},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8699557,"byte_end":8699562,"line_start":155,"line_end":155,"column_start":18,"column_end":23},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1877},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8699685,"byte_end":8699693,"line_start":161,"line_end":161,"column_start":31,"column_end":39},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1963},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8699730,"byte_end":8699739,"line_start":162,"line_end":162,"column_start":31,"column_end":40},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1966},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8699776,"byte_end":8699784,"line_start":163,"line_end":163,"column_start":31,"column_end":39},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1963},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8699821,"byte_end":8699830,"line_start":164,"line_end":164,"column_start":31,"column_end":40},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1966},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8699873,"byte_end":8699881,"line_start":166,"line_end":166,"column_start":36,"column_end":44},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1963},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\split.rs","byte_start":8700049,"byte_end":8700058,"line_start":172,"line_end":172,"column_start":36,"column_end":45},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1966},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\seek.rs","byte_start":8701015,"byte_end":8701019,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":11038},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8703833,"byte_end":8703845,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":132},"to":{"krate":0,"index":2725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8712866,"byte_end":8712867,"line_start":257,"line_end":257,"column_start":52,"column_end":53},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1986},"to":{"krate":0,"index":2725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8714788,"byte_end":8714797,"line_start":61,"line_end":61,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":160},"to":{"krate":0,"index":2733}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_read_ext.rs","byte_start":8752194,"byte_end":8752195,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2033},"to":{"krate":0,"index":2733}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_seek_ext.rs","byte_start":8753120,"byte_end":8753129,"line_start":33,"line_end":33,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":185},"to":{"krate":0,"index":2784}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_seek_ext.rs","byte_start":8754304,"byte_end":8754305,"line_start":72,"line_end":72,"column_start":46,"column_end":47},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2042},"to":{"krate":0,"index":2784}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8756257,"byte_end":8756267,"line_start":65,"line_end":65,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":211},"to":{"krate":0,"index":2787}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\async_write_ext.rs","byte_start":8789552,"byte_end":8789553,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2083},"to":{"krate":0,"index":2787}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8790921,"byte_end":8790930,"line_start":36,"line_end":36,"column_start":20,"column_end":29},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":10986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8792787,"byte_end":8792796,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":10986},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8793606,"byte_end":8793615,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":10986},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8794528,"byte_end":8794537,"line_start":144,"line_end":144,"column_start":48,"column_end":57},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":10986},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_reader.rs","byte_start":8795048,"byte_end":8795057,"line_start":162,"line_end":162,"column_start":36,"column_end":45},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":10986},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8796546,"byte_end":8796555,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":10955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8798392,"byte_end":8798401,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":10955},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8798543,"byte_end":8798552,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":10955},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8799264,"byte_end":8799273,"line_start":117,"line_end":117,"column_start":49,"column_end":58},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":10955},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8799803,"byte_end":8799812,"line_start":135,"line_end":135,"column_start":48,"column_end":57},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":10955},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_stream.rs","byte_start":8800067,"byte_end":8800076,"line_start":145,"line_end":145,"column_start":51,"column_end":60},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":10955},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8802012,"byte_end":8802021,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":10909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8804299,"byte_end":8804308,"line_start":116,"line_end":116,"column_start":36,"column_end":45},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":10909},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8805198,"byte_end":8805207,"line_start":145,"line_end":145,"column_start":47,"column_end":56},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":10909},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8805461,"byte_end":8805470,"line_start":155,"line_end":155,"column_start":53,"column_end":62},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":10909},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\buf_writer.rs","byte_start":8805757,"byte_end":8805766,"line_start":165,"line_end":165,"column_start":36,"column_end":45},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":10909},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8806944,"byte_end":8806949,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":10860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8808089,"byte_end":8808094,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":10860},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8808373,"byte_end":8808378,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":10860},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\chain.rs","byte_start":8808964,"byte_end":8808969,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":10860},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\copy.rs","byte_start":8811804,"byte_end":8811808,"line_start":73,"line_end":73,"column_start":23,"column_end":27},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2833},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\copy_buf.rs","byte_start":8815502,"byte_end":8815509,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2861},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\empty.rs","byte_start":8817776,"byte_end":8817781,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2873},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\empty.rs","byte_start":8817995,"byte_end":8818000,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2873},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\empty.rs","byte_start":8818233,"byte_end":8818238,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2873},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\flush.rs","byte_start":8819365,"byte_end":8819370,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":10818},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8820366,"byte_end":8820371,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":10768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\lines.rs","byte_start":8821623,"byte_end":8821628,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":10768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8825906,"byte_end":8825918,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2876},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8826462,"byte_end":8826474,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2876},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8827172,"byte_end":8827184,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2876},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8827335,"byte_end":8827339,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8827745,"byte_end":8827749,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2881},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\mem.rs","byte_start":8828615,"byte_end":8828619,"line_start":189,"line_end":189,"column_start":21,"column_end":25},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2881},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read.rs","byte_start":8830800,"byte_end":8830804,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":10717},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_buf.rs","byte_start":8831938,"byte_end":8831945,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":10657},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_exact.rs","byte_start":8834326,"byte_end":8834335,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":10602},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_line.rs","byte_start":8843425,"byte_end":8843433,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":9683},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_to_end.rs","byte_start":8846989,"byte_end":8846998,"line_start":105,"line_end":105,"column_start":20,"column_end":29},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":9626},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_to_string.rs","byte_start":8849608,"byte_end":8849620,"line_start":71,"line_end":71,"column_start":20,"column_end":32},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":9565},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\read_until.rs","byte_start":8852011,"byte_end":8852020,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":9504},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\repeat.rs","byte_start":8853598,"byte_end":8853604,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3035},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\shutdown.rs","byte_start":8854983,"byte_end":8854991,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":9455},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\sink.rs","byte_start":8856631,"byte_end":8856635,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3039},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\sink.rs","byte_start":8857145,"byte_end":8857149,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3039},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858114,"byte_end":8858119,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":9405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\split.rs","byte_start":8858858,"byte_end":8858863,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":9405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8861176,"byte_end":8861180,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":9365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8862808,"byte_end":8862812,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":9365},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\take.rs","byte_start":8863456,"byte_end":8863460,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":9365},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write.rs","byte_start":8865259,"byte_end":8865264,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":9314},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_all.rs","byte_start":8866299,"byte_end":8866307,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":9261},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\io\\util\\write_buf.rs","byte_start":8867792,"byte_end":8867800,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":9201},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":82674,"byte_end":82691,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":359},"to":{"krate":0,"index":310}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":83344,"byte_end":83354,"line_start":53,"line_end":53,"column_start":24,"column_end":34},"kind":{"Impl":{"id":173}},"from":{"krate":1,"index":7205},"to":{"krate":0,"index":310}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":83394,"byte_end":83404,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"kind":{"Impl":{"id":174}},"from":{"krate":1,"index":7205},"to":{"krate":0,"index":359}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":83706,"byte_end":83718,"line_start":67,"line_end":67,"column_start":24,"column_end":36},"kind":{"Impl":{"id":175}},"from":{"krate":1,"index":7233},"to":{"krate":0,"index":310}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":83758,"byte_end":83770,"line_start":69,"line_end":69,"column_start":36,"column_end":48},"kind":{"Impl":{"id":176}},"from":{"krate":1,"index":7233},"to":{"krate":0,"index":359}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":84067,"byte_end":84079,"line_start":80,"line_end":80,"column_start":24,"column_end":36},"kind":{"Impl":{"id":177}},"from":{"krate":1,"index":7236},"to":{"krate":0,"index":310}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":84119,"byte_end":84131,"line_start":82,"line_end":82,"column_start":36,"column_end":48},"kind":{"Impl":{"id":178}},"from":{"krate":1,"index":7236},"to":{"krate":0,"index":359}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":88462,"byte_end":88468,"line_start":228,"line_end":228,"column_start":28,"column_end":34},"kind":{"Impl":{"id":181}},"from":{"krate":5,"index":5501},"to":{"krate":0,"index":310}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":88512,"byte_end":88518,"line_start":230,"line_end":230,"column_start":40,"column_end":46},"kind":{"Impl":{"id":182}},"from":{"krate":5,"index":5501},"to":{"krate":0,"index":359}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":90071,"byte_end":90081,"line_start":285,"line_end":285,"column_start":25,"column_end":35},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3229},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\addr.rs","byte_start":90720,"byte_end":90729,"line_start":303,"line_end":303,"column_start":27,"column_end":36},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3243},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8875451,"byte_end":8875462,"line_start":53,"line_end":53,"column_start":6,"column_end":17},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8883758,"byte_end":8883769,"line_start":304,"line_end":304,"column_start":36,"column_end":47},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3653},"to":{"krate":2,"index":1970}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8884095,"byte_end":8884106,"line_start":316,"line_end":316,"column_start":21,"column_end":32},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3653},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\listener.rs","byte_start":8884534,"byte_end":8884545,"line_start":339,"line_end":339,"column_start":26,"column_end":37},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3653},"to":{"krate":1,"index":9241}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8887835,"byte_end":8887844,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8900485,"byte_end":8900494,"line_start":487,"line_end":487,"column_start":21,"column_end":30},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3655},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8901119,"byte_end":8901128,"line_start":515,"line_end":515,"column_start":24,"column_end":33},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3655},"to":{"krate":1,"index":9245}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8901258,"byte_end":8901267,"line_start":522,"line_end":522,"column_start":22,"column_end":31},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3655},"to":{"krate":1,"index":9241}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\socket.rs","byte_start":8901396,"byte_end":8901405,"line_start":529,"line_end":529,"column_start":24,"column_end":33},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3655},"to":{"krate":1,"index":9243}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8903461,"byte_end":8903469,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8906272,"byte_end":8906280,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3657},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8906496,"byte_end":8906505,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3664},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8907422,"byte_end":8907430,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3657},"to":{"krate":2,"index":1954}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split.rs","byte_start":8907524,"byte_end":8907533,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3664},"to":{"krate":2,"index":1954}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8910419,"byte_end":8910431,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3680},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8910634,"byte_end":8910646,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3680},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8910656,"byte_end":8910669,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8913851,"byte_end":8913864,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3671},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8914065,"byte_end":8914079,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8914762,"byte_end":8914776,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8914940,"byte_end":8914954,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3675},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8916001,"byte_end":8916014,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3671},"to":{"krate":2,"index":1954}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\split_owned.rs","byte_start":8916110,"byte_end":8916124,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":1954}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8918649,"byte_end":8918658,"line_start":71,"line_end":71,"column_start":6,"column_end":15},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8948903,"byte_end":8948912,"line_start":956,"line_end":956,"column_start":39,"column_end":48},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3686},"to":{"krate":2,"index":1970}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8949270,"byte_end":8949279,"line_start":970,"line_end":970,"column_start":20,"column_end":29},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3686},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8949489,"byte_end":8949498,"line_start":980,"line_end":980,"column_start":21,"column_end":30},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3686},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8950324,"byte_end":8950333,"line_start":1013,"line_end":1013,"column_start":21,"column_end":30},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3686},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\tcp\\stream.rs","byte_start":8950755,"byte_end":8950764,"line_start":1036,"line_end":1036,"column_start":26,"column_end":35},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3686},"to":{"krate":1,"index":9241}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8955308,"byte_end":8955317,"line_start":115,"line_end":115,"column_start":6,"column_end":15},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8992959,"byte_end":8992968,"line_start":1213,"line_end":1213,"column_start":39,"column_end":48},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3688},"to":{"krate":2,"index":1970}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8993293,"byte_end":8993302,"line_start":1225,"line_end":1225,"column_start":21,"column_end":30},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3688},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\net\\udp.rs","byte_start":8993729,"byte_end":8993738,"line_start":1248,"line_end":1248,"column_start":26,"column_end":35},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3688},"to":{"krate":1,"index":9241}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":94336,"byte_end":94345,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":94519,"byte_end":94528,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":94675,"byte_end":94684,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":94797,"byte_end":94806,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u16.rs","byte_start":95150,"byte_end":95159,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":394},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u16.rs","byte_start":95184,"byte_end":95193,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":394},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u16.rs","byte_start":95203,"byte_end":95212,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u16.rs","byte_start":95704,"byte_end":95713,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":394},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u16.rs","byte_start":95998,"byte_end":96007,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":394},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u32.rs","byte_start":96348,"byte_end":96357,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":410},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u32.rs","byte_start":96382,"byte_end":96391,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":410},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u32.rs","byte_start":96401,"byte_end":96410,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u32.rs","byte_start":96595,"byte_end":96604,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":410},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u32.rs","byte_start":96889,"byte_end":96898,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":410},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u8.rs","byte_start":99013,"byte_end":99021,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":429},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u8.rs","byte_start":99046,"byte_end":99054,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":429},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u8.rs","byte_start":99064,"byte_end":99072,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u8.rs","byte_start":99253,"byte_end":99261,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":429},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_u8.rs","byte_start":99545,"byte_end":99553,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":429},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99893,"byte_end":99904,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99929,"byte_end":99940,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99950,"byte_end":99961,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_usize.rs","byte_start":100650,"byte_end":100661,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_usize.rs","byte_start":100951,"byte_end":100962,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\atomic_usize.rs","byte_start":101126,"byte_end":101137,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\mutex.rs","byte_start":101468,"byte_end":101473,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\parking_lot.rs","byte_start":102809,"byte_end":102814,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\parking_lot.rs","byte_start":103589,"byte_end":103595,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\parking_lot.rs","byte_start":103911,"byte_end":103918,"line_start":69,"line_end":69,"column_start":6,"column_end":13},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\loom\\std\\unsafe_cell.rs","byte_start":104893,"byte_end":104903,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\either.rs","byte_start":8994046,"byte_end":8994052,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3732},"to":{"krate":0,"index":630}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\either.rs","byte_start":8995009,"byte_end":8995015,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3732},"to":{"krate":0,"index":637}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\either.rs","byte_start":8995229,"byte_end":8995235,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3732},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\thread.rs","byte_start":110067,"byte_end":110077,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\thread.rs","byte_start":110342,"byte_end":110352,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3758},"to":{"krate":0,"index":630}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\thread.rs","byte_start":110878,"byte_end":110883,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\thread.rs","byte_start":115648,"byte_end":115658,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3758},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\thread.rs","byte_start":115767,"byte_end":115779,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3762},"to":{"krate":0,"index":637}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\thread.rs","byte_start":116134,"byte_end":116150,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\thread.rs","byte_start":117413,"byte_end":117429,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3778},"to":{"krate":0,"index":630}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\thread.rs","byte_start":118024,"byte_end":118036,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\thread.rs","byte_start":118216,"byte_end":118221,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\mod.rs","byte_start":108634,"byte_end":108638,"line_start":92,"line_end":92,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":637}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\mod.rs","byte_start":108641,"byte_end":108645,"line_start":92,"line_end":92,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":637}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\mod.rs","byte_start":109114,"byte_end":109117,"line_start":106,"line_end":106,"column_start":17,"column_end":20},"kind":{"Impl":{"id":260}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":637}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\park\\mod.rs","byte_start":109206,"byte_end":109209,"line_start":112,"line_end":112,"column_start":17,"column_end":20},"kind":{"Impl":{"id":261}},"from":{"krate":5,"index":4415},"to":{"krate":0,"index":637}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\windows.rs","byte_start":9038045,"byte_end":9038050,"line_start":44,"line_end":44,"column_start":21,"column_end":26},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3815},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\windows.rs","byte_start":9038438,"byte_end":9038445,"line_start":60,"line_end":60,"column_start":22,"column_end":29},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3820},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\windows.rs","byte_start":9038470,"byte_end":9038477,"line_start":61,"line_end":61,"column_start":22,"column_end":29},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3820},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\windows.rs","byte_start":9038892,"byte_end":9038897,"line_start":80,"line_end":80,"column_start":6,"column_end":11},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\windows.rs","byte_start":9039095,"byte_end":9039100,"line_start":90,"line_end":90,"column_start":15,"column_end":20},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3815},"to":{"krate":0,"index":3845}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\windows.rs","byte_start":9039197,"byte_end":9039202,"line_start":96,"line_end":96,"column_start":17,"column_end":22},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3815},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\windows.rs","byte_start":9040804,"byte_end":9040811,"line_start":142,"line_end":142,"column_start":15,"column_end":22},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3820},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9001674,"byte_end":9001681,"line_start":185,"line_end":185,"column_start":6,"column_end":13},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9021246,"byte_end":9021253,"line_start":758,"line_end":758,"column_start":27,"column_end":34},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3966},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9021583,"byte_end":9021597,"line_start":774,"line_end":774,"column_start":24,"column_end":38},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3971},"to":{"krate":0,"index":3845}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9021803,"byte_end":9021817,"line_start":786,"line_end":786,"column_start":24,"column_end":38},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3971},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9021954,"byte_end":9021968,"line_start":794,"line_end":794,"column_start":26,"column_end":40},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3971},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9023779,"byte_end":9023784,"line_start":854,"line_end":854,"column_start":6,"column_end":11},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9030846,"byte_end":9030856,"line_start":1039,"line_end":1039,"column_start":21,"column_end":31},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3994},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9031311,"byte_end":9031322,"line_start":1057,"line_end":1057,"column_start":20,"column_end":31},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3998},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9031610,"byte_end":9031621,"line_start":1068,"line_end":1068,"column_start":20,"column_end":31},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4002},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9032558,"byte_end":9032568,"line_start":1110,"line_end":1110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3994},"to":{"krate":1,"index":9214}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9032699,"byte_end":9032710,"line_start":1116,"line_end":1116,"column_start":26,"column_end":37},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3998},"to":{"krate":1,"index":9214}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\process\\mod.rs","byte_start":9032841,"byte_end":9032852,"line_start":1122,"line_end":1122,"column_start":26,"column_end":37},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4002},"to":{"krate":1,"index":9214}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\enter.rs","byte_start":9062294,"byte_end":9062306,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":4457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\enter.rs","byte_start":9064057,"byte_end":9064062,"line_start":72,"line_end":72,"column_start":23,"column_end":28},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4479},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\enter.rs","byte_start":9065252,"byte_end":9065273,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4488},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\enter.rs","byte_start":9065989,"byte_end":9065994,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\enter.rs","byte_start":9067634,"byte_end":9067639,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4017},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\enter.rs","byte_start":9067769,"byte_end":9067774,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":4017},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\core.rs","byte_start":9075506,"byte_end":9075512,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\core.rs","byte_start":9075537,"byte_end":9075543,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\core.rs","byte_start":9075902,"byte_end":9075906,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\core.rs","byte_start":9076684,"byte_end":9076688,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\core.rs","byte_start":9082443,"byte_end":9082449,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9083069,"byte_end":9083078,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9085804,"byte_end":9085813,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4511},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9086056,"byte_end":9086065,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4511},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9086342,"byte_end":9086351,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4511},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\error.rs","byte_start":9086385,"byte_end":9086390,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"kind":{"Impl":{"id":296}},"from":{"krate":1,"index":2704},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\harness.rs","byte_start":9087068,"byte_end":9087075,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\harness.rs","byte_start":9087552,"byte_end":9087559,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\harness.rs","byte_start":9089730,"byte_end":9089735,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4165},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9103990,"byte_end":9104000,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4513},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104037,"byte_end":9104047,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4513},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9104063,"byte_end":9104073,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9105308,"byte_end":9105318,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4513},"to":{"krate":2,"index":2086}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9105345,"byte_end":9105355,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4513},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9106581,"byte_end":9106591,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4513},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\join.rs","byte_start":9106857,"byte_end":9106867,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4513},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\raw.rs","byte_start":9108114,"byte_end":9108121,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\raw.rs","byte_start":9109652,"byte_end":9109659,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4239},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\raw.rs","byte_start":9109749,"byte_end":9109756,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4239},"to":{"krate":2,"index":2055}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\state.rs","byte_start":9112438,"byte_end":9112443,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\state.rs","byte_start":9121299,"byte_end":9121307,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\state.rs","byte_start":9123184,"byte_end":9123189,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\state.rs","byte_start":9123348,"byte_end":9123356,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4517},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\waker.rs","byte_start":9125174,"byte_end":9125182,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4372},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\stack.rs","byte_start":9126930,"byte_end":9126943,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\stack.rs","byte_start":9128101,"byte_end":9128105,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4547},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\stack.rs","byte_start":9128505,"byte_end":9128509,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4547},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9068769,"byte_end":9068773,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4406},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9068804,"byte_end":9068808,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4406},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9068945,"byte_end":9068953,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4414},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9068994,"byte_end":9069002,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4414},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9069127,"byte_end":9069131,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":4424}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9069134,"byte_end":9069139,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":4424}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9070989,"byte_end":9070993,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9071294,"byte_end":9071302,"line_start":136,"line_end":136,"column_start":22,"column_end":30},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9071553,"byte_end":9071557,"line_start":146,"line_end":146,"column_start":22,"column_end":26},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9071750,"byte_end":9071758,"line_start":154,"line_end":154,"column_start":22,"column_end":30},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9071889,"byte_end":9071893,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9072062,"byte_end":9072070,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9072356,"byte_end":9072360,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4406},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9072600,"byte_end":9072604,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4406},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9072756,"byte_end":9072764,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4414},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\task\\mod.rs","byte_start":9072980,"byte_end":9072984,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4406},"to":{"krate":0,"index":680}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9131240,"byte_end":9131254,"line_start":96,"line_end":96,"column_start":15,"column_end":29},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9133493,"byte_end":9133498,"line_start":173,"line_end":173,"column_start":15,"column_end":20},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9136121,"byte_end":9136126,"line_start":245,"line_end":245,"column_start":28,"column_end":33},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4650},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9136819,"byte_end":9136833,"line_start":269,"line_end":269,"column_start":24,"column_end":38},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4606},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9138052,"byte_end":9138066,"line_start":307,"line_end":307,"column_start":30,"column_end":44},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4606},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9138232,"byte_end":9138239,"line_start":315,"line_end":315,"column_start":6,"column_end":13},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9138769,"byte_end":9138776,"line_start":336,"line_end":336,"column_start":21,"column_end":28},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4945},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9138944,"byte_end":9138947,"line_start":344,"line_end":344,"column_start":19,"column_end":22},"kind":{"Impl":{"id":339}},"from":{"krate":5,"index":4415},"to":{"krate":0,"index":4424}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9140036,"byte_end":9140042,"line_start":380,"line_end":380,"column_start":15,"column_end":21},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4620},"to":{"krate":0,"index":8081}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9140504,"byte_end":9140514,"line_start":401,"line_end":401,"column_start":15,"column_end":25},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\basic_scheduler.rs","byte_start":9140789,"byte_end":9140799,"line_start":409,"line_end":409,"column_start":24,"column_end":34},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4684},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\pool.rs","byte_start":9145283,"byte_end":9145295,"line_start":102,"line_end":102,"column_start":6,"column_end":18},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\pool.rs","byte_start":9147870,"byte_end":9147882,"line_start":172,"line_end":172,"column_start":15,"column_end":27},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4721},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\pool.rs","byte_start":9147968,"byte_end":9147980,"line_start":178,"line_end":178,"column_start":21,"column_end":33},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4721},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\pool.rs","byte_start":9148141,"byte_end":9148148,"line_start":186,"line_end":186,"column_start":6,"column_end":13},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\pool.rs","byte_start":9150580,"byte_end":9150585,"line_start":264,"line_end":264,"column_start":6,"column_end":11},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\pool.rs","byte_start":9153824,"byte_end":9153831,"line_start":360,"line_end":360,"column_start":21,"column_end":28},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4954},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\schedule.rs","byte_start":9154334,"byte_end":9154346,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4777},"to":{"krate":0,"index":4424}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\shutdown.rs","byte_start":9155219,"byte_end":9155227,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":4964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\task.rs","byte_start":9156976,"byte_end":9156988,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\task.rs","byte_start":9157214,"byte_end":9157226,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4797},"to":{"krate":2,"index":2086}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\blocking\\task.rs","byte_start":9157256,"byte_end":9157268,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4797},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9160383,"byte_end":9160390,"line_start":82,"line_end":82,"column_start":6,"column_end":13},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9171259,"byte_end":9171266,"line_start":446,"line_end":446,"column_start":10,"column_end":17},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9171828,"byte_end":9171835,"line_start":470,"line_end":470,"column_start":10,"column_end":17},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":4825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9172376,"byte_end":9172383,"line_start":493,"line_end":493,"column_start":10,"column_end":17},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":4825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\builder.rs","byte_start":9173821,"byte_end":9173828,"line_start":533,"line_end":533,"column_start":21,"column_end":28},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":4825},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\context.rs","byte_start":9176297,"byte_end":9176307,"line_start":73,"line_end":73,"column_start":15,"column_end":25},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":4989},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\driver.rs","byte_start":9180759,"byte_end":9180765,"line_start":167,"line_end":167,"column_start":6,"column_end":12},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":5010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\driver.rs","byte_start":9181330,"byte_end":9181336,"line_start":187,"line_end":187,"column_start":15,"column_end":21},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5010},"to":{"krate":0,"index":630}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9183037,"byte_end":9183043,"line_start":46,"line_end":46,"column_start":6,"column_end":12},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":5014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9188443,"byte_end":9188458,"line_start":208,"line_end":208,"column_start":21,"column_end":36},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":4930},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9188606,"byte_end":9188621,"line_start":214,"line_end":214,"column_start":23,"column_end":38},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":4930},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\handle.rs","byte_start":9188779,"byte_end":9188794,"line_start":220,"line_end":220,"column_start":23,"column_end":38},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":4930},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\spawner.rs","byte_start":9189179,"byte_end":9189186,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":5036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\spawner.rs","byte_start":9189428,"byte_end":9189435,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":5036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\park.rs","byte_start":9191029,"byte_end":9191035,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":5064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\park.rs","byte_start":9191498,"byte_end":9191504,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":5064},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\park.rs","byte_start":9191820,"byte_end":9191826,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":5064},"to":{"krate":0,"index":630}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\park.rs","byte_start":9192545,"byte_end":9192553,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":5066},"to":{"krate":0,"index":637}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\park.rs","byte_start":9192622,"byte_end":9192627,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":5068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9199826,"byte_end":9199831,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":5134},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9199862,"byte_end":9199867,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":5134},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9199898,"byte_end":9199904,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":5129},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9199935,"byte_end":9199941,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":5129},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9200800,"byte_end":9200805,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":5122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9207339,"byte_end":9207344,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":5125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9212512,"byte_end":9212517,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":5125},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9212613,"byte_end":9212618,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":5122},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9212777,"byte_end":9212782,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9212970,"byte_end":9212976,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":5129},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\queue.rs","byte_start":9216436,"byte_end":9216442,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":5129},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":9220425,"byte_end":9220435,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":5209},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":9220472,"byte_end":9220482,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":5209},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":9220498,"byte_end":9220508,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":5209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":9221262,"byte_end":9221272,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":5209},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":9222078,"byte_end":9222082,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":5237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":9225919,"byte_end":9225924,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":9227402,"byte_end":9227407,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":5424},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":9227580,"byte_end":9227585,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5424},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9233380,"byte_end":9233385,"line_start":184,"line_end":184,"column_start":19,"column_end":24},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5330},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9236716,"byte_end":9236722,"line_start":276,"line_end":276,"column_start":6,"column_end":12},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9237497,"byte_end":9237504,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9241791,"byte_end":9241795,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9246906,"byte_end":9246912,"line_start":605,"line_end":605,"column_start":6,"column_end":12},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":5295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9247352,"byte_end":9247355,"line_start":621,"line_end":621,"column_start":25,"column_end":28},"kind":{"Impl":{"id":398}},"from":{"krate":5,"index":4415},"to":{"krate":0,"index":4424}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9250659,"byte_end":9250665,"line_start":720,"line_end":720,"column_start":6,"column_end":12},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":5308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":9218472,"byte_end":9218482,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":5406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":9219416,"byte_end":9219426,"line_start":75,"line_end":75,"column_start":21,"column_end":31},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":5406},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":9219565,"byte_end":9219575,"line_start":81,"line_end":81,"column_start":15,"column_end":25},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":5406},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":9219678,"byte_end":9219685,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":5435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":9220106,"byte_end":9220113,"line_start":106,"line_end":106,"column_start":21,"column_end":28},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":5435},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\runtime\\mod.rs","byte_start":9051853,"byte_end":9051860,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\coop.rs","byte_start":122987,"byte_end":122993,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\coop.rs","byte_start":123765,"byte_end":123771,"line_start":87,"line_end":87,"column_start":10,"column_end":16},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":5475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\coop.rs","byte_start":124353,"byte_end":124363,"line_start":108,"line_end":108,"column_start":23,"column_end":33},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":655},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\coop.rs","byte_start":125334,"byte_end":125350,"line_start":156,"line_end":156,"column_start":10,"column_end":26},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\coop.rs","byte_start":125482,"byte_end":125498,"line_start":162,"line_end":162,"column_start":19,"column_end":35},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5495},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\coop.rs","byte_start":127238,"byte_end":127244,"line_start":203,"line_end":203,"column_start":10,"column_end":16},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\registry.rs","byte_start":9258444,"byte_end":9258447,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"kind":{"Impl":{"id":412}},"from":{"krate":5,"index":4754},"to":{"krate":0,"index":5530}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\registry.rs","byte_start":9259169,"byte_end":9259177,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\registry.rs","byte_start":9259267,"byte_end":9259275,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":5637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\registry.rs","byte_start":9261428,"byte_end":9261435,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5553},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\registry.rs","byte_start":9261543,"byte_end":9261550,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9281889,"byte_end":9281898,"line_start":27,"line_end":27,"column_start":15,"column_end":24},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5643},"to":{"krate":0,"index":5540}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9282064,"byte_end":9282073,"line_start":36,"line_end":36,"column_start":18,"column_end":27},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5643},"to":{"krate":0,"index":5530}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9282546,"byte_end":9282557,"line_start":57,"line_end":57,"column_start":15,"column_end":26},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5648},"to":{"krate":0,"index":5540}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9283432,"byte_end":9283437,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9286027,"byte_end":9286032,"line_start":173,"line_end":173,"column_start":6,"column_end":11},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\signal\\windows.rs","byte_start":9288330,"byte_end":9288339,"line_start":247,"line_end":247,"column_start":6,"column_end":15},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9309588,"byte_end":9309595,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":6871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\barrier.rs","byte_start":9312874,"byte_end":9312891,"line_start":130,"line_end":130,"column_start":6,"column_end":23},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":6883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320122,"byte_end":9320131,"line_start":216,"line_end":216,"column_start":30,"column_end":39},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":6890},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320307,"byte_end":9320316,"line_start":222,"line_end":222,"column_start":47,"column_end":56},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":6890},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9320964,"byte_end":9320973,"line_start":241,"line_end":241,"column_start":27,"column_end":36},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":6897},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9321278,"byte_end":9321287,"line_start":250,"line_end":250,"column_start":32,"column_end":41},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":6897},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9322210,"byte_end":9322222,"line_start":276,"line_end":276,"column_start":27,"column_end":39},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":6909},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9322600,"byte_end":9322612,"line_start":286,"line_end":286,"column_start":32,"column_end":44},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":6909},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9324870,"byte_end":9324876,"line_start":382,"line_end":382,"column_start":32,"column_end":38},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5752},"to":{"krate":2,"index":1957}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9325003,"byte_end":9325009,"line_start":388,"line_end":388,"column_start":36,"column_end":42},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5752},"to":{"krate":2,"index":1957}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9325170,"byte_end":9325174,"line_start":394,"line_end":394,"column_start":61,"column_end":65},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5746},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9325244,"byte_end":9325248,"line_start":395,"line_end":395,"column_start":61,"column_end":65},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5746},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328021,"byte_end":9328027,"line_start":485,"line_end":485,"column_start":31,"column_end":37},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5699},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328064,"byte_end":9328070,"line_start":486,"line_end":486,"column_start":31,"column_end":37},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5699},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328108,"byte_end":9328116,"line_start":488,"line_end":488,"column_start":31,"column_end":39},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":5702},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328153,"byte_end":9328161,"line_start":489,"line_end":489,"column_start":31,"column_end":39},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5702},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9328177,"byte_end":9328183,"line_start":491,"line_end":491,"column_start":9,"column_end":15},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":5699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9333793,"byte_end":9333797,"line_start":678,"line_end":678,"column_start":6,"column_end":10},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9334189,"byte_end":9334195,"line_start":693,"line_end":693,"column_start":19,"column_end":25},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":5699},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9334375,"byte_end":9334381,"line_start":702,"line_end":702,"column_start":18,"column_end":24},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":5699},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9334535,"byte_end":9334543,"line_start":710,"line_end":710,"column_start":9,"column_end":17},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":5702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9339406,"byte_end":9339414,"line_start":828,"line_end":828,"column_start":16,"column_end":24},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":5702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9343606,"byte_end":9343614,"line_start":945,"line_end":945,"column_start":18,"column_end":26},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":5702},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9344240,"byte_end":9344244,"line_start":968,"line_end":968,"column_start":12,"column_end":16},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":5746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9345086,"byte_end":9345090,"line_start":998,"line_end":998,"column_start":23,"column_end":27},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":5746},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9345776,"byte_end":9345780,"line_start":1019,"line_end":1019,"column_start":21,"column_end":25},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":5746},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9346569,"byte_end":9346575,"line_start":1048,"line_end":1048,"column_start":35,"column_end":41},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":5737},"to":{"krate":0,"index":680}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9346990,"byte_end":9346996,"line_start":1065,"line_end":1065,"column_start":24,"column_end":30},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":5699},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9347140,"byte_end":9347148,"line_start":1071,"line_end":1071,"column_start":24,"column_end":32},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":5702},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9347283,"byte_end":9347292,"line_start":1077,"line_end":1077,"column_start":13,"column_end":22},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":5742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\broadcast.rs","byte_start":9347465,"byte_end":9347474,"line_start":1086,"line_end":1086,"column_start":22,"column_end":31},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":5742},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\block.rs","byte_start":9354356,"byte_end":9354361,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":5869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\block.rs","byte_start":9364343,"byte_end":9364349,"line_start":362,"line_end":362,"column_start":9,"column_end":15},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":5883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\block.rs","byte_start":9364831,"byte_end":9364837,"line_start":379,"line_end":379,"column_start":31,"column_end":37},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":5883},"to":{"krate":2,"index":2323}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9367957,"byte_end":9367965,"line_start":100,"line_end":100,"column_start":9,"column_end":17},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":5944},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9373034,"byte_end":9373042,"line_start":261,"line_end":261,"column_start":24,"column_end":32},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":5944},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9373238,"byte_end":9373246,"line_start":269,"line_end":269,"column_start":19,"column_end":27},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":5944},"to":{"krate":2,"index":2086}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9373262,"byte_end":9373268,"line_start":271,"line_end":271,"column_start":9,"column_end":15},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":5937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384070,"byte_end":9384076,"line_start":604,"line_end":604,"column_start":19,"column_end":25},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":5937},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384208,"byte_end":9384214,"line_start":612,"line_end":612,"column_start":24,"column_end":30},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":5937},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9384426,"byte_end":9384432,"line_start":622,"line_end":622,"column_start":9,"column_end":15},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":5940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9385682,"byte_end":9385688,"line_start":665,"line_end":665,"column_start":18,"column_end":24},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":5940},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9386015,"byte_end":9386021,"line_start":680,"line_end":680,"column_start":24,"column_end":30},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":5940},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9386682,"byte_end":9386684,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":6024},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9386977,"byte_end":9386979,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":6032},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9387916,"byte_end":9387920,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":6045},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9388553,"byte_end":9388561,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":6058},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9388827,"byte_end":9388831,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":6045},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9388880,"byte_end":9388884,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":6045},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9389391,"byte_end":9389393,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":6024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9389825,"byte_end":9389827,"line_start":144,"line_end":144,"column_start":23,"column_end":25},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":6024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9390377,"byte_end":9390379,"line_start":162,"line_end":162,"column_start":22,"column_end":24},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":6024},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9390718,"byte_end":9390720,"line_start":174,"line_end":174,"column_start":21,"column_end":23},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":6024},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9391043,"byte_end":9391045,"line_start":190,"line_end":190,"column_start":23,"column_end":25},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":6032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9394436,"byte_end":9394438,"line_start":287,"line_end":287,"column_start":32,"column_end":34},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":6032},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9394850,"byte_end":9394854,"line_start":305,"line_end":305,"column_start":12,"column_end":16},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":6045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9395039,"byte_end":9395043,"line_start":315,"line_end":315,"column_start":21,"column_end":25},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":6045},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\chan.rs","byte_start":9396044,"byte_end":9396055,"line_start":355,"line_end":355,"column_start":20,"column_end":31},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":444},"to":{"krate":0,"index":6040}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\list.rs","byte_start":9397796,"byte_end":9397798,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":6151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\list.rs","byte_start":9403502,"byte_end":9403504,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":6151},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\list.rs","byte_start":9403781,"byte_end":9403783,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":6155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\list.rs","byte_start":9407182,"byte_end":9407184,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":6155},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9407842,"byte_end":9407857,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":6189},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9407998,"byte_end":9408013,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":6189},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9408471,"byte_end":9408488,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":6198},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9409487,"byte_end":9409504,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":6198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9412802,"byte_end":9412817,"line_start":179,"line_end":179,"column_start":9,"column_end":24},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":6189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9416507,"byte_end":9416516,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":6927},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9416676,"byte_end":9416685,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":6927},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9417171,"byte_end":9417183,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":6934},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9417216,"byte_end":9417228,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":6934},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9417568,"byte_end":9417580,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":6934},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9417809,"byte_end":9417818,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":6945},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9417948,"byte_end":9417957,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":6945},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9419458,"byte_end":9419474,"line_start":116,"line_end":116,"column_start":35,"column_end":51},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":6955},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mpsc\\error.rs","byte_start":9419511,"byte_end":9419527,"line_start":118,"line_end":118,"column_start":30,"column_end":46},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":6955},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9425898,"byte_end":9425903,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":6264},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9425957,"byte_end":9425962,"line_start":160,"line_end":160,"column_start":25,"column_end":30},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":6264},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9426016,"byte_end":9426026,"line_start":161,"line_end":161,"column_start":25,"column_end":35},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":6268},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9426091,"byte_end":9426106,"line_start":162,"line_end":162,"column_start":25,"column_end":40},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":6272},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9426393,"byte_end":9426405,"line_start":172,"line_end":172,"column_start":23,"column_end":35},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":6966},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9426542,"byte_end":9426554,"line_start":178,"line_end":178,"column_start":16,"column_end":28},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":6966},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9427362,"byte_end":9427367,"line_start":204,"line_end":204,"column_start":17,"column_end":22},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":6264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9433120,"byte_end":9433125,"line_start":407,"line_end":407,"column_start":21,"column_end":26},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":6264},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9433209,"byte_end":9433214,"line_start":413,"line_end":413,"column_start":21,"column_end":26},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":6264},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9433338,"byte_end":9433343,"line_start":422,"line_end":422,"column_start":29,"column_end":34},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6264},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9433738,"byte_end":9433748,"line_start":438,"line_end":438,"column_start":26,"column_end":36},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":6268},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9433849,"byte_end":9433859,"line_start":444,"line_end":444,"column_start":27,"column_end":37},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":6268},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9434006,"byte_end":9434016,"line_start":451,"line_end":451,"column_start":30,"column_end":40},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6268},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9434173,"byte_end":9434183,"line_start":457,"line_end":457,"column_start":45,"column_end":55},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6268},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9434349,"byte_end":9434359,"line_start":463,"line_end":463,"column_start":49,"column_end":59},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":6268},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9434537,"byte_end":9434552,"line_start":471,"line_end":471,"column_start":26,"column_end":41},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6272},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9434649,"byte_end":9434664,"line_start":477,"line_end":477,"column_start":27,"column_end":42},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":6272},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9434807,"byte_end":9434822,"line_start":484,"line_end":484,"column_start":30,"column_end":45},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":6272},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9434975,"byte_end":9434990,"line_start":490,"line_end":490,"column_start":45,"column_end":60},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6272},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\mutex.rs","byte_start":9435152,"byte_end":9435167,"line_start":496,"line_end":496,"column_start":49,"column_end":64},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6272},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9440030,"byte_end":9440038,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6993},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9440071,"byte_end":9440079,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6993},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9440909,"byte_end":9440915,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9449491,"byte_end":9449497,"line_start":455,"line_end":455,"column_start":18,"column_end":24},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6971},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9451407,"byte_end":9451415,"line_start":510,"line_end":510,"column_start":6,"column_end":14},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":6993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9451928,"byte_end":9451936,"line_start":526,"line_end":526,"column_start":17,"column_end":25},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6993},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9457632,"byte_end":9457640,"line_start":668,"line_end":668,"column_start":15,"column_end":23},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6993},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\notify.rs","byte_start":9460695,"byte_end":9460701,"line_start":732,"line_end":732,"column_start":35,"column_end":41},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6986},"to":{"krate":0,"index":680}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9462577,"byte_end":9462586,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":7023},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9462748,"byte_end":9462757,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":7023},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9462826,"byte_end":9462838,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":7035},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9463137,"byte_end":9463149,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":7035},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9464935,"byte_end":9464941,"line_start":142,"line_end":142,"column_start":9,"column_end":15},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":7011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9472604,"byte_end":9472610,"line_start":395,"line_end":395,"column_start":18,"column_end":24},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":7011},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9472749,"byte_end":9472757,"line_start":403,"line_end":403,"column_start":9,"column_end":17},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":7017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9477148,"byte_end":9477156,"line_start":552,"line_end":552,"column_start":18,"column_end":26},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":7017},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9477303,"byte_end":9477311,"line_start":560,"line_end":560,"column_start":20,"column_end":28},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":7017},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9477774,"byte_end":9477779,"line_start":576,"line_end":576,"column_start":9,"column_end":14},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9482151,"byte_end":9482156,"line_start":722,"line_end":722,"column_start":31,"column_end":36},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6438},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9482193,"byte_end":9482198,"line_start":723,"line_end":723,"column_start":31,"column_end":36},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":6438},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9482223,"byte_end":9482228,"line_start":725,"line_end":725,"column_start":18,"column_end":23},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6438},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9482597,"byte_end":9482602,"line_start":743,"line_end":743,"column_start":36,"column_end":41},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":6438},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9482997,"byte_end":9483002,"line_start":758,"line_end":758,"column_start":6,"column_end":11},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":7048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\oneshot.rs","byte_start":9484715,"byte_end":9484720,"line_start":824,"line_end":824,"column_start":21,"column_end":26},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":7048},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9488779,"byte_end":9488788,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9499813,"byte_end":9499822,"line_start":397,"line_end":397,"column_start":21,"column_end":30},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":6551},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9500021,"byte_end":9500027,"line_start":405,"line_end":405,"column_start":6,"column_end":12},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":6563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9500893,"byte_end":9500900,"line_start":434,"line_end":434,"column_start":17,"column_end":24},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":6557},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9501578,"byte_end":9501585,"line_start":458,"line_end":458,"column_start":10,"column_end":17},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":6557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9502384,"byte_end":9502391,"line_start":488,"line_end":488,"column_start":15,"column_end":22},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6557},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9503641,"byte_end":9503648,"line_start":518,"line_end":518,"column_start":22,"column_end":29},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6557},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9503695,"byte_end":9503707,"line_start":522,"line_end":522,"column_start":6,"column_end":18},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":7064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9503800,"byte_end":9503812,"line_start":528,"line_end":528,"column_start":23,"column_end":35},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":7064},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9503956,"byte_end":9503968,"line_start":534,"line_end":534,"column_start":28,"column_end":40},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":7064},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9504015,"byte_end":9504030,"line_start":538,"line_end":538,"column_start":6,"column_end":21},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":7054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9504548,"byte_end":9504563,"line_start":553,"line_end":553,"column_start":23,"column_end":38},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":7054},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9504849,"byte_end":9504864,"line_start":562,"line_end":562,"column_start":28,"column_end":43},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":7054},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\batch_semaphore.rs","byte_start":9504957,"byte_end":9504963,"line_start":567,"line_end":567,"column_start":35,"column_end":41},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6563},"to":{"krate":0,"index":680}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9507633,"byte_end":9507642,"line_start":61,"line_end":61,"column_start":6,"column_end":15},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":7069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9513980,"byte_end":9513995,"line_start":234,"line_end":234,"column_start":10,"column_end":25},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":7073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9514240,"byte_end":9514260,"line_start":243,"line_end":243,"column_start":6,"column_end":26},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":7080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9514514,"byte_end":9514529,"line_start":252,"line_end":252,"column_start":19,"column_end":34},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":7073},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\semaphore.rs","byte_start":9514637,"byte_end":9514657,"line_start":258,"line_end":258,"column_start":15,"column_end":35},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":7080},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9518012,"byte_end":9518027,"line_start":96,"line_end":96,"column_start":13,"column_end":28},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":6671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9521445,"byte_end":9521460,"line_start":201,"line_end":201,"column_start":36,"column_end":51},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":6671},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9521640,"byte_end":9521655,"line_start":210,"line_end":210,"column_start":38,"column_end":53},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":6671},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9521831,"byte_end":9521846,"line_start":219,"line_end":219,"column_start":30,"column_end":45},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":6671},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9522310,"byte_end":9522326,"line_start":239,"line_end":239,"column_start":21,"column_end":37},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9527493,"byte_end":9527509,"line_start":400,"line_end":400,"column_start":36,"column_end":52},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6698},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9527689,"byte_end":9527705,"line_start":409,"line_end":409,"column_start":38,"column_end":54},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6698},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9527881,"byte_end":9527897,"line_start":418,"line_end":418,"column_start":30,"column_end":46},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":6698},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9528973,"byte_end":9528979,"line_start":453,"line_end":453,"column_start":25,"column_end":31},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":7085},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9529033,"byte_end":9529039,"line_start":454,"line_end":454,"column_start":25,"column_end":31},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":7085},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9529273,"byte_end":9529288,"line_start":458,"line_end":458,"column_start":25,"column_end":40},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":6671},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9529346,"byte_end":9529361,"line_start":459,"line_end":459,"column_start":25,"column_end":40},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":6671},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9529426,"byte_end":9529442,"line_start":460,"line_end":460,"column_start":25,"column_end":41},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":6698},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9529755,"byte_end":9529771,"line_start":465,"line_end":465,"column_start":25,"column_end":41},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":6698},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9529829,"byte_end":9529835,"line_start":467,"line_end":467,"column_start":17,"column_end":23},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":7085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9534223,"byte_end":9534238,"line_start":620,"line_end":620,"column_start":32,"column_end":47},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":6671},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9534369,"byte_end":9534385,"line_start":628,"line_end":628,"column_start":32,"column_end":48},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":6698},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9534519,"byte_end":9534535,"line_start":636,"line_end":636,"column_start":35,"column_end":51},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":6698},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9534649,"byte_end":9534655,"line_start":642,"line_end":642,"column_start":21,"column_end":27},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":7085},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\rwlock.rs","byte_start":9534747,"byte_end":9534753,"line_start":648,"line_end":648,"column_start":29,"column_end":35},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":7085},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9541028,"byte_end":9541039,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":6785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9546862,"byte_end":9546873,"line_start":279,"line_end":279,"column_start":18,"column_end":29},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":6785},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9546959,"byte_end":9546970,"line_start":285,"line_end":285,"column_start":21,"column_end":32},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":6785},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9547103,"byte_end":9547114,"line_start":291,"line_end":291,"column_start":22,"column_end":33},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":6785},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9547139,"byte_end":9547150,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":6785},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9547246,"byte_end":9547251,"line_start":299,"line_end":299,"column_start":19,"column_end":24},"kind":{"Impl":{"id":587}},"from":{"krate":2,"index":9323},"to":{"krate":0,"index":6807}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9551284,"byte_end":9551293,"line_start":125,"line_end":125,"column_start":42,"column_end":51},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":7123},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9551473,"byte_end":9551482,"line_start":131,"line_end":131,"column_start":47,"column_end":56},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":7123},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9551675,"byte_end":9551684,"line_start":139,"line_end":139,"column_start":27,"column_end":36},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":7129},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9551846,"byte_end":9551855,"line_start":145,"line_end":145,"column_start":32,"column_end":41},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":7129},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9553061,"byte_end":9553069,"line_start":195,"line_end":195,"column_start":9,"column_end":17},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":7092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9555602,"byte_end":9555610,"line_start":282,"line_end":282,"column_start":19,"column_end":27},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":7092},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9555948,"byte_end":9555956,"line_start":295,"line_end":295,"column_start":18,"column_end":26},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":7092},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9556326,"byte_end":9556332,"line_start":306,"line_end":306,"column_start":9,"column_end":15},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":7099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9558916,"byte_end":9558922,"line_start":396,"line_end":396,"column_start":18,"column_end":24},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":7099},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\sync\\watch.rs","byte_start":9559112,"byte_end":9559115,"line_start":405,"line_end":405,"column_start":24,"column_end":27},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":7105},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\yield_now.rs","byte_start":9571387,"byte_end":9571395,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":7309},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9578608,"byte_end":9578616,"line_start":222,"line_end":222,"column_start":6,"column_end":14},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":7314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9586567,"byte_end":9586575,"line_start":450,"line_end":450,"column_start":21,"column_end":29},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":7314},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9586714,"byte_end":9586722,"line_start":456,"line_end":456,"column_start":17,"column_end":25},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":7314},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9587687,"byte_end":9587695,"line_start":480,"line_end":480,"column_start":18,"column_end":26},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":7314},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9587776,"byte_end":9587784,"line_start":486,"line_end":486,"column_start":15,"column_end":23},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":7314},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9588651,"byte_end":9588659,"line_start":516,"line_end":516,"column_start":28,"column_end":36},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":8284},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9589544,"byte_end":9589550,"line_start":547,"line_end":547,"column_start":6,"column_end":12},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":7180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\local.rs","byte_start":9590113,"byte_end":9590116,"line_start":566,"line_end":566,"column_start":25,"column_end":28},"kind":{"Impl":{"id":606}},"from":{"krate":5,"index":4415},"to":{"krate":0,"index":4424}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9593623,"byte_end":9593631,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":7249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9595407,"byte_end":9595415,"line_start":165,"line_end":165,"column_start":25,"column_end":33},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":7249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9595623,"byte_end":9595631,"line_start":173,"line_end":173,"column_start":33,"column_end":41},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":7249},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9595952,"byte_end":9595967,"line_start":188,"line_end":188,"column_start":40,"column_end":55},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":8228},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9596268,"byte_end":9596273,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7277},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9596891,"byte_end":9596892,"line_start":222,"line_end":222,"column_start":37,"column_end":38},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":7290},"to":{"krate":0,"index":7288}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9597077,"byte_end":9597088,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":7326},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9597232,"byte_end":9597243,"line_start":236,"line_end":236,"column_start":23,"column_end":34},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":7326},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\task\\task_local.rs","byte_start":9597390,"byte_end":9597401,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":7326},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\clock.rs","byte_start":9600968,"byte_end":9600973,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":7723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9627156,"byte_end":9627165,"line_start":171,"line_end":171,"column_start":18,"column_end":27},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":7364},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9627249,"byte_end":9627258,"line_start":177,"line_end":177,"column_start":26,"column_end":35},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":7364},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9627404,"byte_end":9627413,"line_start":183,"line_end":183,"column_start":6,"column_end":15},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":7364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9634435,"byte_end":9634445,"line_start":374,"line_end":374,"column_start":22,"column_end":32},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":7728},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9634470,"byte_end":9634480,"line_start":375,"line_end":375,"column_start":22,"column_end":32},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":7728},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9635921,"byte_end":9635932,"line_start":411,"line_end":411,"column_start":6,"column_end":17},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":7739},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9639455,"byte_end":9639472,"line_start":509,"line_end":509,"column_start":26,"column_end":43},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":7398},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9639773,"byte_end":9639790,"line_start":518,"line_end":518,"column_start":6,"column_end":23},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":7398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9640029,"byte_end":9640040,"line_start":528,"line_end":528,"column_start":22,"column_end":33},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":7739},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9640065,"byte_end":9640076,"line_start":529,"line_end":529,"column_start":22,"column_end":33},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":7739},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9640115,"byte_end":9640126,"line_start":531,"line_end":531,"column_start":35,"column_end":46},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":7739},"to":{"krate":0,"index":680}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9640644,"byte_end":9640654,"line_start":553,"line_end":553,"column_start":6,"column_end":16},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":7728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9643530,"byte_end":9643541,"line_start":628,"line_end":628,"column_start":6,"column_end":17},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":7735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\entry.rs","byte_start":9645932,"byte_end":9645942,"line_start":688,"line_end":688,"column_start":15,"column_end":25},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":7728},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\handle.rs","byte_start":9646447,"byte_end":9646453,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":7755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\handle.rs","byte_start":9647024,"byte_end":9647030,"line_start":31,"line_end":31,"column_start":10,"column_end":16},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":7755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\handle.rs","byte_start":9649099,"byte_end":9649105,"line_start":80,"line_end":80,"column_start":21,"column_end":27},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":7755},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\wheel\\level.rs","byte_start":9661403,"byte_end":9661408,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":7461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\wheel\\level.rs","byte_start":9667476,"byte_end":9667481,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":7461},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\wheel\\mod.rs","byte_start":9650726,"byte_end":9650731,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":7768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9670608,"byte_end":9670613,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":8200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\sleep.rs","byte_start":9672001,"byte_end":9672006,"line_start":120,"line_end":120,"column_start":17,"column_end":22},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":8200},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\mod.rs","byte_start":9610128,"byte_end":9610137,"line_start":102,"line_end":102,"column_start":6,"column_end":15},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":7783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\mod.rs","byte_start":9611552,"byte_end":9611558,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":7775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\mod.rs","byte_start":9614564,"byte_end":9614570,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":7755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\mod.rs","byte_start":9619264,"byte_end":9619270,"line_start":379,"line_end":379,"column_start":18,"column_end":24},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":7775},"to":{"krate":0,"index":630}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\mod.rs","byte_start":9620001,"byte_end":9620007,"line_start":417,"line_end":417,"column_start":18,"column_end":24},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":7775},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\mod.rs","byte_start":9620133,"byte_end":9620138,"line_start":428,"line_end":428,"column_start":6,"column_end":11},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":7555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\driver\\mod.rs","byte_start":9620446,"byte_end":9620451,"line_start":441,"line_end":441,"column_start":21,"column_end":26},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":7555},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9674157,"byte_end":9674162,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":7790},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9674403,"byte_end":9674408,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":7790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9675308,"byte_end":9675313,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":7790},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9675340,"byte_end":9675345,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":7790},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9675807,"byte_end":9675814,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":7819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9675902,"byte_end":9675909,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":7819},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9676053,"byte_end":9676060,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":7819},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\error.rs","byte_start":9676097,"byte_end":9676102,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"kind":{"Impl":{"id":653}},"from":{"krate":1,"index":2704},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9677644,"byte_end":9677651,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":7833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9681401,"byte_end":9681408,"line_start":153,"line_end":153,"column_start":35,"column_end":42},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":7833},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9681537,"byte_end":9681544,"line_start":159,"line_end":159,"column_start":35,"column_end":42},"kind":{"Impl":{"id":656}},"from":{"krate":1,"index":8117},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9681659,"byte_end":9681666,"line_start":165,"line_end":165,"column_start":29,"column_end":36},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":7833},"to":{"krate":2,"index":2110}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9681831,"byte_end":9681838,"line_start":173,"line_end":173,"column_start":35,"column_end":42},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":7833},"to":{"krate":2,"index":2141}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9681943,"byte_end":9681950,"line_start":179,"line_end":179,"column_start":19,"column_end":26},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":7833},"to":{"krate":2,"index":2115}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9682091,"byte_end":9682098,"line_start":187,"line_end":187,"column_start":29,"column_end":36},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":7833},"to":{"krate":2,"index":2115}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9682259,"byte_end":9682266,"line_start":195,"line_end":195,"column_start":35,"column_end":42},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":7833},"to":{"krate":2,"index":2145}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\instant.rs","byte_start":9682373,"byte_end":9682380,"line_start":201,"line_end":201,"column_start":21,"column_end":28},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":7833},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\interval.rs","byte_start":9686119,"byte_end":9686127,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":7856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9690896,"byte_end":9690903,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":8162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\time\\timeout.rs","byte_start":9691441,"byte_end":9691448,"line_start":135,"line_end":135,"column_start":20,"column_end":27},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":8162},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\bit.rs","byte_start":9692093,"byte_end":9692097,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":8008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\bit.rs","byte_start":9693525,"byte_end":9693529,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":8008},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9697472,"byte_end":9697479,"line_start":87,"line_end":87,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2033},"to":{"krate":0,"index":7900}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9698679,"byte_end":9698683,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":7908},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9698720,"byte_end":9698724,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":7908},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9698761,"byte_end":9698771,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":7915},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9698808,"byte_end":9698818,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":7915},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9698855,"byte_end":9698858,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":7902},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9698895,"byte_end":9698898,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":7902},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9699514,"byte_end":9699518,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":7890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9705124,"byte_end":9705128,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":7890},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9705267,"byte_end":9705276,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":7896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9705843,"byte_end":9705852,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":7896},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9706010,"byte_end":9706013,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":7902},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9706275,"byte_end":9706278,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":7902},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9706545,"byte_end":9706548,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":7902},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9706669,"byte_end":9706673,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":7908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9709180,"byte_end":9709184,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":7908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9709528,"byte_end":9709532,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":7908},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9709880,"byte_end":9709884,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":7908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9710246,"byte_end":9710256,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":7915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9711193,"byte_end":9711203,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":7915},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9711346,"byte_end":9711351,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":7919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9712234,"byte_end":9712238,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":7936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9712798,"byte_end":9712803,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":7940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\slab.rs","byte_start":9713129,"byte_end":9713136,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":8018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":140014,"byte_end":140024,"line_start":29,"line_end":29,"column_start":31,"column_end":41},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":140094,"byte_end":140104,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":141404,"byte_end":141412,"line_start":70,"line_end":70,"column_start":31,"column_end":39},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":141449,"byte_end":141457,"line_start":71,"line_end":71,"column_start":31,"column_end":39},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":141508,"byte_end":141518,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":141753,"byte_end":141763,"line_start":86,"line_end":86,"column_start":15,"column_end":25},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":144612,"byte_end":144622,"line_start":176,"line_end":176,"column_start":30,"column_end":40},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":144979,"byte_end":144989,"line_start":191,"line_end":191,"column_start":15,"column_end":25},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":145176,"byte_end":145186,"line_start":198,"line_end":198,"column_start":27,"column_end":37},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":145463,"byte_end":145473,"line_start":212,"line_end":212,"column_start":19,"column_end":29},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":145706,"byte_end":145710,"line_start":221,"line_end":221,"column_start":36,"column_end":40},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":8033},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":146358,"byte_end":146368,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":146737,"byte_end":146748,"line_start":258,"line_end":258,"column_start":33,"column_end":44},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":8046},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":147422,"byte_end":147430,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\linked_list.rs","byte_start":147629,"byte_end":147637,"line_start":293,"line_end":293,"column_start":24,"column_end":32},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\rand.rs","byte_start":158017,"byte_end":158025,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":8063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\wake.rs","byte_start":9720416,"byte_end":9720420,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":8081}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\wake.rs","byte_start":9720423,"byte_end":9720427,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":8081}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\wake.rs","byte_start":9720738,"byte_end":9720746,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":8105},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\try_lock.rs","byte_start":9722834,"byte_end":9722841,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":8121},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\try_lock.rs","byte_start":9722878,"byte_end":9722885,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":8121},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\try_lock.rs","byte_start":9722923,"byte_end":9722932,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":8125},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\try_lock.rs","byte_start":9723118,"byte_end":9723125,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":8121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\try_lock.rs","byte_start":9723759,"byte_end":9723768,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":8125},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\try_lock.rs","byte_start":9723900,"byte_end":9723909,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":8125},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\chris\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.0.0\\src\\util\\try_lock.rs","byte_start":9724031,"byte_end":9724040,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":8125},"to":{"krate":2,"index":2266}}]}